ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	RTC_initVar
  20              		.bss
  21              		.type	RTC_initVar, %object
  22              		.size	RTC_initVar, 1
  23              	RTC_initVar:
  24 0000 00       		.space	1
  25              		.global	RTC_currentTimeDate
  26              		.data
  27              		.align	2
  28              		.type	RTC_currentTimeDate, %object
  29              		.size	RTC_currentTimeDate, 12
  30              	RTC_currentTimeDate:
  31 0000 00       		.byte	0
  32 0001 00       		.byte	0
  33 0002 00       		.byte	0
  34 0003 01       		.byte	1
  35 0004 01       		.byte	1
  36 0005 00       		.space	1
  37 0006 0100     		.short	1
  38 0008 01       		.byte	1
  39 0009 00       		.space	1
  40 000a 6C07     		.short	1900
  41              		.global	RTC_alarmCfgTimeDate
  42              		.align	2
  43              		.type	RTC_alarmCfgTimeDate, %object
  44              		.size	RTC_alarmCfgTimeDate, 12
  45              	RTC_alarmCfgTimeDate:
  46 000c 00       		.byte	0
  47 000d 00       		.byte	0
  48 000e 00       		.byte	0
  49 000f 01       		.byte	1
  50 0010 01       		.byte	1
  51 0011 00       		.space	1
  52 0012 0100     		.short	1
  53 0014 01       		.byte	1
  54 0015 00       		.space	1
  55 0016 6C07     		.short	1900
  56              		.global	RTC_dstModeType
  57              		.bss
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 2


  58              		.type	RTC_dstModeType, %object
  59              		.size	RTC_dstModeType, 1
  60              	RTC_dstModeType:
  61 0001 00       		.space	1
  62              		.global	RTC_dstTimeDateStart
  63              		.data
  64              		.align	2
  65              		.type	RTC_dstTimeDateStart, %object
  66              		.size	RTC_dstTimeDateStart, 5
  67              	RTC_dstTimeDateStart:
  68 0018 00       		.byte	0
  69 0019 01       		.byte	1
  70 001a 01       		.byte	1
  71 001b 01       		.byte	1
  72 001c 01       		.byte	1
  73              		.global	RTC_dstTimeDateStop
  74 001d 000000   		.align	2
  75              		.type	RTC_dstTimeDateStop, %object
  76              		.size	RTC_dstTimeDateStop, 5
  77              	RTC_dstTimeDateStop:
  78 0020 00       		.byte	0
  79 0021 01       		.byte	1
  80 0022 01       		.byte	1
  81 0023 01       		.byte	1
  82 0024 01       		.byte	1
  83              		.global	RTC_dstOffsetMin
  84              		.bss
  85              		.type	RTC_dstOffsetMin, %object
  86              		.size	RTC_dstOffsetMin, 1
  87              	RTC_dstOffsetMin:
  88 0002 00       		.space	1
  89              		.global	RTC_dstStartStatus
  90              		.type	RTC_dstStartStatus, %object
  91              		.size	RTC_dstStartStatus, 1
  92              	RTC_dstStartStatus:
  93 0003 00       		.space	1
  94              		.global	RTC_dstStopStatus
  95              		.type	RTC_dstStopStatus, %object
  96              		.size	RTC_dstStopStatus, 1
  97              	RTC_dstStopStatus:
  98 0004 00       		.space	1
  99              		.global	RTC_alarmCfgMask
 100              		.type	RTC_alarmCfgMask, %object
 101              		.size	RTC_alarmCfgMask, 1
 102              	RTC_alarmCfgMask:
 103 0005 00       		.space	1
 104              		.global	RTC_alarmCurStatus
 105              		.type	RTC_alarmCurStatus, %object
 106              		.size	RTC_alarmCurStatus, 1
 107              	RTC_alarmCurStatus:
 108 0006 00       		.space	1
 109              		.global	RTC_intervalCfgMask
 110              		.type	RTC_intervalCfgMask, %object
 111              		.size	RTC_intervalCfgMask, 1
 112              	RTC_intervalCfgMask:
 113 0007 00       		.space	1
 114              		.global	RTC_statusDateTime
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 3


 115              		.type	RTC_statusDateTime, %object
 116              		.size	RTC_statusDateTime, 1
 117              	RTC_statusDateTime:
 118 0008 00       		.space	1
 119              		.global	RTC_daysInMonths
 120              		.section	.rodata
 121              		.align	2
 122              		.type	RTC_daysInMonths, %object
 123              		.size	RTC_daysInMonths, 12
 124              	RTC_daysInMonths:
 125 0000 1F       		.byte	31
 126 0001 1C       		.byte	28
 127 0002 1F       		.byte	31
 128 0003 1E       		.byte	30
 129 0004 1F       		.byte	31
 130 0005 1E       		.byte	30
 131 0006 1F       		.byte	31
 132 0007 1F       		.byte	31
 133 0008 1E       		.byte	30
 134 0009 1F       		.byte	31
 135 000a 1E       		.byte	30
 136 000b 1F       		.byte	31
 137              		.section	.text.RTC_Start,"ax",%progbits
 138              		.align	2
 139              		.global	RTC_Start
 140              		.thumb
 141              		.thumb_func
 142              		.type	RTC_Start, %function
 143              	RTC_Start:
 144              	.LFB0:
 145              		.file 1 "Generated_Source\\PSoC5\\RTC.c"
   1:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC.c **** * File Name: RTC.c
   3:Generated_Source\PSoC5/RTC.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC.c **** *
   5:Generated_Source\PSoC5/RTC.c **** * Description:
   6:Generated_Source\PSoC5/RTC.c **** *  This file provides the source code to the API for the RTC Component.
   7:Generated_Source\PSoC5/RTC.c **** *
   8:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
   9:Generated_Source\PSoC5/RTC.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC5/RTC.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC5/RTC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC5/RTC.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
  14:Generated_Source\PSoC5/RTC.c **** 
  15:Generated_Source\PSoC5/RTC.c **** #include "RTC.h"
  16:Generated_Source\PSoC5/RTC.c **** #include "CyLib.h"
  17:Generated_Source\PSoC5/RTC.c **** 
  18:Generated_Source\PSoC5/RTC.c **** /* Function Prototypes */
  19:Generated_Source\PSoC5/RTC.c **** static void  RTC_SetInitValues(void)     ;
  20:Generated_Source\PSoC5/RTC.c **** static uint8 RTC_DayOfWeek(uint8 dayOfMonth, uint8 month, uint16 year)
  21:Generated_Source\PSoC5/RTC.c ****                                                       ;
  22:Generated_Source\PSoC5/RTC.c **** #if (1u == RTC_DST_FUNC_ENABLE)
  23:Generated_Source\PSoC5/RTC.c ****     static void  RTC_DSTDateConversion(void) ;
  24:Generated_Source\PSoC5/RTC.c **** #endif /* 1u == RTC_DST_FUNC_ENABLE */
  25:Generated_Source\PSoC5/RTC.c **** 
  26:Generated_Source\PSoC5/RTC.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 4


  27:Generated_Source\PSoC5/RTC.c **** /* Variables were not initialized */
  28:Generated_Source\PSoC5/RTC.c **** uint8 RTC_initVar = 0u;
  29:Generated_Source\PSoC5/RTC.c **** 
  30:Generated_Source\PSoC5/RTC.c **** /* Time and date variables
  31:Generated_Source\PSoC5/RTC.c **** * Initial value are: Second = 0-59, Minute = 0-59, Hour = 0-23, DayOfWeek = 1-7,
  32:Generated_Source\PSoC5/RTC.c **** * DayOfMonth = 1-31, DayOfYear = 1-366, Month = 1-12, Year = 1900-2200.
  33:Generated_Source\PSoC5/RTC.c **** */
  34:Generated_Source\PSoC5/RTC.c **** RTC_TIME_DATE RTC_currentTimeDate = {0u, 0u, 0u, 1u, 1u, 1u, 1u, 1900u};
  35:Generated_Source\PSoC5/RTC.c **** 
  36:Generated_Source\PSoC5/RTC.c **** /* Alarm time and date variables
  37:Generated_Source\PSoC5/RTC.c **** * Initial value are: Second = 0-59, Minute = 0-59, Hour = 0-23, DayOfWeek = 1-7,
  38:Generated_Source\PSoC5/RTC.c **** * DayOfMonth = 1-31, DayOfYear = 1-366, Month = 1-12, Year = 1900-2200.
  39:Generated_Source\PSoC5/RTC.c **** */
  40:Generated_Source\PSoC5/RTC.c **** RTC_TIME_DATE RTC_alarmCfgTimeDate = {0u, 0u, 0u, 1u, 1u, 1u, 1u, 1900u};
  41:Generated_Source\PSoC5/RTC.c **** 
  42:Generated_Source\PSoC5/RTC.c **** #if (1u == RTC_DST_FUNC_ENABLE) /* DST enabled */
  43:Generated_Source\PSoC5/RTC.c **** 
  44:Generated_Source\PSoC5/RTC.c ****     /* Define DST format: '0' - fixed, '1' - relative */
  45:Generated_Source\PSoC5/RTC.c ****     volatile uint8 RTC_dstModeType = 0u;
  46:Generated_Source\PSoC5/RTC.c **** 
  47:Generated_Source\PSoC5/RTC.c ****     /* Hour 0-23, DayOfWeek 1-7, Week 1-5, DayOfMonth 1-31, Month 1-12 */
  48:Generated_Source\PSoC5/RTC.c ****     RTC_DSTIME RTC_dstTimeDateStart = {0u, 1u, 1u, 1u, 1u};
  49:Generated_Source\PSoC5/RTC.c ****     RTC_DSTIME RTC_dstTimeDateStop = {0u, 1u, 1u, 1u, 1u};
  50:Generated_Source\PSoC5/RTC.c **** 
  51:Generated_Source\PSoC5/RTC.c ****     /* Number of Hours to add/dec to time */
  52:Generated_Source\PSoC5/RTC.c ****     volatile uint8 RTC_dstOffsetMin = 0u;
  53:Generated_Source\PSoC5/RTC.c ****     volatile uint8 RTC_dstStartStatus = 0u;
  54:Generated_Source\PSoC5/RTC.c ****     volatile uint8 RTC_dstStopStatus = 0u;
  55:Generated_Source\PSoC5/RTC.c **** 
  56:Generated_Source\PSoC5/RTC.c **** #endif /* 1u == RTC_DST_FUNC_ENABLE*/
  57:Generated_Source\PSoC5/RTC.c **** 
  58:Generated_Source\PSoC5/RTC.c **** /* Mask Registers */
  59:Generated_Source\PSoC5/RTC.c **** volatile uint8 RTC_alarmCfgMask = 0u;
  60:Generated_Source\PSoC5/RTC.c **** volatile uint8 RTC_alarmCurStatus = 0u;
  61:Generated_Source\PSoC5/RTC.c **** volatile uint8 RTC_intervalCfgMask = 0u;
  62:Generated_Source\PSoC5/RTC.c **** 
  63:Generated_Source\PSoC5/RTC.c **** /* Status & Control Variables */
  64:Generated_Source\PSoC5/RTC.c **** volatile uint8 RTC_statusDateTime = 0u;
  65:Generated_Source\PSoC5/RTC.c **** 
  66:Generated_Source\PSoC5/RTC.c **** /* Month Day Array - number of days in the months */
  67:Generated_Source\PSoC5/RTC.c **** const uint8 CYCODE RTC_daysInMonths[RTC_MONTHS_IN_YEAR] = {
  68:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_JANUARY,
  69:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_FEBRUARY,
  70:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_MARCH,
  71:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_APRIL,
  72:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_MAY,
  73:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_JUNE,
  74:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_JULY,
  75:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_AUGUST,
  76:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_SEPTEMBER,
  77:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_OCTOBER,
  78:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_NOVEMBER,
  79:Generated_Source\PSoC5/RTC.c ****     RTC_DAYS_IN_DECEMBER};
  80:Generated_Source\PSoC5/RTC.c **** 
  81:Generated_Source\PSoC5/RTC.c **** 
  82:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
  83:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_Start
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 5


  84:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
  85:Generated_Source\PSoC5/RTC.c **** *
  86:Generated_Source\PSoC5/RTC.c **** * Summary:
  87:Generated_Source\PSoC5/RTC.c **** *  Enables RTC component: configures counter, setup interrupts, done all
  88:Generated_Source\PSoC5/RTC.c **** *  required calculation and starts counter.
  89:Generated_Source\PSoC5/RTC.c **** *
  90:Generated_Source\PSoC5/RTC.c **** * Parameters:
  91:Generated_Source\PSoC5/RTC.c **** *  None.
  92:Generated_Source\PSoC5/RTC.c **** *
  93:Generated_Source\PSoC5/RTC.c **** * Return:
  94:Generated_Source\PSoC5/RTC.c **** *  None.
  95:Generated_Source\PSoC5/RTC.c **** *
  96:Generated_Source\PSoC5/RTC.c **** * Global variables:
  97:Generated_Source\PSoC5/RTC.c **** *  RTC_initVar: global variable is used to indicate initial
  98:Generated_Source\PSoC5/RTC.c **** *  configuration of this component.  The variable is initialized to zero and set
  99:Generated_Source\PSoC5/RTC.c **** *  to 1 the first time RTC_Start() is called. This allows for
 100:Generated_Source\PSoC5/RTC.c **** *  component initialization without re-initialization in all subsequent calls
 101:Generated_Source\PSoC5/RTC.c **** *  to the RTC_Start() routine.
 102:Generated_Source\PSoC5/RTC.c **** *
 103:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate, RTC_dstTimeDateStart,
 104:Generated_Source\PSoC5/RTC.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 105:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 106:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 107:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: global variables are modified by the
 108:Generated_Source\PSoC5/RTC.c **** *  functions called from RTC_Init().
 109:Generated_Source\PSoC5/RTC.c **** *
 110:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 111:Generated_Source\PSoC5/RTC.c **** *  No.
 112:Generated_Source\PSoC5/RTC.c **** *
 113:Generated_Source\PSoC5/RTC.c **** * Side Effects:
 114:Generated_Source\PSoC5/RTC.c **** *  Enables for the one pulse per second (for the RTC component) and
 115:Generated_Source\PSoC5/RTC.c **** *  Central Time Wheel (for the Sleep Timer component) signals to wake up device
 116:Generated_Source\PSoC5/RTC.c **** *  from the low power (Sleep and Alternate Active) modes and leaves them
 117:Generated_Source\PSoC5/RTC.c **** *  enabled.
 118:Generated_Source\PSoC5/RTC.c **** *
 119:Generated_Source\PSoC5/RTC.c **** *  The Power Manager API has the higher priority on resource usage: it is NOT
 120:Generated_Source\PSoC5/RTC.c **** *  guaranteed that the Sleep Timer's configuration will be the same on exit
 121:Generated_Source\PSoC5/RTC.c **** *  from the Power Manager APIs as on the entry. To prevent this use the Sleep
 122:Generated_Source\PSoC5/RTC.c **** *  Timer's Sleep() - to save configuration and stop the component and Wakeup()
 123:Generated_Source\PSoC5/RTC.c **** *  function to restore configuration and enable the component.
 124:Generated_Source\PSoC5/RTC.c **** *
 125:Generated_Source\PSoC5/RTC.c **** *  The Sleep Timer and Real Time Clock (RTC) components could be configured as
 126:Generated_Source\PSoC5/RTC.c **** *  a wake up source from the low power modes only both at once.
 127:Generated_Source\PSoC5/RTC.c **** *
 128:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 129:Generated_Source\PSoC5/RTC.c **** void RTC_Start(void) 
 130:Generated_Source\PSoC5/RTC.c **** {
 146              		.loc 1 130 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 6


 131:Generated_Source\PSoC5/RTC.c ****     /* Execute once in normal flow */
 132:Generated_Source\PSoC5/RTC.c ****     if(0u == RTC_initVar)
 156              		.loc 1 132 0
 157 0004 064B     		ldr	r3, .L3
 158 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 159 0008 002B     		cmp	r3, #0
 160 000a 04D1     		bne	.L2
 133:Generated_Source\PSoC5/RTC.c ****     {
 134:Generated_Source\PSoC5/RTC.c ****         RTC_Init();
 161              		.loc 1 134 0
 162 000c FFF7FEFF 		bl	RTC_Init
 135:Generated_Source\PSoC5/RTC.c ****         RTC_initVar = 1u;
 163              		.loc 1 135 0
 164 0010 034B     		ldr	r3, .L3
 165 0012 0122     		movs	r2, #1
 166 0014 1A70     		strb	r2, [r3]
 167              	.L2:
 136:Generated_Source\PSoC5/RTC.c ****     }
 137:Generated_Source\PSoC5/RTC.c **** 
 138:Generated_Source\PSoC5/RTC.c ****     /* Enable component's operation */
 139:Generated_Source\PSoC5/RTC.c ****     RTC_Enable();
 168              		.loc 1 139 0
 169 0016 FFF7FEFF 		bl	RTC_Enable
 140:Generated_Source\PSoC5/RTC.c **** }
 170              		.loc 1 140 0
 171 001a 00BF     		nop
 172 001c 80BD     		pop	{r7, pc}
 173              	.L4:
 174 001e 00BF     		.align	2
 175              	.L3:
 176 0020 00000000 		.word	RTC_initVar
 177              		.cfi_endproc
 178              	.LFE0:
 179              		.size	RTC_Start, .-RTC_Start
 180              		.section	.text.RTC_Stop,"ax",%progbits
 181              		.align	2
 182              		.global	RTC_Stop
 183              		.thumb
 184              		.thumb_func
 185              		.type	RTC_Stop, %function
 186              	RTC_Stop:
 187              	.LFB1:
 141:Generated_Source\PSoC5/RTC.c **** 
 142:Generated_Source\PSoC5/RTC.c **** 
 143:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 144:Generated_Source\PSoC5/RTC.c **** * Function Name: RTC_Stop
 145:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 146:Generated_Source\PSoC5/RTC.c **** *
 147:Generated_Source\PSoC5/RTC.c **** * Summary:
 148:Generated_Source\PSoC5/RTC.c **** *  Stops the RTC component.
 149:Generated_Source\PSoC5/RTC.c **** *
 150:Generated_Source\PSoC5/RTC.c **** * Parameters:
 151:Generated_Source\PSoC5/RTC.c **** *  None.
 152:Generated_Source\PSoC5/RTC.c **** *
 153:Generated_Source\PSoC5/RTC.c **** * Return:
 154:Generated_Source\PSoC5/RTC.c **** *  None.
 155:Generated_Source\PSoC5/RTC.c **** *
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 7


 156:Generated_Source\PSoC5/RTC.c **** * Side Effects:
 157:Generated_Source\PSoC5/RTC.c **** *  Leaves the one pulse per second (for the RTC component) and the Central Time
 158:Generated_Source\PSoC5/RTC.c **** *  Wheel (for the Sleep Timer component) signals to wake up device from the low
 159:Generated_Source\PSoC5/RTC.c **** *  power (Sleep and Alternate Active) modes enabled after Sleep Time component
 160:Generated_Source\PSoC5/RTC.c **** *  is stopped.
 161:Generated_Source\PSoC5/RTC.c **** *
 162:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/RTC.c **** void RTC_Stop(void) 
 164:Generated_Source\PSoC5/RTC.c **** {
 188              		.loc 1 164 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 8
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 82B0     		sub	sp, sp, #8
 197              		.cfi_def_cfa_offset 16
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC5/RTC.c ****     uint8 interruptState;
 166:Generated_Source\PSoC5/RTC.c **** 
 167:Generated_Source\PSoC5/RTC.c ****     /* Disable the interrupt. */
 168:Generated_Source\PSoC5/RTC.c ****     CyIntDisable(RTC_ISR_NUMBER);
 200              		.loc 1 168 0
 201 0006 0B4B     		ldr	r3, .L6
 202 0008 0422     		movs	r2, #4
 203 000a 1A60     		str	r2, [r3]
 169:Generated_Source\PSoC5/RTC.c **** 
 170:Generated_Source\PSoC5/RTC.c ****     /* Enter critical section */
 171:Generated_Source\PSoC5/RTC.c ****     interruptState = CyEnterCriticalSection();
 204              		.loc 1 171 0
 205 000c FFF7FEFF 		bl	CyEnterCriticalSection
 206 0010 0346     		mov	r3, r0
 207 0012 FB71     		strb	r3, [r7, #7]
 172:Generated_Source\PSoC5/RTC.c **** 
 173:Generated_Source\PSoC5/RTC.c ****     /* Stop one pulse per second counter and interrupt */
 174:Generated_Source\PSoC5/RTC.c ****     RTC_OPPS_CFG_REG &= (uint8)(~(RTC_OPPSIE_EN_MASK | RTC_OPPS_EN_MASK));
 208              		.loc 1 174 0
 209 0014 084A     		ldr	r2, .L6+4
 210 0016 084B     		ldr	r3, .L6+4
 211 0018 1B78     		ldrb	r3, [r3]
 212 001a DBB2     		uxtb	r3, r3
 213 001c 23F03003 		bic	r3, r3, #48
 214 0020 DBB2     		uxtb	r3, r3
 215 0022 1370     		strb	r3, [r2]
 175:Generated_Source\PSoC5/RTC.c **** 
 176:Generated_Source\PSoC5/RTC.c ****     /* Exit critical section */
 177:Generated_Source\PSoC5/RTC.c ****     CyExitCriticalSection(interruptState);
 216              		.loc 1 177 0
 217 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 218 0026 1846     		mov	r0, r3
 219 0028 FFF7FEFF 		bl	CyExitCriticalSection
 178:Generated_Source\PSoC5/RTC.c **** }
 220              		.loc 1 178 0
 221 002c 00BF     		nop
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 8


 222 002e 0837     		adds	r7, r7, #8
 223              		.cfi_def_cfa_offset 8
 224 0030 BD46     		mov	sp, r7
 225              		.cfi_def_cfa_register 13
 226              		@ sp needed
 227 0032 80BD     		pop	{r7, pc}
 228              	.L7:
 229              		.align	2
 230              	.L6:
 231 0034 80E100E0 		.word	-536813184
 232 0038 82430040 		.word	1073759106
 233              		.cfi_endproc
 234              	.LFE1:
 235              		.size	RTC_Stop, .-RTC_Stop
 236              		.section	.text.RTC_EnableInt,"ax",%progbits
 237              		.align	2
 238              		.global	RTC_EnableInt
 239              		.thumb
 240              		.thumb_func
 241              		.type	RTC_EnableInt, %function
 242              	RTC_EnableInt:
 243              	.LFB2:
 179:Generated_Source\PSoC5/RTC.c **** 
 180:Generated_Source\PSoC5/RTC.c **** 
 181:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 182:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_EnableInt
 183:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 184:Generated_Source\PSoC5/RTC.c **** *
 185:Generated_Source\PSoC5/RTC.c **** * Summary:
 186:Generated_Source\PSoC5/RTC.c **** *  Enables interrupts of RTC Component.
 187:Generated_Source\PSoC5/RTC.c **** *
 188:Generated_Source\PSoC5/RTC.c **** * Parameters:
 189:Generated_Source\PSoC5/RTC.c **** *  None.
 190:Generated_Source\PSoC5/RTC.c **** *
 191:Generated_Source\PSoC5/RTC.c **** * Return:
 192:Generated_Source\PSoC5/RTC.c **** *  None.
 193:Generated_Source\PSoC5/RTC.c **** *
 194:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 195:Generated_Source\PSoC5/RTC.c **** void RTC_EnableInt(void) 
 196:Generated_Source\PSoC5/RTC.c **** {
 244              		.loc 1 196 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249 0000 80B4     		push	{r7}
 250              		.cfi_def_cfa_offset 4
 251              		.cfi_offset 7, -4
 252 0002 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 197:Generated_Source\PSoC5/RTC.c ****     /* Enable the interrupt */
 198:Generated_Source\PSoC5/RTC.c ****     CyIntEnable(RTC_ISR_NUMBER);
 254              		.loc 1 198 0
 255 0004 034B     		ldr	r3, .L9
 256 0006 0422     		movs	r2, #4
 257 0008 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC5/RTC.c **** }
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 9


 258              		.loc 1 199 0
 259 000a 00BF     		nop
 260 000c BD46     		mov	sp, r7
 261              		.cfi_def_cfa_register 13
 262              		@ sp needed
 263 000e 80BC     		pop	{r7}
 264              		.cfi_restore 7
 265              		.cfi_def_cfa_offset 0
 266 0010 7047     		bx	lr
 267              	.L10:
 268 0012 00BF     		.align	2
 269              	.L9:
 270 0014 00E100E0 		.word	-536813312
 271              		.cfi_endproc
 272              	.LFE2:
 273              		.size	RTC_EnableInt, .-RTC_EnableInt
 274              		.section	.text.RTC_DisableInt,"ax",%progbits
 275              		.align	2
 276              		.global	RTC_DisableInt
 277              		.thumb
 278              		.thumb_func
 279              		.type	RTC_DisableInt, %function
 280              	RTC_DisableInt:
 281              	.LFB3:
 200:Generated_Source\PSoC5/RTC.c **** 
 201:Generated_Source\PSoC5/RTC.c **** 
 202:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 203:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_DisableInt
 204:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 205:Generated_Source\PSoC5/RTC.c **** *
 206:Generated_Source\PSoC5/RTC.c **** * Summary:
 207:Generated_Source\PSoC5/RTC.c **** *  Disables interrupts of RTC Component, time and date stop running.
 208:Generated_Source\PSoC5/RTC.c **** *
 209:Generated_Source\PSoC5/RTC.c **** * Parameters:
 210:Generated_Source\PSoC5/RTC.c **** *  None.
 211:Generated_Source\PSoC5/RTC.c **** *
 212:Generated_Source\PSoC5/RTC.c **** * Return:
 213:Generated_Source\PSoC5/RTC.c **** *  None.
 214:Generated_Source\PSoC5/RTC.c **** *
 215:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/RTC.c **** void RTC_DisableInt(void) 
 217:Generated_Source\PSoC5/RTC.c **** {
 282              		.loc 1 217 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 80B4     		push	{r7}
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 0002 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 218:Generated_Source\PSoC5/RTC.c ****     /* Disable the interrupt. */
 219:Generated_Source\PSoC5/RTC.c ****     CyIntDisable(RTC_ISR_NUMBER);
 292              		.loc 1 219 0
 293 0004 034B     		ldr	r3, .L12
 294 0006 0422     		movs	r2, #4
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 10


 295 0008 1A60     		str	r2, [r3]
 220:Generated_Source\PSoC5/RTC.c **** }
 296              		.loc 1 220 0
 297 000a 00BF     		nop
 298 000c BD46     		mov	sp, r7
 299              		.cfi_def_cfa_register 13
 300              		@ sp needed
 301 000e 80BC     		pop	{r7}
 302              		.cfi_restore 7
 303              		.cfi_def_cfa_offset 0
 304 0010 7047     		bx	lr
 305              	.L13:
 306 0012 00BF     		.align	2
 307              	.L12:
 308 0014 80E100E0 		.word	-536813184
 309              		.cfi_endproc
 310              	.LFE3:
 311              		.size	RTC_DisableInt, .-RTC_DisableInt
 312              		.section	.text.RTC_DSTDateConversion,"ax",%progbits
 313              		.align	2
 314              		.thumb
 315              		.thumb_func
 316              		.type	RTC_DSTDateConversion, %function
 317              	RTC_DSTDateConversion:
 318              	.LFB4:
 221:Generated_Source\PSoC5/RTC.c **** 
 222:Generated_Source\PSoC5/RTC.c **** 
 223:Generated_Source\PSoC5/RTC.c **** #if (1u == RTC_DST_FUNC_ENABLE)
 224:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
 225:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_DSTDateConversion
 226:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
 227:Generated_Source\PSoC5/RTC.c ****     *
 228:Generated_Source\PSoC5/RTC.c ****     * Summary:
 229:Generated_Source\PSoC5/RTC.c ****     * Converts relative to absolute date.
 230:Generated_Source\PSoC5/RTC.c ****     *
 231:Generated_Source\PSoC5/RTC.c ****     * Parameters:
 232:Generated_Source\PSoC5/RTC.c ****     *  None.
 233:Generated_Source\PSoC5/RTC.c ****     *
 234:Generated_Source\PSoC5/RTC.c ****     * Return:
 235:Generated_Source\PSoC5/RTC.c ****     *  None.
 236:Generated_Source\PSoC5/RTC.c ****     *
 237:Generated_Source\PSoC5/RTC.c ****     * Global variables:
 238:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Month,
 239:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfWeek,
 240:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Week,
 241:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Month,
 242:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfWeek,
 243:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Week,
 244:Generated_Source\PSoC5/RTC.c ****     *  RTC_currentTimeDate.Year: these global variables are
 245:Generated_Source\PSoC5/RTC.c ****     *  used to correct day of week.
 246:Generated_Source\PSoC5/RTC.c ****     *
 247:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfMonth,
 248:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfMonth: these global variables are
 249:Generated_Source\PSoC5/RTC.c ****     *  modified after convertion.
 250:Generated_Source\PSoC5/RTC.c ****     *
 251:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
 252:Generated_Source\PSoC5/RTC.c ****     *  No.
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 11


 253:Generated_Source\PSoC5/RTC.c ****     *
 254:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
 255:Generated_Source\PSoC5/RTC.c ****     static void RTC_DSTDateConversion(void) 
 256:Generated_Source\PSoC5/RTC.c ****     {
 319              		.loc 1 256 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 8
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323 0000 80B5     		push	{r7, lr}
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 7, -8
 326              		.cfi_offset 14, -4
 327 0002 82B0     		sub	sp, sp, #8
 328              		.cfi_def_cfa_offset 16
 329 0004 00AF     		add	r7, sp, #0
 330              		.cfi_def_cfa_register 7
 257:Generated_Source\PSoC5/RTC.c ****         uint8 week = 1u;
 331              		.loc 1 257 0
 332 0006 0123     		movs	r3, #1
 333 0008 FB71     		strb	r3, [r7, #7]
 258:Generated_Source\PSoC5/RTC.c ****         uint8 day = 1u;
 334              		.loc 1 258 0
 335 000a 0123     		movs	r3, #1
 336 000c BB71     		strb	r3, [r7, #6]
 259:Generated_Source\PSoC5/RTC.c ****         uint8 dayOfWeek;
 260:Generated_Source\PSoC5/RTC.c **** 
 261:Generated_Source\PSoC5/RTC.c ****         /* Get day of week */
 262:Generated_Source\PSoC5/RTC.c ****         dayOfWeek = RTC_DayOfWeek(day, RTC_dstTimeDateStart.Month,
 337              		.loc 1 262 0
 338 000e 3F4B     		ldr	r3, .L27
 339 0010 1B79     		ldrb	r3, [r3, #4]
 340 0012 D9B2     		uxtb	r1, r3
 341 0014 3E4B     		ldr	r3, .L27+4
 342 0016 5B89     		ldrh	r3, [r3, #10]	@ movhi
 343 0018 9AB2     		uxth	r2, r3
 344 001a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 345 001c 1846     		mov	r0, r3
 346 001e FFF7FEFF 		bl	RTC_DayOfWeek
 347 0022 0346     		mov	r3, r0
 348 0024 0133     		adds	r3, r3, #1
 349 0026 7B71     		strb	r3, [r7, #5]
 263:Generated_Source\PSoC5/RTC.c ****                                                     RTC_currentTimeDate.Year) + 1u;
 264:Generated_Source\PSoC5/RTC.c **** 
 265:Generated_Source\PSoC5/RTC.c ****         #if (0u != RTC_START_OF_WEEK)
 266:Generated_Source\PSoC5/RTC.c ****         /* Normalize day of week if Start of week is not Sunday */
 267:Generated_Source\PSoC5/RTC.c ****         if(dayOfWeek > RTC_START_OF_WEEK)
 350              		.loc 1 267 0
 351 0028 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 352 002a 012B     		cmp	r3, #1
 353 002c 03D9     		bls	.L15
 268:Generated_Source\PSoC5/RTC.c ****         {
 269:Generated_Source\PSoC5/RTC.c ****             #if (6u != RTC_START_OF_WEEK)
 270:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is not Saturday  */
 271:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek -= RTC_START_OF_WEEK;
 354              		.loc 1 271 0
 355 002e 7B79     		ldrb	r3, [r7, #5]
 356 0030 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 12


 357 0032 7B71     		strb	r3, [r7, #5]
 358 0034 10E0     		b	.L17
 359              	.L15:
 272:Generated_Source\PSoC5/RTC.c ****             #else /* 6u == RTC_START_OF_WEEK */
 273:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is Saturday  */
 274:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 1u; /* Set day of week to Monday */
 275:Generated_Source\PSoC5/RTC.c ****             #endif /* 6u != RTC_START_OF_WEEK */
 276:Generated_Source\PSoC5/RTC.c ****         }
 277:Generated_Source\PSoC5/RTC.c ****         else
 278:Generated_Source\PSoC5/RTC.c ****         {
 279:Generated_Source\PSoC5/RTC.c ****             #if (1u != RTC_START_OF_WEEK)
 280:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is not Monday  */
 281:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = (RTC_DAYS_IN_WEEK - RTC_START_OF_WEEK) - dayOfWeek;
 282:Generated_Source\PSoC5/RTC.c ****             #else /* 1u == RTC_START_OF_WEEK */
 283:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is Monday  */
 284:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 5u; /* Set day of week to Friday */
 360              		.loc 1 284 0
 361 0036 0523     		movs	r3, #5
 362 0038 7B71     		strb	r3, [r7, #5]
 285:Generated_Source\PSoC5/RTC.c ****             #endif /* 1u != RTC_START_OF_WEEK */
 286:Generated_Source\PSoC5/RTC.c ****         }
 287:Generated_Source\PSoC5/RTC.c ****         #endif /* 0u != RTC_START_OF_WEEK */
 288:Generated_Source\PSoC5/RTC.c **** 
 289:Generated_Source\PSoC5/RTC.c ****         /* Correct if out of DST range */
 290:Generated_Source\PSoC5/RTC.c ****         while(dayOfWeek != RTC_dstTimeDateStart.DayOfWeek)
 363              		.loc 1 290 0
 364 003a 0DE0     		b	.L17
 365              	.L18:
 291:Generated_Source\PSoC5/RTC.c ****         {
 292:Generated_Source\PSoC5/RTC.c ****             day++;
 366              		.loc 1 292 0
 367 003c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 368 003e 0133     		adds	r3, r3, #1
 369 0040 BB71     		strb	r3, [r7, #6]
 293:Generated_Source\PSoC5/RTC.c ****             dayOfWeek++;
 370              		.loc 1 293 0
 371 0042 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 372 0044 0133     		adds	r3, r3, #1
 373 0046 7B71     		strb	r3, [r7, #5]
 294:Generated_Source\PSoC5/RTC.c ****             if(dayOfWeek > RTC_WEEK_ELAPSED)
 374              		.loc 1 294 0
 375 0048 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 376 004a 072B     		cmp	r3, #7
 377 004c 04D9     		bls	.L17
 295:Generated_Source\PSoC5/RTC.c ****             {
 296:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 1u;
 378              		.loc 1 296 0
 379 004e 0123     		movs	r3, #1
 380 0050 7B71     		strb	r3, [r7, #5]
 297:Generated_Source\PSoC5/RTC.c ****                 week++;
 381              		.loc 1 297 0
 382 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 383 0054 0133     		adds	r3, r3, #1
 384 0056 FB71     		strb	r3, [r7, #7]
 385              	.L17:
 290:Generated_Source\PSoC5/RTC.c ****         {
 386              		.loc 1 290 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 13


 387 0058 2C4B     		ldr	r3, .L27
 388 005a 5B78     		ldrb	r3, [r3, #1]
 389 005c DBB2     		uxtb	r3, r3
 390 005e 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 391 0060 9A42     		cmp	r2, r3
 392 0062 EBD1     		bne	.L18
 298:Generated_Source\PSoC5/RTC.c ****             }
 299:Generated_Source\PSoC5/RTC.c ****         }
 300:Generated_Source\PSoC5/RTC.c **** 
 301:Generated_Source\PSoC5/RTC.c ****         while(week != RTC_dstTimeDateStart.Week)
 393              		.loc 1 301 0
 394 0064 05E0     		b	.L19
 395              	.L20:
 302:Generated_Source\PSoC5/RTC.c ****         {
 303:Generated_Source\PSoC5/RTC.c ****             day += RTC_DAYS_IN_WEEK;
 396              		.loc 1 303 0
 397 0066 BB79     		ldrb	r3, [r7, #6]
 398 0068 0733     		adds	r3, r3, #7
 399 006a BB71     		strb	r3, [r7, #6]
 304:Generated_Source\PSoC5/RTC.c ****             week++;
 400              		.loc 1 304 0
 401 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 402 006e 0133     		adds	r3, r3, #1
 403 0070 FB71     		strb	r3, [r7, #7]
 404              	.L19:
 301:Generated_Source\PSoC5/RTC.c ****         {
 405              		.loc 1 301 0
 406 0072 264B     		ldr	r3, .L27
 407 0074 9B78     		ldrb	r3, [r3, #2]
 408 0076 DBB2     		uxtb	r3, r3
 409 0078 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 410 007a 9A42     		cmp	r2, r3
 411 007c F3D1     		bne	.L20
 305:Generated_Source\PSoC5/RTC.c ****         }
 306:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStart.DayOfMonth = day;
 412              		.loc 1 306 0
 413 007e 234A     		ldr	r2, .L27
 414 0080 BB79     		ldrb	r3, [r7, #6]
 415 0082 D370     		strb	r3, [r2, #3]
 307:Generated_Source\PSoC5/RTC.c **** 
 308:Generated_Source\PSoC5/RTC.c ****         /* Stop of DST time */
 309:Generated_Source\PSoC5/RTC.c ****         week = 1u;
 416              		.loc 1 309 0
 417 0084 0123     		movs	r3, #1
 418 0086 FB71     		strb	r3, [r7, #7]
 310:Generated_Source\PSoC5/RTC.c ****         day = 1u;
 419              		.loc 1 310 0
 420 0088 0123     		movs	r3, #1
 421 008a BB71     		strb	r3, [r7, #6]
 311:Generated_Source\PSoC5/RTC.c **** 
 312:Generated_Source\PSoC5/RTC.c ****         dayOfWeek = RTC_DayOfWeek(day, RTC_dstTimeDateStop.Month,
 422              		.loc 1 312 0
 423 008c 214B     		ldr	r3, .L27+8
 424 008e 1B79     		ldrb	r3, [r3, #4]
 425 0090 D9B2     		uxtb	r1, r3
 426 0092 1F4B     		ldr	r3, .L27+4
 427 0094 5B89     		ldrh	r3, [r3, #10]	@ movhi
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 14


 428 0096 9AB2     		uxth	r2, r3
 429 0098 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 430 009a 1846     		mov	r0, r3
 431 009c FFF7FEFF 		bl	RTC_DayOfWeek
 432 00a0 0346     		mov	r3, r0
 433 00a2 0133     		adds	r3, r3, #1
 434 00a4 7B71     		strb	r3, [r7, #5]
 313:Generated_Source\PSoC5/RTC.c ****                                                     RTC_currentTimeDate.Year) + 1u;
 314:Generated_Source\PSoC5/RTC.c ****         #if (0u != RTC_START_OF_WEEK)
 315:Generated_Source\PSoC5/RTC.c ****         /* Normalize day of week if Start of week is not Sunday */
 316:Generated_Source\PSoC5/RTC.c ****         if(dayOfWeek > RTC_START_OF_WEEK)
 435              		.loc 1 316 0
 436 00a6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 437 00a8 012B     		cmp	r3, #1
 438 00aa 03D9     		bls	.L21
 317:Generated_Source\PSoC5/RTC.c ****         {
 318:Generated_Source\PSoC5/RTC.c ****             #if (6u != RTC_START_OF_WEEK)
 319:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is not Saturday  */
 320:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek -= RTC_START_OF_WEEK;
 439              		.loc 1 320 0
 440 00ac 7B79     		ldrb	r3, [r7, #5]
 441 00ae 013B     		subs	r3, r3, #1
 442 00b0 7B71     		strb	r3, [r7, #5]
 443 00b2 10E0     		b	.L23
 444              	.L21:
 321:Generated_Source\PSoC5/RTC.c ****             #else /* 6u == RTC_START_OF_WEEK */
 322:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is Saturday  */
 323:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 1u; /* Set day of week to Monday */
 324:Generated_Source\PSoC5/RTC.c ****             #endif /* 6u != RTC_START_OF_WEEK */
 325:Generated_Source\PSoC5/RTC.c ****         }
 326:Generated_Source\PSoC5/RTC.c ****         else
 327:Generated_Source\PSoC5/RTC.c ****         {
 328:Generated_Source\PSoC5/RTC.c ****             #if (1u != RTC_START_OF_WEEK)
 329:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is not Monday  */
 330:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = (RTC_DAYS_IN_WEEK - RTC_START_OF_WEEK) - dayOfWeek;
 331:Generated_Source\PSoC5/RTC.c ****             #else /* 1u == RTC_START_OF_WEEK */
 332:Generated_Source\PSoC5/RTC.c ****                 /* Start of week is Monday  */
 333:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 5u; /* Set day of week to Friday */
 445              		.loc 1 333 0
 446 00b4 0523     		movs	r3, #5
 447 00b6 7B71     		strb	r3, [r7, #5]
 334:Generated_Source\PSoC5/RTC.c ****             #endif /* 1u != RTC_START_OF_WEEK */
 335:Generated_Source\PSoC5/RTC.c ****         }
 336:Generated_Source\PSoC5/RTC.c ****         #endif /* 0u != RTC_START_OF_WEEK */
 337:Generated_Source\PSoC5/RTC.c **** 
 338:Generated_Source\PSoC5/RTC.c ****         while(dayOfWeek != RTC_dstTimeDateStop.DayOfWeek)
 448              		.loc 1 338 0
 449 00b8 0DE0     		b	.L23
 450              	.L24:
 339:Generated_Source\PSoC5/RTC.c ****         {
 340:Generated_Source\PSoC5/RTC.c ****             day++;
 451              		.loc 1 340 0
 452 00ba BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 453 00bc 0133     		adds	r3, r3, #1
 454 00be BB71     		strb	r3, [r7, #6]
 341:Generated_Source\PSoC5/RTC.c ****             dayOfWeek++;
 455              		.loc 1 341 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 15


 456 00c0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 457 00c2 0133     		adds	r3, r3, #1
 458 00c4 7B71     		strb	r3, [r7, #5]
 342:Generated_Source\PSoC5/RTC.c ****             if(dayOfWeek > RTC_WEEK_ELAPSED)
 459              		.loc 1 342 0
 460 00c6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 461 00c8 072B     		cmp	r3, #7
 462 00ca 04D9     		bls	.L23
 343:Generated_Source\PSoC5/RTC.c ****             {
 344:Generated_Source\PSoC5/RTC.c ****                 dayOfWeek = 1u;
 463              		.loc 1 344 0
 464 00cc 0123     		movs	r3, #1
 465 00ce 7B71     		strb	r3, [r7, #5]
 345:Generated_Source\PSoC5/RTC.c ****                 week++;
 466              		.loc 1 345 0
 467 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 468 00d2 0133     		adds	r3, r3, #1
 469 00d4 FB71     		strb	r3, [r7, #7]
 470              	.L23:
 338:Generated_Source\PSoC5/RTC.c ****         {
 471              		.loc 1 338 0
 472 00d6 0F4B     		ldr	r3, .L27+8
 473 00d8 5B78     		ldrb	r3, [r3, #1]
 474 00da DBB2     		uxtb	r3, r3
 475 00dc 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 476 00de 9A42     		cmp	r2, r3
 477 00e0 EBD1     		bne	.L24
 346:Generated_Source\PSoC5/RTC.c ****             }
 347:Generated_Source\PSoC5/RTC.c ****         }
 348:Generated_Source\PSoC5/RTC.c **** 
 349:Generated_Source\PSoC5/RTC.c ****         while(week != RTC_dstTimeDateStop.Week)
 478              		.loc 1 349 0
 479 00e2 05E0     		b	.L25
 480              	.L26:
 350:Generated_Source\PSoC5/RTC.c ****         {
 351:Generated_Source\PSoC5/RTC.c ****             day += RTC_DAYS_IN_WEEK;
 481              		.loc 1 351 0
 482 00e4 BB79     		ldrb	r3, [r7, #6]
 483 00e6 0733     		adds	r3, r3, #7
 484 00e8 BB71     		strb	r3, [r7, #6]
 352:Generated_Source\PSoC5/RTC.c ****             week++;
 485              		.loc 1 352 0
 486 00ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 487 00ec 0133     		adds	r3, r3, #1
 488 00ee FB71     		strb	r3, [r7, #7]
 489              	.L25:
 349:Generated_Source\PSoC5/RTC.c ****         {
 490              		.loc 1 349 0
 491 00f0 084B     		ldr	r3, .L27+8
 492 00f2 9B78     		ldrb	r3, [r3, #2]
 493 00f4 DBB2     		uxtb	r3, r3
 494 00f6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 495 00f8 9A42     		cmp	r2, r3
 496 00fa F3D1     		bne	.L26
 353:Generated_Source\PSoC5/RTC.c ****         }
 354:Generated_Source\PSoC5/RTC.c **** 
 355:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStop.DayOfMonth = day;
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 16


 497              		.loc 1 355 0
 498 00fc 054A     		ldr	r2, .L27+8
 499 00fe BB79     		ldrb	r3, [r7, #6]
 500 0100 D370     		strb	r3, [r2, #3]
 356:Generated_Source\PSoC5/RTC.c ****     }
 501              		.loc 1 356 0
 502 0102 00BF     		nop
 503 0104 0837     		adds	r7, r7, #8
 504              		.cfi_def_cfa_offset 8
 505 0106 BD46     		mov	sp, r7
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 0108 80BD     		pop	{r7, pc}
 509              	.L28:
 510 010a 00BF     		.align	2
 511              	.L27:
 512 010c 00000000 		.word	RTC_dstTimeDateStart
 513 0110 00000000 		.word	RTC_currentTimeDate
 514 0114 00000000 		.word	RTC_dstTimeDateStop
 515              		.cfi_endproc
 516              	.LFE4:
 517              		.size	RTC_DSTDateConversion, .-RTC_DSTDateConversion
 518              		.section	.text.RTC_Init,"ax",%progbits
 519              		.align	2
 520              		.global	RTC_Init
 521              		.thumb
 522              		.thumb_func
 523              		.type	RTC_Init, %function
 524              	RTC_Init:
 525              	.LFB5:
 357:Generated_Source\PSoC5/RTC.c **** #endif /* 1u == RTC_DST_FUNC_ENABLE */
 358:Generated_Source\PSoC5/RTC.c **** 
 359:Generated_Source\PSoC5/RTC.c **** 
 360:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 361:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_Init
 362:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 363:Generated_Source\PSoC5/RTC.c **** *
 364:Generated_Source\PSoC5/RTC.c **** * Summary:
 365:Generated_Source\PSoC5/RTC.c **** *  Calculates required date and flags, sets interrupt vector and priority.
 366:Generated_Source\PSoC5/RTC.c **** *
 367:Generated_Source\PSoC5/RTC.c **** * Parameters:
 368:Generated_Source\PSoC5/RTC.c **** *  None.
 369:Generated_Source\PSoC5/RTC.c **** *
 370:Generated_Source\PSoC5/RTC.c **** * Return:
 371:Generated_Source\PSoC5/RTC.c **** *  None.
 372:Generated_Source\PSoC5/RTC.c **** *
 373:Generated_Source\PSoC5/RTC.c **** * Global variables:
 374:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate, RTC_dstTimeDateStart,
 375:Generated_Source\PSoC5/RTC.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 376:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 377:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 378:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus:
 379:Generated_Source\PSoC5/RTC.c **** *  global variables are used by the RTC_SetInitValues().
 380:Generated_Source\PSoC5/RTC.c **** *
 381:Generated_Source\PSoC5/RTC.c **** *  RTC_dstTimeDateStart, RTC_currentTimeDate:
 382:Generated_Source\PSoC5/RTC.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 383:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 17


 384:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: are modified by the
 385:Generated_Source\PSoC5/RTC.c **** *  RTC_SetInitValues() function.
 386:Generated_Source\PSoC5/RTC.c **** *
 387:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 388:Generated_Source\PSoC5/RTC.c **** *  No.
 389:Generated_Source\PSoC5/RTC.c **** *
 390:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 391:Generated_Source\PSoC5/RTC.c **** void RTC_Init(void) 
 392:Generated_Source\PSoC5/RTC.c **** {
 526              		.loc 1 392 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530 0000 80B5     		push	{r7, lr}
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 7, -8
 533              		.cfi_offset 14, -4
 534 0002 00AF     		add	r7, sp, #0
 535              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC5/RTC.c ****     /* Start calculation of required date and flags */
 394:Generated_Source\PSoC5/RTC.c ****     RTC_SetInitValues();
 536              		.loc 1 394 0
 537 0004 FFF7FEFF 		bl	RTC_SetInitValues
 395:Generated_Source\PSoC5/RTC.c **** 
 396:Generated_Source\PSoC5/RTC.c ****     /* Disable Interrupt. */
 397:Generated_Source\PSoC5/RTC.c ****     CyIntDisable(RTC_ISR_NUMBER);
 538              		.loc 1 397 0
 539 0008 064B     		ldr	r3, .L30
 540 000a 0422     		movs	r2, #4
 541 000c 1A60     		str	r2, [r3]
 398:Generated_Source\PSoC5/RTC.c **** 
 399:Generated_Source\PSoC5/RTC.c ****     /* Set the ISR to point to the RTC_SUT_isr Interrupt. */
 400:Generated_Source\PSoC5/RTC.c ****     (void) CyIntSetVector(RTC_ISR_NUMBER, & RTC_ISR);
 542              		.loc 1 400 0
 543 000e 0649     		ldr	r1, .L30+4
 544 0010 0220     		movs	r0, #2
 545 0012 FFF7FEFF 		bl	CyIntSetVector
 401:Generated_Source\PSoC5/RTC.c **** 
 402:Generated_Source\PSoC5/RTC.c ****     /* Set the priority. */
 403:Generated_Source\PSoC5/RTC.c ****     CyIntSetPriority(RTC_ISR_NUMBER, RTC_ISR_PRIORITY);
 546              		.loc 1 403 0
 547 0016 0721     		movs	r1, #7
 548 0018 0220     		movs	r0, #2
 549 001a FFF7FEFF 		bl	CyIntSetPriority
 404:Generated_Source\PSoC5/RTC.c **** }
 550              		.loc 1 404 0
 551 001e 00BF     		nop
 552 0020 80BD     		pop	{r7, pc}
 553              	.L31:
 554 0022 00BF     		.align	2
 555              	.L30:
 556 0024 80E100E0 		.word	-536813184
 557 0028 00000000 		.word	RTC_ISR
 558              		.cfi_endproc
 559              	.LFE5:
 560              		.size	RTC_Init, .-RTC_Init
 561              		.section	.text.RTC_Enable,"ax",%progbits
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 18


 562              		.align	2
 563              		.global	RTC_Enable
 564              		.thumb
 565              		.thumb_func
 566              		.type	RTC_Enable, %function
 567              	RTC_Enable:
 568              	.LFB6:
 405:Generated_Source\PSoC5/RTC.c **** 
 406:Generated_Source\PSoC5/RTC.c **** 
 407:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 408:Generated_Source\PSoC5/RTC.c **** * Function Name: RTC_Enable
 409:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 410:Generated_Source\PSoC5/RTC.c **** *
 411:Generated_Source\PSoC5/RTC.c **** * Summary:
 412:Generated_Source\PSoC5/RTC.c **** *  Enables the interrupts, one pulse per second and interrupt generation on OPPS
 413:Generated_Source\PSoC5/RTC.c **** *  event.
 414:Generated_Source\PSoC5/RTC.c **** *
 415:Generated_Source\PSoC5/RTC.c **** * Parameters:
 416:Generated_Source\PSoC5/RTC.c **** *  None.
 417:Generated_Source\PSoC5/RTC.c **** *
 418:Generated_Source\PSoC5/RTC.c **** * Return:
 419:Generated_Source\PSoC5/RTC.c **** *  None.
 420:Generated_Source\PSoC5/RTC.c **** *
 421:Generated_Source\PSoC5/RTC.c **** * Side Effects:
 422:Generated_Source\PSoC5/RTC.c **** *  Enables for the one pulse per second and central time wheel signals to wake
 423:Generated_Source\PSoC5/RTC.c **** *  up device from the low power (Sleep and Alternate Active) modes and leaves
 424:Generated_Source\PSoC5/RTC.c **** *  them enabled.
 425:Generated_Source\PSoC5/RTC.c **** *
 426:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 427:Generated_Source\PSoC5/RTC.c **** void RTC_Enable(void) 
 428:Generated_Source\PSoC5/RTC.c **** {
 569              		.loc 1 428 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 8
 572              		@ frame_needed = 1, uses_anonymous_args = 0
 573 0000 80B5     		push	{r7, lr}
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 7, -8
 576              		.cfi_offset 14, -4
 577 0002 82B0     		sub	sp, sp, #8
 578              		.cfi_def_cfa_offset 16
 579 0004 00AF     		add	r7, sp, #0
 580              		.cfi_def_cfa_register 7
 429:Generated_Source\PSoC5/RTC.c ****     uint8 interruptState;
 430:Generated_Source\PSoC5/RTC.c **** 
 431:Generated_Source\PSoC5/RTC.c ****     /* Enter critical section */
 432:Generated_Source\PSoC5/RTC.c ****     interruptState = CyEnterCriticalSection();
 581              		.loc 1 432 0
 582 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 583 000a 0346     		mov	r3, r0
 584 000c FB71     		strb	r3, [r7, #7]
 433:Generated_Source\PSoC5/RTC.c **** 
 434:Generated_Source\PSoC5/RTC.c ****     /* Enable one pulse per second event and interrupt */
 435:Generated_Source\PSoC5/RTC.c ****     RTC_OPPS_CFG_REG |= (RTC_OPPS_EN_MASK | RTC_OPPSIE_EN_MASK);
 585              		.loc 1 435 0
 586 000e 094A     		ldr	r2, .L33
 587 0010 084B     		ldr	r3, .L33
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 19


 588 0012 1B78     		ldrb	r3, [r3]
 589 0014 DBB2     		uxtb	r3, r3
 590 0016 43F03003 		orr	r3, r3, #48
 591 001a DBB2     		uxtb	r3, r3
 592 001c 1370     		strb	r3, [r2]
 436:Generated_Source\PSoC5/RTC.c **** 
 437:Generated_Source\PSoC5/RTC.c ****     /* Exit critical section */
 438:Generated_Source\PSoC5/RTC.c ****     CyExitCriticalSection(interruptState);
 593              		.loc 1 438 0
 594 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 595 0020 1846     		mov	r0, r3
 596 0022 FFF7FEFF 		bl	CyExitCriticalSection
 439:Generated_Source\PSoC5/RTC.c **** 
 440:Generated_Source\PSoC5/RTC.c ****     /* Enable interrupt */
 441:Generated_Source\PSoC5/RTC.c ****     CyIntEnable(RTC_ISR_NUMBER);
 597              		.loc 1 441 0
 598 0026 044B     		ldr	r3, .L33+4
 599 0028 0422     		movs	r2, #4
 600 002a 1A60     		str	r2, [r3]
 442:Generated_Source\PSoC5/RTC.c **** }
 601              		.loc 1 442 0
 602 002c 00BF     		nop
 603 002e 0837     		adds	r7, r7, #8
 604              		.cfi_def_cfa_offset 8
 605 0030 BD46     		mov	sp, r7
 606              		.cfi_def_cfa_register 13
 607              		@ sp needed
 608 0032 80BD     		pop	{r7, pc}
 609              	.L34:
 610              		.align	2
 611              	.L33:
 612 0034 82430040 		.word	1073759106
 613 0038 00E100E0 		.word	-536813312
 614              		.cfi_endproc
 615              	.LFE6:
 616              		.size	RTC_Enable, .-RTC_Enable
 617              		.section	.text.RTC_ReadTime,"ax",%progbits
 618              		.align	2
 619              		.global	RTC_ReadTime
 620              		.thumb
 621              		.thumb_func
 622              		.type	RTC_ReadTime, %function
 623              	RTC_ReadTime:
 624              	.LFB7:
 443:Generated_Source\PSoC5/RTC.c **** 
 444:Generated_Source\PSoC5/RTC.c **** 
 445:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 446:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadTime
 447:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 448:Generated_Source\PSoC5/RTC.c **** *
 449:Generated_Source\PSoC5/RTC.c **** * Summary:
 450:Generated_Source\PSoC5/RTC.c **** *  Returns a pointer to the current time and date structure.
 451:Generated_Source\PSoC5/RTC.c **** *
 452:Generated_Source\PSoC5/RTC.c **** * Parameters:
 453:Generated_Source\PSoC5/RTC.c **** *  None.
 454:Generated_Source\PSoC5/RTC.c **** *
 455:Generated_Source\PSoC5/RTC.c **** * Return:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 20


 456:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate: pointer to the global structure with the
 457:Generated_Source\PSoC5/RTC.c **** *  current date and time values.
 458:Generated_Source\PSoC5/RTC.c **** *
 459:Generated_Source\PSoC5/RTC.c **** * Global variables:
 460:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate: global variable with current date and
 461:Generated_Source\PSoC5/RTC.c **** *   time is used.
 462:Generated_Source\PSoC5/RTC.c **** *
 463:Generated_Source\PSoC5/RTC.c **** * Side Effects:
 464:Generated_Source\PSoC5/RTC.c **** *  You should disable the interrupt for the RTC component before calling any
 465:Generated_Source\PSoC5/RTC.c **** *  read API to avoid an RTC Counter increment in the middle of a time or date
 466:Generated_Source\PSoC5/RTC.c **** *  read operation. Re-enable the interrupts after the data is read.
 467:Generated_Source\PSoC5/RTC.c **** *
 468:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 469:Generated_Source\PSoC5/RTC.c **** RTC_TIME_DATE * RTC_ReadTime(void) 
 470:Generated_Source\PSoC5/RTC.c **** {
 625              		.loc 1 470 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 1, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630 0000 80B4     		push	{r7}
 631              		.cfi_def_cfa_offset 4
 632              		.cfi_offset 7, -4
 633 0002 00AF     		add	r7, sp, #0
 634              		.cfi_def_cfa_register 7
 471:Generated_Source\PSoC5/RTC.c ****     /* Returns a pointer to the current time and date structure */
 472:Generated_Source\PSoC5/RTC.c ****     return (&RTC_currentTimeDate);
 635              		.loc 1 472 0
 636 0004 024B     		ldr	r3, .L37
 473:Generated_Source\PSoC5/RTC.c **** }
 637              		.loc 1 473 0
 638 0006 1846     		mov	r0, r3
 639 0008 BD46     		mov	sp, r7
 640              		.cfi_def_cfa_register 13
 641              		@ sp needed
 642 000a 80BC     		pop	{r7}
 643              		.cfi_restore 7
 644              		.cfi_def_cfa_offset 0
 645 000c 7047     		bx	lr
 646              	.L38:
 647 000e 00BF     		.align	2
 648              	.L37:
 649 0010 00000000 		.word	RTC_currentTimeDate
 650              		.cfi_endproc
 651              	.LFE7:
 652              		.size	RTC_ReadTime, .-RTC_ReadTime
 653              		.section	.text.RTC_WriteTime,"ax",%progbits
 654              		.align	2
 655              		.global	RTC_WriteTime
 656              		.thumb
 657              		.thumb_func
 658              		.type	RTC_WriteTime, %function
 659              	RTC_WriteTime:
 660              	.LFB8:
 474:Generated_Source\PSoC5/RTC.c **** 
 475:Generated_Source\PSoC5/RTC.c **** 
 476:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 21


 477:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteTime
 478:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 479:Generated_Source\PSoC5/RTC.c **** *
 480:Generated_Source\PSoC5/RTC.c **** * Summary:
 481:Generated_Source\PSoC5/RTC.c **** *  Writes time and date values as current time and date. Only
 482:Generated_Source\PSoC5/RTC.c **** *  passes Milliseconds(optionally), Seconds, Minutes, Hours, Month,
 483:Generated_Source\PSoC5/RTC.c **** *  Day Of Month and Year.
 484:Generated_Source\PSoC5/RTC.c **** *
 485:Generated_Source\PSoC5/RTC.c **** * Parameters:
 486:Generated_Source\PSoC5/RTC.c **** *  timeDate: Pointer to RTC_TIME_DATE global structure where new
 487:Generated_Source\PSoC5/RTC.c **** *  values of time and date are stored.
 488:Generated_Source\PSoC5/RTC.c **** *
 489:Generated_Source\PSoC5/RTC.c **** * Return:
 490:Generated_Source\PSoC5/RTC.c **** *  None.
 491:Generated_Source\PSoC5/RTC.c **** *
 492:Generated_Source\PSoC5/RTC.c **** * Global variables:
 493:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate: global structure is modified with the new
 494:Generated_Source\PSoC5/RTC.c **** *  values of current date and time.
 495:Generated_Source\PSoC5/RTC.c **** *
 496:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 497:Generated_Source\PSoC5/RTC.c **** *  No.
 498:Generated_Source\PSoC5/RTC.c **** *
 499:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 500:Generated_Source\PSoC5/RTC.c **** void RTC_WriteTime(const RTC_TIME_DATE * timeDate)
 501:Generated_Source\PSoC5/RTC.c ****      
 502:Generated_Source\PSoC5/RTC.c **** {
 661              		.loc 1 502 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 8
 664              		@ frame_needed = 1, uses_anonymous_args = 0
 665 0000 80B5     		push	{r7, lr}
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 7, -8
 668              		.cfi_offset 14, -4
 669 0002 82B0     		sub	sp, sp, #8
 670              		.cfi_def_cfa_offset 16
 671 0004 00AF     		add	r7, sp, #0
 672              		.cfi_def_cfa_register 7
 673 0006 7860     		str	r0, [r7, #4]
 503:Generated_Source\PSoC5/RTC.c ****     /* Disable Interrupt of RTC Component */
 504:Generated_Source\PSoC5/RTC.c ****     RTC_DisableInt();
 674              		.loc 1 504 0
 675 0008 FFF7FEFF 		bl	RTC_DisableInt
 505:Generated_Source\PSoC5/RTC.c **** 
 506:Generated_Source\PSoC5/RTC.c ****     /* Write current time and date */
 507:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Sec = timeDate->Sec;
 676              		.loc 1 507 0
 677 000c 7B68     		ldr	r3, [r7, #4]
 678 000e 1B78     		ldrb	r3, [r3]
 679 0010 DAB2     		uxtb	r2, r3
 680 0012 104B     		ldr	r3, .L40
 681 0014 1A70     		strb	r2, [r3]
 508:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Min = timeDate->Min;
 682              		.loc 1 508 0
 683 0016 7B68     		ldr	r3, [r7, #4]
 684 0018 5B78     		ldrb	r3, [r3, #1]
 685 001a DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 22


 686 001c 0D4B     		ldr	r3, .L40
 687 001e 5A70     		strb	r2, [r3, #1]
 509:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Hour = timeDate->Hour;
 688              		.loc 1 509 0
 689 0020 7B68     		ldr	r3, [r7, #4]
 690 0022 9B78     		ldrb	r3, [r3, #2]
 691 0024 DAB2     		uxtb	r2, r3
 692 0026 0B4B     		ldr	r3, .L40
 693 0028 9A70     		strb	r2, [r3, #2]
 510:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.DayOfMonth = timeDate->DayOfMonth;
 694              		.loc 1 510 0
 695 002a 7B68     		ldr	r3, [r7, #4]
 696 002c 1B79     		ldrb	r3, [r3, #4]
 697 002e DAB2     		uxtb	r2, r3
 698 0030 084B     		ldr	r3, .L40
 699 0032 1A71     		strb	r2, [r3, #4]
 511:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Month = timeDate->Month;
 700              		.loc 1 511 0
 701 0034 7B68     		ldr	r3, [r7, #4]
 702 0036 1B7A     		ldrb	r3, [r3, #8]
 703 0038 DAB2     		uxtb	r2, r3
 704 003a 064B     		ldr	r3, .L40
 705 003c 1A72     		strb	r2, [r3, #8]
 512:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Year = timeDate->Year;
 706              		.loc 1 512 0
 707 003e 7B68     		ldr	r3, [r7, #4]
 708 0040 5B89     		ldrh	r3, [r3, #10]	@ movhi
 709 0042 9AB2     		uxth	r2, r3
 710 0044 034B     		ldr	r3, .L40
 711 0046 5A81     		strh	r2, [r3, #10]	@ movhi
 513:Generated_Source\PSoC5/RTC.c **** 
 514:Generated_Source\PSoC5/RTC.c ****     /* Enable Interrupt of RTC Component */
 515:Generated_Source\PSoC5/RTC.c ****     RTC_EnableInt();
 712              		.loc 1 515 0
 713 0048 FFF7FEFF 		bl	RTC_EnableInt
 516:Generated_Source\PSoC5/RTC.c **** }
 714              		.loc 1 516 0
 715 004c 00BF     		nop
 716 004e 0837     		adds	r7, r7, #8
 717              		.cfi_def_cfa_offset 8
 718 0050 BD46     		mov	sp, r7
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 0052 80BD     		pop	{r7, pc}
 722              	.L41:
 723              		.align	2
 724              	.L40:
 725 0054 00000000 		.word	RTC_currentTimeDate
 726              		.cfi_endproc
 727              	.LFE8:
 728              		.size	RTC_WriteTime, .-RTC_WriteTime
 729              		.section	.text.RTC_WriteSecond,"ax",%progbits
 730              		.align	2
 731              		.global	RTC_WriteSecond
 732              		.thumb
 733              		.thumb_func
 734              		.type	RTC_WriteSecond, %function
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 23


 735              	RTC_WriteSecond:
 736              	.LFB9:
 517:Generated_Source\PSoC5/RTC.c **** 
 518:Generated_Source\PSoC5/RTC.c **** 
 519:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 520:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteSecond
 521:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 522:Generated_Source\PSoC5/RTC.c **** *
 523:Generated_Source\PSoC5/RTC.c **** * Summary:
 524:Generated_Source\PSoC5/RTC.c **** *  Writes Sec software register value.
 525:Generated_Source\PSoC5/RTC.c **** *
 526:Generated_Source\PSoC5/RTC.c **** * Parameters:
 527:Generated_Source\PSoC5/RTC.c **** *  second: Seconds value.
 528:Generated_Source\PSoC5/RTC.c **** *
 529:Generated_Source\PSoC5/RTC.c **** * Return:
 530:Generated_Source\PSoC5/RTC.c **** *  None.
 531:Generated_Source\PSoC5/RTC.c **** *
 532:Generated_Source\PSoC5/RTC.c **** * Global variables:
 533:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Sec: global structure's field where current
 534:Generated_Source\PSoC5/RTC.c **** *  second's value is modified.
 535:Generated_Source\PSoC5/RTC.c **** *
 536:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 537:Generated_Source\PSoC5/RTC.c **** *  No.
 538:Generated_Source\PSoC5/RTC.c **** *
 539:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 540:Generated_Source\PSoC5/RTC.c **** void RTC_WriteSecond(uint8 second) 
 541:Generated_Source\PSoC5/RTC.c **** {
 737              		.loc 1 541 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 8
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 0002 83B0     		sub	sp, sp, #12
 746              		.cfi_def_cfa_offset 16
 747 0004 00AF     		add	r7, sp, #0
 748              		.cfi_def_cfa_register 7
 749 0006 0346     		mov	r3, r0
 750 0008 FB71     		strb	r3, [r7, #7]
 542:Generated_Source\PSoC5/RTC.c ****     /* Save seconds to the current time and date structure */
 543:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Sec = second;
 751              		.loc 1 543 0
 752 000a 044A     		ldr	r2, .L43
 753 000c FB79     		ldrb	r3, [r7, #7]
 754 000e 1370     		strb	r3, [r2]
 544:Generated_Source\PSoC5/RTC.c **** }
 755              		.loc 1 544 0
 756 0010 00BF     		nop
 757 0012 0C37     		adds	r7, r7, #12
 758              		.cfi_def_cfa_offset 4
 759 0014 BD46     		mov	sp, r7
 760              		.cfi_def_cfa_register 13
 761              		@ sp needed
 762 0016 80BC     		pop	{r7}
 763              		.cfi_restore 7
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 24


 764              		.cfi_def_cfa_offset 0
 765 0018 7047     		bx	lr
 766              	.L44:
 767 001a 00BF     		.align	2
 768              	.L43:
 769 001c 00000000 		.word	RTC_currentTimeDate
 770              		.cfi_endproc
 771              	.LFE9:
 772              		.size	RTC_WriteSecond, .-RTC_WriteSecond
 773              		.section	.text.RTC_WriteMinute,"ax",%progbits
 774              		.align	2
 775              		.global	RTC_WriteMinute
 776              		.thumb
 777              		.thumb_func
 778              		.type	RTC_WriteMinute, %function
 779              	RTC_WriteMinute:
 780              	.LFB10:
 545:Generated_Source\PSoC5/RTC.c **** 
 546:Generated_Source\PSoC5/RTC.c **** 
 547:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 548:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteMinute
 549:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 550:Generated_Source\PSoC5/RTC.c **** *
 551:Generated_Source\PSoC5/RTC.c **** * Summary:
 552:Generated_Source\PSoC5/RTC.c **** *  Writes Minute value in minutes counter register.
 553:Generated_Source\PSoC5/RTC.c **** *
 554:Generated_Source\PSoC5/RTC.c **** * Parameters:
 555:Generated_Source\PSoC5/RTC.c **** *  minute: Minutes value.
 556:Generated_Source\PSoC5/RTC.c **** *
 557:Generated_Source\PSoC5/RTC.c **** * Return:
 558:Generated_Source\PSoC5/RTC.c **** *  None.
 559:Generated_Source\PSoC5/RTC.c **** *
 560:Generated_Source\PSoC5/RTC.c **** * Global variables:
 561:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Min: global structure's field where
 562:Generated_Source\PSoC5/RTC.c **** *  current minute's value is modified.
 563:Generated_Source\PSoC5/RTC.c **** *
 564:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 565:Generated_Source\PSoC5/RTC.c **** *  No.
 566:Generated_Source\PSoC5/RTC.c **** *
 567:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 568:Generated_Source\PSoC5/RTC.c **** void RTC_WriteMinute(uint8 minute) 
 569:Generated_Source\PSoC5/RTC.c **** {
 781              		.loc 1 569 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 8
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785              		@ link register save eliminated.
 786 0000 80B4     		push	{r7}
 787              		.cfi_def_cfa_offset 4
 788              		.cfi_offset 7, -4
 789 0002 83B0     		sub	sp, sp, #12
 790              		.cfi_def_cfa_offset 16
 791 0004 00AF     		add	r7, sp, #0
 792              		.cfi_def_cfa_register 7
 793 0006 0346     		mov	r3, r0
 794 0008 FB71     		strb	r3, [r7, #7]
 570:Generated_Source\PSoC5/RTC.c ****     /* Save minutes to the current time and date structure */
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 25


 571:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Min = minute;
 795              		.loc 1 571 0
 796 000a 044A     		ldr	r2, .L46
 797 000c FB79     		ldrb	r3, [r7, #7]
 798 000e 5370     		strb	r3, [r2, #1]
 572:Generated_Source\PSoC5/RTC.c **** }
 799              		.loc 1 572 0
 800 0010 00BF     		nop
 801 0012 0C37     		adds	r7, r7, #12
 802              		.cfi_def_cfa_offset 4
 803 0014 BD46     		mov	sp, r7
 804              		.cfi_def_cfa_register 13
 805              		@ sp needed
 806 0016 80BC     		pop	{r7}
 807              		.cfi_restore 7
 808              		.cfi_def_cfa_offset 0
 809 0018 7047     		bx	lr
 810              	.L47:
 811 001a 00BF     		.align	2
 812              	.L46:
 813 001c 00000000 		.word	RTC_currentTimeDate
 814              		.cfi_endproc
 815              	.LFE10:
 816              		.size	RTC_WriteMinute, .-RTC_WriteMinute
 817              		.section	.text.RTC_WriteHour,"ax",%progbits
 818              		.align	2
 819              		.global	RTC_WriteHour
 820              		.thumb
 821              		.thumb_func
 822              		.type	RTC_WriteHour, %function
 823              	RTC_WriteHour:
 824              	.LFB11:
 573:Generated_Source\PSoC5/RTC.c **** 
 574:Generated_Source\PSoC5/RTC.c **** 
 575:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 576:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteHour
 577:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 578:Generated_Source\PSoC5/RTC.c **** *
 579:Generated_Source\PSoC5/RTC.c **** * Summary:
 580:Generated_Source\PSoC5/RTC.c **** *  Writes Hour software register value.
 581:Generated_Source\PSoC5/RTC.c **** *
 582:Generated_Source\PSoC5/RTC.c **** * Parameters:
 583:Generated_Source\PSoC5/RTC.c **** *  hour: Hours value.
 584:Generated_Source\PSoC5/RTC.c **** *
 585:Generated_Source\PSoC5/RTC.c **** * Return:
 586:Generated_Source\PSoC5/RTC.c **** *  None.
 587:Generated_Source\PSoC5/RTC.c **** *
 588:Generated_Source\PSoC5/RTC.c **** * Global variables:
 589:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Hour: global structure's field where
 590:Generated_Source\PSoC5/RTC.c **** *  current hour's value is modified.
 591:Generated_Source\PSoC5/RTC.c **** *
 592:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 593:Generated_Source\PSoC5/RTC.c **** *  No.
 594:Generated_Source\PSoC5/RTC.c **** *
 595:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 596:Generated_Source\PSoC5/RTC.c **** void RTC_WriteHour(uint8 hour) 
 597:Generated_Source\PSoC5/RTC.c **** {
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 26


 825              		.loc 1 597 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 8
 828              		@ frame_needed = 1, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830 0000 80B4     		push	{r7}
 831              		.cfi_def_cfa_offset 4
 832              		.cfi_offset 7, -4
 833 0002 83B0     		sub	sp, sp, #12
 834              		.cfi_def_cfa_offset 16
 835 0004 00AF     		add	r7, sp, #0
 836              		.cfi_def_cfa_register 7
 837 0006 0346     		mov	r3, r0
 838 0008 FB71     		strb	r3, [r7, #7]
 598:Generated_Source\PSoC5/RTC.c ****     /* Save hours to the current time and date structure */
 599:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Hour = hour;
 839              		.loc 1 599 0
 840 000a 044A     		ldr	r2, .L49
 841 000c FB79     		ldrb	r3, [r7, #7]
 842 000e 9370     		strb	r3, [r2, #2]
 600:Generated_Source\PSoC5/RTC.c **** }
 843              		.loc 1 600 0
 844 0010 00BF     		nop
 845 0012 0C37     		adds	r7, r7, #12
 846              		.cfi_def_cfa_offset 4
 847 0014 BD46     		mov	sp, r7
 848              		.cfi_def_cfa_register 13
 849              		@ sp needed
 850 0016 80BC     		pop	{r7}
 851              		.cfi_restore 7
 852              		.cfi_def_cfa_offset 0
 853 0018 7047     		bx	lr
 854              	.L50:
 855 001a 00BF     		.align	2
 856              	.L49:
 857 001c 00000000 		.word	RTC_currentTimeDate
 858              		.cfi_endproc
 859              	.LFE11:
 860              		.size	RTC_WriteHour, .-RTC_WriteHour
 861              		.section	.text.RTC_WriteDayOfMonth,"ax",%progbits
 862              		.align	2
 863              		.global	RTC_WriteDayOfMonth
 864              		.thumb
 865              		.thumb_func
 866              		.type	RTC_WriteDayOfMonth, %function
 867              	RTC_WriteDayOfMonth:
 868              	.LFB12:
 601:Generated_Source\PSoC5/RTC.c **** 
 602:Generated_Source\PSoC5/RTC.c **** 
 603:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 604:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteDayOfMonth
 605:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 606:Generated_Source\PSoC5/RTC.c **** *
 607:Generated_Source\PSoC5/RTC.c **** * Summary:
 608:Generated_Source\PSoC5/RTC.c **** *  Writes DayOfMonth software register value.
 609:Generated_Source\PSoC5/RTC.c **** *
 610:Generated_Source\PSoC5/RTC.c **** * Parameters:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 27


 611:Generated_Source\PSoC5/RTC.c **** *  dayOfMonth: Day Of Month value.
 612:Generated_Source\PSoC5/RTC.c **** *
 613:Generated_Source\PSoC5/RTC.c **** * Return:
 614:Generated_Source\PSoC5/RTC.c **** *  None.
 615:Generated_Source\PSoC5/RTC.c **** *
 616:Generated_Source\PSoC5/RTC.c **** * Global variables:
 617:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.DayOfMonth: global structure's field where
 618:Generated_Source\PSoC5/RTC.c **** *  current day of month's value is modified.
 619:Generated_Source\PSoC5/RTC.c **** *
 620:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 621:Generated_Source\PSoC5/RTC.c **** *  No.
 622:Generated_Source\PSoC5/RTC.c **** *
 623:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 624:Generated_Source\PSoC5/RTC.c **** void RTC_WriteDayOfMonth(uint8 dayOfMonth) 
 625:Generated_Source\PSoC5/RTC.c **** {
 869              		.loc 1 625 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 8
 872              		@ frame_needed = 1, uses_anonymous_args = 0
 873              		@ link register save eliminated.
 874 0000 80B4     		push	{r7}
 875              		.cfi_def_cfa_offset 4
 876              		.cfi_offset 7, -4
 877 0002 83B0     		sub	sp, sp, #12
 878              		.cfi_def_cfa_offset 16
 879 0004 00AF     		add	r7, sp, #0
 880              		.cfi_def_cfa_register 7
 881 0006 0346     		mov	r3, r0
 882 0008 FB71     		strb	r3, [r7, #7]
 626:Generated_Source\PSoC5/RTC.c ****     /* Save day of month to the current time and date structure */
 627:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.DayOfMonth = dayOfMonth;
 883              		.loc 1 627 0
 884 000a 044A     		ldr	r2, .L52
 885 000c FB79     		ldrb	r3, [r7, #7]
 886 000e 1371     		strb	r3, [r2, #4]
 628:Generated_Source\PSoC5/RTC.c **** }
 887              		.loc 1 628 0
 888 0010 00BF     		nop
 889 0012 0C37     		adds	r7, r7, #12
 890              		.cfi_def_cfa_offset 4
 891 0014 BD46     		mov	sp, r7
 892              		.cfi_def_cfa_register 13
 893              		@ sp needed
 894 0016 80BC     		pop	{r7}
 895              		.cfi_restore 7
 896              		.cfi_def_cfa_offset 0
 897 0018 7047     		bx	lr
 898              	.L53:
 899 001a 00BF     		.align	2
 900              	.L52:
 901 001c 00000000 		.word	RTC_currentTimeDate
 902              		.cfi_endproc
 903              	.LFE12:
 904              		.size	RTC_WriteDayOfMonth, .-RTC_WriteDayOfMonth
 905              		.section	.text.RTC_WriteMonth,"ax",%progbits
 906              		.align	2
 907              		.global	RTC_WriteMonth
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 28


 908              		.thumb
 909              		.thumb_func
 910              		.type	RTC_WriteMonth, %function
 911              	RTC_WriteMonth:
 912              	.LFB13:
 629:Generated_Source\PSoC5/RTC.c **** 
 630:Generated_Source\PSoC5/RTC.c **** 
 631:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 632:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteMonth
 633:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 634:Generated_Source\PSoC5/RTC.c **** *
 635:Generated_Source\PSoC5/RTC.c **** * Summary:
 636:Generated_Source\PSoC5/RTC.c **** *  Writes Month software register value.
 637:Generated_Source\PSoC5/RTC.c **** *
 638:Generated_Source\PSoC5/RTC.c **** * Parameters:
 639:Generated_Source\PSoC5/RTC.c **** *  month: Month value.
 640:Generated_Source\PSoC5/RTC.c **** *
 641:Generated_Source\PSoC5/RTC.c **** * Return:
 642:Generated_Source\PSoC5/RTC.c **** *  None.
 643:Generated_Source\PSoC5/RTC.c **** *
 644:Generated_Source\PSoC5/RTC.c **** * Global variables:
 645:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Month: global structure's field where
 646:Generated_Source\PSoC5/RTC.c **** *  current day of month's value is modified.
 647:Generated_Source\PSoC5/RTC.c **** *
 648:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 649:Generated_Source\PSoC5/RTC.c **** *  No.
 650:Generated_Source\PSoC5/RTC.c **** *
 651:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 652:Generated_Source\PSoC5/RTC.c **** void RTC_WriteMonth(uint8 month) 
 653:Generated_Source\PSoC5/RTC.c **** {
 913              		.loc 1 653 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 8
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 918 0000 80B4     		push	{r7}
 919              		.cfi_def_cfa_offset 4
 920              		.cfi_offset 7, -4
 921 0002 83B0     		sub	sp, sp, #12
 922              		.cfi_def_cfa_offset 16
 923 0004 00AF     		add	r7, sp, #0
 924              		.cfi_def_cfa_register 7
 925 0006 0346     		mov	r3, r0
 926 0008 FB71     		strb	r3, [r7, #7]
 654:Generated_Source\PSoC5/RTC.c ****     /* Save months to the current time and date structure */
 655:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Month = month;
 927              		.loc 1 655 0
 928 000a 044A     		ldr	r2, .L55
 929 000c FB79     		ldrb	r3, [r7, #7]
 930 000e 1372     		strb	r3, [r2, #8]
 656:Generated_Source\PSoC5/RTC.c **** }
 931              		.loc 1 656 0
 932 0010 00BF     		nop
 933 0012 0C37     		adds	r7, r7, #12
 934              		.cfi_def_cfa_offset 4
 935 0014 BD46     		mov	sp, r7
 936              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 29


 937              		@ sp needed
 938 0016 80BC     		pop	{r7}
 939              		.cfi_restore 7
 940              		.cfi_def_cfa_offset 0
 941 0018 7047     		bx	lr
 942              	.L56:
 943 001a 00BF     		.align	2
 944              	.L55:
 945 001c 00000000 		.word	RTC_currentTimeDate
 946              		.cfi_endproc
 947              	.LFE13:
 948              		.size	RTC_WriteMonth, .-RTC_WriteMonth
 949              		.section	.text.RTC_WriteYear,"ax",%progbits
 950              		.align	2
 951              		.global	RTC_WriteYear
 952              		.thumb
 953              		.thumb_func
 954              		.type	RTC_WriteYear, %function
 955              	RTC_WriteYear:
 956              	.LFB14:
 657:Generated_Source\PSoC5/RTC.c **** 
 658:Generated_Source\PSoC5/RTC.c **** 
 659:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 660:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteYear
 661:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 662:Generated_Source\PSoC5/RTC.c **** *
 663:Generated_Source\PSoC5/RTC.c **** * Summary:
 664:Generated_Source\PSoC5/RTC.c **** *  Writes Year software register value.
 665:Generated_Source\PSoC5/RTC.c **** *
 666:Generated_Source\PSoC5/RTC.c **** * Parameters:
 667:Generated_Source\PSoC5/RTC.c **** *  year: Years value.
 668:Generated_Source\PSoC5/RTC.c **** *
 669:Generated_Source\PSoC5/RTC.c **** * Return:
 670:Generated_Source\PSoC5/RTC.c **** *  None.
 671:Generated_Source\PSoC5/RTC.c **** *
 672:Generated_Source\PSoC5/RTC.c **** * Global variables:
 673:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Year: global structure's field where
 674:Generated_Source\PSoC5/RTC.c **** *  current year's value is modified.
 675:Generated_Source\PSoC5/RTC.c **** *
 676:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 677:Generated_Source\PSoC5/RTC.c **** *  No.
 678:Generated_Source\PSoC5/RTC.c **** *
 679:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 680:Generated_Source\PSoC5/RTC.c **** void RTC_WriteYear(uint16 year) 
 681:Generated_Source\PSoC5/RTC.c **** {
 957              		.loc 1 681 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 8
 960              		@ frame_needed = 1, uses_anonymous_args = 0
 961              		@ link register save eliminated.
 962 0000 80B4     		push	{r7}
 963              		.cfi_def_cfa_offset 4
 964              		.cfi_offset 7, -4
 965 0002 83B0     		sub	sp, sp, #12
 966              		.cfi_def_cfa_offset 16
 967 0004 00AF     		add	r7, sp, #0
 968              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 30


 969 0006 0346     		mov	r3, r0
 970 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 682:Generated_Source\PSoC5/RTC.c ****     /* Save years to the current time and date structure */
 683:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.Year = year;
 971              		.loc 1 683 0
 972 000a 044A     		ldr	r2, .L58
 973 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 974 000e 5381     		strh	r3, [r2, #10]	@ movhi
 684:Generated_Source\PSoC5/RTC.c **** }
 975              		.loc 1 684 0
 976 0010 00BF     		nop
 977 0012 0C37     		adds	r7, r7, #12
 978              		.cfi_def_cfa_offset 4
 979 0014 BD46     		mov	sp, r7
 980              		.cfi_def_cfa_register 13
 981              		@ sp needed
 982 0016 80BC     		pop	{r7}
 983              		.cfi_restore 7
 984              		.cfi_def_cfa_offset 0
 985 0018 7047     		bx	lr
 986              	.L59:
 987 001a 00BF     		.align	2
 988              	.L58:
 989 001c 00000000 		.word	RTC_currentTimeDate
 990              		.cfi_endproc
 991              	.LFE14:
 992              		.size	RTC_WriteYear, .-RTC_WriteYear
 993              		.section	.text.RTC_WriteAlarmSecond,"ax",%progbits
 994              		.align	2
 995              		.global	RTC_WriteAlarmSecond
 996              		.thumb
 997              		.thumb_func
 998              		.type	RTC_WriteAlarmSecond, %function
 999              	RTC_WriteAlarmSecond:
 1000              	.LFB15:
 685:Generated_Source\PSoC5/RTC.c **** 
 686:Generated_Source\PSoC5/RTC.c **** 
 687:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 688:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmSecond
 689:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 690:Generated_Source\PSoC5/RTC.c **** *
 691:Generated_Source\PSoC5/RTC.c **** * Summary:
 692:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm Sec software register value.
 693:Generated_Source\PSoC5/RTC.c **** *
 694:Generated_Source\PSoC5/RTC.c **** * Parameters:
 695:Generated_Source\PSoC5/RTC.c **** *  second: Alarm Seconds value.
 696:Generated_Source\PSoC5/RTC.c **** *
 697:Generated_Source\PSoC5/RTC.c **** * Return:
 698:Generated_Source\PSoC5/RTC.c **** *  None.
 699:Generated_Source\PSoC5/RTC.c **** *
 700:Generated_Source\PSoC5/RTC.c **** * Global variables:
 701:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Sec: this global variable is used for
 702:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing seconds alarm status variable.
 703:Generated_Source\PSoC5/RTC.c **** *
 704:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Sec: this global variable is modified to
 705:Generated_Source\PSoC5/RTC.c **** *  store of the new seconds alarm.
 706:Generated_Source\PSoC5/RTC.c **** *
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 31


 707:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 708:Generated_Source\PSoC5/RTC.c **** *  second's alarm will be raised.
 709:Generated_Source\PSoC5/RTC.c **** *
 710:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 711:Generated_Source\PSoC5/RTC.c **** *  No.
 712:Generated_Source\PSoC5/RTC.c **** *
 713:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 714:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmSecond(uint8 second) 
 715:Generated_Source\PSoC5/RTC.c **** {
 1001              		.loc 1 715 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 8
 1004              		@ frame_needed = 1, uses_anonymous_args = 0
 1005              		@ link register save eliminated.
 1006 0000 80B4     		push	{r7}
 1007              		.cfi_def_cfa_offset 4
 1008              		.cfi_offset 7, -4
 1009 0002 83B0     		sub	sp, sp, #12
 1010              		.cfi_def_cfa_offset 16
 1011 0004 00AF     		add	r7, sp, #0
 1012              		.cfi_def_cfa_register 7
 1013 0006 0346     		mov	r3, r0
 1014 0008 FB71     		strb	r3, [r7, #7]
 716:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.Sec = second;
 1015              		.loc 1 716 0
 1016 000a 104A     		ldr	r2, .L64
 1017 000c FB79     		ldrb	r3, [r7, #7]
 1018 000e 1370     		strb	r3, [r2]
 717:Generated_Source\PSoC5/RTC.c **** 
 718:Generated_Source\PSoC5/RTC.c ****     /* Check second alarm */
 719:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 1019              		.loc 1 719 0
 1020 0010 0E4B     		ldr	r3, .L64
 1021 0012 1B78     		ldrb	r3, [r3]
 1022 0014 DAB2     		uxtb	r2, r3
 1023 0016 0E4B     		ldr	r3, .L64+4
 1024 0018 1B78     		ldrb	r3, [r3]
 1025 001a DBB2     		uxtb	r3, r3
 1026 001c 9A42     		cmp	r2, r3
 1027 001e 08D1     		bne	.L61
 720:Generated_Source\PSoC5/RTC.c ****     {
 721:Generated_Source\PSoC5/RTC.c ****         /* Set second alarm */
 722:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 1028              		.loc 1 722 0
 1029 0020 0C4B     		ldr	r3, .L64+8
 1030 0022 1B78     		ldrb	r3, [r3]
 1031 0024 DBB2     		uxtb	r3, r3
 1032 0026 43F00103 		orr	r3, r3, #1
 1033 002a DAB2     		uxtb	r2, r3
 1034 002c 094B     		ldr	r3, .L64+8
 1035 002e 1A70     		strb	r2, [r3]
 723:Generated_Source\PSoC5/RTC.c ****     }
 724:Generated_Source\PSoC5/RTC.c ****     else /* no second alarm */
 725:Generated_Source\PSoC5/RTC.c ****     {
 726:Generated_Source\PSoC5/RTC.c ****         /* Clear second alarm */
 727:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 728:Generated_Source\PSoC5/RTC.c ****     }
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 32


 729:Generated_Source\PSoC5/RTC.c **** }
 1036              		.loc 1 729 0
 1037 0030 07E0     		b	.L63
 1038              	.L61:
 727:Generated_Source\PSoC5/RTC.c ****     }
 1039              		.loc 1 727 0
 1040 0032 084B     		ldr	r3, .L64+8
 1041 0034 1B78     		ldrb	r3, [r3]
 1042 0036 DBB2     		uxtb	r3, r3
 1043 0038 23F00103 		bic	r3, r3, #1
 1044 003c DAB2     		uxtb	r2, r3
 1045 003e 054B     		ldr	r3, .L64+8
 1046 0040 1A70     		strb	r2, [r3]
 1047              	.L63:
 1048              		.loc 1 729 0
 1049 0042 00BF     		nop
 1050 0044 0C37     		adds	r7, r7, #12
 1051              		.cfi_def_cfa_offset 4
 1052 0046 BD46     		mov	sp, r7
 1053              		.cfi_def_cfa_register 13
 1054              		@ sp needed
 1055 0048 80BC     		pop	{r7}
 1056              		.cfi_restore 7
 1057              		.cfi_def_cfa_offset 0
 1058 004a 7047     		bx	lr
 1059              	.L65:
 1060              		.align	2
 1061              	.L64:
 1062 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1063 0050 00000000 		.word	RTC_currentTimeDate
 1064 0054 00000000 		.word	RTC_alarmCurStatus
 1065              		.cfi_endproc
 1066              	.LFE15:
 1067              		.size	RTC_WriteAlarmSecond, .-RTC_WriteAlarmSecond
 1068              		.section	.text.RTC_WriteAlarmMinute,"ax",%progbits
 1069              		.align	2
 1070              		.global	RTC_WriteAlarmMinute
 1071              		.thumb
 1072              		.thumb_func
 1073              		.type	RTC_WriteAlarmMinute, %function
 1074              	RTC_WriteAlarmMinute:
 1075              	.LFB16:
 730:Generated_Source\PSoC5/RTC.c **** 
 731:Generated_Source\PSoC5/RTC.c **** 
 732:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 733:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmMinute
 734:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 735:Generated_Source\PSoC5/RTC.c **** *
 736:Generated_Source\PSoC5/RTC.c **** * Summary:
 737:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm Min software register value.
 738:Generated_Source\PSoC5/RTC.c **** *
 739:Generated_Source\PSoC5/RTC.c **** * Parameters:
 740:Generated_Source\PSoC5/RTC.c **** *  minute: Alarm minutes value.
 741:Generated_Source\PSoC5/RTC.c **** *
 742:Generated_Source\PSoC5/RTC.c **** * Return:
 743:Generated_Source\PSoC5/RTC.c **** *  None.
 744:Generated_Source\PSoC5/RTC.c **** *
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 33


 745:Generated_Source\PSoC5/RTC.c **** * Global variables:
 746:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Min: this global variable is used for
 747:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing minutes alarm status variable.
 748:Generated_Source\PSoC5/RTC.c **** *
 749:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Min: this global variable is modified to
 750:Generated_Source\PSoC5/RTC.c **** *  store of the new minutes alarm.
 751:Generated_Source\PSoC5/RTC.c **** *
 752:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 753:Generated_Source\PSoC5/RTC.c **** *  minute's alarm will be raised.
 754:Generated_Source\PSoC5/RTC.c **** *
 755:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 756:Generated_Source\PSoC5/RTC.c **** *  No.
 757:Generated_Source\PSoC5/RTC.c **** *
 758:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 759:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmMinute(uint8 minute) 
 760:Generated_Source\PSoC5/RTC.c **** {
 1076              		.loc 1 760 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 8
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
 1081 0000 80B4     		push	{r7}
 1082              		.cfi_def_cfa_offset 4
 1083              		.cfi_offset 7, -4
 1084 0002 83B0     		sub	sp, sp, #12
 1085              		.cfi_def_cfa_offset 16
 1086 0004 00AF     		add	r7, sp, #0
 1087              		.cfi_def_cfa_register 7
 1088 0006 0346     		mov	r3, r0
 1089 0008 FB71     		strb	r3, [r7, #7]
 761:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.Min = minute;
 1090              		.loc 1 761 0
 1091 000a 104A     		ldr	r2, .L70
 1092 000c FB79     		ldrb	r3, [r7, #7]
 1093 000e 5370     		strb	r3, [r2, #1]
 762:Generated_Source\PSoC5/RTC.c **** 
 763:Generated_Source\PSoC5/RTC.c ****     /* Check minute alarm */
 764:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 1094              		.loc 1 764 0
 1095 0010 0E4B     		ldr	r3, .L70
 1096 0012 5B78     		ldrb	r3, [r3, #1]
 1097 0014 DAB2     		uxtb	r2, r3
 1098 0016 0E4B     		ldr	r3, .L70+4
 1099 0018 5B78     		ldrb	r3, [r3, #1]
 1100 001a DBB2     		uxtb	r3, r3
 1101 001c 9A42     		cmp	r2, r3
 1102 001e 08D1     		bne	.L67
 765:Generated_Source\PSoC5/RTC.c ****     {
 766:Generated_Source\PSoC5/RTC.c ****         /* Set minute alarm */
 767:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 1103              		.loc 1 767 0
 1104 0020 0C4B     		ldr	r3, .L70+8
 1105 0022 1B78     		ldrb	r3, [r3]
 1106 0024 DBB2     		uxtb	r3, r3
 1107 0026 43F00203 		orr	r3, r3, #2
 1108 002a DAB2     		uxtb	r2, r3
 1109 002c 094B     		ldr	r3, .L70+8
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 34


 1110 002e 1A70     		strb	r2, [r3]
 768:Generated_Source\PSoC5/RTC.c ****     }
 769:Generated_Source\PSoC5/RTC.c ****     else /* no minute alarm */
 770:Generated_Source\PSoC5/RTC.c ****     {
 771:Generated_Source\PSoC5/RTC.c ****         /* Clear minute alarm */
 772:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 773:Generated_Source\PSoC5/RTC.c ****     }
 774:Generated_Source\PSoC5/RTC.c **** }
 1111              		.loc 1 774 0
 1112 0030 07E0     		b	.L69
 1113              	.L67:
 772:Generated_Source\PSoC5/RTC.c ****     }
 1114              		.loc 1 772 0
 1115 0032 084B     		ldr	r3, .L70+8
 1116 0034 1B78     		ldrb	r3, [r3]
 1117 0036 DBB2     		uxtb	r3, r3
 1118 0038 23F00203 		bic	r3, r3, #2
 1119 003c DAB2     		uxtb	r2, r3
 1120 003e 054B     		ldr	r3, .L70+8
 1121 0040 1A70     		strb	r2, [r3]
 1122              	.L69:
 1123              		.loc 1 774 0
 1124 0042 00BF     		nop
 1125 0044 0C37     		adds	r7, r7, #12
 1126              		.cfi_def_cfa_offset 4
 1127 0046 BD46     		mov	sp, r7
 1128              		.cfi_def_cfa_register 13
 1129              		@ sp needed
 1130 0048 80BC     		pop	{r7}
 1131              		.cfi_restore 7
 1132              		.cfi_def_cfa_offset 0
 1133 004a 7047     		bx	lr
 1134              	.L71:
 1135              		.align	2
 1136              	.L70:
 1137 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1138 0050 00000000 		.word	RTC_currentTimeDate
 1139 0054 00000000 		.word	RTC_alarmCurStatus
 1140              		.cfi_endproc
 1141              	.LFE16:
 1142              		.size	RTC_WriteAlarmMinute, .-RTC_WriteAlarmMinute
 1143              		.section	.text.RTC_WriteAlarmHour,"ax",%progbits
 1144              		.align	2
 1145              		.global	RTC_WriteAlarmHour
 1146              		.thumb
 1147              		.thumb_func
 1148              		.type	RTC_WriteAlarmHour, %function
 1149              	RTC_WriteAlarmHour:
 1150              	.LFB17:
 775:Generated_Source\PSoC5/RTC.c **** 
 776:Generated_Source\PSoC5/RTC.c **** 
 777:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 778:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmHour
 779:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 780:Generated_Source\PSoC5/RTC.c **** *
 781:Generated_Source\PSoC5/RTC.c **** * Summary:
 782:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm Hour software register value.
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 35


 783:Generated_Source\PSoC5/RTC.c **** *
 784:Generated_Source\PSoC5/RTC.c **** * Parameters:
 785:Generated_Source\PSoC5/RTC.c **** *  hour: Alarm hours value.
 786:Generated_Source\PSoC5/RTC.c **** *
 787:Generated_Source\PSoC5/RTC.c **** * Return:
 788:Generated_Source\PSoC5/RTC.c **** *  None.
 789:Generated_Source\PSoC5/RTC.c **** *
 790:Generated_Source\PSoC5/RTC.c **** * Global variables:
 791:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Hour: this global variable is used for
 792:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing hours alarm status variable.
 793:Generated_Source\PSoC5/RTC.c **** *
 794:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Hour: this global variable is modified to
 795:Generated_Source\PSoC5/RTC.c **** *  store of the new hours alarm.
 796:Generated_Source\PSoC5/RTC.c **** *
 797:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 798:Generated_Source\PSoC5/RTC.c **** *  hours alarm will be raised.
 799:Generated_Source\PSoC5/RTC.c **** *
 800:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 801:Generated_Source\PSoC5/RTC.c **** *  No.
 802:Generated_Source\PSoC5/RTC.c **** *
 803:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 804:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmHour(uint8 hour) 
 805:Generated_Source\PSoC5/RTC.c **** {
 1151              		.loc 1 805 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 8
 1154              		@ frame_needed = 1, uses_anonymous_args = 0
 1155              		@ link register save eliminated.
 1156 0000 80B4     		push	{r7}
 1157              		.cfi_def_cfa_offset 4
 1158              		.cfi_offset 7, -4
 1159 0002 83B0     		sub	sp, sp, #12
 1160              		.cfi_def_cfa_offset 16
 1161 0004 00AF     		add	r7, sp, #0
 1162              		.cfi_def_cfa_register 7
 1163 0006 0346     		mov	r3, r0
 1164 0008 FB71     		strb	r3, [r7, #7]
 806:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.Hour = hour;
 1165              		.loc 1 806 0
 1166 000a 104A     		ldr	r2, .L76
 1167 000c FB79     		ldrb	r3, [r7, #7]
 1168 000e 9370     		strb	r3, [r2, #2]
 807:Generated_Source\PSoC5/RTC.c **** 
 808:Generated_Source\PSoC5/RTC.c ****     /* Check hour alarm */
 809:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 1169              		.loc 1 809 0
 1170 0010 0E4B     		ldr	r3, .L76
 1171 0012 9B78     		ldrb	r3, [r3, #2]
 1172 0014 DAB2     		uxtb	r2, r3
 1173 0016 0E4B     		ldr	r3, .L76+4
 1174 0018 9B78     		ldrb	r3, [r3, #2]
 1175 001a DBB2     		uxtb	r3, r3
 1176 001c 9A42     		cmp	r2, r3
 1177 001e 08D1     		bne	.L73
 810:Generated_Source\PSoC5/RTC.c ****     {
 811:Generated_Source\PSoC5/RTC.c ****         /* Set hour alarm */
 812:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 36


 1178              		.loc 1 812 0
 1179 0020 0C4B     		ldr	r3, .L76+8
 1180 0022 1B78     		ldrb	r3, [r3]
 1181 0024 DBB2     		uxtb	r3, r3
 1182 0026 43F00403 		orr	r3, r3, #4
 1183 002a DAB2     		uxtb	r2, r3
 1184 002c 094B     		ldr	r3, .L76+8
 1185 002e 1A70     		strb	r2, [r3]
 813:Generated_Source\PSoC5/RTC.c ****     }
 814:Generated_Source\PSoC5/RTC.c ****     else /* no hour alarm */
 815:Generated_Source\PSoC5/RTC.c ****     {
 816:Generated_Source\PSoC5/RTC.c ****         /* Clear hour alarm */
 817:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 818:Generated_Source\PSoC5/RTC.c ****     }
 819:Generated_Source\PSoC5/RTC.c **** }
 1186              		.loc 1 819 0
 1187 0030 07E0     		b	.L75
 1188              	.L73:
 817:Generated_Source\PSoC5/RTC.c ****     }
 1189              		.loc 1 817 0
 1190 0032 084B     		ldr	r3, .L76+8
 1191 0034 1B78     		ldrb	r3, [r3]
 1192 0036 DBB2     		uxtb	r3, r3
 1193 0038 23F00403 		bic	r3, r3, #4
 1194 003c DAB2     		uxtb	r2, r3
 1195 003e 054B     		ldr	r3, .L76+8
 1196 0040 1A70     		strb	r2, [r3]
 1197              	.L75:
 1198              		.loc 1 819 0
 1199 0042 00BF     		nop
 1200 0044 0C37     		adds	r7, r7, #12
 1201              		.cfi_def_cfa_offset 4
 1202 0046 BD46     		mov	sp, r7
 1203              		.cfi_def_cfa_register 13
 1204              		@ sp needed
 1205 0048 80BC     		pop	{r7}
 1206              		.cfi_restore 7
 1207              		.cfi_def_cfa_offset 0
 1208 004a 7047     		bx	lr
 1209              	.L77:
 1210              		.align	2
 1211              	.L76:
 1212 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1213 0050 00000000 		.word	RTC_currentTimeDate
 1214 0054 00000000 		.word	RTC_alarmCurStatus
 1215              		.cfi_endproc
 1216              	.LFE17:
 1217              		.size	RTC_WriteAlarmHour, .-RTC_WriteAlarmHour
 1218              		.section	.text.RTC_WriteAlarmDayOfMonth,"ax",%progbits
 1219              		.align	2
 1220              		.global	RTC_WriteAlarmDayOfMonth
 1221              		.thumb
 1222              		.thumb_func
 1223              		.type	RTC_WriteAlarmDayOfMonth, %function
 1224              	RTC_WriteAlarmDayOfMonth:
 1225              	.LFB18:
 820:Generated_Source\PSoC5/RTC.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 37


 821:Generated_Source\PSoC5/RTC.c **** 
 822:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 823:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmDayOfMonth
 824:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 825:Generated_Source\PSoC5/RTC.c **** *
 826:Generated_Source\PSoC5/RTC.c **** * Summary:
 827:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm DayOfMonth software register value.
 828:Generated_Source\PSoC5/RTC.c **** *
 829:Generated_Source\PSoC5/RTC.c **** * Parameters:
 830:Generated_Source\PSoC5/RTC.c **** *  dayOfMonth: Alarm day of month value.
 831:Generated_Source\PSoC5/RTC.c **** *
 832:Generated_Source\PSoC5/RTC.c **** * Return:
 833:Generated_Source\PSoC5/RTC.c **** *  None.
 834:Generated_Source\PSoC5/RTC.c **** *
 835:Generated_Source\PSoC5/RTC.c **** * Global variables:
 836:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.DayOfMonth: this global variable is used for
 837:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing day of month alarm status variable.
 838:Generated_Source\PSoC5/RTC.c **** *
 839:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfMonth: this global variable is
 840:Generated_Source\PSoC5/RTC.c **** *  modified to store of the new day of month alarm.
 841:Generated_Source\PSoC5/RTC.c **** *
 842:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 843:Generated_Source\PSoC5/RTC.c **** *  day of month alarm will be raised.
 844:Generated_Source\PSoC5/RTC.c **** *
 845:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 846:Generated_Source\PSoC5/RTC.c **** *  No.
 847:Generated_Source\PSoC5/RTC.c **** *
 848:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmDayOfMonth(uint8 dayOfMonth) 
 850:Generated_Source\PSoC5/RTC.c **** {
 1226              		.loc 1 850 0
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 8
 1229              		@ frame_needed = 1, uses_anonymous_args = 0
 1230              		@ link register save eliminated.
 1231 0000 80B4     		push	{r7}
 1232              		.cfi_def_cfa_offset 4
 1233              		.cfi_offset 7, -4
 1234 0002 83B0     		sub	sp, sp, #12
 1235              		.cfi_def_cfa_offset 16
 1236 0004 00AF     		add	r7, sp, #0
 1237              		.cfi_def_cfa_register 7
 1238 0006 0346     		mov	r3, r0
 1239 0008 FB71     		strb	r3, [r7, #7]
 851:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.DayOfMonth = dayOfMonth;
 1240              		.loc 1 851 0
 1241 000a 104A     		ldr	r2, .L82
 1242 000c FB79     		ldrb	r3, [r7, #7]
 1243 000e 1371     		strb	r3, [r2, #4]
 852:Generated_Source\PSoC5/RTC.c **** 
 853:Generated_Source\PSoC5/RTC.c ****     /* Check day of month alarm */
 854:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 1244              		.loc 1 854 0
 1245 0010 0E4B     		ldr	r3, .L82
 1246 0012 1B79     		ldrb	r3, [r3, #4]
 1247 0014 DAB2     		uxtb	r2, r3
 1248 0016 0E4B     		ldr	r3, .L82+4
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 38


 1249 0018 1B79     		ldrb	r3, [r3, #4]
 1250 001a DBB2     		uxtb	r3, r3
 1251 001c 9A42     		cmp	r2, r3
 1252 001e 08D1     		bne	.L79
 855:Generated_Source\PSoC5/RTC.c ****     {
 856:Generated_Source\PSoC5/RTC.c ****         /* Set day of month alarm */
 857:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 1253              		.loc 1 857 0
 1254 0020 0C4B     		ldr	r3, .L82+8
 1255 0022 1B78     		ldrb	r3, [r3]
 1256 0024 DBB2     		uxtb	r3, r3
 1257 0026 43F01003 		orr	r3, r3, #16
 1258 002a DAB2     		uxtb	r2, r3
 1259 002c 094B     		ldr	r3, .L82+8
 1260 002e 1A70     		strb	r2, [r3]
 858:Generated_Source\PSoC5/RTC.c ****     }
 859:Generated_Source\PSoC5/RTC.c ****     else /* no day of month alarm */
 860:Generated_Source\PSoC5/RTC.c ****     {
 861:Generated_Source\PSoC5/RTC.c ****         /* Clear day of month alarm */
 862:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 863:Generated_Source\PSoC5/RTC.c ****     }
 864:Generated_Source\PSoC5/RTC.c **** }
 1261              		.loc 1 864 0
 1262 0030 07E0     		b	.L81
 1263              	.L79:
 862:Generated_Source\PSoC5/RTC.c ****     }
 1264              		.loc 1 862 0
 1265 0032 084B     		ldr	r3, .L82+8
 1266 0034 1B78     		ldrb	r3, [r3]
 1267 0036 DBB2     		uxtb	r3, r3
 1268 0038 23F01003 		bic	r3, r3, #16
 1269 003c DAB2     		uxtb	r2, r3
 1270 003e 054B     		ldr	r3, .L82+8
 1271 0040 1A70     		strb	r2, [r3]
 1272              	.L81:
 1273              		.loc 1 864 0
 1274 0042 00BF     		nop
 1275 0044 0C37     		adds	r7, r7, #12
 1276              		.cfi_def_cfa_offset 4
 1277 0046 BD46     		mov	sp, r7
 1278              		.cfi_def_cfa_register 13
 1279              		@ sp needed
 1280 0048 80BC     		pop	{r7}
 1281              		.cfi_restore 7
 1282              		.cfi_def_cfa_offset 0
 1283 004a 7047     		bx	lr
 1284              	.L83:
 1285              		.align	2
 1286              	.L82:
 1287 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1288 0050 00000000 		.word	RTC_currentTimeDate
 1289 0054 00000000 		.word	RTC_alarmCurStatus
 1290              		.cfi_endproc
 1291              	.LFE18:
 1292              		.size	RTC_WriteAlarmDayOfMonth, .-RTC_WriteAlarmDayOfMonth
 1293              		.section	.text.RTC_WriteAlarmMonth,"ax",%progbits
 1294              		.align	2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 39


 1295              		.global	RTC_WriteAlarmMonth
 1296              		.thumb
 1297              		.thumb_func
 1298              		.type	RTC_WriteAlarmMonth, %function
 1299              	RTC_WriteAlarmMonth:
 1300              	.LFB19:
 865:Generated_Source\PSoC5/RTC.c **** 
 866:Generated_Source\PSoC5/RTC.c **** 
 867:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 868:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmMonth
 869:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 870:Generated_Source\PSoC5/RTC.c **** *
 871:Generated_Source\PSoC5/RTC.c **** * Summary:
 872:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm Month software register value.
 873:Generated_Source\PSoC5/RTC.c **** *
 874:Generated_Source\PSoC5/RTC.c **** * Parameters:
 875:Generated_Source\PSoC5/RTC.c **** *  month: Alarm month value.
 876:Generated_Source\PSoC5/RTC.c **** *
 877:Generated_Source\PSoC5/RTC.c **** * Return:
 878:Generated_Source\PSoC5/RTC.c **** *  None.
 879:Generated_Source\PSoC5/RTC.c **** *
 880:Generated_Source\PSoC5/RTC.c **** * Global variables:
 881:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Month: this global variable is used for
 882:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing month alarm status variable.
 883:Generated_Source\PSoC5/RTC.c **** *
 884:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Month: this global variable is modified
 885:Generated_Source\PSoC5/RTC.c **** *  to store of the new month alarm.
 886:Generated_Source\PSoC5/RTC.c **** *
 887:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 888:Generated_Source\PSoC5/RTC.c **** *  month alarm will be raised.
 889:Generated_Source\PSoC5/RTC.c **** *
 890:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 891:Generated_Source\PSoC5/RTC.c **** *  No.
 892:Generated_Source\PSoC5/RTC.c **** *
 893:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 894:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmMonth(uint8 month) 
 895:Generated_Source\PSoC5/RTC.c **** {
 1301              		.loc 1 895 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 8
 1304              		@ frame_needed = 1, uses_anonymous_args = 0
 1305              		@ link register save eliminated.
 1306 0000 80B4     		push	{r7}
 1307              		.cfi_def_cfa_offset 4
 1308              		.cfi_offset 7, -4
 1309 0002 83B0     		sub	sp, sp, #12
 1310              		.cfi_def_cfa_offset 16
 1311 0004 00AF     		add	r7, sp, #0
 1312              		.cfi_def_cfa_register 7
 1313 0006 0346     		mov	r3, r0
 1314 0008 FB71     		strb	r3, [r7, #7]
 896:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.Month = month;
 1315              		.loc 1 896 0
 1316 000a 104A     		ldr	r2, .L88
 1317 000c FB79     		ldrb	r3, [r7, #7]
 1318 000e 1372     		strb	r3, [r2, #8]
 897:Generated_Source\PSoC5/RTC.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 40


 898:Generated_Source\PSoC5/RTC.c ****     /* Check month alarm */
 899:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 1319              		.loc 1 899 0
 1320 0010 0E4B     		ldr	r3, .L88
 1321 0012 1B7A     		ldrb	r3, [r3, #8]
 1322 0014 DAB2     		uxtb	r2, r3
 1323 0016 0E4B     		ldr	r3, .L88+4
 1324 0018 1B7A     		ldrb	r3, [r3, #8]
 1325 001a DBB2     		uxtb	r3, r3
 1326 001c 9A42     		cmp	r2, r3
 1327 001e 08D1     		bne	.L85
 900:Generated_Source\PSoC5/RTC.c ****     {
 901:Generated_Source\PSoC5/RTC.c ****         /* Set month alarm */
 902:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 1328              		.loc 1 902 0
 1329 0020 0C4B     		ldr	r3, .L88+8
 1330 0022 1B78     		ldrb	r3, [r3]
 1331 0024 DBB2     		uxtb	r3, r3
 1332 0026 43F04003 		orr	r3, r3, #64
 1333 002a DAB2     		uxtb	r2, r3
 1334 002c 094B     		ldr	r3, .L88+8
 1335 002e 1A70     		strb	r2, [r3]
 903:Generated_Source\PSoC5/RTC.c ****     }
 904:Generated_Source\PSoC5/RTC.c ****     else /* no month alarm */
 905:Generated_Source\PSoC5/RTC.c ****     {
 906:Generated_Source\PSoC5/RTC.c ****         /* Clear month alarm */
 907:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 908:Generated_Source\PSoC5/RTC.c ****     }
 909:Generated_Source\PSoC5/RTC.c **** }
 1336              		.loc 1 909 0
 1337 0030 07E0     		b	.L87
 1338              	.L85:
 907:Generated_Source\PSoC5/RTC.c ****     }
 1339              		.loc 1 907 0
 1340 0032 084B     		ldr	r3, .L88+8
 1341 0034 1B78     		ldrb	r3, [r3]
 1342 0036 DBB2     		uxtb	r3, r3
 1343 0038 23F04003 		bic	r3, r3, #64
 1344 003c DAB2     		uxtb	r2, r3
 1345 003e 054B     		ldr	r3, .L88+8
 1346 0040 1A70     		strb	r2, [r3]
 1347              	.L87:
 1348              		.loc 1 909 0
 1349 0042 00BF     		nop
 1350 0044 0C37     		adds	r7, r7, #12
 1351              		.cfi_def_cfa_offset 4
 1352 0046 BD46     		mov	sp, r7
 1353              		.cfi_def_cfa_register 13
 1354              		@ sp needed
 1355 0048 80BC     		pop	{r7}
 1356              		.cfi_restore 7
 1357              		.cfi_def_cfa_offset 0
 1358 004a 7047     		bx	lr
 1359              	.L89:
 1360              		.align	2
 1361              	.L88:
 1362 004c 00000000 		.word	RTC_alarmCfgTimeDate
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 41


 1363 0050 00000000 		.word	RTC_currentTimeDate
 1364 0054 00000000 		.word	RTC_alarmCurStatus
 1365              		.cfi_endproc
 1366              	.LFE19:
 1367              		.size	RTC_WriteAlarmMonth, .-RTC_WriteAlarmMonth
 1368              		.section	.text.RTC_WriteAlarmYear,"ax",%progbits
 1369              		.align	2
 1370              		.global	RTC_WriteAlarmYear
 1371              		.thumb
 1372              		.thumb_func
 1373              		.type	RTC_WriteAlarmYear, %function
 1374              	RTC_WriteAlarmYear:
 1375              	.LFB20:
 910:Generated_Source\PSoC5/RTC.c **** 
 911:Generated_Source\PSoC5/RTC.c **** 
 912:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmYear
 914:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 915:Generated_Source\PSoC5/RTC.c **** *
 916:Generated_Source\PSoC5/RTC.c **** * Summary:
 917:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm Year software register value.
 918:Generated_Source\PSoC5/RTC.c **** *
 919:Generated_Source\PSoC5/RTC.c **** * Parameters:
 920:Generated_Source\PSoC5/RTC.c **** *  year: Alarm year value.
 921:Generated_Source\PSoC5/RTC.c **** *
 922:Generated_Source\PSoC5/RTC.c **** * Return:
 923:Generated_Source\PSoC5/RTC.c **** *  None.
 924:Generated_Source\PSoC5/RTC.c **** *
 925:Generated_Source\PSoC5/RTC.c **** * Global variables:
 926:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Year: this global variable is used for
 927:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing year alarm status variable.
 928:Generated_Source\PSoC5/RTC.c **** *
 929:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Year: this global variable is modified
 930:Generated_Source\PSoC5/RTC.c **** *  to store of the new year alarm.
 931:Generated_Source\PSoC5/RTC.c **** *
 932:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 933:Generated_Source\PSoC5/RTC.c **** *  year alarm will be raised.
 934:Generated_Source\PSoC5/RTC.c **** *
 935:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 936:Generated_Source\PSoC5/RTC.c **** *  No.
 937:Generated_Source\PSoC5/RTC.c **** *
 938:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 939:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmYear(uint16 year) 
 940:Generated_Source\PSoC5/RTC.c **** {
 1376              		.loc 1 940 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 8
 1379              		@ frame_needed = 1, uses_anonymous_args = 0
 1380              		@ link register save eliminated.
 1381 0000 80B4     		push	{r7}
 1382              		.cfi_def_cfa_offset 4
 1383              		.cfi_offset 7, -4
 1384 0002 83B0     		sub	sp, sp, #12
 1385              		.cfi_def_cfa_offset 16
 1386 0004 00AF     		add	r7, sp, #0
 1387              		.cfi_def_cfa_register 7
 1388 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 42


 1389 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 941:Generated_Source\PSoC5/RTC.c ****    RTC_alarmCfgTimeDate.Year = year;
 1390              		.loc 1 941 0
 1391 000a 104A     		ldr	r2, .L94
 1392 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 1393 000e 5381     		strh	r3, [r2, #10]	@ movhi
 942:Generated_Source\PSoC5/RTC.c **** 
 943:Generated_Source\PSoC5/RTC.c ****     /* Check year alarm */
 944:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 1394              		.loc 1 944 0
 1395 0010 0E4B     		ldr	r3, .L94
 1396 0012 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1397 0014 9AB2     		uxth	r2, r3
 1398 0016 0E4B     		ldr	r3, .L94+4
 1399 0018 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1400 001a 9BB2     		uxth	r3, r3
 1401 001c 9A42     		cmp	r2, r3
 1402 001e 08D1     		bne	.L91
 945:Generated_Source\PSoC5/RTC.c ****     {
 946:Generated_Source\PSoC5/RTC.c ****         /* Set year alarm */
 947:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 1403              		.loc 1 947 0
 1404 0020 0C4B     		ldr	r3, .L94+8
 1405 0022 1B78     		ldrb	r3, [r3]
 1406 0024 DBB2     		uxtb	r3, r3
 1407 0026 63F07F03 		orn	r3, r3, #127
 1408 002a DAB2     		uxtb	r2, r3
 1409 002c 094B     		ldr	r3, .L94+8
 1410 002e 1A70     		strb	r2, [r3]
 948:Generated_Source\PSoC5/RTC.c ****     }
 949:Generated_Source\PSoC5/RTC.c ****     else /* no year alarm */
 950:Generated_Source\PSoC5/RTC.c ****     {
 951:Generated_Source\PSoC5/RTC.c ****         /* Set year alarm */
 952:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 953:Generated_Source\PSoC5/RTC.c ****     }
 954:Generated_Source\PSoC5/RTC.c **** }
 1411              		.loc 1 954 0
 1412 0030 07E0     		b	.L93
 1413              	.L91:
 952:Generated_Source\PSoC5/RTC.c ****     }
 1414              		.loc 1 952 0
 1415 0032 084B     		ldr	r3, .L94+8
 1416 0034 1B78     		ldrb	r3, [r3]
 1417 0036 DBB2     		uxtb	r3, r3
 1418 0038 03F07F03 		and	r3, r3, #127
 1419 003c DAB2     		uxtb	r2, r3
 1420 003e 054B     		ldr	r3, .L94+8
 1421 0040 1A70     		strb	r2, [r3]
 1422              	.L93:
 1423              		.loc 1 954 0
 1424 0042 00BF     		nop
 1425 0044 0C37     		adds	r7, r7, #12
 1426              		.cfi_def_cfa_offset 4
 1427 0046 BD46     		mov	sp, r7
 1428              		.cfi_def_cfa_register 13
 1429              		@ sp needed
 1430 0048 80BC     		pop	{r7}
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 43


 1431              		.cfi_restore 7
 1432              		.cfi_def_cfa_offset 0
 1433 004a 7047     		bx	lr
 1434              	.L95:
 1435              		.align	2
 1436              	.L94:
 1437 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1438 0050 00000000 		.word	RTC_currentTimeDate
 1439 0054 00000000 		.word	RTC_alarmCurStatus
 1440              		.cfi_endproc
 1441              	.LFE20:
 1442              		.size	RTC_WriteAlarmYear, .-RTC_WriteAlarmYear
 1443              		.section	.text.RTC_WriteAlarmDayOfWeek,"ax",%progbits
 1444              		.align	2
 1445              		.global	RTC_WriteAlarmDayOfWeek
 1446              		.thumb
 1447              		.thumb_func
 1448              		.type	RTC_WriteAlarmDayOfWeek, %function
 1449              	RTC_WriteAlarmDayOfWeek:
 1450              	.LFB21:
 955:Generated_Source\PSoC5/RTC.c **** 
 956:Generated_Source\PSoC5/RTC.c **** 
 957:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
 958:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmDayOfWeek
 959:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
 960:Generated_Source\PSoC5/RTC.c **** *
 961:Generated_Source\PSoC5/RTC.c **** * Summary:
 962:Generated_Source\PSoC5/RTC.c **** *   Writes Alarm DayOfWeek software register value.
 963:Generated_Source\PSoC5/RTC.c **** *   Days values {Sun = 1, Mon = 2, Tue = 3, Wen = 4, Thu = 5, Fri = 6, Sat = 7}
 964:Generated_Source\PSoC5/RTC.c **** *
 965:Generated_Source\PSoC5/RTC.c **** * Parameters:
 966:Generated_Source\PSoC5/RTC.c **** *  dayOfWeek: Alarm day of week value.
 967:Generated_Source\PSoC5/RTC.c **** *
 968:Generated_Source\PSoC5/RTC.c **** * Return:
 969:Generated_Source\PSoC5/RTC.c **** *  None.
 970:Generated_Source\PSoC5/RTC.c **** *
 971:Generated_Source\PSoC5/RTC.c **** * Global variables:
 972:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.DayOfWeek: this global variable is used for
 973:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing day of week alarm status variable.
 974:Generated_Source\PSoC5/RTC.c **** *
 975:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfWeek: this global variable is modified
 976:Generated_Source\PSoC5/RTC.c **** *  to store of the new day of week alarm.
 977:Generated_Source\PSoC5/RTC.c **** *
 978:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
 979:Generated_Source\PSoC5/RTC.c **** *  day of week alarm will be raised.
 980:Generated_Source\PSoC5/RTC.c **** *
 981:Generated_Source\PSoC5/RTC.c **** * Reentrant:
 982:Generated_Source\PSoC5/RTC.c **** *  No.
 983:Generated_Source\PSoC5/RTC.c **** *
 984:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
 985:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmDayOfWeek(uint8 dayOfWeek) 
 986:Generated_Source\PSoC5/RTC.c **** {
 1451              		.loc 1 986 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 8
 1454              		@ frame_needed = 1, uses_anonymous_args = 0
 1455              		@ link register save eliminated.
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 44


 1456 0000 80B4     		push	{r7}
 1457              		.cfi_def_cfa_offset 4
 1458              		.cfi_offset 7, -4
 1459 0002 83B0     		sub	sp, sp, #12
 1460              		.cfi_def_cfa_offset 16
 1461 0004 00AF     		add	r7, sp, #0
 1462              		.cfi_def_cfa_register 7
 1463 0006 0346     		mov	r3, r0
 1464 0008 FB71     		strb	r3, [r7, #7]
 987:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgTimeDate.DayOfWeek = dayOfWeek;
 1465              		.loc 1 987 0
 1466 000a 104A     		ldr	r2, .L100
 1467 000c FB79     		ldrb	r3, [r7, #7]
 1468 000e D370     		strb	r3, [r2, #3]
 988:Generated_Source\PSoC5/RTC.c **** 
 989:Generated_Source\PSoC5/RTC.c ****     /* Check day of week alarm */
 990:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 1469              		.loc 1 990 0
 1470 0010 0E4B     		ldr	r3, .L100
 1471 0012 DB78     		ldrb	r3, [r3, #3]
 1472 0014 DAB2     		uxtb	r2, r3
 1473 0016 0E4B     		ldr	r3, .L100+4
 1474 0018 DB78     		ldrb	r3, [r3, #3]
 1475 001a DBB2     		uxtb	r3, r3
 1476 001c 9A42     		cmp	r2, r3
 1477 001e 08D1     		bne	.L97
 991:Generated_Source\PSoC5/RTC.c ****     {
 992:Generated_Source\PSoC5/RTC.c ****         /* Set day of week alarm */
 993:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 1478              		.loc 1 993 0
 1479 0020 0C4B     		ldr	r3, .L100+8
 1480 0022 1B78     		ldrb	r3, [r3]
 1481 0024 DBB2     		uxtb	r3, r3
 1482 0026 43F00803 		orr	r3, r3, #8
 1483 002a DAB2     		uxtb	r2, r3
 1484 002c 094B     		ldr	r3, .L100+8
 1485 002e 1A70     		strb	r2, [r3]
 994:Generated_Source\PSoC5/RTC.c ****     }
 995:Generated_Source\PSoC5/RTC.c ****     else /* no day of week alarm */
 996:Generated_Source\PSoC5/RTC.c ****     {
 997:Generated_Source\PSoC5/RTC.c ****         /* Set day of week alarm */
 998:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 999:Generated_Source\PSoC5/RTC.c ****     }
1000:Generated_Source\PSoC5/RTC.c **** }
 1486              		.loc 1 1000 0
 1487 0030 07E0     		b	.L99
 1488              	.L97:
 998:Generated_Source\PSoC5/RTC.c ****     }
 1489              		.loc 1 998 0
 1490 0032 084B     		ldr	r3, .L100+8
 1491 0034 1B78     		ldrb	r3, [r3]
 1492 0036 DBB2     		uxtb	r3, r3
 1493 0038 23F00803 		bic	r3, r3, #8
 1494 003c DAB2     		uxtb	r2, r3
 1495 003e 054B     		ldr	r3, .L100+8
 1496 0040 1A70     		strb	r2, [r3]
 1497              	.L99:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 45


 1498              		.loc 1 1000 0
 1499 0042 00BF     		nop
 1500 0044 0C37     		adds	r7, r7, #12
 1501              		.cfi_def_cfa_offset 4
 1502 0046 BD46     		mov	sp, r7
 1503              		.cfi_def_cfa_register 13
 1504              		@ sp needed
 1505 0048 80BC     		pop	{r7}
 1506              		.cfi_restore 7
 1507              		.cfi_def_cfa_offset 0
 1508 004a 7047     		bx	lr
 1509              	.L101:
 1510              		.align	2
 1511              	.L100:
 1512 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1513 0050 00000000 		.word	RTC_currentTimeDate
 1514 0054 00000000 		.word	RTC_alarmCurStatus
 1515              		.cfi_endproc
 1516              	.LFE21:
 1517              		.size	RTC_WriteAlarmDayOfWeek, .-RTC_WriteAlarmDayOfWeek
 1518              		.section	.text.RTC_WriteAlarmDayOfYear,"ax",%progbits
 1519              		.align	2
 1520              		.global	RTC_WriteAlarmDayOfYear
 1521              		.thumb
 1522              		.thumb_func
 1523              		.type	RTC_WriteAlarmDayOfYear, %function
 1524              	RTC_WriteAlarmDayOfYear:
 1525              	.LFB22:
1001:Generated_Source\PSoC5/RTC.c **** 
1002:Generated_Source\PSoC5/RTC.c **** 
1003:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1004:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmDayOfYear
1005:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1006:Generated_Source\PSoC5/RTC.c **** *
1007:Generated_Source\PSoC5/RTC.c **** * Summary:
1008:Generated_Source\PSoC5/RTC.c **** *  Writes Alarm DayOfYear software register value.
1009:Generated_Source\PSoC5/RTC.c **** *
1010:Generated_Source\PSoC5/RTC.c **** * Parameters:
1011:Generated_Source\PSoC5/RTC.c **** *  dayOfYear: Alarm day of year value.
1012:Generated_Source\PSoC5/RTC.c **** *
1013:Generated_Source\PSoC5/RTC.c **** * Return:
1014:Generated_Source\PSoC5/RTC.c **** *  None.
1015:Generated_Source\PSoC5/RTC.c **** *
1016:Generated_Source\PSoC5/RTC.c **** * Global variables:
1017:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.DayOfYear: this global variable is used for
1018:Generated_Source\PSoC5/RTC.c **** *  comparison while setting and clearing day of year alarm status variable.
1019:Generated_Source\PSoC5/RTC.c **** *
1020:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfYear: this global variable is modified
1021:Generated_Source\PSoC5/RTC.c **** *  to store of the new day of year alarm.
1022:Generated_Source\PSoC5/RTC.c **** *
1023:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: this global variable could be changed if
1024:Generated_Source\PSoC5/RTC.c **** *  day of year alarm will be raised.
1025:Generated_Source\PSoC5/RTC.c **** *
1026:Generated_Source\PSoC5/RTC.c **** * Reentrant:
1027:Generated_Source\PSoC5/RTC.c **** *  No.
1028:Generated_Source\PSoC5/RTC.c **** *
1029:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 46


1030:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmDayOfYear(uint16 dayOfYear) 
1031:Generated_Source\PSoC5/RTC.c **** {
 1526              		.loc 1 1031 0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 8
 1529              		@ frame_needed = 1, uses_anonymous_args = 0
 1530              		@ link register save eliminated.
 1531 0000 80B4     		push	{r7}
 1532              		.cfi_def_cfa_offset 4
 1533              		.cfi_offset 7, -4
 1534 0002 83B0     		sub	sp, sp, #12
 1535              		.cfi_def_cfa_offset 16
 1536 0004 00AF     		add	r7, sp, #0
 1537              		.cfi_def_cfa_register 7
 1538 0006 0346     		mov	r3, r0
 1539 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1032:Generated_Source\PSoC5/RTC.c ****   RTC_alarmCfgTimeDate.DayOfYear = dayOfYear;
 1540              		.loc 1 1032 0
 1541 000a 104A     		ldr	r2, .L106
 1542 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 1543 000e D380     		strh	r3, [r2, #6]	@ movhi
1033:Generated_Source\PSoC5/RTC.c **** 
1034:Generated_Source\PSoC5/RTC.c ****     /* Check day of year alarm */
1035:Generated_Source\PSoC5/RTC.c ****     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 1544              		.loc 1 1035 0
 1545 0010 0E4B     		ldr	r3, .L106
 1546 0012 DB88     		ldrh	r3, [r3, #6]	@ movhi
 1547 0014 9AB2     		uxth	r2, r3
 1548 0016 0E4B     		ldr	r3, .L106+4
 1549 0018 DB88     		ldrh	r3, [r3, #6]	@ movhi
 1550 001a 9BB2     		uxth	r3, r3
 1551 001c 9A42     		cmp	r2, r3
 1552 001e 08D1     		bne	.L103
1036:Generated_Source\PSoC5/RTC.c ****     {
1037:Generated_Source\PSoC5/RTC.c ****         /* Set day of year alarm */
1038:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 1553              		.loc 1 1038 0
 1554 0020 0C4B     		ldr	r3, .L106+8
 1555 0022 1B78     		ldrb	r3, [r3]
 1556 0024 DBB2     		uxtb	r3, r3
 1557 0026 43F02003 		orr	r3, r3, #32
 1558 002a DAB2     		uxtb	r2, r3
 1559 002c 094B     		ldr	r3, .L106+8
 1560 002e 1A70     		strb	r2, [r3]
1039:Generated_Source\PSoC5/RTC.c ****     }
1040:Generated_Source\PSoC5/RTC.c ****     else /* no day of year alarm */
1041:Generated_Source\PSoC5/RTC.c ****     {
1042:Generated_Source\PSoC5/RTC.c ****         /* Set day of year alarm */
1043:Generated_Source\PSoC5/RTC.c ****         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
1044:Generated_Source\PSoC5/RTC.c ****     }
1045:Generated_Source\PSoC5/RTC.c **** }
 1561              		.loc 1 1045 0
 1562 0030 07E0     		b	.L105
 1563              	.L103:
1043:Generated_Source\PSoC5/RTC.c ****     }
 1564              		.loc 1 1043 0
 1565 0032 084B     		ldr	r3, .L106+8
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 47


 1566 0034 1B78     		ldrb	r3, [r3]
 1567 0036 DBB2     		uxtb	r3, r3
 1568 0038 23F02003 		bic	r3, r3, #32
 1569 003c DAB2     		uxtb	r2, r3
 1570 003e 054B     		ldr	r3, .L106+8
 1571 0040 1A70     		strb	r2, [r3]
 1572              	.L105:
 1573              		.loc 1 1045 0
 1574 0042 00BF     		nop
 1575 0044 0C37     		adds	r7, r7, #12
 1576              		.cfi_def_cfa_offset 4
 1577 0046 BD46     		mov	sp, r7
 1578              		.cfi_def_cfa_register 13
 1579              		@ sp needed
 1580 0048 80BC     		pop	{r7}
 1581              		.cfi_restore 7
 1582              		.cfi_def_cfa_offset 0
 1583 004a 7047     		bx	lr
 1584              	.L107:
 1585              		.align	2
 1586              	.L106:
 1587 004c 00000000 		.word	RTC_alarmCfgTimeDate
 1588 0050 00000000 		.word	RTC_currentTimeDate
 1589 0054 00000000 		.word	RTC_alarmCurStatus
 1590              		.cfi_endproc
 1591              	.LFE22:
 1592              		.size	RTC_WriteAlarmDayOfYear, .-RTC_WriteAlarmDayOfYear
 1593              		.section	.text.RTC_ReadSecond,"ax",%progbits
 1594              		.align	2
 1595              		.global	RTC_ReadSecond
 1596              		.thumb
 1597              		.thumb_func
 1598              		.type	RTC_ReadSecond, %function
 1599              	RTC_ReadSecond:
 1600              	.LFB23:
1046:Generated_Source\PSoC5/RTC.c **** 
1047:Generated_Source\PSoC5/RTC.c **** 
1048:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadSecond
1050:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1051:Generated_Source\PSoC5/RTC.c **** *
1052:Generated_Source\PSoC5/RTC.c **** * Summary:
1053:Generated_Source\PSoC5/RTC.c **** *  Reads Sec software register value.
1054:Generated_Source\PSoC5/RTC.c **** *
1055:Generated_Source\PSoC5/RTC.c **** * Parameters:
1056:Generated_Source\PSoC5/RTC.c **** *  None.
1057:Generated_Source\PSoC5/RTC.c **** *
1058:Generated_Source\PSoC5/RTC.c **** * Return:
1059:Generated_Source\PSoC5/RTC.c **** *  Current seconds value.
1060:Generated_Source\PSoC5/RTC.c **** *
1061:Generated_Source\PSoC5/RTC.c **** * Global variables:
1062:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Sec: the current second's value is used.
1063:Generated_Source\PSoC5/RTC.c **** *
1064:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadSecond(void) 
1066:Generated_Source\PSoC5/RTC.c **** {
 1601              		.loc 1 1066 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 48


 1602              		.cfi_startproc
 1603              		@ args = 0, pretend = 0, frame = 0
 1604              		@ frame_needed = 1, uses_anonymous_args = 0
 1605              		@ link register save eliminated.
 1606 0000 80B4     		push	{r7}
 1607              		.cfi_def_cfa_offset 4
 1608              		.cfi_offset 7, -4
 1609 0002 00AF     		add	r7, sp, #0
 1610              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC5/RTC.c ****     /* Return current second */
1068:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.Sec);
 1611              		.loc 1 1068 0
 1612 0004 034B     		ldr	r3, .L110
 1613 0006 1B78     		ldrb	r3, [r3]
 1614 0008 DBB2     		uxtb	r3, r3
1069:Generated_Source\PSoC5/RTC.c **** }
 1615              		.loc 1 1069 0
 1616 000a 1846     		mov	r0, r3
 1617 000c BD46     		mov	sp, r7
 1618              		.cfi_def_cfa_register 13
 1619              		@ sp needed
 1620 000e 80BC     		pop	{r7}
 1621              		.cfi_restore 7
 1622              		.cfi_def_cfa_offset 0
 1623 0010 7047     		bx	lr
 1624              	.L111:
 1625 0012 00BF     		.align	2
 1626              	.L110:
 1627 0014 00000000 		.word	RTC_currentTimeDate
 1628              		.cfi_endproc
 1629              	.LFE23:
 1630              		.size	RTC_ReadSecond, .-RTC_ReadSecond
 1631              		.section	.text.RTC_ReadMinute,"ax",%progbits
 1632              		.align	2
 1633              		.global	RTC_ReadMinute
 1634              		.thumb
 1635              		.thumb_func
 1636              		.type	RTC_ReadMinute, %function
 1637              	RTC_ReadMinute:
 1638              	.LFB24:
1070:Generated_Source\PSoC5/RTC.c **** 
1071:Generated_Source\PSoC5/RTC.c **** 
1072:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadMinute
1074:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1075:Generated_Source\PSoC5/RTC.c **** *
1076:Generated_Source\PSoC5/RTC.c **** * Summary:
1077:Generated_Source\PSoC5/RTC.c **** *  Reads Min software register value.
1078:Generated_Source\PSoC5/RTC.c **** *
1079:Generated_Source\PSoC5/RTC.c **** * Parameters:
1080:Generated_Source\PSoC5/RTC.c **** *  None.
1081:Generated_Source\PSoC5/RTC.c **** *
1082:Generated_Source\PSoC5/RTC.c **** * Return:
1083:Generated_Source\PSoC5/RTC.c **** *  Current field's value is returned.
1084:Generated_Source\PSoC5/RTC.c **** *
1085:Generated_Source\PSoC5/RTC.c **** * Global variables:
1086:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Min: the current field's value is used.
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 49


1087:Generated_Source\PSoC5/RTC.c **** *
1088:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1089:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadMinute(void) 
1090:Generated_Source\PSoC5/RTC.c **** {
 1639              		.loc 1 1090 0
 1640              		.cfi_startproc
 1641              		@ args = 0, pretend = 0, frame = 0
 1642              		@ frame_needed = 1, uses_anonymous_args = 0
 1643              		@ link register save eliminated.
 1644 0000 80B4     		push	{r7}
 1645              		.cfi_def_cfa_offset 4
 1646              		.cfi_offset 7, -4
 1647 0002 00AF     		add	r7, sp, #0
 1648              		.cfi_def_cfa_register 7
1091:Generated_Source\PSoC5/RTC.c ****     /* Return current minute */
1092:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.Min);
 1649              		.loc 1 1092 0
 1650 0004 034B     		ldr	r3, .L114
 1651 0006 5B78     		ldrb	r3, [r3, #1]
 1652 0008 DBB2     		uxtb	r3, r3
1093:Generated_Source\PSoC5/RTC.c **** }
 1653              		.loc 1 1093 0
 1654 000a 1846     		mov	r0, r3
 1655 000c BD46     		mov	sp, r7
 1656              		.cfi_def_cfa_register 13
 1657              		@ sp needed
 1658 000e 80BC     		pop	{r7}
 1659              		.cfi_restore 7
 1660              		.cfi_def_cfa_offset 0
 1661 0010 7047     		bx	lr
 1662              	.L115:
 1663 0012 00BF     		.align	2
 1664              	.L114:
 1665 0014 00000000 		.word	RTC_currentTimeDate
 1666              		.cfi_endproc
 1667              	.LFE24:
 1668              		.size	RTC_ReadMinute, .-RTC_ReadMinute
 1669              		.section	.text.RTC_ReadHour,"ax",%progbits
 1670              		.align	2
 1671              		.global	RTC_ReadHour
 1672              		.thumb
 1673              		.thumb_func
 1674              		.type	RTC_ReadHour, %function
 1675              	RTC_ReadHour:
 1676              	.LFB25:
1094:Generated_Source\PSoC5/RTC.c **** 
1095:Generated_Source\PSoC5/RTC.c **** 
1096:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1097:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadHour
1098:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1099:Generated_Source\PSoC5/RTC.c **** *
1100:Generated_Source\PSoC5/RTC.c **** * Summary:
1101:Generated_Source\PSoC5/RTC.c **** *  Reads Hour software register value.
1102:Generated_Source\PSoC5/RTC.c **** *
1103:Generated_Source\PSoC5/RTC.c **** * Parameters:
1104:Generated_Source\PSoC5/RTC.c **** *  None.
1105:Generated_Source\PSoC5/RTC.c **** *
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 50


1106:Generated_Source\PSoC5/RTC.c **** * Return:
1107:Generated_Source\PSoC5/RTC.c **** *  Current hour's value.
1108:Generated_Source\PSoC5/RTC.c **** *
1109:Generated_Source\PSoC5/RTC.c **** * Global variables:
1110:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Hour: the current field's value is used.
1111:Generated_Source\PSoC5/RTC.c **** *
1112:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1113:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadHour(void) 
1114:Generated_Source\PSoC5/RTC.c **** {
 1677              		.loc 1 1114 0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 0
 1680              		@ frame_needed = 1, uses_anonymous_args = 0
 1681              		@ link register save eliminated.
 1682 0000 80B4     		push	{r7}
 1683              		.cfi_def_cfa_offset 4
 1684              		.cfi_offset 7, -4
 1685 0002 00AF     		add	r7, sp, #0
 1686              		.cfi_def_cfa_register 7
1115:Generated_Source\PSoC5/RTC.c ****     /* Return current hour */
1116:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.Hour);
 1687              		.loc 1 1116 0
 1688 0004 034B     		ldr	r3, .L118
 1689 0006 9B78     		ldrb	r3, [r3, #2]
 1690 0008 DBB2     		uxtb	r3, r3
1117:Generated_Source\PSoC5/RTC.c **** }
 1691              		.loc 1 1117 0
 1692 000a 1846     		mov	r0, r3
 1693 000c BD46     		mov	sp, r7
 1694              		.cfi_def_cfa_register 13
 1695              		@ sp needed
 1696 000e 80BC     		pop	{r7}
 1697              		.cfi_restore 7
 1698              		.cfi_def_cfa_offset 0
 1699 0010 7047     		bx	lr
 1700              	.L119:
 1701 0012 00BF     		.align	2
 1702              	.L118:
 1703 0014 00000000 		.word	RTC_currentTimeDate
 1704              		.cfi_endproc
 1705              	.LFE25:
 1706              		.size	RTC_ReadHour, .-RTC_ReadHour
 1707              		.section	.text.RTC_ReadDayOfMonth,"ax",%progbits
 1708              		.align	2
 1709              		.global	RTC_ReadDayOfMonth
 1710              		.thumb
 1711              		.thumb_func
 1712              		.type	RTC_ReadDayOfMonth, %function
 1713              	RTC_ReadDayOfMonth:
 1714              	.LFB26:
1118:Generated_Source\PSoC5/RTC.c **** 
1119:Generated_Source\PSoC5/RTC.c **** 
1120:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1121:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadDayOfMonth
1122:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1123:Generated_Source\PSoC5/RTC.c **** *
1124:Generated_Source\PSoC5/RTC.c **** * Summary:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 51


1125:Generated_Source\PSoC5/RTC.c **** *  Reads DayOfMonth software register value.
1126:Generated_Source\PSoC5/RTC.c **** *
1127:Generated_Source\PSoC5/RTC.c **** * Parameters:
1128:Generated_Source\PSoC5/RTC.c **** *  None.
1129:Generated_Source\PSoC5/RTC.c **** *
1130:Generated_Source\PSoC5/RTC.c **** * Return:
1131:Generated_Source\PSoC5/RTC.c **** *  Current value of the day of month.
1132:Generated_Source\PSoC5/RTC.c **** *  returned.
1133:Generated_Source\PSoC5/RTC.c **** *
1134:Generated_Source\PSoC5/RTC.c **** * Global variables:
1135:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.DayOfMonth: the current day of month's
1136:Generated_Source\PSoC5/RTC.c **** *  value is used.
1137:Generated_Source\PSoC5/RTC.c **** *
1138:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1139:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadDayOfMonth(void) 
1140:Generated_Source\PSoC5/RTC.c **** {
 1715              		.loc 1 1140 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 1, uses_anonymous_args = 0
 1719              		@ link register save eliminated.
 1720 0000 80B4     		push	{r7}
 1721              		.cfi_def_cfa_offset 4
 1722              		.cfi_offset 7, -4
 1723 0002 00AF     		add	r7, sp, #0
 1724              		.cfi_def_cfa_register 7
1141:Generated_Source\PSoC5/RTC.c ****     /* Return current day of the month */
1142:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.DayOfMonth);
 1725              		.loc 1 1142 0
 1726 0004 034B     		ldr	r3, .L122
 1727 0006 1B79     		ldrb	r3, [r3, #4]
 1728 0008 DBB2     		uxtb	r3, r3
1143:Generated_Source\PSoC5/RTC.c **** }
 1729              		.loc 1 1143 0
 1730 000a 1846     		mov	r0, r3
 1731 000c BD46     		mov	sp, r7
 1732              		.cfi_def_cfa_register 13
 1733              		@ sp needed
 1734 000e 80BC     		pop	{r7}
 1735              		.cfi_restore 7
 1736              		.cfi_def_cfa_offset 0
 1737 0010 7047     		bx	lr
 1738              	.L123:
 1739 0012 00BF     		.align	2
 1740              	.L122:
 1741 0014 00000000 		.word	RTC_currentTimeDate
 1742              		.cfi_endproc
 1743              	.LFE26:
 1744              		.size	RTC_ReadDayOfMonth, .-RTC_ReadDayOfMonth
 1745              		.section	.text.RTC_ReadMonth,"ax",%progbits
 1746              		.align	2
 1747              		.global	RTC_ReadMonth
 1748              		.thumb
 1749              		.thumb_func
 1750              		.type	RTC_ReadMonth, %function
 1751              	RTC_ReadMonth:
 1752              	.LFB27:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 52


1144:Generated_Source\PSoC5/RTC.c **** 
1145:Generated_Source\PSoC5/RTC.c **** 
1146:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1147:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadMonth
1148:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1149:Generated_Source\PSoC5/RTC.c **** *
1150:Generated_Source\PSoC5/RTC.c **** * Summary:
1151:Generated_Source\PSoC5/RTC.c **** *  Reads Month software register value.
1152:Generated_Source\PSoC5/RTC.c **** *
1153:Generated_Source\PSoC5/RTC.c **** * Parameters:
1154:Generated_Source\PSoC5/RTC.c **** *  None.
1155:Generated_Source\PSoC5/RTC.c **** *
1156:Generated_Source\PSoC5/RTC.c **** * Return:
1157:Generated_Source\PSoC5/RTC.c **** *  Current value of the month.
1158:Generated_Source\PSoC5/RTC.c **** *
1159:Generated_Source\PSoC5/RTC.c **** * Global variables:
1160:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Month: the current month's value is used.
1161:Generated_Source\PSoC5/RTC.c **** *
1162:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1163:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadMonth(void) 
1164:Generated_Source\PSoC5/RTC.c **** {
 1753              		.loc 1 1164 0
 1754              		.cfi_startproc
 1755              		@ args = 0, pretend = 0, frame = 0
 1756              		@ frame_needed = 1, uses_anonymous_args = 0
 1757              		@ link register save eliminated.
 1758 0000 80B4     		push	{r7}
 1759              		.cfi_def_cfa_offset 4
 1760              		.cfi_offset 7, -4
 1761 0002 00AF     		add	r7, sp, #0
 1762              		.cfi_def_cfa_register 7
1165:Generated_Source\PSoC5/RTC.c ****     /* Return current month */
1166:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.Month);
 1763              		.loc 1 1166 0
 1764 0004 034B     		ldr	r3, .L126
 1765 0006 1B7A     		ldrb	r3, [r3, #8]
 1766 0008 DBB2     		uxtb	r3, r3
1167:Generated_Source\PSoC5/RTC.c **** }
 1767              		.loc 1 1167 0
 1768 000a 1846     		mov	r0, r3
 1769 000c BD46     		mov	sp, r7
 1770              		.cfi_def_cfa_register 13
 1771              		@ sp needed
 1772 000e 80BC     		pop	{r7}
 1773              		.cfi_restore 7
 1774              		.cfi_def_cfa_offset 0
 1775 0010 7047     		bx	lr
 1776              	.L127:
 1777 0012 00BF     		.align	2
 1778              	.L126:
 1779 0014 00000000 		.word	RTC_currentTimeDate
 1780              		.cfi_endproc
 1781              	.LFE27:
 1782              		.size	RTC_ReadMonth, .-RTC_ReadMonth
 1783              		.section	.text.RTC_ReadYear,"ax",%progbits
 1784              		.align	2
 1785              		.global	RTC_ReadYear
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 53


 1786              		.thumb
 1787              		.thumb_func
 1788              		.type	RTC_ReadYear, %function
 1789              	RTC_ReadYear:
 1790              	.LFB28:
1168:Generated_Source\PSoC5/RTC.c **** 
1169:Generated_Source\PSoC5/RTC.c **** 
1170:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1171:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadYear
1172:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1173:Generated_Source\PSoC5/RTC.c **** *
1174:Generated_Source\PSoC5/RTC.c **** * Summary:
1175:Generated_Source\PSoC5/RTC.c **** *  Reads Year software register value.
1176:Generated_Source\PSoC5/RTC.c **** *
1177:Generated_Source\PSoC5/RTC.c **** * Parameters:
1178:Generated_Source\PSoC5/RTC.c **** *  None.
1179:Generated_Source\PSoC5/RTC.c **** *
1180:Generated_Source\PSoC5/RTC.c **** * Return:
1181:Generated_Source\PSoC5/RTC.c **** *  Current value of the year.
1182:Generated_Source\PSoC5/RTC.c **** *
1183:Generated_Source\PSoC5/RTC.c **** * Global variables:
1184:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate.Year: the current year's value is used.
1185:Generated_Source\PSoC5/RTC.c **** *
1186:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1187:Generated_Source\PSoC5/RTC.c **** uint16 RTC_ReadYear(void) 
1188:Generated_Source\PSoC5/RTC.c **** {
 1791              		.loc 1 1188 0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 0
 1794              		@ frame_needed = 1, uses_anonymous_args = 0
 1795              		@ link register save eliminated.
 1796 0000 80B4     		push	{r7}
 1797              		.cfi_def_cfa_offset 4
 1798              		.cfi_offset 7, -4
 1799 0002 00AF     		add	r7, sp, #0
 1800              		.cfi_def_cfa_register 7
1189:Generated_Source\PSoC5/RTC.c ****     /* Return current year */
1190:Generated_Source\PSoC5/RTC.c ****     return (RTC_currentTimeDate.Year);
 1801              		.loc 1 1190 0
 1802 0004 034B     		ldr	r3, .L130
 1803 0006 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1804 0008 9BB2     		uxth	r3, r3
1191:Generated_Source\PSoC5/RTC.c **** }
 1805              		.loc 1 1191 0
 1806 000a 1846     		mov	r0, r3
 1807 000c BD46     		mov	sp, r7
 1808              		.cfi_def_cfa_register 13
 1809              		@ sp needed
 1810 000e 80BC     		pop	{r7}
 1811              		.cfi_restore 7
 1812              		.cfi_def_cfa_offset 0
 1813 0010 7047     		bx	lr
 1814              	.L131:
 1815 0012 00BF     		.align	2
 1816              	.L130:
 1817 0014 00000000 		.word	RTC_currentTimeDate
 1818              		.cfi_endproc
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 54


 1819              	.LFE28:
 1820              		.size	RTC_ReadYear, .-RTC_ReadYear
 1821              		.section	.text.RTC_ReadAlarmSecond,"ax",%progbits
 1822              		.align	2
 1823              		.global	RTC_ReadAlarmSecond
 1824              		.thumb
 1825              		.thumb_func
 1826              		.type	RTC_ReadAlarmSecond, %function
 1827              	RTC_ReadAlarmSecond:
 1828              	.LFB29:
1192:Generated_Source\PSoC5/RTC.c **** 
1193:Generated_Source\PSoC5/RTC.c **** 
1194:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1195:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmSecond
1196:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1197:Generated_Source\PSoC5/RTC.c **** *
1198:Generated_Source\PSoC5/RTC.c **** * Summary:
1199:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm Sec software register value.
1200:Generated_Source\PSoC5/RTC.c **** *
1201:Generated_Source\PSoC5/RTC.c **** * Parameters:
1202:Generated_Source\PSoC5/RTC.c **** *  None.
1203:Generated_Source\PSoC5/RTC.c **** *
1204:Generated_Source\PSoC5/RTC.c **** * Return:
1205:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the seconds.
1206:Generated_Source\PSoC5/RTC.c **** *
1207:Generated_Source\PSoC5/RTC.c **** * Global variables:
1208:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Sec: the current second alarm value is
1209:Generated_Source\PSoC5/RTC.c **** *  used.
1210:Generated_Source\PSoC5/RTC.c **** *
1211:Generated_Source\PSoC5/RTC.c **** ********************************************************************************/
1212:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmSecond(void) 
1213:Generated_Source\PSoC5/RTC.c **** {
 1829              		.loc 1 1213 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 0
 1832              		@ frame_needed = 1, uses_anonymous_args = 0
 1833              		@ link register save eliminated.
 1834 0000 80B4     		push	{r7}
 1835              		.cfi_def_cfa_offset 4
 1836              		.cfi_offset 7, -4
 1837 0002 00AF     		add	r7, sp, #0
 1838              		.cfi_def_cfa_register 7
1214:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm second */
1215:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.Sec);
 1839              		.loc 1 1215 0
 1840 0004 034B     		ldr	r3, .L134
 1841 0006 1B78     		ldrb	r3, [r3]
 1842 0008 DBB2     		uxtb	r3, r3
1216:Generated_Source\PSoC5/RTC.c **** }
 1843              		.loc 1 1216 0
 1844 000a 1846     		mov	r0, r3
 1845 000c BD46     		mov	sp, r7
 1846              		.cfi_def_cfa_register 13
 1847              		@ sp needed
 1848 000e 80BC     		pop	{r7}
 1849              		.cfi_restore 7
 1850              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 55


 1851 0010 7047     		bx	lr
 1852              	.L135:
 1853 0012 00BF     		.align	2
 1854              	.L134:
 1855 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1856              		.cfi_endproc
 1857              	.LFE29:
 1858              		.size	RTC_ReadAlarmSecond, .-RTC_ReadAlarmSecond
 1859              		.section	.text.RTC_ReadAlarmMinute,"ax",%progbits
 1860              		.align	2
 1861              		.global	RTC_ReadAlarmMinute
 1862              		.thumb
 1863              		.thumb_func
 1864              		.type	RTC_ReadAlarmMinute, %function
 1865              	RTC_ReadAlarmMinute:
 1866              	.LFB30:
1217:Generated_Source\PSoC5/RTC.c **** 
1218:Generated_Source\PSoC5/RTC.c **** 
1219:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1220:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmMinute
1221:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1222:Generated_Source\PSoC5/RTC.c **** *
1223:Generated_Source\PSoC5/RTC.c **** * Summary:
1224:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm Min software register value.
1225:Generated_Source\PSoC5/RTC.c **** *
1226:Generated_Source\PSoC5/RTC.c **** * Parameters:
1227:Generated_Source\PSoC5/RTC.c **** *  None.
1228:Generated_Source\PSoC5/RTC.c **** *
1229:Generated_Source\PSoC5/RTC.c **** * Return:
1230:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the minutes.
1231:Generated_Source\PSoC5/RTC.c **** *
1232:Generated_Source\PSoC5/RTC.c **** * Global variables:
1233:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Min: the current minute alarm is used.
1234:Generated_Source\PSoC5/RTC.c **** *
1235:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1236:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmMinute(void) 
1237:Generated_Source\PSoC5/RTC.c **** {
 1867              		.loc 1 1237 0
 1868              		.cfi_startproc
 1869              		@ args = 0, pretend = 0, frame = 0
 1870              		@ frame_needed = 1, uses_anonymous_args = 0
 1871              		@ link register save eliminated.
 1872 0000 80B4     		push	{r7}
 1873              		.cfi_def_cfa_offset 4
 1874              		.cfi_offset 7, -4
 1875 0002 00AF     		add	r7, sp, #0
 1876              		.cfi_def_cfa_register 7
1238:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm minute */
1239:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.Min);
 1877              		.loc 1 1239 0
 1878 0004 034B     		ldr	r3, .L138
 1879 0006 5B78     		ldrb	r3, [r3, #1]
 1880 0008 DBB2     		uxtb	r3, r3
1240:Generated_Source\PSoC5/RTC.c **** }
 1881              		.loc 1 1240 0
 1882 000a 1846     		mov	r0, r3
 1883 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 56


 1884              		.cfi_def_cfa_register 13
 1885              		@ sp needed
 1886 000e 80BC     		pop	{r7}
 1887              		.cfi_restore 7
 1888              		.cfi_def_cfa_offset 0
 1889 0010 7047     		bx	lr
 1890              	.L139:
 1891 0012 00BF     		.align	2
 1892              	.L138:
 1893 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1894              		.cfi_endproc
 1895              	.LFE30:
 1896              		.size	RTC_ReadAlarmMinute, .-RTC_ReadAlarmMinute
 1897              		.section	.text.RTC_ReadAlarmHour,"ax",%progbits
 1898              		.align	2
 1899              		.global	RTC_ReadAlarmHour
 1900              		.thumb
 1901              		.thumb_func
 1902              		.type	RTC_ReadAlarmHour, %function
 1903              	RTC_ReadAlarmHour:
 1904              	.LFB31:
1241:Generated_Source\PSoC5/RTC.c **** 
1242:Generated_Source\PSoC5/RTC.c **** 
1243:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1244:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmHour
1245:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1246:Generated_Source\PSoC5/RTC.c **** *
1247:Generated_Source\PSoC5/RTC.c **** * Summary:
1248:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm Hour software register value.
1249:Generated_Source\PSoC5/RTC.c **** *
1250:Generated_Source\PSoC5/RTC.c **** * Parameters:
1251:Generated_Source\PSoC5/RTC.c **** *  None.
1252:Generated_Source\PSoC5/RTC.c **** *
1253:Generated_Source\PSoC5/RTC.c **** * Return:
1254:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the hours.
1255:Generated_Source\PSoC5/RTC.c **** *
1256:Generated_Source\PSoC5/RTC.c **** * Global variables:
1257:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Hour: the current hour alarm value is used.
1258:Generated_Source\PSoC5/RTC.c **** *
1259:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1260:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmHour(void) 
1261:Generated_Source\PSoC5/RTC.c **** {
 1905              		.loc 1 1261 0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 0
 1908              		@ frame_needed = 1, uses_anonymous_args = 0
 1909              		@ link register save eliminated.
 1910 0000 80B4     		push	{r7}
 1911              		.cfi_def_cfa_offset 4
 1912              		.cfi_offset 7, -4
 1913 0002 00AF     		add	r7, sp, #0
 1914              		.cfi_def_cfa_register 7
1262:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm hour */
1263:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.Hour);
 1915              		.loc 1 1263 0
 1916 0004 034B     		ldr	r3, .L142
 1917 0006 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 57


 1918 0008 DBB2     		uxtb	r3, r3
1264:Generated_Source\PSoC5/RTC.c **** }
 1919              		.loc 1 1264 0
 1920 000a 1846     		mov	r0, r3
 1921 000c BD46     		mov	sp, r7
 1922              		.cfi_def_cfa_register 13
 1923              		@ sp needed
 1924 000e 80BC     		pop	{r7}
 1925              		.cfi_restore 7
 1926              		.cfi_def_cfa_offset 0
 1927 0010 7047     		bx	lr
 1928              	.L143:
 1929 0012 00BF     		.align	2
 1930              	.L142:
 1931 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1932              		.cfi_endproc
 1933              	.LFE31:
 1934              		.size	RTC_ReadAlarmHour, .-RTC_ReadAlarmHour
 1935              		.section	.text.RTC_ReadAlarmDayOfMonth,"ax",%progbits
 1936              		.align	2
 1937              		.global	RTC_ReadAlarmDayOfMonth
 1938              		.thumb
 1939              		.thumb_func
 1940              		.type	RTC_ReadAlarmDayOfMonth, %function
 1941              	RTC_ReadAlarmDayOfMonth:
 1942              	.LFB32:
1265:Generated_Source\PSoC5/RTC.c **** 
1266:Generated_Source\PSoC5/RTC.c **** 
1267:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1268:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmDayOfMonth
1269:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1270:Generated_Source\PSoC5/RTC.c **** *
1271:Generated_Source\PSoC5/RTC.c **** * Summary:
1272:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm DayOfMonth software register value.
1273:Generated_Source\PSoC5/RTC.c **** *
1274:Generated_Source\PSoC5/RTC.c **** * Parameters:
1275:Generated_Source\PSoC5/RTC.c **** *  None.
1276:Generated_Source\PSoC5/RTC.c **** *
1277:Generated_Source\PSoC5/RTC.c **** * Return:
1278:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the day of month.
1279:Generated_Source\PSoC5/RTC.c **** *
1280:Generated_Source\PSoC5/RTC.c **** * Global variables:
1281:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfMonth: the current day of month alarm
1282:Generated_Source\PSoC5/RTC.c **** *  value is used.
1283:Generated_Source\PSoC5/RTC.c **** *
1284:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1285:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmDayOfMonth(void) 
1286:Generated_Source\PSoC5/RTC.c **** {
 1943              		.loc 1 1286 0
 1944              		.cfi_startproc
 1945              		@ args = 0, pretend = 0, frame = 0
 1946              		@ frame_needed = 1, uses_anonymous_args = 0
 1947              		@ link register save eliminated.
 1948 0000 80B4     		push	{r7}
 1949              		.cfi_def_cfa_offset 4
 1950              		.cfi_offset 7, -4
 1951 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 58


 1952              		.cfi_def_cfa_register 7
1287:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm day of month */
1288:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.DayOfMonth);
 1953              		.loc 1 1288 0
 1954 0004 034B     		ldr	r3, .L146
 1955 0006 1B79     		ldrb	r3, [r3, #4]
 1956 0008 DBB2     		uxtb	r3, r3
1289:Generated_Source\PSoC5/RTC.c **** }
 1957              		.loc 1 1289 0
 1958 000a 1846     		mov	r0, r3
 1959 000c BD46     		mov	sp, r7
 1960              		.cfi_def_cfa_register 13
 1961              		@ sp needed
 1962 000e 80BC     		pop	{r7}
 1963              		.cfi_restore 7
 1964              		.cfi_def_cfa_offset 0
 1965 0010 7047     		bx	lr
 1966              	.L147:
 1967 0012 00BF     		.align	2
 1968              	.L146:
 1969 0014 00000000 		.word	RTC_alarmCfgTimeDate
 1970              		.cfi_endproc
 1971              	.LFE32:
 1972              		.size	RTC_ReadAlarmDayOfMonth, .-RTC_ReadAlarmDayOfMonth
 1973              		.section	.text.RTC_ReadAlarmMonth,"ax",%progbits
 1974              		.align	2
 1975              		.global	RTC_ReadAlarmMonth
 1976              		.thumb
 1977              		.thumb_func
 1978              		.type	RTC_ReadAlarmMonth, %function
 1979              	RTC_ReadAlarmMonth:
 1980              	.LFB33:
1290:Generated_Source\PSoC5/RTC.c **** 
1291:Generated_Source\PSoC5/RTC.c **** 
1292:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1293:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmMonth
1294:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1295:Generated_Source\PSoC5/RTC.c **** *
1296:Generated_Source\PSoC5/RTC.c **** * Summary:
1297:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm Month software register value.
1298:Generated_Source\PSoC5/RTC.c **** *
1299:Generated_Source\PSoC5/RTC.c **** * Parameters:
1300:Generated_Source\PSoC5/RTC.c **** *  None.
1301:Generated_Source\PSoC5/RTC.c **** *
1302:Generated_Source\PSoC5/RTC.c **** * Return:
1303:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the month.
1304:Generated_Source\PSoC5/RTC.c **** *
1305:Generated_Source\PSoC5/RTC.c **** * Global variables:
1306:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Month: the current month alarm value is
1307:Generated_Source\PSoC5/RTC.c **** *  used.
1308:Generated_Source\PSoC5/RTC.c **** *
1309:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1310:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmMonth(void) 
1311:Generated_Source\PSoC5/RTC.c **** {
 1981              		.loc 1 1311 0
 1982              		.cfi_startproc
 1983              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 59


 1984              		@ frame_needed = 1, uses_anonymous_args = 0
 1985              		@ link register save eliminated.
 1986 0000 80B4     		push	{r7}
 1987              		.cfi_def_cfa_offset 4
 1988              		.cfi_offset 7, -4
 1989 0002 00AF     		add	r7, sp, #0
 1990              		.cfi_def_cfa_register 7
1312:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm month */
1313:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.Month);
 1991              		.loc 1 1313 0
 1992 0004 034B     		ldr	r3, .L150
 1993 0006 1B7A     		ldrb	r3, [r3, #8]
 1994 0008 DBB2     		uxtb	r3, r3
1314:Generated_Source\PSoC5/RTC.c **** }
 1995              		.loc 1 1314 0
 1996 000a 1846     		mov	r0, r3
 1997 000c BD46     		mov	sp, r7
 1998              		.cfi_def_cfa_register 13
 1999              		@ sp needed
 2000 000e 80BC     		pop	{r7}
 2001              		.cfi_restore 7
 2002              		.cfi_def_cfa_offset 0
 2003 0010 7047     		bx	lr
 2004              	.L151:
 2005 0012 00BF     		.align	2
 2006              	.L150:
 2007 0014 00000000 		.word	RTC_alarmCfgTimeDate
 2008              		.cfi_endproc
 2009              	.LFE33:
 2010              		.size	RTC_ReadAlarmMonth, .-RTC_ReadAlarmMonth
 2011              		.section	.text.RTC_ReadAlarmYear,"ax",%progbits
 2012              		.align	2
 2013              		.global	RTC_ReadAlarmYear
 2014              		.thumb
 2015              		.thumb_func
 2016              		.type	RTC_ReadAlarmYear, %function
 2017              	RTC_ReadAlarmYear:
 2018              	.LFB34:
1315:Generated_Source\PSoC5/RTC.c **** 
1316:Generated_Source\PSoC5/RTC.c **** 
1317:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1318:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmYear
1319:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1320:Generated_Source\PSoC5/RTC.c **** *
1321:Generated_Source\PSoC5/RTC.c **** * Summary:
1322:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm Year software register value.
1323:Generated_Source\PSoC5/RTC.c **** *
1324:Generated_Source\PSoC5/RTC.c **** * Parameters:
1325:Generated_Source\PSoC5/RTC.c **** *  None.
1326:Generated_Source\PSoC5/RTC.c **** *
1327:Generated_Source\PSoC5/RTC.c **** * Return:
1328:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the years.
1329:Generated_Source\PSoC5/RTC.c **** *
1330:Generated_Source\PSoC5/RTC.c **** * Global variables:
1331:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.Year: the current year alarm value is used.
1332:Generated_Source\PSoC5/RTC.c **** *
1333:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 60


1334:Generated_Source\PSoC5/RTC.c **** uint16 RTC_ReadAlarmYear(void) 
1335:Generated_Source\PSoC5/RTC.c **** {
 2019              		.loc 1 1335 0
 2020              		.cfi_startproc
 2021              		@ args = 0, pretend = 0, frame = 0
 2022              		@ frame_needed = 1, uses_anonymous_args = 0
 2023              		@ link register save eliminated.
 2024 0000 80B4     		push	{r7}
 2025              		.cfi_def_cfa_offset 4
 2026              		.cfi_offset 7, -4
 2027 0002 00AF     		add	r7, sp, #0
 2028              		.cfi_def_cfa_register 7
1336:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm year */
1337:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.Year);
 2029              		.loc 1 1337 0
 2030 0004 034B     		ldr	r3, .L154
 2031 0006 5B89     		ldrh	r3, [r3, #10]	@ movhi
 2032 0008 9BB2     		uxth	r3, r3
1338:Generated_Source\PSoC5/RTC.c **** }
 2033              		.loc 1 1338 0
 2034 000a 1846     		mov	r0, r3
 2035 000c BD46     		mov	sp, r7
 2036              		.cfi_def_cfa_register 13
 2037              		@ sp needed
 2038 000e 80BC     		pop	{r7}
 2039              		.cfi_restore 7
 2040              		.cfi_def_cfa_offset 0
 2041 0010 7047     		bx	lr
 2042              	.L155:
 2043 0012 00BF     		.align	2
 2044              	.L154:
 2045 0014 00000000 		.word	RTC_alarmCfgTimeDate
 2046              		.cfi_endproc
 2047              	.LFE34:
 2048              		.size	RTC_ReadAlarmYear, .-RTC_ReadAlarmYear
 2049              		.section	.text.RTC_ReadAlarmDayOfWeek,"ax",%progbits
 2050              		.align	2
 2051              		.global	RTC_ReadAlarmDayOfWeek
 2052              		.thumb
 2053              		.thumb_func
 2054              		.type	RTC_ReadAlarmDayOfWeek, %function
 2055              	RTC_ReadAlarmDayOfWeek:
 2056              	.LFB35:
1339:Generated_Source\PSoC5/RTC.c **** 
1340:Generated_Source\PSoC5/RTC.c **** 
1341:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1342:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmDayOfWeek
1343:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1344:Generated_Source\PSoC5/RTC.c **** *
1345:Generated_Source\PSoC5/RTC.c **** * Summary:
1346:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm DayOfWeek software register value.
1347:Generated_Source\PSoC5/RTC.c **** *
1348:Generated_Source\PSoC5/RTC.c **** * Parameters:
1349:Generated_Source\PSoC5/RTC.c **** *  None.
1350:Generated_Source\PSoC5/RTC.c **** *
1351:Generated_Source\PSoC5/RTC.c **** * Return:
1352:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the day of week.
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 61


1353:Generated_Source\PSoC5/RTC.c **** *
1354:Generated_Source\PSoC5/RTC.c **** * Global variables:
1355:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfWeek: the current day of week alarm
1356:Generated_Source\PSoC5/RTC.c **** *  value is used.
1357:Generated_Source\PSoC5/RTC.c **** *
1358:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1359:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadAlarmDayOfWeek(void) 
1360:Generated_Source\PSoC5/RTC.c **** {
 2057              		.loc 1 1360 0
 2058              		.cfi_startproc
 2059              		@ args = 0, pretend = 0, frame = 0
 2060              		@ frame_needed = 1, uses_anonymous_args = 0
 2061              		@ link register save eliminated.
 2062 0000 80B4     		push	{r7}
 2063              		.cfi_def_cfa_offset 4
 2064              		.cfi_offset 7, -4
 2065 0002 00AF     		add	r7, sp, #0
 2066              		.cfi_def_cfa_register 7
1361:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm day of the week */
1362:Generated_Source\PSoC5/RTC.c ****     return (RTC_alarmCfgTimeDate.DayOfWeek);
 2067              		.loc 1 1362 0
 2068 0004 034B     		ldr	r3, .L158
 2069 0006 DB78     		ldrb	r3, [r3, #3]
 2070 0008 DBB2     		uxtb	r3, r3
1363:Generated_Source\PSoC5/RTC.c **** }
 2071              		.loc 1 1363 0
 2072 000a 1846     		mov	r0, r3
 2073 000c BD46     		mov	sp, r7
 2074              		.cfi_def_cfa_register 13
 2075              		@ sp needed
 2076 000e 80BC     		pop	{r7}
 2077              		.cfi_restore 7
 2078              		.cfi_def_cfa_offset 0
 2079 0010 7047     		bx	lr
 2080              	.L159:
 2081 0012 00BF     		.align	2
 2082              	.L158:
 2083 0014 00000000 		.word	RTC_alarmCfgTimeDate
 2084              		.cfi_endproc
 2085              	.LFE35:
 2086              		.size	RTC_ReadAlarmDayOfWeek, .-RTC_ReadAlarmDayOfWeek
 2087              		.section	.text.RTC_ReadAlarmDayOfYear,"ax",%progbits
 2088              		.align	2
 2089              		.global	RTC_ReadAlarmDayOfYear
 2090              		.thumb
 2091              		.thumb_func
 2092              		.type	RTC_ReadAlarmDayOfYear, %function
 2093              	RTC_ReadAlarmDayOfYear:
 2094              	.LFB36:
1364:Generated_Source\PSoC5/RTC.c **** 
1365:Generated_Source\PSoC5/RTC.c **** 
1366:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1367:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadAlarmDayOfYear
1368:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1369:Generated_Source\PSoC5/RTC.c **** *
1370:Generated_Source\PSoC5/RTC.c **** * Summary:
1371:Generated_Source\PSoC5/RTC.c **** *  Reads Alarm DayOfYear software register value.
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 62


1372:Generated_Source\PSoC5/RTC.c **** *
1373:Generated_Source\PSoC5/RTC.c **** * Parameters:
1374:Generated_Source\PSoC5/RTC.c **** *  None.
1375:Generated_Source\PSoC5/RTC.c **** *
1376:Generated_Source\PSoC5/RTC.c **** * Return:
1377:Generated_Source\PSoC5/RTC.c **** *  Current alarm value of the day of year.
1378:Generated_Source\PSoC5/RTC.c **** *
1379:Generated_Source\PSoC5/RTC.c **** * Global variables:
1380:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate.DayOfYear: the current day of year alarm
1381:Generated_Source\PSoC5/RTC.c **** *  value is used.
1382:Generated_Source\PSoC5/RTC.c **** *
1383:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1384:Generated_Source\PSoC5/RTC.c **** uint16 RTC_ReadAlarmDayOfYear(void) 
1385:Generated_Source\PSoC5/RTC.c **** {
 2095              		.loc 1 1385 0
 2096              		.cfi_startproc
 2097              		@ args = 0, pretend = 0, frame = 0
 2098              		@ frame_needed = 1, uses_anonymous_args = 0
 2099              		@ link register save eliminated.
 2100 0000 80B4     		push	{r7}
 2101              		.cfi_def_cfa_offset 4
 2102              		.cfi_offset 7, -4
 2103 0002 00AF     		add	r7, sp, #0
 2104              		.cfi_def_cfa_register 7
1386:Generated_Source\PSoC5/RTC.c ****     /* Return current alarm day of the year */
1387:Generated_Source\PSoC5/RTC.c ****     return  (RTC_alarmCfgTimeDate.DayOfYear);
 2105              		.loc 1 1387 0
 2106 0004 034B     		ldr	r3, .L162
 2107 0006 DB88     		ldrh	r3, [r3, #6]	@ movhi
 2108 0008 9BB2     		uxth	r3, r3
1388:Generated_Source\PSoC5/RTC.c **** }
 2109              		.loc 1 1388 0
 2110 000a 1846     		mov	r0, r3
 2111 000c BD46     		mov	sp, r7
 2112              		.cfi_def_cfa_register 13
 2113              		@ sp needed
 2114 000e 80BC     		pop	{r7}
 2115              		.cfi_restore 7
 2116              		.cfi_def_cfa_offset 0
 2117 0010 7047     		bx	lr
 2118              	.L163:
 2119 0012 00BF     		.align	2
 2120              	.L162:
 2121 0014 00000000 		.word	RTC_alarmCfgTimeDate
 2122              		.cfi_endproc
 2123              	.LFE36:
 2124              		.size	RTC_ReadAlarmDayOfYear, .-RTC_ReadAlarmDayOfYear
 2125              		.section	.text.RTC_WriteAlarmMask,"ax",%progbits
 2126              		.align	2
 2127              		.global	RTC_WriteAlarmMask
 2128              		.thumb
 2129              		.thumb_func
 2130              		.type	RTC_WriteAlarmMask, %function
 2131              	RTC_WriteAlarmMask:
 2132              	.LFB37:
1389:Generated_Source\PSoC5/RTC.c **** 
1390:Generated_Source\PSoC5/RTC.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 63


1391:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1392:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteAlarmMask
1393:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1394:Generated_Source\PSoC5/RTC.c **** *
1395:Generated_Source\PSoC5/RTC.c **** * Summary:
1396:Generated_Source\PSoC5/RTC.c **** *  Writes the Alarm Mask software register with 1 bit per time/date entry. Alarm
1397:Generated_Source\PSoC5/RTC.c **** *  true when all masked time/date values match Alarm values.
1398:Generated_Source\PSoC5/RTC.c **** *
1399:Generated_Source\PSoC5/RTC.c **** * Parameters:
1400:Generated_Source\PSoC5/RTC.c **** *  mask: Alarm Mask software register value.
1401:Generated_Source\PSoC5/RTC.c **** *
1402:Generated_Source\PSoC5/RTC.c **** * Return:
1403:Generated_Source\PSoC5/RTC.c **** *  None.
1404:Generated_Source\PSoC5/RTC.c **** *
1405:Generated_Source\PSoC5/RTC.c **** * Global variables:
1406:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgMask: global variable which stores masks for
1407:Generated_Source\PSoC5/RTC.c **** *  time/date alarm configuration is modified.
1408:Generated_Source\PSoC5/RTC.c **** *
1409:Generated_Source\PSoC5/RTC.c **** * Reentrant:
1410:Generated_Source\PSoC5/RTC.c **** *  No.
1411:Generated_Source\PSoC5/RTC.c **** *
1412:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1413:Generated_Source\PSoC5/RTC.c **** void RTC_WriteAlarmMask(uint8 mask) 
1414:Generated_Source\PSoC5/RTC.c **** {
 2133              		.loc 1 1414 0
 2134              		.cfi_startproc
 2135              		@ args = 0, pretend = 0, frame = 8
 2136              		@ frame_needed = 1, uses_anonymous_args = 0
 2137              		@ link register save eliminated.
 2138 0000 80B4     		push	{r7}
 2139              		.cfi_def_cfa_offset 4
 2140              		.cfi_offset 7, -4
 2141 0002 83B0     		sub	sp, sp, #12
 2142              		.cfi_def_cfa_offset 16
 2143 0004 00AF     		add	r7, sp, #0
 2144              		.cfi_def_cfa_register 7
 2145 0006 0346     		mov	r3, r0
 2146 0008 FB71     		strb	r3, [r7, #7]
1415:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgMask = mask;
 2147              		.loc 1 1415 0
 2148 000a 044A     		ldr	r2, .L165
 2149 000c FB79     		ldrb	r3, [r7, #7]
 2150 000e 1370     		strb	r3, [r2]
1416:Generated_Source\PSoC5/RTC.c **** }
 2151              		.loc 1 1416 0
 2152 0010 00BF     		nop
 2153 0012 0C37     		adds	r7, r7, #12
 2154              		.cfi_def_cfa_offset 4
 2155 0014 BD46     		mov	sp, r7
 2156              		.cfi_def_cfa_register 13
 2157              		@ sp needed
 2158 0016 80BC     		pop	{r7}
 2159              		.cfi_restore 7
 2160              		.cfi_def_cfa_offset 0
 2161 0018 7047     		bx	lr
 2162              	.L166:
 2163 001a 00BF     		.align	2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 64


 2164              	.L165:
 2165 001c 00000000 		.word	RTC_alarmCfgMask
 2166              		.cfi_endproc
 2167              	.LFE37:
 2168              		.size	RTC_WriteAlarmMask, .-RTC_WriteAlarmMask
 2169              		.section	.text.RTC_WriteIntervalMask,"ax",%progbits
 2170              		.align	2
 2171              		.global	RTC_WriteIntervalMask
 2172              		.thumb
 2173              		.thumb_func
 2174              		.type	RTC_WriteIntervalMask, %function
 2175              	RTC_WriteIntervalMask:
 2176              	.LFB38:
1417:Generated_Source\PSoC5/RTC.c **** 
1418:Generated_Source\PSoC5/RTC.c **** 
1419:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1420:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_WriteIntervalMask
1421:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1422:Generated_Source\PSoC5/RTC.c **** *
1423:Generated_Source\PSoC5/RTC.c **** * Summary:
1424:Generated_Source\PSoC5/RTC.c **** *  Writes the Interval Mask software register with 1 bit per time/date entry.
1425:Generated_Source\PSoC5/RTC.c **** *  Interrupt true when any masked time/date overflow occur.
1426:Generated_Source\PSoC5/RTC.c **** *
1427:Generated_Source\PSoC5/RTC.c **** * Parameters:
1428:Generated_Source\PSoC5/RTC.c **** *  mask: Alarm Mask software register value.
1429:Generated_Source\PSoC5/RTC.c **** *
1430:Generated_Source\PSoC5/RTC.c **** * Return:
1431:Generated_Source\PSoC5/RTC.c **** *  None.
1432:Generated_Source\PSoC5/RTC.c **** *
1433:Generated_Source\PSoC5/RTC.c **** * Global variables:
1434:Generated_Source\PSoC5/RTC.c **** *  RTC_intervalCfgMask: this global variable is modified - the new
1435:Generated_Source\PSoC5/RTC.c **** *  value of interval mask is stored here.
1436:Generated_Source\PSoC5/RTC.c **** *
1437:Generated_Source\PSoC5/RTC.c **** * Reentrant:
1438:Generated_Source\PSoC5/RTC.c **** *  No.
1439:Generated_Source\PSoC5/RTC.c **** *
1440:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1441:Generated_Source\PSoC5/RTC.c **** void RTC_WriteIntervalMask(uint8 mask) 
1442:Generated_Source\PSoC5/RTC.c **** {
 2177              		.loc 1 1442 0
 2178              		.cfi_startproc
 2179              		@ args = 0, pretend = 0, frame = 8
 2180              		@ frame_needed = 1, uses_anonymous_args = 0
 2181              		@ link register save eliminated.
 2182 0000 80B4     		push	{r7}
 2183              		.cfi_def_cfa_offset 4
 2184              		.cfi_offset 7, -4
 2185 0002 83B0     		sub	sp, sp, #12
 2186              		.cfi_def_cfa_offset 16
 2187 0004 00AF     		add	r7, sp, #0
 2188              		.cfi_def_cfa_register 7
 2189 0006 0346     		mov	r3, r0
 2190 0008 FB71     		strb	r3, [r7, #7]
1443:Generated_Source\PSoC5/RTC.c ****     RTC_intervalCfgMask = mask;
 2191              		.loc 1 1443 0
 2192 000a 044A     		ldr	r2, .L168
 2193 000c FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 65


 2194 000e 1370     		strb	r3, [r2]
1444:Generated_Source\PSoC5/RTC.c **** }
 2195              		.loc 1 1444 0
 2196 0010 00BF     		nop
 2197 0012 0C37     		adds	r7, r7, #12
 2198              		.cfi_def_cfa_offset 4
 2199 0014 BD46     		mov	sp, r7
 2200              		.cfi_def_cfa_register 13
 2201              		@ sp needed
 2202 0016 80BC     		pop	{r7}
 2203              		.cfi_restore 7
 2204              		.cfi_def_cfa_offset 0
 2205 0018 7047     		bx	lr
 2206              	.L169:
 2207 001a 00BF     		.align	2
 2208              	.L168:
 2209 001c 00000000 		.word	RTC_intervalCfgMask
 2210              		.cfi_endproc
 2211              	.LFE38:
 2212              		.size	RTC_WriteIntervalMask, .-RTC_WriteIntervalMask
 2213              		.section	.text.RTC_ReadStatus,"ax",%progbits
 2214              		.align	2
 2215              		.global	RTC_ReadStatus
 2216              		.thumb
 2217              		.thumb_func
 2218              		.type	RTC_ReadStatus, %function
 2219              	RTC_ReadStatus:
 2220              	.LFB39:
1445:Generated_Source\PSoC5/RTC.c **** 
1446:Generated_Source\PSoC5/RTC.c **** 
1447:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1448:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_ReadStatus
1449:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1450:Generated_Source\PSoC5/RTC.c **** *
1451:Generated_Source\PSoC5/RTC.c **** * Summary:
1452:Generated_Source\PSoC5/RTC.c **** *  Reads the Status software register which has flags for DST
1453:Generated_Source\PSoC5/RTC.c **** *  (DST), Leap Year (LY) and AM/PM (AM_PM), Alarm active (AA).
1454:Generated_Source\PSoC5/RTC.c **** *
1455:Generated_Source\PSoC5/RTC.c **** * Parameters:
1456:Generated_Source\PSoC5/RTC.c **** *  None.
1457:Generated_Source\PSoC5/RTC.c **** *
1458:Generated_Source\PSoC5/RTC.c **** * Return:
1459:Generated_Source\PSoC5/RTC.c **** *  None.
1460:Generated_Source\PSoC5/RTC.c **** *
1461:Generated_Source\PSoC5/RTC.c **** * Global variables:
1462:Generated_Source\PSoC5/RTC.c **** *  RTC_statusDateTime: global variable is modified - active alarm
1463:Generated_Source\PSoC5/RTC.c **** *  status bit is cleared.
1464:Generated_Source\PSoC5/RTC.c **** *
1465:Generated_Source\PSoC5/RTC.c **** * Reentrant:
1466:Generated_Source\PSoC5/RTC.c **** *  No.
1467:Generated_Source\PSoC5/RTC.c **** *
1468:Generated_Source\PSoC5/RTC.c **** * Side Effects:
1469:Generated_Source\PSoC5/RTC.c **** *  Alarm active(AA) flag clear after read.
1470:Generated_Source\PSoC5/RTC.c **** *
1471:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1472:Generated_Source\PSoC5/RTC.c **** uint8 RTC_ReadStatus(void) 
1473:Generated_Source\PSoC5/RTC.c **** {
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 66


 2221              		.loc 1 1473 0
 2222              		.cfi_startproc
 2223              		@ args = 0, pretend = 0, frame = 8
 2224              		@ frame_needed = 1, uses_anonymous_args = 0
 2225              		@ link register save eliminated.
 2226 0000 80B4     		push	{r7}
 2227              		.cfi_def_cfa_offset 4
 2228              		.cfi_offset 7, -4
 2229 0002 83B0     		sub	sp, sp, #12
 2230              		.cfi_def_cfa_offset 16
 2231 0004 00AF     		add	r7, sp, #0
 2232              		.cfi_def_cfa_register 7
1474:Generated_Source\PSoC5/RTC.c ****     uint8 status;
1475:Generated_Source\PSoC5/RTC.c **** 
1476:Generated_Source\PSoC5/RTC.c ****     /* Save status */
1477:Generated_Source\PSoC5/RTC.c ****     status = (uint8)RTC_statusDateTime;
 2233              		.loc 1 1477 0
 2234 0006 084B     		ldr	r3, .L172
 2235 0008 1B78     		ldrb	r3, [r3]
 2236 000a FB71     		strb	r3, [r7, #7]
1478:Generated_Source\PSoC5/RTC.c **** 
1479:Generated_Source\PSoC5/RTC.c ****     /* Clean AA flag after read of Status Register */
1480:Generated_Source\PSoC5/RTC.c ****     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AA);
 2237              		.loc 1 1480 0
 2238 000c 064B     		ldr	r3, .L172
 2239 000e 1B78     		ldrb	r3, [r3]
 2240 0010 DBB2     		uxtb	r3, r3
 2241 0012 23F00803 		bic	r3, r3, #8
 2242 0016 DAB2     		uxtb	r2, r3
 2243 0018 034B     		ldr	r3, .L172
 2244 001a 1A70     		strb	r2, [r3]
1481:Generated_Source\PSoC5/RTC.c **** 
1482:Generated_Source\PSoC5/RTC.c ****     return (status);
 2245              		.loc 1 1482 0
 2246 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1483:Generated_Source\PSoC5/RTC.c **** }
 2247              		.loc 1 1483 0
 2248 001e 1846     		mov	r0, r3
 2249 0020 0C37     		adds	r7, r7, #12
 2250              		.cfi_def_cfa_offset 4
 2251 0022 BD46     		mov	sp, r7
 2252              		.cfi_def_cfa_register 13
 2253              		@ sp needed
 2254 0024 80BC     		pop	{r7}
 2255              		.cfi_restore 7
 2256              		.cfi_def_cfa_offset 0
 2257 0026 7047     		bx	lr
 2258              	.L173:
 2259              		.align	2
 2260              	.L172:
 2261 0028 00000000 		.word	RTC_statusDateTime
 2262              		.cfi_endproc
 2263              	.LFE39:
 2264              		.size	RTC_ReadStatus, .-RTC_ReadStatus
 2265              		.section	.text.RTC_DayOfWeek,"ax",%progbits
 2266              		.align	2
 2267              		.thumb
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 67


 2268              		.thumb_func
 2269              		.type	RTC_DayOfWeek, %function
 2270              	RTC_DayOfWeek:
 2271              	.LFB40:
1484:Generated_Source\PSoC5/RTC.c **** 
1485:Generated_Source\PSoC5/RTC.c **** 
1486:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1487:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_DayOfWeek
1488:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1489:Generated_Source\PSoC5/RTC.c **** *
1490:Generated_Source\PSoC5/RTC.c **** * Summary:
1491:Generated_Source\PSoC5/RTC.c **** *  Calculates Day Of Week value use Zeller's congruence.
1492:Generated_Source\PSoC5/RTC.c **** *
1493:Generated_Source\PSoC5/RTC.c **** * Parameters:
1494:Generated_Source\PSoC5/RTC.c **** *  dayOfMonth: Day Of Month value.
1495:Generated_Source\PSoC5/RTC.c **** *  month: Month value.
1496:Generated_Source\PSoC5/RTC.c **** *  year: Year value.
1497:Generated_Source\PSoC5/RTC.c **** *
1498:Generated_Source\PSoC5/RTC.c **** * Return:
1499:Generated_Source\PSoC5/RTC.c **** *  Day Of Week value.
1500:Generated_Source\PSoC5/RTC.c **** *
1501:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1502:Generated_Source\PSoC5/RTC.c **** static uint8 RTC_DayOfWeek(uint8 dayOfMonth, uint8 month, uint16 year)
1503:Generated_Source\PSoC5/RTC.c **** 
1504:Generated_Source\PSoC5/RTC.c **** {
 2272              		.loc 1 1504 0
 2273              		.cfi_startproc
 2274              		@ args = 0, pretend = 0, frame = 8
 2275              		@ frame_needed = 1, uses_anonymous_args = 0
 2276              		@ link register save eliminated.
 2277 0000 90B4     		push	{r4, r7}
 2278              		.cfi_def_cfa_offset 8
 2279              		.cfi_offset 4, -8
 2280              		.cfi_offset 7, -4
 2281 0002 82B0     		sub	sp, sp, #8
 2282              		.cfi_def_cfa_offset 16
 2283 0004 00AF     		add	r7, sp, #0
 2284              		.cfi_def_cfa_register 7
 2285 0006 0346     		mov	r3, r0
 2286 0008 FB71     		strb	r3, [r7, #7]
 2287 000a 0B46     		mov	r3, r1
 2288 000c BB71     		strb	r3, [r7, #6]
 2289 000e 1346     		mov	r3, r2	@ movhi
 2290 0010 BB80     		strh	r3, [r7, #4]	@ movhi
1505:Generated_Source\PSoC5/RTC.c ****     /* Calculated sequence ((31 * month) / 12) mod 7 from the Zeller's congruence */
1506:Generated_Source\PSoC5/RTC.c ****     static const uint8 CYCODE RTC_monthTemplate[RTC_MONTHS_IN_YEAR] =
1507:Generated_Source\PSoC5/RTC.c ****                                                             {0u, 3u, 2u, 5u, 0u, 3u, 5u, 1u, 4u, 6u
1508:Generated_Source\PSoC5/RTC.c **** 
1509:Generated_Source\PSoC5/RTC.c ****     /* It is simpler to handle the modified year, which is year - 1 during
1510:Generated_Source\PSoC5/RTC.c ****     * January and February
1511:Generated_Source\PSoC5/RTC.c ****     */
1512:Generated_Source\PSoC5/RTC.c ****     if(month < RTC_MARCH)
 2291              		.loc 1 1512 0
 2292 0012 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2293 0014 022B     		cmp	r3, #2
 2294 0016 02D8     		bhi	.L175
1513:Generated_Source\PSoC5/RTC.c ****     {
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 68


1514:Generated_Source\PSoC5/RTC.c ****         year = year - 1u;
 2295              		.loc 1 1514 0
 2296 0018 BB88     		ldrh	r3, [r7, #4]	@ movhi
 2297 001a 013B     		subs	r3, r3, #1
 2298 001c BB80     		strh	r3, [r7, #4]	@ movhi
 2299              	.L175:
1515:Generated_Source\PSoC5/RTC.c ****     }
1516:Generated_Source\PSoC5/RTC.c **** 
1517:Generated_Source\PSoC5/RTC.c ****     /* For Gregorian calendar: d = (day + y + y/4 - y/100 + y/400 + (31*m)/12) mod 7 */
1518:Generated_Source\PSoC5/RTC.c ****     return ((uint8)(((year + (((year/4u) - (year/100u)) + (year/400u))) +
 2300              		.loc 1 1518 0
 2301 001e BA88     		ldrh	r2, [r7, #4]
 2302 0020 BB88     		ldrh	r3, [r7, #4]
 2303 0022 9B08     		lsrs	r3, r3, #2
 2304 0024 9BB2     		uxth	r3, r3
 2305 0026 1846     		mov	r0, r3
 2306 0028 BB88     		ldrh	r3, [r7, #4]
 2307 002a 1349     		ldr	r1, .L177
 2308 002c A1FB0313 		umull	r1, r3, r1, r3
 2309 0030 5B09     		lsrs	r3, r3, #5
 2310 0032 9BB2     		uxth	r3, r3
 2311 0034 C31A     		subs	r3, r0, r3
 2312 0036 B988     		ldrh	r1, [r7, #4]
 2313 0038 0F48     		ldr	r0, .L177
 2314 003a A0FB0101 		umull	r0, r1, r0, r1
 2315 003e C909     		lsrs	r1, r1, #7
 2316 0040 89B2     		uxth	r1, r1
 2317 0042 0B44     		add	r3, r3, r1
 2318 0044 1344     		add	r3, r3, r2
1519:Generated_Source\PSoC5/RTC.c ****     (((uint16)RTC_monthTemplate[month - 1u]) + ((uint16) dayOfMonth))) % RTC_DAYS_IN_WEEK));
 2319              		.loc 1 1519 0
 2320 0046 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 2321 0048 013A     		subs	r2, r2, #1
 2322 004a 0C49     		ldr	r1, .L177+4
 2323 004c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2324 004e 1146     		mov	r1, r2
 2325 0050 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2326 0052 0A44     		add	r2, r2, r1
1518:Generated_Source\PSoC5/RTC.c ****     (((uint16)RTC_monthTemplate[month - 1u]) + ((uint16) dayOfMonth))) % RTC_DAYS_IN_WEEK));
 2327              		.loc 1 1518 0
 2328 0054 1A44     		add	r2, r2, r3
 2329              		.loc 1 1519 0
 2330 0056 0A4B     		ldr	r3, .L177+8
 2331 0058 A2FB0334 		umull	r3, r4, r2, r3
 2332 005c 111B     		subs	r1, r2, r4
 2333 005e 4908     		lsrs	r1, r1, #1
 2334 0060 0B19     		adds	r3, r1, r4
 2335 0062 9908     		lsrs	r1, r3, #2
 2336 0064 0B46     		mov	r3, r1
 2337 0066 DB00     		lsls	r3, r3, #3
 2338 0068 5B1A     		subs	r3, r3, r1
 2339 006a D11A     		subs	r1, r2, r3
1518:Generated_Source\PSoC5/RTC.c ****     (((uint16)RTC_monthTemplate[month - 1u]) + ((uint16) dayOfMonth))) % RTC_DAYS_IN_WEEK));
 2340              		.loc 1 1518 0
 2341 006c CBB2     		uxtb	r3, r1
1520:Generated_Source\PSoC5/RTC.c **** }
 2342              		.loc 1 1520 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 69


 2343 006e 1846     		mov	r0, r3
 2344 0070 0837     		adds	r7, r7, #8
 2345              		.cfi_def_cfa_offset 8
 2346 0072 BD46     		mov	sp, r7
 2347              		.cfi_def_cfa_register 13
 2348              		@ sp needed
 2349 0074 90BC     		pop	{r4, r7}
 2350              		.cfi_restore 7
 2351              		.cfi_restore 4
 2352              		.cfi_def_cfa_offset 0
 2353 0076 7047     		bx	lr
 2354              	.L178:
 2355              		.align	2
 2356              	.L177:
 2357 0078 1F85EB51 		.word	1374389535
 2358 007c 0C000000 		.word	RTC_monthTemplate.5230
 2359 0080 25499224 		.word	613566757
 2360              		.cfi_endproc
 2361              	.LFE40:
 2362              		.size	RTC_DayOfWeek, .-RTC_DayOfWeek
 2363              		.section	.text.RTC_SetInitValues,"ax",%progbits
 2364              		.align	2
 2365              		.thumb
 2366              		.thumb_func
 2367              		.type	RTC_SetInitValues, %function
 2368              	RTC_SetInitValues:
 2369              	.LFB41:
1521:Generated_Source\PSoC5/RTC.c **** 
1522:Generated_Source\PSoC5/RTC.c **** 
1523:Generated_Source\PSoC5/RTC.c **** /*******************************************************************************
1524:Generated_Source\PSoC5/RTC.c **** * Function Name:   RTC_SetInitValues
1525:Generated_Source\PSoC5/RTC.c **** ********************************************************************************
1526:Generated_Source\PSoC5/RTC.c **** *
1527:Generated_Source\PSoC5/RTC.c **** * Summary:
1528:Generated_Source\PSoC5/RTC.c **** *    Does all initial calculation.
1529:Generated_Source\PSoC5/RTC.c **** *    - Set LP Year flag;
1530:Generated_Source\PSoC5/RTC.c **** *    - Set AM/PM flag;
1531:Generated_Source\PSoC5/RTC.c **** *    - DayOfWeek;
1532:Generated_Source\PSoC5/RTC.c **** *    - DayOfYear;
1533:Generated_Source\PSoC5/RTC.c **** *    - Set DST flag;
1534:Generated_Source\PSoC5/RTC.c **** *    - Convert relative to absolute date.
1535:Generated_Source\PSoC5/RTC.c **** *
1536:Generated_Source\PSoC5/RTC.c **** * Parameters:
1537:Generated_Source\PSoC5/RTC.c **** *  None.
1538:Generated_Source\PSoC5/RTC.c **** *
1539:Generated_Source\PSoC5/RTC.c **** * Return:
1540:Generated_Source\PSoC5/RTC.c **** *  None.
1541:Generated_Source\PSoC5/RTC.c **** *
1542:Generated_Source\PSoC5/RTC.c **** * Global variables:
1543:Generated_Source\PSoC5/RTC.c **** *  RTC_currentTimeDate, RTC_dstTimeDateStart,
1544:Generated_Source\PSoC5/RTC.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
1545:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
1546:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
1547:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus:
1548:Generated_Source\PSoC5/RTC.c **** *  global variables are used while the initial calculation.
1549:Generated_Source\PSoC5/RTC.c **** *
1550:Generated_Source\PSoC5/RTC.c **** * RTC_dstTimeDateStart, RTC_currentTimeDate,
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 70


1551:Generated_Source\PSoC5/RTC.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
1552:Generated_Source\PSoC5/RTC.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
1553:Generated_Source\PSoC5/RTC.c **** *  RTC_alarmCurStatus: global variables are modified with the
1554:Generated_Source\PSoC5/RTC.c **** *  initial calculated data.
1555:Generated_Source\PSoC5/RTC.c **** *
1556:Generated_Source\PSoC5/RTC.c **** * Reentrant:
1557:Generated_Source\PSoC5/RTC.c **** *  No.
1558:Generated_Source\PSoC5/RTC.c **** *
1559:Generated_Source\PSoC5/RTC.c **** *******************************************************************************/
1560:Generated_Source\PSoC5/RTC.c **** static void RTC_SetInitValues(void) 
1561:Generated_Source\PSoC5/RTC.c **** {
 2370              		.loc 1 1561 0
 2371              		.cfi_startproc
 2372              		@ args = 0, pretend = 0, frame = 8
 2373              		@ frame_needed = 1, uses_anonymous_args = 0
 2374 0000 80B5     		push	{r7, lr}
 2375              		.cfi_def_cfa_offset 8
 2376              		.cfi_offset 7, -8
 2377              		.cfi_offset 14, -4
 2378 0002 82B0     		sub	sp, sp, #8
 2379              		.cfi_def_cfa_offset 16
 2380 0004 00AF     		add	r7, sp, #0
 2381              		.cfi_def_cfa_register 7
1562:Generated_Source\PSoC5/RTC.c ****     uint8 i;
1563:Generated_Source\PSoC5/RTC.c ****     uint8 RTC_alarmCfgMaskTemp;
1564:Generated_Source\PSoC5/RTC.c **** 
1565:Generated_Source\PSoC5/RTC.c ****     /* Clears day of month counter */
1566:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.DayOfYear = 0u;
 2382              		.loc 1 1566 0
 2383 0006 9C4B     		ldr	r3, .L245
 2384 0008 0022     		movs	r2, #0
 2385 000a DA80     		strh	r2, [r3, #6]	@ movhi
1567:Generated_Source\PSoC5/RTC.c **** 
1568:Generated_Source\PSoC5/RTC.c ****     /* Increments day of year value with day in current month */
1569:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.DayOfYear += RTC_currentTimeDate.DayOfMonth;
 2386              		.loc 1 1569 0
 2387 000c 9A4B     		ldr	r3, .L245
 2388 000e 1B79     		ldrb	r3, [r3, #4]
 2389 0010 D9B2     		uxtb	r1, r3
 2390 0012 994B     		ldr	r3, .L245
 2391 0014 DB88     		ldrh	r3, [r3, #6]	@ movhi
 2392 0016 9AB2     		uxth	r2, r3
 2393 0018 8BB2     		uxth	r3, r1
 2394 001a 1344     		add	r3, r3, r2
 2395 001c 9AB2     		uxth	r2, r3
 2396 001e 964B     		ldr	r3, .L245
 2397 0020 DA80     		strh	r2, [r3, #6]	@ movhi
1570:Generated_Source\PSoC5/RTC.c **** 
1571:Generated_Source\PSoC5/RTC.c ****     /* Check leap year */
1572:Generated_Source\PSoC5/RTC.c ****     if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 2398              		.loc 1 1572 0
 2399 0022 954B     		ldr	r3, .L245
 2400 0024 5B89     		ldrh	r3, [r3, #10]	@ movhi
 2401 0026 9BB2     		uxth	r3, r3
 2402 0028 944A     		ldr	r2, .L245+4
 2403 002a A2FB0312 		umull	r1, r2, r2, r3
 2404 002e D209     		lsrs	r2, r2, #7
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 71


 2405 0030 4FF4C871 		mov	r1, #400
 2406 0034 01FB02F2 		mul	r2, r1, r2
 2407 0038 9B1A     		subs	r3, r3, r2
 2408 003a 9BB2     		uxth	r3, r3
 2409 003c 002B     		cmp	r3, #0
 2410 003e 15D0     		beq	.L180
 2411              		.loc 1 1572 0 is_stmt 0 discriminator 1
 2412 0040 8D4B     		ldr	r3, .L245
 2413 0042 5B89     		ldrh	r3, [r3, #10]	@ movhi
 2414 0044 9BB2     		uxth	r3, r3
 2415 0046 03F00303 		and	r3, r3, #3
 2416 004a 9BB2     		uxth	r3, r3
 2417 004c 002B     		cmp	r3, #0
 2418 004e 16D1     		bne	.L181
 2419              		.loc 1 1572 0 discriminator 2
 2420 0050 894B     		ldr	r3, .L245
 2421 0052 5B89     		ldrh	r3, [r3, #10]	@ movhi
 2422 0054 9BB2     		uxth	r3, r3
 2423 0056 894A     		ldr	r2, .L245+4
 2424 0058 A2FB0312 		umull	r1, r2, r2, r3
 2425 005c 5209     		lsrs	r2, r2, #5
 2426 005e 6421     		movs	r1, #100
 2427 0060 01FB02F2 		mul	r2, r1, r2
 2428 0064 9B1A     		subs	r3, r3, r2
 2429 0066 9BB2     		uxth	r3, r3
 2430 0068 002B     		cmp	r3, #0
 2431 006a 08D0     		beq	.L181
 2432              	.L180:
1573:Generated_Source\PSoC5/RTC.c ****     {
1574:Generated_Source\PSoC5/RTC.c ****         /* Set LP Year flag */
1575:Generated_Source\PSoC5/RTC.c ****         RTC_statusDateTime |= RTC_STATUS_LY;
 2433              		.loc 1 1575 0 is_stmt 1
 2434 006c 844B     		ldr	r3, .L245+8
 2435 006e 1B78     		ldrb	r3, [r3]
 2436 0070 DBB2     		uxtb	r3, r3
 2437 0072 43F00203 		orr	r3, r3, #2
 2438 0076 DAB2     		uxtb	r2, r3
 2439 0078 814B     		ldr	r3, .L245+8
 2440 007a 1A70     		strb	r2, [r3]
 2441 007c 07E0     		b	.L182
 2442              	.L181:
1576:Generated_Source\PSoC5/RTC.c ****     }   /* leap year flag was set */
1577:Generated_Source\PSoC5/RTC.c ****     else
1578:Generated_Source\PSoC5/RTC.c ****     {
1579:Generated_Source\PSoC5/RTC.c ****         /* Clear LP Year flag */
1580:Generated_Source\PSoC5/RTC.c ****         RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 2443              		.loc 1 1580 0
 2444 007e 804B     		ldr	r3, .L245+8
 2445 0080 1B78     		ldrb	r3, [r3]
 2446 0082 DBB2     		uxtb	r3, r3
 2447 0084 23F00203 		bic	r3, r3, #2
 2448 0088 DAB2     		uxtb	r2, r3
 2449 008a 7D4B     		ldr	r3, .L245+8
 2450 008c 1A70     		strb	r2, [r3]
 2451              	.L182:
1581:Generated_Source\PSoC5/RTC.c ****     }   /* leap year flag was cleared */
1582:Generated_Source\PSoC5/RTC.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 72


1583:Generated_Source\PSoC5/RTC.c ****     /* Day of Year */
1584:Generated_Source\PSoC5/RTC.c ****     for(i = 0u; i < (RTC_currentTimeDate.Month - 1u); i++)
 2452              		.loc 1 1584 0
 2453 008e 0023     		movs	r3, #0
 2454 0090 FB71     		strb	r3, [r7, #7]
 2455 0092 0DE0     		b	.L183
 2456              	.L184:
1585:Generated_Source\PSoC5/RTC.c ****     {
1586:Generated_Source\PSoC5/RTC.c ****         /* Increment on days in passed months */
1587:Generated_Source\PSoC5/RTC.c ****         RTC_currentTimeDate.DayOfYear += RTC_daysInMonths[i];
 2457              		.loc 1 1587 0 discriminator 3
 2458 0094 784B     		ldr	r3, .L245
 2459 0096 DB88     		ldrh	r3, [r3, #6]	@ movhi
 2460 0098 9AB2     		uxth	r2, r3
 2461 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2462 009c 7949     		ldr	r1, .L245+12
 2463 009e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2464 00a0 9BB2     		uxth	r3, r3
 2465 00a2 1344     		add	r3, r3, r2
 2466 00a4 9AB2     		uxth	r2, r3
 2467 00a6 744B     		ldr	r3, .L245
 2468 00a8 DA80     		strh	r2, [r3, #6]	@ movhi
1584:Generated_Source\PSoC5/RTC.c ****     {
 2469              		.loc 1 1584 0 discriminator 3
 2470 00aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2471 00ac 0133     		adds	r3, r3, #1
 2472 00ae FB71     		strb	r3, [r7, #7]
 2473              	.L183:
1584:Generated_Source\PSoC5/RTC.c ****     {
 2474              		.loc 1 1584 0 is_stmt 0 discriminator 1
 2475 00b0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2476 00b2 714B     		ldr	r3, .L245
 2477 00b4 1B7A     		ldrb	r3, [r3, #8]
 2478 00b6 DBB2     		uxtb	r3, r3
 2479 00b8 013B     		subs	r3, r3, #1
 2480 00ba 9A42     		cmp	r2, r3
 2481 00bc EAD3     		bcc	.L184
1588:Generated_Source\PSoC5/RTC.c ****     }   /* day of year is calculated */
1589:Generated_Source\PSoC5/RTC.c **** 
1590:Generated_Source\PSoC5/RTC.c ****     /* Leap year check */
1591:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_LY))
 2482              		.loc 1 1591 0 is_stmt 1
 2483 00be 704B     		ldr	r3, .L245+8
 2484 00c0 1B78     		ldrb	r3, [r3]
 2485 00c2 DBB2     		uxtb	r3, r3
 2486 00c4 03F00203 		and	r3, r3, #2
 2487 00c8 002B     		cmp	r3, #0
 2488 00ca 0BD0     		beq	.L185
1592:Generated_Source\PSoC5/RTC.c ****     {
1593:Generated_Source\PSoC5/RTC.c ****         /* Leap day check */
1594:Generated_Source\PSoC5/RTC.c ****         if(RTC_currentTimeDate.Month > RTC_FEBRUARY)
 2489              		.loc 1 1594 0
 2490 00cc 6A4B     		ldr	r3, .L245
 2491 00ce 1B7A     		ldrb	r3, [r3, #8]
 2492 00d0 DBB2     		uxtb	r3, r3
 2493 00d2 022B     		cmp	r3, #2
 2494 00d4 06D9     		bls	.L185
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 73


1595:Generated_Source\PSoC5/RTC.c ****         {
1596:Generated_Source\PSoC5/RTC.c ****             /* Add leap day */
1597:Generated_Source\PSoC5/RTC.c ****             RTC_currentTimeDate.DayOfYear++;
 2495              		.loc 1 1597 0
 2496 00d6 684B     		ldr	r3, .L245
 2497 00d8 DB88     		ldrh	r3, [r3, #6]	@ movhi
 2498 00da 9BB2     		uxth	r3, r3
 2499 00dc 0133     		adds	r3, r3, #1
 2500 00de 9AB2     		uxth	r2, r3
 2501 00e0 654B     		ldr	r3, .L245
 2502 00e2 DA80     		strh	r2, [r3, #6]	@ movhi
 2503              	.L185:
1598:Generated_Source\PSoC5/RTC.c ****         }   /* Do nothing for non leap day */
1599:Generated_Source\PSoC5/RTC.c ****     }   /* Do nothing for not leap year */
1600:Generated_Source\PSoC5/RTC.c **** 
1601:Generated_Source\PSoC5/RTC.c ****     /* DayOfWeek */
1602:Generated_Source\PSoC5/RTC.c ****     RTC_currentTimeDate.DayOfWeek = RTC_DayOfWeek(
 2504              		.loc 1 1602 0
 2505 00e4 644B     		ldr	r3, .L245
 2506 00e6 1B79     		ldrb	r3, [r3, #4]
 2507 00e8 D8B2     		uxtb	r0, r3
 2508 00ea 634B     		ldr	r3, .L245
 2509 00ec 1B7A     		ldrb	r3, [r3, #8]
 2510 00ee D9B2     		uxtb	r1, r3
 2511 00f0 614B     		ldr	r3, .L245
 2512 00f2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 2513 00f4 9BB2     		uxth	r3, r3
 2514 00f6 1A46     		mov	r2, r3
 2515 00f8 FFF7FEFF 		bl	RTC_DayOfWeek
 2516 00fc 0346     		mov	r3, r0
 2517 00fe 0133     		adds	r3, r3, #1
 2518 0100 DAB2     		uxtb	r2, r3
 2519 0102 5D4B     		ldr	r3, .L245
 2520 0104 DA70     		strb	r2, [r3, #3]
1603:Generated_Source\PSoC5/RTC.c ****                                                                         RTC_currentTimeDate.DayOfMo
1604:Generated_Source\PSoC5/RTC.c ****                                                                         RTC_currentTimeDate.Month,
1605:Generated_Source\PSoC5/RTC.c ****                                                                         RTC_currentTimeDate.Year) +
1606:Generated_Source\PSoC5/RTC.c **** 
1607:Generated_Source\PSoC5/RTC.c ****     if(RTC_currentTimeDate.DayOfWeek > RTC_START_OF_WEEK)
 2521              		.loc 1 1607 0
 2522 0106 5C4B     		ldr	r3, .L245
 2523 0108 DB78     		ldrb	r3, [r3, #3]
 2524 010a DBB2     		uxtb	r3, r3
 2525 010c 012B     		cmp	r3, #1
 2526 010e 07D9     		bls	.L186
1608:Generated_Source\PSoC5/RTC.c ****     {
1609:Generated_Source\PSoC5/RTC.c ****         RTC_currentTimeDate.DayOfWeek -= RTC_START_OF_WEEK;
 2527              		.loc 1 1609 0
 2528 0110 594B     		ldr	r3, .L245
 2529 0112 DB78     		ldrb	r3, [r3, #3]
 2530 0114 DBB2     		uxtb	r3, r3
 2531 0116 013B     		subs	r3, r3, #1
 2532 0118 DAB2     		uxtb	r2, r3
 2533 011a 574B     		ldr	r3, .L245
 2534 011c DA70     		strb	r2, [r3, #3]
 2535 011e 06E0     		b	.L187
 2536              	.L186:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 74


1610:Generated_Source\PSoC5/RTC.c ****     }
1611:Generated_Source\PSoC5/RTC.c ****     else
1612:Generated_Source\PSoC5/RTC.c ****     {
1613:Generated_Source\PSoC5/RTC.c ****         RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK -
1614:Generated_Source\PSoC5/RTC.c ****                                         (RTC_START_OF_WEEK - RTC_currentTimeDate.DayOfWeek);
 2537              		.loc 1 1614 0
 2538 0120 554B     		ldr	r3, .L245
 2539 0122 DB78     		ldrb	r3, [r3, #3]
 2540 0124 DBB2     		uxtb	r3, r3
1613:Generated_Source\PSoC5/RTC.c ****                                         (RTC_START_OF_WEEK - RTC_currentTimeDate.DayOfWeek);
 2541              		.loc 1 1613 0
 2542 0126 0633     		adds	r3, r3, #6
 2543 0128 DAB2     		uxtb	r2, r3
 2544 012a 534B     		ldr	r3, .L245
 2545 012c DA70     		strb	r2, [r3, #3]
 2546              	.L187:
1615:Generated_Source\PSoC5/RTC.c ****     }
1616:Generated_Source\PSoC5/RTC.c **** 
1617:Generated_Source\PSoC5/RTC.c ****     #if (1u == RTC_DST_FUNC_ENABLE)
1618:Generated_Source\PSoC5/RTC.c **** 
1619:Generated_Source\PSoC5/RTC.c ****         /* If DST values is given in a relative manner, converts to the absolute values */
1620:Generated_Source\PSoC5/RTC.c ****         if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_RELDATE))
 2547              		.loc 1 1620 0
 2548 012e 564B     		ldr	r3, .L245+16
 2549 0130 1B78     		ldrb	r3, [r3]
 2550 0132 DBB2     		uxtb	r3, r3
 2551 0134 03F00203 		and	r3, r3, #2
 2552 0138 002B     		cmp	r3, #0
 2553 013a 01D0     		beq	.L188
1621:Generated_Source\PSoC5/RTC.c ****         {
1622:Generated_Source\PSoC5/RTC.c ****             RTC_DSTDateConversion();
 2554              		.loc 1 1622 0
 2555 013c FFF7FEFF 		bl	RTC_DSTDateConversion
 2556              	.L188:
1623:Generated_Source\PSoC5/RTC.c ****         }
1624:Generated_Source\PSoC5/RTC.c **** 
1625:Generated_Source\PSoC5/RTC.c ****         /* Sets DST status respect to the DST start date and time */
1626:Generated_Source\PSoC5/RTC.c ****         if(RTC_currentTimeDate.Month > RTC_dstTimeDateStart.Month)
 2557              		.loc 1 1626 0
 2558 0140 4D4B     		ldr	r3, .L245
 2559 0142 1B7A     		ldrb	r3, [r3, #8]
 2560 0144 DAB2     		uxtb	r2, r3
 2561 0146 514B     		ldr	r3, .L245+20
 2562 0148 1B79     		ldrb	r3, [r3, #4]
 2563 014a DBB2     		uxtb	r3, r3
 2564 014c 9A42     		cmp	r2, r3
 2565 014e 08D9     		bls	.L189
1627:Generated_Source\PSoC5/RTC.c ****         {
1628:Generated_Source\PSoC5/RTC.c ****             RTC_statusDateTime |= RTC_STATUS_DST;
 2566              		.loc 1 1628 0
 2567 0150 4B4B     		ldr	r3, .L245+8
 2568 0152 1B78     		ldrb	r3, [r3]
 2569 0154 DBB2     		uxtb	r3, r3
 2570 0156 43F00103 		orr	r3, r3, #1
 2571 015a DAB2     		uxtb	r2, r3
 2572 015c 484B     		ldr	r3, .L245+8
 2573 015e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 75


 2574 0160 30E0     		b	.L190
 2575              	.L189:
1629:Generated_Source\PSoC5/RTC.c ****         }
1630:Generated_Source\PSoC5/RTC.c ****         else if(RTC_currentTimeDate.Month == RTC_dstTimeDateStart.Month)
 2576              		.loc 1 1630 0
 2577 0162 454B     		ldr	r3, .L245
 2578 0164 1B7A     		ldrb	r3, [r3, #8]
 2579 0166 DAB2     		uxtb	r2, r3
 2580 0168 484B     		ldr	r3, .L245+20
 2581 016a 1B79     		ldrb	r3, [r3, #4]
 2582 016c DBB2     		uxtb	r3, r3
 2583 016e 9A42     		cmp	r2, r3
 2584 0170 28D1     		bne	.L190
1631:Generated_Source\PSoC5/RTC.c ****         {
1632:Generated_Source\PSoC5/RTC.c ****             if(RTC_currentTimeDate.DayOfMonth > RTC_dstTimeDateStart.DayOfMonth)
 2585              		.loc 1 1632 0
 2586 0172 414B     		ldr	r3, .L245
 2587 0174 1B79     		ldrb	r3, [r3, #4]
 2588 0176 DAB2     		uxtb	r2, r3
 2589 0178 444B     		ldr	r3, .L245+20
 2590 017a DB78     		ldrb	r3, [r3, #3]
 2591 017c DBB2     		uxtb	r3, r3
 2592 017e 9A42     		cmp	r2, r3
 2593 0180 08D9     		bls	.L191
1633:Generated_Source\PSoC5/RTC.c ****             {
1634:Generated_Source\PSoC5/RTC.c ****                 RTC_statusDateTime |= RTC_STATUS_DST;
 2594              		.loc 1 1634 0
 2595 0182 3F4B     		ldr	r3, .L245+8
 2596 0184 1B78     		ldrb	r3, [r3]
 2597 0186 DBB2     		uxtb	r3, r3
 2598 0188 43F00103 		orr	r3, r3, #1
 2599 018c DAB2     		uxtb	r2, r3
 2600 018e 3C4B     		ldr	r3, .L245+8
 2601 0190 1A70     		strb	r2, [r3]
 2602 0192 17E0     		b	.L190
 2603              	.L191:
1635:Generated_Source\PSoC5/RTC.c ****             }
1636:Generated_Source\PSoC5/RTC.c ****             else if(RTC_currentTimeDate.DayOfMonth == RTC_dstTimeDateStart.DayOfMonth)
 2604              		.loc 1 1636 0
 2605 0194 384B     		ldr	r3, .L245
 2606 0196 1B79     		ldrb	r3, [r3, #4]
 2607 0198 DAB2     		uxtb	r2, r3
 2608 019a 3C4B     		ldr	r3, .L245+20
 2609 019c DB78     		ldrb	r3, [r3, #3]
 2610 019e DBB2     		uxtb	r3, r3
 2611 01a0 9A42     		cmp	r2, r3
 2612 01a2 0FD1     		bne	.L190
1637:Generated_Source\PSoC5/RTC.c ****             {
1638:Generated_Source\PSoC5/RTC.c ****                 if(RTC_currentTimeDate.Hour > RTC_dstTimeDateStart.Hour)
 2613              		.loc 1 1638 0
 2614 01a4 344B     		ldr	r3, .L245
 2615 01a6 9B78     		ldrb	r3, [r3, #2]
 2616 01a8 DAB2     		uxtb	r2, r3
 2617 01aa 384B     		ldr	r3, .L245+20
 2618 01ac 1B78     		ldrb	r3, [r3]
 2619 01ae DBB2     		uxtb	r3, r3
 2620 01b0 9A42     		cmp	r2, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 76


 2621 01b2 07D9     		bls	.L190
1639:Generated_Source\PSoC5/RTC.c ****                 {
1640:Generated_Source\PSoC5/RTC.c ****                     RTC_statusDateTime |= RTC_STATUS_DST;
 2622              		.loc 1 1640 0
 2623 01b4 324B     		ldr	r3, .L245+8
 2624 01b6 1B78     		ldrb	r3, [r3]
 2625 01b8 DBB2     		uxtb	r3, r3
 2626 01ba 43F00103 		orr	r3, r3, #1
 2627 01be DAB2     		uxtb	r2, r3
 2628 01c0 2F4B     		ldr	r3, .L245+8
 2629 01c2 1A70     		strb	r2, [r3]
 2630              	.L190:
1641:Generated_Source\PSoC5/RTC.c ****                 }
1642:Generated_Source\PSoC5/RTC.c ****             }
1643:Generated_Source\PSoC5/RTC.c ****             else
1644:Generated_Source\PSoC5/RTC.c ****             {
1645:Generated_Source\PSoC5/RTC.c ****                 /* Do nothing if current day of month is less than DST stop day of month */
1646:Generated_Source\PSoC5/RTC.c ****             }
1647:Generated_Source\PSoC5/RTC.c ****         }
1648:Generated_Source\PSoC5/RTC.c ****         else
1649:Generated_Source\PSoC5/RTC.c ****         {
1650:Generated_Source\PSoC5/RTC.c ****             /* Do nothing if current month is before than DST stop month */
1651:Generated_Source\PSoC5/RTC.c ****         }
1652:Generated_Source\PSoC5/RTC.c **** 
1653:Generated_Source\PSoC5/RTC.c ****         /* Clears DST status respect to the DST start date and time */
1654:Generated_Source\PSoC5/RTC.c ****         if(RTC_currentTimeDate.Month > RTC_dstTimeDateStop.Month)
 2631              		.loc 1 1654 0
 2632 01c4 2C4B     		ldr	r3, .L245
 2633 01c6 1B7A     		ldrb	r3, [r3, #8]
 2634 01c8 DAB2     		uxtb	r2, r3
 2635 01ca 314B     		ldr	r3, .L245+24
 2636 01cc 1B79     		ldrb	r3, [r3, #4]
 2637 01ce DBB2     		uxtb	r3, r3
 2638 01d0 9A42     		cmp	r2, r3
 2639 01d2 08D9     		bls	.L193
1655:Generated_Source\PSoC5/RTC.c ****         {
1656:Generated_Source\PSoC5/RTC.c ****             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 2640              		.loc 1 1656 0
 2641 01d4 2A4B     		ldr	r3, .L245+8
 2642 01d6 1B78     		ldrb	r3, [r3]
 2643 01d8 DBB2     		uxtb	r3, r3
 2644 01da 23F00103 		bic	r3, r3, #1
 2645 01de DAB2     		uxtb	r2, r3
 2646 01e0 274B     		ldr	r3, .L245+8
 2647 01e2 1A70     		strb	r2, [r3]
 2648 01e4 30E0     		b	.L194
 2649              	.L193:
1657:Generated_Source\PSoC5/RTC.c ****         }
1658:Generated_Source\PSoC5/RTC.c ****         else if(RTC_currentTimeDate.Month == RTC_dstTimeDateStop.Month)
 2650              		.loc 1 1658 0
 2651 01e6 244B     		ldr	r3, .L245
 2652 01e8 1B7A     		ldrb	r3, [r3, #8]
 2653 01ea DAB2     		uxtb	r2, r3
 2654 01ec 284B     		ldr	r3, .L245+24
 2655 01ee 1B79     		ldrb	r3, [r3, #4]
 2656 01f0 DBB2     		uxtb	r3, r3
 2657 01f2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 77


 2658 01f4 28D1     		bne	.L194
1659:Generated_Source\PSoC5/RTC.c ****         {
1660:Generated_Source\PSoC5/RTC.c ****             if(RTC_currentTimeDate.DayOfMonth > RTC_dstTimeDateStop.DayOfMonth)
 2659              		.loc 1 1660 0
 2660 01f6 204B     		ldr	r3, .L245
 2661 01f8 1B79     		ldrb	r3, [r3, #4]
 2662 01fa DAB2     		uxtb	r2, r3
 2663 01fc 244B     		ldr	r3, .L245+24
 2664 01fe DB78     		ldrb	r3, [r3, #3]
 2665 0200 DBB2     		uxtb	r3, r3
 2666 0202 9A42     		cmp	r2, r3
 2667 0204 08D9     		bls	.L195
1661:Generated_Source\PSoC5/RTC.c ****             {
1662:Generated_Source\PSoC5/RTC.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 2668              		.loc 1 1662 0
 2669 0206 1E4B     		ldr	r3, .L245+8
 2670 0208 1B78     		ldrb	r3, [r3]
 2671 020a DBB2     		uxtb	r3, r3
 2672 020c 23F00103 		bic	r3, r3, #1
 2673 0210 DAB2     		uxtb	r2, r3
 2674 0212 1B4B     		ldr	r3, .L245+8
 2675 0214 1A70     		strb	r2, [r3]
 2676 0216 17E0     		b	.L194
 2677              	.L195:
1663:Generated_Source\PSoC5/RTC.c ****             }
1664:Generated_Source\PSoC5/RTC.c ****             else if(RTC_currentTimeDate.DayOfMonth == RTC_dstTimeDateStop.DayOfMonth)
 2678              		.loc 1 1664 0
 2679 0218 174B     		ldr	r3, .L245
 2680 021a 1B79     		ldrb	r3, [r3, #4]
 2681 021c DAB2     		uxtb	r2, r3
 2682 021e 1C4B     		ldr	r3, .L245+24
 2683 0220 DB78     		ldrb	r3, [r3, #3]
 2684 0222 DBB2     		uxtb	r3, r3
 2685 0224 9A42     		cmp	r2, r3
 2686 0226 0FD1     		bne	.L194
1665:Generated_Source\PSoC5/RTC.c ****             {
1666:Generated_Source\PSoC5/RTC.c ****                 if(RTC_currentTimeDate.Hour > RTC_dstTimeDateStop.Hour)
 2687              		.loc 1 1666 0
 2688 0228 134B     		ldr	r3, .L245
 2689 022a 9B78     		ldrb	r3, [r3, #2]
 2690 022c DAB2     		uxtb	r2, r3
 2691 022e 184B     		ldr	r3, .L245+24
 2692 0230 1B78     		ldrb	r3, [r3]
 2693 0232 DBB2     		uxtb	r3, r3
 2694 0234 9A42     		cmp	r2, r3
 2695 0236 07D9     		bls	.L194
1667:Generated_Source\PSoC5/RTC.c ****                 {
1668:Generated_Source\PSoC5/RTC.c ****                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 2696              		.loc 1 1668 0
 2697 0238 114B     		ldr	r3, .L245+8
 2698 023a 1B78     		ldrb	r3, [r3]
 2699 023c DBB2     		uxtb	r3, r3
 2700 023e 23F00103 		bic	r3, r3, #1
 2701 0242 DAB2     		uxtb	r2, r3
 2702 0244 0E4B     		ldr	r3, .L245+8
 2703 0246 1A70     		strb	r2, [r3]
 2704              	.L194:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 78


1669:Generated_Source\PSoC5/RTC.c ****                 }
1670:Generated_Source\PSoC5/RTC.c ****             }
1671:Generated_Source\PSoC5/RTC.c ****             else
1672:Generated_Source\PSoC5/RTC.c ****             {
1673:Generated_Source\PSoC5/RTC.c ****                 /* Do nothing if current day of month is less than DST stop day of month */
1674:Generated_Source\PSoC5/RTC.c ****             }
1675:Generated_Source\PSoC5/RTC.c ****         }
1676:Generated_Source\PSoC5/RTC.c ****         else
1677:Generated_Source\PSoC5/RTC.c ****         {
1678:Generated_Source\PSoC5/RTC.c ****             /* Do nothing if current month is before than DST stop month */
1679:Generated_Source\PSoC5/RTC.c ****         }
1680:Generated_Source\PSoC5/RTC.c **** 
1681:Generated_Source\PSoC5/RTC.c ****         /* Clear DST start/stop statuses */
1682:Generated_Source\PSoC5/RTC.c ****         RTC_dstStartStatus = 0u;
 2705              		.loc 1 1682 0
 2706 0248 124B     		ldr	r3, .L245+28
 2707 024a 0022     		movs	r2, #0
 2708 024c 1A70     		strb	r2, [r3]
1683:Generated_Source\PSoC5/RTC.c ****         RTC_dstStopStatus = 0u;
 2709              		.loc 1 1683 0
 2710 024e 124B     		ldr	r3, .L245+32
 2711 0250 0022     		movs	r2, #0
 2712 0252 1A70     		strb	r2, [r3]
1684:Generated_Source\PSoC5/RTC.c **** 
1685:Generated_Source\PSoC5/RTC.c ****         /* Sets DST stop status month flag if DST stop month is equal to the
1686:Generated_Source\PSoC5/RTC.c ****         * current month, otherwise clears that flag.
1687:Generated_Source\PSoC5/RTC.c ****         */
1688:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 2713              		.loc 1 1688 0
 2714 0254 0E4B     		ldr	r3, .L245+24
 2715 0256 1B79     		ldrb	r3, [r3, #4]
 2716 0258 DAB2     		uxtb	r2, r3
 2717 025a 074B     		ldr	r3, .L245
 2718 025c 1B7A     		ldrb	r3, [r3, #8]
 2719 025e DBB2     		uxtb	r3, r3
 2720 0260 9A42     		cmp	r2, r3
 2721 0262 1BD1     		bne	.L197
1689:Generated_Source\PSoC5/RTC.c ****         {
1690:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus |= RTC_DST_MONTH;
 2722              		.loc 1 1690 0
 2723 0264 0C4B     		ldr	r3, .L245+32
 2724 0266 1B78     		ldrb	r3, [r3]
 2725 0268 DBB2     		uxtb	r3, r3
 2726 026a 43F00403 		orr	r3, r3, #4
 2727 026e DAB2     		uxtb	r2, r3
 2728 0270 094B     		ldr	r3, .L245+32
 2729 0272 1A70     		strb	r2, [r3]
 2730 0274 1AE0     		b	.L198
 2731              	.L246:
 2732 0276 00BF     		.align	2
 2733              	.L245:
 2734 0278 00000000 		.word	RTC_currentTimeDate
 2735 027c 1F85EB51 		.word	1374389535
 2736 0280 00000000 		.word	RTC_statusDateTime
 2737 0284 00000000 		.word	RTC_daysInMonths
 2738 0288 00000000 		.word	RTC_dstModeType
 2739 028c 00000000 		.word	RTC_dstTimeDateStart
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 79


 2740 0290 00000000 		.word	RTC_dstTimeDateStop
 2741 0294 00000000 		.word	RTC_dstStartStatus
 2742 0298 00000000 		.word	RTC_dstStopStatus
 2743              	.L197:
1691:Generated_Source\PSoC5/RTC.c ****         }
1692:Generated_Source\PSoC5/RTC.c ****         else
1693:Generated_Source\PSoC5/RTC.c ****         {
1694:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 2744              		.loc 1 1694 0
 2745 029c 3E4B     		ldr	r3, .L247
 2746 029e 1B78     		ldrb	r3, [r3]
 2747 02a0 DBB2     		uxtb	r3, r3
 2748 02a2 23F00403 		bic	r3, r3, #4
 2749 02a6 DAB2     		uxtb	r2, r3
 2750 02a8 3B4B     		ldr	r3, .L247
 2751 02aa 1A70     		strb	r2, [r3]
 2752              	.L198:
1695:Generated_Source\PSoC5/RTC.c ****         }
1696:Generated_Source\PSoC5/RTC.c **** 
1697:Generated_Source\PSoC5/RTC.c ****         /* Sets DST start status month flag if DST start month is equal to the
1698:Generated_Source\PSoC5/RTC.c ****         * current month, otherwise clears that flag.
1699:Generated_Source\PSoC5/RTC.c ****         */
1700:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
 2753              		.loc 1 1700 0
 2754 02ac 3B4B     		ldr	r3, .L247+4
 2755 02ae 1B79     		ldrb	r3, [r3, #4]
 2756 02b0 DAB2     		uxtb	r2, r3
 2757 02b2 3B4B     		ldr	r3, .L247+8
 2758 02b4 1B7A     		ldrb	r3, [r3, #8]
 2759 02b6 DBB2     		uxtb	r3, r3
 2760 02b8 9A42     		cmp	r2, r3
 2761 02ba 08D1     		bne	.L199
1701:Generated_Source\PSoC5/RTC.c ****         {
1702:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus |= RTC_DST_MONTH;
 2762              		.loc 1 1702 0
 2763 02bc 394B     		ldr	r3, .L247+12
 2764 02be 1B78     		ldrb	r3, [r3]
 2765 02c0 DBB2     		uxtb	r3, r3
 2766 02c2 43F00403 		orr	r3, r3, #4
 2767 02c6 DAB2     		uxtb	r2, r3
 2768 02c8 364B     		ldr	r3, .L247+12
 2769 02ca 1A70     		strb	r2, [r3]
 2770 02cc 07E0     		b	.L200
 2771              	.L199:
1703:Generated_Source\PSoC5/RTC.c ****         }
1704:Generated_Source\PSoC5/RTC.c ****         else
1705:Generated_Source\PSoC5/RTC.c ****         {
1706:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
 2772              		.loc 1 1706 0
 2773 02ce 354B     		ldr	r3, .L247+12
 2774 02d0 1B78     		ldrb	r3, [r3]
 2775 02d2 DBB2     		uxtb	r3, r3
 2776 02d4 23F00403 		bic	r3, r3, #4
 2777 02d8 DAB2     		uxtb	r2, r3
 2778 02da 324B     		ldr	r3, .L247+12
 2779 02dc 1A70     		strb	r2, [r3]
 2780              	.L200:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 80


1707:Generated_Source\PSoC5/RTC.c ****         }
1708:Generated_Source\PSoC5/RTC.c **** 
1709:Generated_Source\PSoC5/RTC.c ****         /* Sets DST stop status day of month flag if DST stop day of month is
1710:Generated_Source\PSoC5/RTC.c ****         * equal to the current day of month, otherwise clears that flag.
1711:Generated_Source\PSoC5/RTC.c ****         */
1712:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 2781              		.loc 1 1712 0
 2782 02de 324B     		ldr	r3, .L247+16
 2783 02e0 DB78     		ldrb	r3, [r3, #3]
 2784 02e2 DAB2     		uxtb	r2, r3
 2785 02e4 2E4B     		ldr	r3, .L247+8
 2786 02e6 1B79     		ldrb	r3, [r3, #4]
 2787 02e8 DBB2     		uxtb	r3, r3
 2788 02ea 9A42     		cmp	r2, r3
 2789 02ec 08D1     		bne	.L201
1713:Generated_Source\PSoC5/RTC.c ****         {
1714:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 2790              		.loc 1 1714 0
 2791 02ee 2A4B     		ldr	r3, .L247
 2792 02f0 1B78     		ldrb	r3, [r3]
 2793 02f2 DBB2     		uxtb	r3, r3
 2794 02f4 43F00203 		orr	r3, r3, #2
 2795 02f8 DAB2     		uxtb	r2, r3
 2796 02fa 274B     		ldr	r3, .L247
 2797 02fc 1A70     		strb	r2, [r3]
 2798 02fe 07E0     		b	.L202
 2799              	.L201:
1715:Generated_Source\PSoC5/RTC.c ****         }
1716:Generated_Source\PSoC5/RTC.c ****         else
1717:Generated_Source\PSoC5/RTC.c ****         {
1718:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 2800              		.loc 1 1718 0
 2801 0300 254B     		ldr	r3, .L247
 2802 0302 1B78     		ldrb	r3, [r3]
 2803 0304 DBB2     		uxtb	r3, r3
 2804 0306 23F00203 		bic	r3, r3, #2
 2805 030a DAB2     		uxtb	r2, r3
 2806 030c 224B     		ldr	r3, .L247
 2807 030e 1A70     		strb	r2, [r3]
 2808              	.L202:
1719:Generated_Source\PSoC5/RTC.c ****         }
1720:Generated_Source\PSoC5/RTC.c **** 
1721:Generated_Source\PSoC5/RTC.c ****         /* Sets DST start status day of month flag if DST start day of month is
1722:Generated_Source\PSoC5/RTC.c ****         * equal to the current day of month, otherwise clears that flag.
1723:Generated_Source\PSoC5/RTC.c ****         */
1724:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 2809              		.loc 1 1724 0
 2810 0310 224B     		ldr	r3, .L247+4
 2811 0312 DB78     		ldrb	r3, [r3, #3]
 2812 0314 DAB2     		uxtb	r2, r3
 2813 0316 224B     		ldr	r3, .L247+8
 2814 0318 1B79     		ldrb	r3, [r3, #4]
 2815 031a DBB2     		uxtb	r3, r3
 2816 031c 9A42     		cmp	r2, r3
 2817 031e 08D1     		bne	.L203
1725:Generated_Source\PSoC5/RTC.c ****         {
1726:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 81


 2818              		.loc 1 1726 0
 2819 0320 204B     		ldr	r3, .L247+12
 2820 0322 1B78     		ldrb	r3, [r3]
 2821 0324 DBB2     		uxtb	r3, r3
 2822 0326 43F00203 		orr	r3, r3, #2
 2823 032a DAB2     		uxtb	r2, r3
 2824 032c 1D4B     		ldr	r3, .L247+12
 2825 032e 1A70     		strb	r2, [r3]
 2826 0330 07E0     		b	.L204
 2827              	.L203:
1727:Generated_Source\PSoC5/RTC.c ****         }
1728:Generated_Source\PSoC5/RTC.c ****         else
1729:Generated_Source\PSoC5/RTC.c ****         {
1730:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 2828              		.loc 1 1730 0
 2829 0332 1C4B     		ldr	r3, .L247+12
 2830 0334 1B78     		ldrb	r3, [r3]
 2831 0336 DBB2     		uxtb	r3, r3
 2832 0338 23F00203 		bic	r3, r3, #2
 2833 033c DAB2     		uxtb	r2, r3
 2834 033e 194B     		ldr	r3, .L247+12
 2835 0340 1A70     		strb	r2, [r3]
 2836              	.L204:
1731:Generated_Source\PSoC5/RTC.c ****         }
1732:Generated_Source\PSoC5/RTC.c **** 
1733:Generated_Source\PSoC5/RTC.c ****         /* Sets DST stop status hour flag if DST stop hour is equal to the
1734:Generated_Source\PSoC5/RTC.c ****         * current hour, otherwise clears that flag.
1735:Generated_Source\PSoC5/RTC.c ****         */
1736:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
 2837              		.loc 1 1736 0
 2838 0342 194B     		ldr	r3, .L247+16
 2839 0344 1B78     		ldrb	r3, [r3]
 2840 0346 DAB2     		uxtb	r2, r3
 2841 0348 154B     		ldr	r3, .L247+8
 2842 034a 9B78     		ldrb	r3, [r3, #2]
 2843 034c DBB2     		uxtb	r3, r3
 2844 034e 9A42     		cmp	r2, r3
 2845 0350 08D1     		bne	.L205
1737:Generated_Source\PSoC5/RTC.c ****         {
1738:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus |= RTC_DST_HOUR;
 2846              		.loc 1 1738 0
 2847 0352 114B     		ldr	r3, .L247
 2848 0354 1B78     		ldrb	r3, [r3]
 2849 0356 DBB2     		uxtb	r3, r3
 2850 0358 43F00103 		orr	r3, r3, #1
 2851 035c DAB2     		uxtb	r2, r3
 2852 035e 0E4B     		ldr	r3, .L247
 2853 0360 1A70     		strb	r2, [r3]
 2854 0362 07E0     		b	.L206
 2855              	.L205:
1739:Generated_Source\PSoC5/RTC.c ****         }
1740:Generated_Source\PSoC5/RTC.c ****         else
1741:Generated_Source\PSoC5/RTC.c ****         {
1742:Generated_Source\PSoC5/RTC.c ****             RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
 2856              		.loc 1 1742 0
 2857 0364 0C4B     		ldr	r3, .L247
 2858 0366 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 82


 2859 0368 DBB2     		uxtb	r3, r3
 2860 036a 23F00103 		bic	r3, r3, #1
 2861 036e DAB2     		uxtb	r2, r3
 2862 0370 094B     		ldr	r3, .L247
 2863 0372 1A70     		strb	r2, [r3]
 2864              	.L206:
1743:Generated_Source\PSoC5/RTC.c ****         }
1744:Generated_Source\PSoC5/RTC.c **** 
1745:Generated_Source\PSoC5/RTC.c ****         /* Sets DST start status hour flag if DST start hour is equal to the
1746:Generated_Source\PSoC5/RTC.c ****         * current hour, otherwise clears that flag.
1747:Generated_Source\PSoC5/RTC.c ****         */
1748:Generated_Source\PSoC5/RTC.c ****         if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
 2865              		.loc 1 1748 0
 2866 0374 094B     		ldr	r3, .L247+4
 2867 0376 1B78     		ldrb	r3, [r3]
 2868 0378 DAB2     		uxtb	r2, r3
 2869 037a 094B     		ldr	r3, .L247+8
 2870 037c 9B78     		ldrb	r3, [r3, #2]
 2871 037e DBB2     		uxtb	r3, r3
 2872 0380 9A42     		cmp	r2, r3
 2873 0382 13D1     		bne	.L207
1749:Generated_Source\PSoC5/RTC.c ****         {
1750:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus |= RTC_DST_HOUR;
 2874              		.loc 1 1750 0
 2875 0384 074B     		ldr	r3, .L247+12
 2876 0386 1B78     		ldrb	r3, [r3]
 2877 0388 DBB2     		uxtb	r3, r3
 2878 038a 43F00103 		orr	r3, r3, #1
 2879 038e DAB2     		uxtb	r2, r3
 2880 0390 044B     		ldr	r3, .L247+12
 2881 0392 1A70     		strb	r2, [r3]
 2882 0394 12E0     		b	.L208
 2883              	.L248:
 2884 0396 00BF     		.align	2
 2885              	.L247:
 2886 0398 00000000 		.word	RTC_dstStopStatus
 2887 039c 00000000 		.word	RTC_dstTimeDateStart
 2888 03a0 00000000 		.word	RTC_currentTimeDate
 2889 03a4 00000000 		.word	RTC_dstStartStatus
 2890 03a8 00000000 		.word	RTC_dstTimeDateStop
 2891              	.L207:
1751:Generated_Source\PSoC5/RTC.c ****         }
1752:Generated_Source\PSoC5/RTC.c ****         else
1753:Generated_Source\PSoC5/RTC.c ****         {
1754:Generated_Source\PSoC5/RTC.c ****             RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
 2892              		.loc 1 1754 0
 2893 03ac 7C4B     		ldr	r3, .L249
 2894 03ae 1B78     		ldrb	r3, [r3]
 2895 03b0 DBB2     		uxtb	r3, r3
 2896 03b2 23F00103 		bic	r3, r3, #1
 2897 03b6 DAB2     		uxtb	r2, r3
 2898 03b8 794B     		ldr	r3, .L249
 2899 03ba 1A70     		strb	r2, [r3]
 2900              	.L208:
1755:Generated_Source\PSoC5/RTC.c ****         }
1756:Generated_Source\PSoC5/RTC.c **** 
1757:Generated_Source\PSoC5/RTC.c ****         /* DST Enable ? */
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 83


1758:Generated_Source\PSoC5/RTC.c ****         if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
 2901              		.loc 1 1758 0
 2902 03bc 794B     		ldr	r3, .L249+4
 2903 03be 1B78     		ldrb	r3, [r3]
 2904 03c0 DBB2     		uxtb	r3, r3
 2905 03c2 03F00103 		and	r3, r3, #1
 2906 03c6 002B     		cmp	r3, #0
 2907 03c8 00F0D081 		beq	.L209
1759:Generated_Source\PSoC5/RTC.c ****         {
1760:Generated_Source\PSoC5/RTC.c ****             if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
 2908              		.loc 1 1760 0
 2909 03cc 764B     		ldr	r3, .L249+8
 2910 03ce 1B78     		ldrb	r3, [r3]
 2911 03d0 DBB2     		uxtb	r3, r3
 2912 03d2 03F00103 		and	r3, r3, #1
 2913 03d6 002B     		cmp	r3, #0
 2914 03d8 00F0F480 		beq	.L210
1761:Generated_Source\PSoC5/RTC.c ****             {
1762:Generated_Source\PSoC5/RTC.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
 2915              		.loc 1 1762 0
 2916 03dc 704B     		ldr	r3, .L249
 2917 03de 1B78     		ldrb	r3, [r3]
 2918 03e0 DBB2     		uxtb	r3, r3
 2919 03e2 03F00703 		and	r3, r3, #7
 2920 03e6 072B     		cmp	r3, #7
 2921 03e8 40F0C081 		bne	.L209
1763:Generated_Source\PSoC5/RTC.c ****                         (RTC_DST_HOUR | RTC_DST_DAYOFMONTH | RTC_DST_MONTH)))
1764:Generated_Source\PSoC5/RTC.c ****                 {
1765:Generated_Source\PSoC5/RTC.c ****                     /* Subtract current minutes value with minutes value, what
1766:Generated_Source\PSoC5/RTC.c ****                     *  are out of full hour in DST offset.
1767:Generated_Source\PSoC5/RTC.c ****                     */
1768:Generated_Source\PSoC5/RTC.c ****                     RTC_currentTimeDate.Min -= RTC_dstOffsetMin %
 2922              		.loc 1 1768 0
 2923 03ec 6F4B     		ldr	r3, .L249+12
 2924 03ee 1B78     		ldrb	r3, [r3]
 2925 03f0 DAB2     		uxtb	r2, r3
 2926 03f2 6F4B     		ldr	r3, .L249+16
 2927 03f4 A3FB0213 		umull	r1, r3, r3, r2
 2928 03f8 5909     		lsrs	r1, r3, #5
 2929 03fa 0B46     		mov	r3, r1
 2930 03fc 1B01     		lsls	r3, r3, #4
 2931 03fe 5B1A     		subs	r3, r3, r1
 2932 0400 9B00     		lsls	r3, r3, #2
 2933 0402 D31A     		subs	r3, r2, r3
 2934 0404 DBB2     		uxtb	r3, r3
 2935 0406 1946     		mov	r1, r3
 2936 0408 6A4B     		ldr	r3, .L249+20
 2937 040a 5B78     		ldrb	r3, [r3, #1]
 2938 040c DAB2     		uxtb	r2, r3
 2939 040e CBB2     		uxtb	r3, r1
 2940 0410 D31A     		subs	r3, r2, r3
 2941 0412 DAB2     		uxtb	r2, r3
 2942 0414 674B     		ldr	r3, .L249+20
 2943 0416 5A70     		strb	r2, [r3, #1]
1769:Generated_Source\PSoC5/RTC.c ****                                                             (RTC_HOUR_ELAPSED + 1u);
1770:Generated_Source\PSoC5/RTC.c **** 
1771:Generated_Source\PSoC5/RTC.c ****                     /* If current minutes value is greater than number of
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 84


1772:Generated_Source\PSoC5/RTC.c ****                     * minutes in hour - could be only if hour's value is negative
1773:Generated_Source\PSoC5/RTC.c ****                     */
1774:Generated_Source\PSoC5/RTC.c ****                     if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 2944              		.loc 1 1774 0
 2945 0418 664B     		ldr	r3, .L249+20
 2946 041a 5B78     		ldrb	r3, [r3, #1]
 2947 041c DBB2     		uxtb	r3, r3
 2948 041e 3B2B     		cmp	r3, #59
 2949 0420 0DD9     		bls	.L212
1775:Generated_Source\PSoC5/RTC.c ****                     {
1776:Generated_Source\PSoC5/RTC.c ****                         /* Adjust current minutes value. Convert to the positive. */
1777:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
1778:Generated_Source\PSoC5/RTC.c ****                                                                ((uint8)(~RTC_currentTimeDate.Min));
 2950              		.loc 1 1778 0
 2951 0422 644B     		ldr	r3, .L249+20
 2952 0424 5B78     		ldrb	r3, [r3, #1]
 2953 0426 DBB2     		uxtb	r3, r3
1777:Generated_Source\PSoC5/RTC.c ****                                                                ((uint8)(~RTC_currentTimeDate.Min));
 2954              		.loc 1 1777 0
 2955 0428 3C33     		adds	r3, r3, #60
 2956 042a DAB2     		uxtb	r2, r3
 2957 042c 614B     		ldr	r3, .L249+20
 2958 042e 5A70     		strb	r2, [r3, #1]
1779:Generated_Source\PSoC5/RTC.c **** 
1780:Generated_Source\PSoC5/RTC.c ****                         /* Decrement current hours value. */
1781:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Hour--;
 2959              		.loc 1 1781 0
 2960 0430 604B     		ldr	r3, .L249+20
 2961 0432 9B78     		ldrb	r3, [r3, #2]
 2962 0434 DBB2     		uxtb	r3, r3
 2963 0436 013B     		subs	r3, r3, #1
 2964 0438 DAB2     		uxtb	r2, r3
 2965 043a 5E4B     		ldr	r3, .L249+20
 2966 043c 9A70     		strb	r2, [r3, #2]
 2967              	.L212:
1782:Generated_Source\PSoC5/RTC.c ****                     }
1783:Generated_Source\PSoC5/RTC.c **** 
1784:Generated_Source\PSoC5/RTC.c ****                     /* Subtract current hours value with hours value, what
1785:Generated_Source\PSoC5/RTC.c ****                     *  are full part of hours in DST offset.
1786:Generated_Source\PSoC5/RTC.c ****                     */
1787:Generated_Source\PSoC5/RTC.c ****                     RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
 2968              		.loc 1 1787 0
 2969 043e 5B4B     		ldr	r3, .L249+12
 2970 0440 1B78     		ldrb	r3, [r3]
 2971 0442 DBB2     		uxtb	r3, r3
 2972 0444 5A4A     		ldr	r2, .L249+16
 2973 0446 A2FB0323 		umull	r2, r3, r2, r3
 2974 044a 5B09     		lsrs	r3, r3, #5
 2975 044c DBB2     		uxtb	r3, r3
 2976 044e 1946     		mov	r1, r3
 2977 0450 584B     		ldr	r3, .L249+20
 2978 0452 9B78     		ldrb	r3, [r3, #2]
 2979 0454 DAB2     		uxtb	r2, r3
 2980 0456 CBB2     		uxtb	r3, r1
 2981 0458 D31A     		subs	r3, r2, r3
 2982 045a DAB2     		uxtb	r2, r3
 2983 045c 554B     		ldr	r3, .L249+20
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 85


 2984 045e 9A70     		strb	r2, [r3, #2]
1788:Generated_Source\PSoC5/RTC.c ****                                                              (RTC_HOUR_ELAPSED + 1u);
1789:Generated_Source\PSoC5/RTC.c **** 
1790:Generated_Source\PSoC5/RTC.c ****                     /* Check if current hour's value is negative */
1791:Generated_Source\PSoC5/RTC.c ****                     if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 2985              		.loc 1 1791 0
 2986 0460 544B     		ldr	r3, .L249+20
 2987 0462 9B78     		ldrb	r3, [r3, #2]
 2988 0464 DBB2     		uxtb	r3, r3
 2989 0466 172B     		cmp	r3, #23
 2990 0468 40F28E80 		bls	.L213
1792:Generated_Source\PSoC5/RTC.c ****                     {
1793:Generated_Source\PSoC5/RTC.c ****                         /* Adjust hour */
1794:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
1795:Generated_Source\PSoC5/RTC.c ****                                                                 ((uint8)(~RTC_currentTimeDate.Hour)
 2991              		.loc 1 1795 0
 2992 046c 514B     		ldr	r3, .L249+20
 2993 046e 9B78     		ldrb	r3, [r3, #2]
 2994 0470 DBB2     		uxtb	r3, r3
1794:Generated_Source\PSoC5/RTC.c ****                                                                 ((uint8)(~RTC_currentTimeDate.Hour)
 2995              		.loc 1 1794 0
 2996 0472 1833     		adds	r3, r3, #24
 2997 0474 DAB2     		uxtb	r2, r3
 2998 0476 4F4B     		ldr	r3, .L249+20
 2999 0478 9A70     		strb	r2, [r3, #2]
1796:Generated_Source\PSoC5/RTC.c **** 
1797:Generated_Source\PSoC5/RTC.c ****                         /* Decrement day of month, year and week */
1798:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfMonth--;
 3000              		.loc 1 1798 0
 3001 047a 4E4B     		ldr	r3, .L249+20
 3002 047c 1B79     		ldrb	r3, [r3, #4]
 3003 047e DBB2     		uxtb	r3, r3
 3004 0480 013B     		subs	r3, r3, #1
 3005 0482 DAB2     		uxtb	r2, r3
 3006 0484 4B4B     		ldr	r3, .L249+20
 3007 0486 1A71     		strb	r2, [r3, #4]
1799:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfYear--;
 3008              		.loc 1 1799 0
 3009 0488 4A4B     		ldr	r3, .L249+20
 3010 048a DB88     		ldrh	r3, [r3, #6]	@ movhi
 3011 048c 9BB2     		uxth	r3, r3
 3012 048e 013B     		subs	r3, r3, #1
 3013 0490 9AB2     		uxth	r2, r3
 3014 0492 484B     		ldr	r3, .L249+20
 3015 0494 DA80     		strh	r2, [r3, #6]	@ movhi
1800:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfWeek--;
 3016              		.loc 1 1800 0
 3017 0496 474B     		ldr	r3, .L249+20
 3018 0498 DB78     		ldrb	r3, [r3, #3]
 3019 049a DBB2     		uxtb	r3, r3
 3020 049c 013B     		subs	r3, r3, #1
 3021 049e DAB2     		uxtb	r2, r3
 3022 04a0 444B     		ldr	r3, .L249+20
 3023 04a2 DA70     		strb	r2, [r3, #3]
1801:Generated_Source\PSoC5/RTC.c **** 
1802:Generated_Source\PSoC5/RTC.c ****                         if(0u == RTC_currentTimeDate.DayOfWeek)
 3024              		.loc 1 1802 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 86


 3025 04a4 434B     		ldr	r3, .L249+20
 3026 04a6 DB78     		ldrb	r3, [r3, #3]
 3027 04a8 DBB2     		uxtb	r3, r3
 3028 04aa 002B     		cmp	r3, #0
 3029 04ac 02D1     		bne	.L214
1803:Generated_Source\PSoC5/RTC.c ****                         {
1804:Generated_Source\PSoC5/RTC.c ****                             RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
 3030              		.loc 1 1804 0
 3031 04ae 414B     		ldr	r3, .L249+20
 3032 04b0 0722     		movs	r2, #7
 3033 04b2 DA70     		strb	r2, [r3, #3]
 3034              	.L214:
1805:Generated_Source\PSoC5/RTC.c ****                         }
1806:Generated_Source\PSoC5/RTC.c **** 
1807:Generated_Source\PSoC5/RTC.c ****                         if(0u == RTC_currentTimeDate.DayOfMonth)
 3035              		.loc 1 1807 0
 3036 04b4 3F4B     		ldr	r3, .L249+20
 3037 04b6 1B79     		ldrb	r3, [r3, #4]
 3038 04b8 DBB2     		uxtb	r3, r3
 3039 04ba 002B     		cmp	r3, #0
 3040 04bc 64D1     		bne	.L213
1808:Generated_Source\PSoC5/RTC.c ****                         {
1809:Generated_Source\PSoC5/RTC.c ****                             /* Decrement months value */
1810:Generated_Source\PSoC5/RTC.c ****                             RTC_currentTimeDate.Month--;
 3041              		.loc 1 1810 0
 3042 04be 3D4B     		ldr	r3, .L249+20
 3043 04c0 1B7A     		ldrb	r3, [r3, #8]
 3044 04c2 DBB2     		uxtb	r3, r3
 3045 04c4 013B     		subs	r3, r3, #1
 3046 04c6 DAB2     		uxtb	r2, r3
 3047 04c8 3A4B     		ldr	r3, .L249+20
 3048 04ca 1A72     		strb	r2, [r3, #8]
1811:Generated_Source\PSoC5/RTC.c **** 
1812:Generated_Source\PSoC5/RTC.c ****                             /* The current month is month before 1st one. */
1813:Generated_Source\PSoC5/RTC.c ****                             if(0u == RTC_currentTimeDate.Month)
 3049              		.loc 1 1813 0
 3050 04cc 394B     		ldr	r3, .L249+20
 3051 04ce 1B7A     		ldrb	r3, [r3, #8]
 3052 04d0 DBB2     		uxtb	r3, r3
 3053 04d2 002B     		cmp	r3, #0
 3054 04d4 50D1     		bne	.L215
1814:Generated_Source\PSoC5/RTC.c ****                             {
1815:Generated_Source\PSoC5/RTC.c ****                                 /* December is the month before January */
1816:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.Month = RTC_DECEMBER;
 3055              		.loc 1 1816 0
 3056 04d6 374B     		ldr	r3, .L249+20
 3057 04d8 0C22     		movs	r2, #12
 3058 04da 1A72     		strb	r2, [r3, #8]
1817:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.DayOfMonth =
1818:Generated_Source\PSoC5/RTC.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 3059              		.loc 1 1818 0
 3060 04dc 354B     		ldr	r3, .L249+20
 3061 04de 1B7A     		ldrb	r3, [r3, #8]
 3062 04e0 DBB2     		uxtb	r3, r3
 3063 04e2 013B     		subs	r3, r3, #1
 3064 04e4 344A     		ldr	r2, .L249+24
 3065 04e6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 87


1817:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.DayOfMonth =
 3066              		.loc 1 1817 0
 3067 04e8 324B     		ldr	r3, .L249+20
 3068 04ea 1A71     		strb	r2, [r3, #4]
1819:Generated_Source\PSoC5/RTC.c **** 
1820:Generated_Source\PSoC5/RTC.c ****                                 /* Decrement years value */
1821:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.Year--;
 3069              		.loc 1 1821 0
 3070 04ec 314B     		ldr	r3, .L249+20
 3071 04ee 5B89     		ldrh	r3, [r3, #10]	@ movhi
 3072 04f0 9BB2     		uxth	r3, r3
 3073 04f2 013B     		subs	r3, r3, #1
 3074 04f4 9AB2     		uxth	r2, r3
 3075 04f6 2F4B     		ldr	r3, .L249+20
 3076 04f8 5A81     		strh	r2, [r3, #10]	@ movhi
1822:Generated_Source\PSoC5/RTC.c ****                                 if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 3077              		.loc 1 1822 0
 3078 04fa 2E4B     		ldr	r3, .L249+20
 3079 04fc 5B89     		ldrh	r3, [r3, #10]	@ movhi
 3080 04fe 9BB2     		uxth	r3, r3
 3081 0500 2E4A     		ldr	r2, .L249+28
 3082 0502 A2FB0312 		umull	r1, r2, r2, r3
 3083 0506 D209     		lsrs	r2, r2, #7
 3084 0508 4FF4C871 		mov	r1, #400
 3085 050c 01FB02F2 		mul	r2, r1, r2
 3086 0510 9B1A     		subs	r3, r3, r2
 3087 0512 9BB2     		uxth	r3, r3
 3088 0514 002B     		cmp	r3, #0
 3089 0516 15D0     		beq	.L216
 3090              		.loc 1 1822 0 is_stmt 0 discriminator 1
 3091 0518 264B     		ldr	r3, .L249+20
 3092 051a 5B89     		ldrh	r3, [r3, #10]	@ movhi
 3093 051c 9BB2     		uxth	r3, r3
 3094 051e 03F00303 		and	r3, r3, #3
 3095 0522 9BB2     		uxth	r3, r3
 3096 0524 002B     		cmp	r3, #0
 3097 0526 1AD1     		bne	.L217
 3098              		.loc 1 1822 0 discriminator 2
 3099 0528 224B     		ldr	r3, .L249+20
 3100 052a 5B89     		ldrh	r3, [r3, #10]	@ movhi
 3101 052c 9BB2     		uxth	r3, r3
 3102 052e 234A     		ldr	r2, .L249+28
 3103 0530 A2FB0312 		umull	r1, r2, r2, r3
 3104 0534 5209     		lsrs	r2, r2, #5
 3105 0536 6421     		movs	r1, #100
 3106 0538 01FB02F2 		mul	r2, r1, r2
 3107 053c 9B1A     		subs	r3, r3, r2
 3108 053e 9BB2     		uxth	r3, r3
 3109 0540 002B     		cmp	r3, #0
 3110 0542 0CD0     		beq	.L217
 3111              	.L216:
1823:Generated_Source\PSoC5/RTC.c ****                                 {
1824:Generated_Source\PSoC5/RTC.c ****                                     /* Set leap year status flag */
1825:Generated_Source\PSoC5/RTC.c ****                                     RTC_statusDateTime |= RTC_STATUS_LY;
 3112              		.loc 1 1825 0 is_stmt 1
 3113 0544 184B     		ldr	r3, .L249+8
 3114 0546 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 88


 3115 0548 DBB2     		uxtb	r3, r3
 3116 054a 43F00203 		orr	r3, r3, #2
 3117 054e DAB2     		uxtb	r2, r3
 3118 0550 154B     		ldr	r3, .L249+8
 3119 0552 1A70     		strb	r2, [r3]
1826:Generated_Source\PSoC5/RTC.c ****                                     RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_LEAP_YEAR;
 3120              		.loc 1 1826 0
 3121 0554 174B     		ldr	r3, .L249+20
 3122 0556 4FF4B772 		mov	r2, #366
 3123 055a DA80     		strh	r2, [r3, #6]	@ movhi
 3124 055c 14E0     		b	.L213
 3125              	.L217:
1827:Generated_Source\PSoC5/RTC.c ****                                 }
1828:Generated_Source\PSoC5/RTC.c ****                                 else
1829:Generated_Source\PSoC5/RTC.c ****                                 {
1830:Generated_Source\PSoC5/RTC.c ****                                     /* Clear leap year status flag */
1831:Generated_Source\PSoC5/RTC.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 3126              		.loc 1 1831 0
 3127 055e 124B     		ldr	r3, .L249+8
 3128 0560 1B78     		ldrb	r3, [r3]
 3129 0562 DBB2     		uxtb	r3, r3
 3130 0564 23F00203 		bic	r3, r3, #2
 3131 0568 DAB2     		uxtb	r2, r3
 3132 056a 0F4B     		ldr	r3, .L249+8
 3133 056c 1A70     		strb	r2, [r3]
1832:Generated_Source\PSoC5/RTC.c ****                                     RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
 3134              		.loc 1 1832 0
 3135 056e 114B     		ldr	r3, .L249+20
 3136 0570 40F26D12 		movw	r2, #365
 3137 0574 DA80     		strh	r2, [r3, #6]	@ movhi
 3138 0576 07E0     		b	.L213
 3139              	.L215:
1833:Generated_Source\PSoC5/RTC.c ****                                 }
1834:Generated_Source\PSoC5/RTC.c ****                             }   /* 0u == RTC_currentTimeDate.Month */
1835:Generated_Source\PSoC5/RTC.c ****                             else
1836:Generated_Source\PSoC5/RTC.c ****                             {
1837:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.DayOfMonth =
1838:Generated_Source\PSoC5/RTC.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 3140              		.loc 1 1838 0
 3141 0578 0E4B     		ldr	r3, .L249+20
 3142 057a 1B7A     		ldrb	r3, [r3, #8]
 3143 057c DBB2     		uxtb	r3, r3
 3144 057e 013B     		subs	r3, r3, #1
 3145 0580 0D4A     		ldr	r2, .L249+24
 3146 0582 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
1837:Generated_Source\PSoC5/RTC.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 3147              		.loc 1 1837 0
 3148 0584 0B4B     		ldr	r3, .L249+20
 3149 0586 1A71     		strb	r2, [r3, #4]
 3150              	.L213:
1839:Generated_Source\PSoC5/RTC.c ****                             }   /* 0u != End of RTC_currentTimeDate.Month */
1840:Generated_Source\PSoC5/RTC.c ****                         }   /* 0u == End of RTC_currentTimeDate.DayOfMonth */
1841:Generated_Source\PSoC5/RTC.c ****                     }   /* End of RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED */
1842:Generated_Source\PSoC5/RTC.c **** 
1843:Generated_Source\PSoC5/RTC.c ****                     /* Clear DST status flag */
1844:Generated_Source\PSoC5/RTC.c ****                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 3151              		.loc 1 1844 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 89


 3152 0588 074B     		ldr	r3, .L249+8
 3153 058a 1B78     		ldrb	r3, [r3]
 3154 058c DBB2     		uxtb	r3, r3
 3155 058e 23F00103 		bic	r3, r3, #1
 3156 0592 DAB2     		uxtb	r2, r3
 3157 0594 044B     		ldr	r3, .L249+8
 3158 0596 1A70     		strb	r2, [r3]
1845:Generated_Source\PSoC5/RTC.c ****                     /* Clear DST stop status */
1846:Generated_Source\PSoC5/RTC.c ****                     RTC_dstStopStatus = 0u;
 3159              		.loc 1 1846 0
 3160 0598 094B     		ldr	r3, .L249+32
 3161 059a 0022     		movs	r2, #0
 3162 059c 1A70     		strb	r2, [r3]
 3163 059e E5E0     		b	.L209
 3164              	.L250:
 3165              		.align	2
 3166              	.L249:
 3167 05a0 00000000 		.word	RTC_dstStartStatus
 3168 05a4 00000000 		.word	RTC_dstModeType
 3169 05a8 00000000 		.word	RTC_statusDateTime
 3170 05ac 00000000 		.word	RTC_dstOffsetMin
 3171 05b0 89888888 		.word	-2004318071
 3172 05b4 00000000 		.word	RTC_currentTimeDate
 3173 05b8 00000000 		.word	RTC_daysInMonths
 3174 05bc 1F85EB51 		.word	1374389535
 3175 05c0 00000000 		.word	RTC_dstStopStatus
 3176              	.L210:
1847:Generated_Source\PSoC5/RTC.c ****                 }
1848:Generated_Source\PSoC5/RTC.c ****             }
1849:Generated_Source\PSoC5/RTC.c ****             else    /* Current time and date DO NOT match DST time and date */
1850:Generated_Source\PSoC5/RTC.c ****             {
1851:Generated_Source\PSoC5/RTC.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus, RTC_DST_HOUR |
 3177              		.loc 1 1851 0
 3178 05c4 A04B     		ldr	r3, .L251
 3179 05c6 1B78     		ldrb	r3, [r3]
 3180 05c8 DBB2     		uxtb	r3, r3
 3181 05ca 03F00703 		and	r3, r3, #7
 3182 05ce 072B     		cmp	r3, #7
 3183 05d0 40F0CC80 		bne	.L209
1852:Generated_Source\PSoC5/RTC.c ****                                                      RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
1853:Generated_Source\PSoC5/RTC.c ****                 {
1854:Generated_Source\PSoC5/RTC.c ****                     /* Add Hour and Min */
1855:Generated_Source\PSoC5/RTC.c ****                     RTC_currentTimeDate.Min +=
1856:Generated_Source\PSoC5/RTC.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 3184              		.loc 1 1856 0
 3185 05d4 9D4B     		ldr	r3, .L251+4
 3186 05d6 1B78     		ldrb	r3, [r3]
 3187 05d8 DAB2     		uxtb	r2, r3
 3188 05da 9D4B     		ldr	r3, .L251+8
 3189 05dc A3FB0213 		umull	r1, r3, r3, r2
 3190 05e0 5909     		lsrs	r1, r3, #5
 3191 05e2 0B46     		mov	r3, r1
 3192 05e4 1B01     		lsls	r3, r3, #4
 3193 05e6 5B1A     		subs	r3, r3, r1
 3194 05e8 9B00     		lsls	r3, r3, #2
 3195 05ea D31A     		subs	r3, r2, r3
 3196 05ec DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 90


 3197 05ee 1946     		mov	r1, r3
1855:Generated_Source\PSoC5/RTC.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 3198              		.loc 1 1855 0
 3199 05f0 984B     		ldr	r3, .L251+12
 3200 05f2 5B78     		ldrb	r3, [r3, #1]
 3201 05f4 DAB2     		uxtb	r2, r3
 3202 05f6 CBB2     		uxtb	r3, r1
 3203 05f8 1344     		add	r3, r3, r2
 3204 05fa DAB2     		uxtb	r2, r3
 3205 05fc 954B     		ldr	r3, .L251+12
 3206 05fe 5A70     		strb	r2, [r3, #1]
1857:Generated_Source\PSoC5/RTC.c **** 
1858:Generated_Source\PSoC5/RTC.c ****                     if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 3207              		.loc 1 1858 0
 3208 0600 944B     		ldr	r3, .L251+12
 3209 0602 5B78     		ldrb	r3, [r3, #1]
 3210 0604 DBB2     		uxtb	r3, r3
 3211 0606 3B2B     		cmp	r3, #59
 3212 0608 0DD9     		bls	.L219
1859:Generated_Source\PSoC5/RTC.c ****                     {
1860:Generated_Source\PSoC5/RTC.c ****                         /* Adjust Min */
1861:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
 3213              		.loc 1 1861 0
 3214 060a 924B     		ldr	r3, .L251+12
 3215 060c 5B78     		ldrb	r3, [r3, #1]
 3216 060e DBB2     		uxtb	r3, r3
 3217 0610 3C3B     		subs	r3, r3, #60
 3218 0612 DAB2     		uxtb	r2, r3
 3219 0614 8F4B     		ldr	r3, .L251+12
 3220 0616 5A70     		strb	r2, [r3, #1]
1862:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Hour++;
 3221              		.loc 1 1862 0
 3222 0618 8E4B     		ldr	r3, .L251+12
 3223 061a 9B78     		ldrb	r3, [r3, #2]
 3224 061c DBB2     		uxtb	r3, r3
 3225 061e 0133     		adds	r3, r3, #1
 3226 0620 DAB2     		uxtb	r2, r3
 3227 0622 8C4B     		ldr	r3, .L251+12
 3228 0624 9A70     		strb	r2, [r3, #2]
 3229              	.L219:
1863:Generated_Source\PSoC5/RTC.c ****                     }
1864:Generated_Source\PSoC5/RTC.c **** 
1865:Generated_Source\PSoC5/RTC.c ****                     RTC_currentTimeDate.Hour +=
1866:Generated_Source\PSoC5/RTC.c ****                                                 RTC_dstOffsetMin / (RTC_HOUR_ELAPSED + 1u);
 3230              		.loc 1 1866 0
 3231 0626 894B     		ldr	r3, .L251+4
 3232 0628 1B78     		ldrb	r3, [r3]
 3233 062a DBB2     		uxtb	r3, r3
 3234 062c 884A     		ldr	r2, .L251+8
 3235 062e A2FB0323 		umull	r2, r3, r2, r3
 3236 0632 5B09     		lsrs	r3, r3, #5
 3237 0634 DBB2     		uxtb	r3, r3
 3238 0636 1946     		mov	r1, r3
1865:Generated_Source\PSoC5/RTC.c ****                                                 RTC_dstOffsetMin / (RTC_HOUR_ELAPSED + 1u);
 3239              		.loc 1 1865 0
 3240 0638 864B     		ldr	r3, .L251+12
 3241 063a 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 91


 3242 063c DAB2     		uxtb	r2, r3
 3243 063e CBB2     		uxtb	r3, r1
 3244 0640 1344     		add	r3, r3, r2
 3245 0642 DAB2     		uxtb	r2, r3
 3246 0644 834B     		ldr	r3, .L251+12
 3247 0646 9A70     		strb	r2, [r3, #2]
1867:Generated_Source\PSoC5/RTC.c ****                     if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 3248              		.loc 1 1867 0
 3249 0648 824B     		ldr	r3, .L251+12
 3250 064a 9B78     		ldrb	r3, [r3, #2]
 3251 064c DBB2     		uxtb	r3, r3
 3252 064e 172B     		cmp	r3, #23
 3253 0650 40F28180 		bls	.L220
1868:Generated_Source\PSoC5/RTC.c ****                     {
1869:Generated_Source\PSoC5/RTC.c ****                         /* Adjust hour, add day */
1870:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
 3254              		.loc 1 1870 0
 3255 0654 7F4B     		ldr	r3, .L251+12
 3256 0656 9B78     		ldrb	r3, [r3, #2]
 3257 0658 DBB2     		uxtb	r3, r3
 3258 065a 183B     		subs	r3, r3, #24
 3259 065c DAB2     		uxtb	r2, r3
 3260 065e 7D4B     		ldr	r3, .L251+12
 3261 0660 9A70     		strb	r2, [r3, #2]
1871:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfMonth++;
 3262              		.loc 1 1871 0
 3263 0662 7C4B     		ldr	r3, .L251+12
 3264 0664 1B79     		ldrb	r3, [r3, #4]
 3265 0666 DBB2     		uxtb	r3, r3
 3266 0668 0133     		adds	r3, r3, #1
 3267 066a DAB2     		uxtb	r2, r3
 3268 066c 794B     		ldr	r3, .L251+12
 3269 066e 1A71     		strb	r2, [r3, #4]
1872:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfYear++;
 3270              		.loc 1 1872 0
 3271 0670 784B     		ldr	r3, .L251+12
 3272 0672 DB88     		ldrh	r3, [r3, #6]	@ movhi
 3273 0674 9BB2     		uxth	r3, r3
 3274 0676 0133     		adds	r3, r3, #1
 3275 0678 9AB2     		uxth	r2, r3
 3276 067a 764B     		ldr	r3, .L251+12
 3277 067c DA80     		strh	r2, [r3, #6]	@ movhi
1873:Generated_Source\PSoC5/RTC.c ****                         RTC_currentTimeDate.DayOfWeek++;
 3278              		.loc 1 1873 0
 3279 067e 754B     		ldr	r3, .L251+12
 3280 0680 DB78     		ldrb	r3, [r3, #3]
 3281 0682 DBB2     		uxtb	r3, r3
 3282 0684 0133     		adds	r3, r3, #1
 3283 0686 DAB2     		uxtb	r2, r3
 3284 0688 724B     		ldr	r3, .L251+12
 3285 068a DA70     		strb	r2, [r3, #3]
1874:Generated_Source\PSoC5/RTC.c **** 
1875:Generated_Source\PSoC5/RTC.c ****                         if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 3286              		.loc 1 1875 0
 3287 068c 714B     		ldr	r3, .L251+12
 3288 068e DB78     		ldrb	r3, [r3, #3]
 3289 0690 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 92


 3290 0692 072B     		cmp	r3, #7
 3291 0694 02D9     		bls	.L221
1876:Generated_Source\PSoC5/RTC.c ****                         {
1877:Generated_Source\PSoC5/RTC.c ****                             RTC_currentTimeDate.DayOfWeek = 1u;
 3292              		.loc 1 1877 0
 3293 0696 6F4B     		ldr	r3, .L251+12
 3294 0698 0122     		movs	r2, #1
 3295 069a DA70     		strb	r2, [r3, #3]
 3296              	.L221:
1878:Generated_Source\PSoC5/RTC.c ****                         }
1879:Generated_Source\PSoC5/RTC.c **** 
1880:Generated_Source\PSoC5/RTC.c ****                         if(RTC_currentTimeDate.DayOfMonth >
 3297              		.loc 1 1880 0
 3298 069c 6D4B     		ldr	r3, .L251+12
 3299 069e 1B79     		ldrb	r3, [r3, #4]
 3300 06a0 DAB2     		uxtb	r2, r3
1881:Generated_Source\PSoC5/RTC.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])
 3301              		.loc 1 1881 0
 3302 06a2 6C4B     		ldr	r3, .L251+12
 3303 06a4 1B7A     		ldrb	r3, [r3, #8]
 3304 06a6 DBB2     		uxtb	r3, r3
 3305 06a8 013B     		subs	r3, r3, #1
 3306 06aa 6B49     		ldr	r1, .L251+16
 3307 06ac CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
1880:Generated_Source\PSoC5/RTC.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])
 3308              		.loc 1 1880 0
 3309 06ae 9A42     		cmp	r2, r3
 3310 06b0 51D9     		bls	.L220
1882:Generated_Source\PSoC5/RTC.c ****                         {
1883:Generated_Source\PSoC5/RTC.c ****                             RTC_currentTimeDate.Month++;
 3311              		.loc 1 1883 0
 3312 06b2 684B     		ldr	r3, .L251+12
 3313 06b4 1B7A     		ldrb	r3, [r3, #8]
 3314 06b6 DBB2     		uxtb	r3, r3
 3315 06b8 0133     		adds	r3, r3, #1
 3316 06ba DAB2     		uxtb	r2, r3
 3317 06bc 654B     		ldr	r3, .L251+12
 3318 06be 1A72     		strb	r2, [r3, #8]
1884:Generated_Source\PSoC5/RTC.c ****                             RTC_currentTimeDate.DayOfMonth = 1u;
 3319              		.loc 1 1884 0
 3320 06c0 644B     		ldr	r3, .L251+12
 3321 06c2 0122     		movs	r2, #1
 3322 06c4 1A71     		strb	r2, [r3, #4]
1885:Generated_Source\PSoC5/RTC.c **** 
1886:Generated_Source\PSoC5/RTC.c ****                             /* Has new year come? */
1887:Generated_Source\PSoC5/RTC.c ****                             if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 3323              		.loc 1 1887 0
 3324 06c6 634B     		ldr	r3, .L251+12
 3325 06c8 1B7A     		ldrb	r3, [r3, #8]
 3326 06ca DBB2     		uxtb	r3, r3
 3327 06cc 0C2B     		cmp	r3, #12
 3328 06ce 42D9     		bls	.L220
1888:Generated_Source\PSoC5/RTC.c ****                             {
1889:Generated_Source\PSoC5/RTC.c ****                                 /* Set first month of the year */
1890:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.Month = RTC_JANUARY;
 3329              		.loc 1 1890 0
 3330 06d0 604B     		ldr	r3, .L251+12
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 93


 3331 06d2 0122     		movs	r2, #1
 3332 06d4 1A72     		strb	r2, [r3, #8]
1891:Generated_Source\PSoC5/RTC.c **** 
1892:Generated_Source\PSoC5/RTC.c ****                                 /* Increment year */
1893:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.Year++;
 3333              		.loc 1 1893 0
 3334 06d6 5F4B     		ldr	r3, .L251+12
 3335 06d8 5B89     		ldrh	r3, [r3, #10]	@ movhi
 3336 06da 9BB2     		uxth	r3, r3
 3337 06dc 0133     		adds	r3, r3, #1
 3338 06de 9AB2     		uxth	r2, r3
 3339 06e0 5C4B     		ldr	r3, .L251+12
 3340 06e2 5A81     		strh	r2, [r3, #10]	@ movhi
1894:Generated_Source\PSoC5/RTC.c **** 
1895:Generated_Source\PSoC5/RTC.c ****                                 /* Update leap year status */
1896:Generated_Source\PSoC5/RTC.c ****                                 if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 3341              		.loc 1 1896 0
 3342 06e4 5B4B     		ldr	r3, .L251+12
 3343 06e6 5B89     		ldrh	r3, [r3, #10]	@ movhi
 3344 06e8 9BB2     		uxth	r3, r3
 3345 06ea 5C4A     		ldr	r2, .L251+20
 3346 06ec A2FB0312 		umull	r1, r2, r2, r3
 3347 06f0 D209     		lsrs	r2, r2, #7
 3348 06f2 4FF4C871 		mov	r1, #400
 3349 06f6 01FB02F2 		mul	r2, r1, r2
 3350 06fa 9B1A     		subs	r3, r3, r2
 3351 06fc 9BB2     		uxth	r3, r3
 3352 06fe 002B     		cmp	r3, #0
 3353 0700 15D0     		beq	.L222
 3354              		.loc 1 1896 0 is_stmt 0 discriminator 1
 3355 0702 544B     		ldr	r3, .L251+12
 3356 0704 5B89     		ldrh	r3, [r3, #10]	@ movhi
 3357 0706 9BB2     		uxth	r3, r3
 3358 0708 03F00303 		and	r3, r3, #3
 3359 070c 9BB2     		uxth	r3, r3
 3360 070e 002B     		cmp	r3, #0
 3361 0710 16D1     		bne	.L223
 3362              		.loc 1 1896 0 discriminator 2
 3363 0712 504B     		ldr	r3, .L251+12
 3364 0714 5B89     		ldrh	r3, [r3, #10]	@ movhi
 3365 0716 9BB2     		uxth	r3, r3
 3366 0718 504A     		ldr	r2, .L251+20
 3367 071a A2FB0312 		umull	r1, r2, r2, r3
 3368 071e 5209     		lsrs	r2, r2, #5
 3369 0720 6421     		movs	r1, #100
 3370 0722 01FB02F2 		mul	r2, r1, r2
 3371 0726 9B1A     		subs	r3, r3, r2
 3372 0728 9BB2     		uxth	r3, r3
 3373 072a 002B     		cmp	r3, #0
 3374 072c 08D0     		beq	.L223
 3375              	.L222:
1897:Generated_Source\PSoC5/RTC.c ****                                 {
1898:Generated_Source\PSoC5/RTC.c ****                                     /* LP - true, else - false */
1899:Generated_Source\PSoC5/RTC.c ****                                     RTC_statusDateTime |= RTC_STATUS_LY;
 3376              		.loc 1 1899 0 is_stmt 1
 3377 072e 4C4B     		ldr	r3, .L251+24
 3378 0730 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 94


 3379 0732 DBB2     		uxtb	r3, r3
 3380 0734 43F00203 		orr	r3, r3, #2
 3381 0738 DAB2     		uxtb	r2, r3
 3382 073a 494B     		ldr	r3, .L251+24
 3383 073c 1A70     		strb	r2, [r3]
 3384 073e 07E0     		b	.L224
 3385              	.L223:
1900:Generated_Source\PSoC5/RTC.c ****                                 }
1901:Generated_Source\PSoC5/RTC.c ****                                 else
1902:Generated_Source\PSoC5/RTC.c ****                                 {
1903:Generated_Source\PSoC5/RTC.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 3386              		.loc 1 1903 0
 3387 0740 474B     		ldr	r3, .L251+24
 3388 0742 1B78     		ldrb	r3, [r3]
 3389 0744 DBB2     		uxtb	r3, r3
 3390 0746 23F00203 		bic	r3, r3, #2
 3391 074a DAB2     		uxtb	r2, r3
 3392 074c 444B     		ldr	r3, .L251+24
 3393 074e 1A70     		strb	r2, [r3]
 3394              	.L224:
1904:Generated_Source\PSoC5/RTC.c ****                                 }
1905:Generated_Source\PSoC5/RTC.c **** 
1906:Generated_Source\PSoC5/RTC.c ****                                 /* Set day of year to the first one */
1907:Generated_Source\PSoC5/RTC.c ****                                 RTC_currentTimeDate.DayOfYear = 1u;
 3395              		.loc 1 1907 0
 3396 0750 404B     		ldr	r3, .L251+12
 3397 0752 0122     		movs	r2, #1
 3398 0754 DA80     		strh	r2, [r3, #6]	@ movhi
 3399              	.L220:
1908:Generated_Source\PSoC5/RTC.c ****                             }
1909:Generated_Source\PSoC5/RTC.c ****                         }
1910:Generated_Source\PSoC5/RTC.c ****                     }
1911:Generated_Source\PSoC5/RTC.c ****                     RTC_statusDateTime |= RTC_STATUS_DST;
 3400              		.loc 1 1911 0
 3401 0756 424B     		ldr	r3, .L251+24
 3402 0758 1B78     		ldrb	r3, [r3]
 3403 075a DBB2     		uxtb	r3, r3
 3404 075c 43F00103 		orr	r3, r3, #1
 3405 0760 DAB2     		uxtb	r2, r3
 3406 0762 3F4B     		ldr	r3, .L251+24
 3407 0764 1A70     		strb	r2, [r3]
1912:Generated_Source\PSoC5/RTC.c ****                     RTC_dstStartStatus = 0u;
 3408              		.loc 1 1912 0
 3409 0766 384B     		ldr	r3, .L251
 3410 0768 0022     		movs	r2, #0
 3411 076a 1A70     		strb	r2, [r3]
 3412              	.L209:
1913:Generated_Source\PSoC5/RTC.c ****                 }
1914:Generated_Source\PSoC5/RTC.c ****             }
1915:Generated_Source\PSoC5/RTC.c ****         }
1916:Generated_Source\PSoC5/RTC.c ****     #endif /* 1u == RTC_DST_FUNC_ENABLE */
1917:Generated_Source\PSoC5/RTC.c **** 
1918:Generated_Source\PSoC5/RTC.c ****     /* Set AM/PM flag */
1919:Generated_Source\PSoC5/RTC.c ****     if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 3413              		.loc 1 1919 0
 3414 076c 394B     		ldr	r3, .L251+12
 3415 076e 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 95


 3416 0770 DBB2     		uxtb	r3, r3
 3417 0772 0B2B     		cmp	r3, #11
 3418 0774 08D8     		bhi	.L225
1920:Generated_Source\PSoC5/RTC.c ****     {
1921:Generated_Source\PSoC5/RTC.c ****         /* AM Hour 00:00-11:59, flag zero */
1922:Generated_Source\PSoC5/RTC.c ****         RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 3419              		.loc 1 1922 0
 3420 0776 3A4B     		ldr	r3, .L251+24
 3421 0778 1B78     		ldrb	r3, [r3]
 3422 077a DBB2     		uxtb	r3, r3
 3423 077c 23F00403 		bic	r3, r3, #4
 3424 0780 DAB2     		uxtb	r2, r3
 3425 0782 374B     		ldr	r3, .L251+24
 3426 0784 1A70     		strb	r2, [r3]
 3427 0786 07E0     		b	.L226
 3428              	.L225:
1923:Generated_Source\PSoC5/RTC.c ****     }
1924:Generated_Source\PSoC5/RTC.c ****     else
1925:Generated_Source\PSoC5/RTC.c ****     {
1926:Generated_Source\PSoC5/RTC.c ****         /* PM Hour 12:00 - 23:59, flag set */
1927:Generated_Source\PSoC5/RTC.c ****         RTC_statusDateTime |= RTC_STATUS_AM_PM;
 3429              		.loc 1 1927 0
 3430 0788 354B     		ldr	r3, .L251+24
 3431 078a 1B78     		ldrb	r3, [r3]
 3432 078c DBB2     		uxtb	r3, r3
 3433 078e 43F00403 		orr	r3, r3, #4
 3434 0792 DAB2     		uxtb	r2, r3
 3435 0794 324B     		ldr	r3, .L251+24
 3436 0796 1A70     		strb	r2, [r3]
 3437              	.L226:
1928:Generated_Source\PSoC5/RTC.c ****     }
1929:Generated_Source\PSoC5/RTC.c **** 
1930:Generated_Source\PSoC5/RTC.c ****     /* Alarm calculation */
1931:Generated_Source\PSoC5/RTC.c **** 
1932:Generated_Source\PSoC5/RTC.c ****     /* Alarm SEC */
1933:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 3438              		.loc 1 1933 0
 3439 0798 324B     		ldr	r3, .L251+28
 3440 079a 1B78     		ldrb	r3, [r3]
 3441 079c DBB2     		uxtb	r3, r3
 3442 079e 03F00103 		and	r3, r3, #1
 3443 07a2 002B     		cmp	r3, #0
 3444 07a4 18D0     		beq	.L227
1934:Generated_Source\PSoC5/RTC.c ****     {
1935:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 3445              		.loc 1 1935 0
 3446 07a6 304B     		ldr	r3, .L251+32
 3447 07a8 1B78     		ldrb	r3, [r3]
 3448 07aa DAB2     		uxtb	r2, r3
 3449 07ac 294B     		ldr	r3, .L251+12
 3450 07ae 1B78     		ldrb	r3, [r3]
 3451 07b0 DBB2     		uxtb	r3, r3
 3452 07b2 9A42     		cmp	r2, r3
 3453 07b4 08D1     		bne	.L228
1936:Generated_Source\PSoC5/RTC.c ****         {
1937:Generated_Source\PSoC5/RTC.c ****             /* Set second alarm */
1938:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 96


 3454              		.loc 1 1938 0
 3455 07b6 2D4B     		ldr	r3, .L251+36
 3456 07b8 1B78     		ldrb	r3, [r3]
 3457 07ba DBB2     		uxtb	r3, r3
 3458 07bc 43F00103 		orr	r3, r3, #1
 3459 07c0 DAB2     		uxtb	r2, r3
 3460 07c2 2A4B     		ldr	r3, .L251+36
 3461 07c4 1A70     		strb	r2, [r3]
 3462 07c6 07E0     		b	.L227
 3463              	.L228:
1939:Generated_Source\PSoC5/RTC.c ****         }
1940:Generated_Source\PSoC5/RTC.c ****         else
1941:Generated_Source\PSoC5/RTC.c ****         {
1942:Generated_Source\PSoC5/RTC.c ****             /* Clear second alarm */
1943:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 3464              		.loc 1 1943 0
 3465 07c8 284B     		ldr	r3, .L251+36
 3466 07ca 1B78     		ldrb	r3, [r3]
 3467 07cc DBB2     		uxtb	r3, r3
 3468 07ce 23F00103 		bic	r3, r3, #1
 3469 07d2 DAB2     		uxtb	r2, r3
 3470 07d4 254B     		ldr	r3, .L251+36
 3471 07d6 1A70     		strb	r2, [r3]
 3472              	.L227:
1944:Generated_Source\PSoC5/RTC.c ****         }
1945:Generated_Source\PSoC5/RTC.c ****     }
1946:Generated_Source\PSoC5/RTC.c **** 
1947:Generated_Source\PSoC5/RTC.c ****     /* Alarm MIN */
1948:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 3473              		.loc 1 1948 0
 3474 07d8 224B     		ldr	r3, .L251+28
 3475 07da 1B78     		ldrb	r3, [r3]
 3476 07dc DBB2     		uxtb	r3, r3
 3477 07de 03F00203 		and	r3, r3, #2
 3478 07e2 002B     		cmp	r3, #0
 3479 07e4 18D0     		beq	.L229
1949:Generated_Source\PSoC5/RTC.c ****     {
1950:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 3480              		.loc 1 1950 0
 3481 07e6 204B     		ldr	r3, .L251+32
 3482 07e8 5B78     		ldrb	r3, [r3, #1]
 3483 07ea DAB2     		uxtb	r2, r3
 3484 07ec 194B     		ldr	r3, .L251+12
 3485 07ee 5B78     		ldrb	r3, [r3, #1]
 3486 07f0 DBB2     		uxtb	r3, r3
 3487 07f2 9A42     		cmp	r2, r3
 3488 07f4 08D1     		bne	.L230
1951:Generated_Source\PSoC5/RTC.c ****         {
1952:Generated_Source\PSoC5/RTC.c ****             /* Set minute alarm */
1953:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 3489              		.loc 1 1953 0
 3490 07f6 1D4B     		ldr	r3, .L251+36
 3491 07f8 1B78     		ldrb	r3, [r3]
 3492 07fa DBB2     		uxtb	r3, r3
 3493 07fc 43F00203 		orr	r3, r3, #2
 3494 0800 DAB2     		uxtb	r2, r3
 3495 0802 1A4B     		ldr	r3, .L251+36
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 97


 3496 0804 1A70     		strb	r2, [r3]
 3497 0806 07E0     		b	.L229
 3498              	.L230:
1954:Generated_Source\PSoC5/RTC.c ****         }
1955:Generated_Source\PSoC5/RTC.c ****         else
1956:Generated_Source\PSoC5/RTC.c ****         {
1957:Generated_Source\PSoC5/RTC.c ****             /* Clear minute alarm */
1958:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 3499              		.loc 1 1958 0
 3500 0808 184B     		ldr	r3, .L251+36
 3501 080a 1B78     		ldrb	r3, [r3]
 3502 080c DBB2     		uxtb	r3, r3
 3503 080e 23F00203 		bic	r3, r3, #2
 3504 0812 DAB2     		uxtb	r2, r3
 3505 0814 154B     		ldr	r3, .L251+36
 3506 0816 1A70     		strb	r2, [r3]
 3507              	.L229:
1959:Generated_Source\PSoC5/RTC.c ****         }
1960:Generated_Source\PSoC5/RTC.c ****     }
1961:Generated_Source\PSoC5/RTC.c **** 
1962:Generated_Source\PSoC5/RTC.c ****     /* Alarm HOUR */
1963:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 3508              		.loc 1 1963 0
 3509 0818 124B     		ldr	r3, .L251+28
 3510 081a 1B78     		ldrb	r3, [r3]
 3511 081c DBB2     		uxtb	r3, r3
 3512 081e 03F00403 		and	r3, r3, #4
 3513 0822 002B     		cmp	r3, #0
 3514 0824 2CD0     		beq	.L231
1964:Generated_Source\PSoC5/RTC.c ****     {
1965:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 3515              		.loc 1 1965 0
 3516 0826 104B     		ldr	r3, .L251+32
 3517 0828 9B78     		ldrb	r3, [r3, #2]
 3518 082a DAB2     		uxtb	r2, r3
 3519 082c 094B     		ldr	r3, .L251+12
 3520 082e 9B78     		ldrb	r3, [r3, #2]
 3521 0830 DBB2     		uxtb	r3, r3
 3522 0832 9A42     		cmp	r2, r3
 3523 0834 1CD1     		bne	.L232
1966:Generated_Source\PSoC5/RTC.c ****         {
1967:Generated_Source\PSoC5/RTC.c ****             /* Set hour alarm */
1968:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 3524              		.loc 1 1968 0
 3525 0836 0D4B     		ldr	r3, .L251+36
 3526 0838 1B78     		ldrb	r3, [r3]
 3527 083a DBB2     		uxtb	r3, r3
 3528 083c 43F00403 		orr	r3, r3, #4
 3529 0840 DAB2     		uxtb	r2, r3
 3530 0842 0A4B     		ldr	r3, .L251+36
 3531 0844 1A70     		strb	r2, [r3]
 3532 0846 1BE0     		b	.L231
 3533              	.L252:
 3534              		.align	2
 3535              	.L251:
 3536 0848 00000000 		.word	RTC_dstStartStatus
 3537 084c 00000000 		.word	RTC_dstOffsetMin
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 98


 3538 0850 89888888 		.word	-2004318071
 3539 0854 00000000 		.word	RTC_currentTimeDate
 3540 0858 00000000 		.word	RTC_daysInMonths
 3541 085c 1F85EB51 		.word	1374389535
 3542 0860 00000000 		.word	RTC_statusDateTime
 3543 0864 00000000 		.word	RTC_alarmCfgMask
 3544 0868 00000000 		.word	RTC_alarmCfgTimeDate
 3545 086c 00000000 		.word	RTC_alarmCurStatus
 3546              	.L232:
1969:Generated_Source\PSoC5/RTC.c ****         }
1970:Generated_Source\PSoC5/RTC.c ****         else
1971:Generated_Source\PSoC5/RTC.c ****         {
1972:Generated_Source\PSoC5/RTC.c ****             /* Clear hour alarm */
1973:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 3547              		.loc 1 1973 0
 3548 0870 624B     		ldr	r3, .L253
 3549 0872 1B78     		ldrb	r3, [r3]
 3550 0874 DBB2     		uxtb	r3, r3
 3551 0876 23F00403 		bic	r3, r3, #4
 3552 087a DAB2     		uxtb	r2, r3
 3553 087c 5F4B     		ldr	r3, .L253
 3554 087e 1A70     		strb	r2, [r3]
 3555              	.L231:
1974:Generated_Source\PSoC5/RTC.c ****         }
1975:Generated_Source\PSoC5/RTC.c ****     }
1976:Generated_Source\PSoC5/RTC.c **** 
1977:Generated_Source\PSoC5/RTC.c ****     /* Alarm DAYOFWEEK */
1978:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_DAYOFWEEK_MASK))
 3556              		.loc 1 1978 0
 3557 0880 5F4B     		ldr	r3, .L253+4
 3558 0882 1B78     		ldrb	r3, [r3]
 3559 0884 DBB2     		uxtb	r3, r3
 3560 0886 03F00803 		and	r3, r3, #8
 3561 088a 002B     		cmp	r3, #0
 3562 088c 18D0     		beq	.L233
1979:Generated_Source\PSoC5/RTC.c ****     {
1980:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 3563              		.loc 1 1980 0
 3564 088e 5D4B     		ldr	r3, .L253+8
 3565 0890 DB78     		ldrb	r3, [r3, #3]
 3566 0892 DAB2     		uxtb	r2, r3
 3567 0894 5C4B     		ldr	r3, .L253+12
 3568 0896 DB78     		ldrb	r3, [r3, #3]
 3569 0898 DBB2     		uxtb	r3, r3
 3570 089a 9A42     		cmp	r2, r3
 3571 089c 08D1     		bne	.L234
1981:Generated_Source\PSoC5/RTC.c ****         {
1982:Generated_Source\PSoC5/RTC.c ****             /* Set day of week alarm */
1983:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 3572              		.loc 1 1983 0
 3573 089e 574B     		ldr	r3, .L253
 3574 08a0 1B78     		ldrb	r3, [r3]
 3575 08a2 DBB2     		uxtb	r3, r3
 3576 08a4 43F00803 		orr	r3, r3, #8
 3577 08a8 DAB2     		uxtb	r2, r3
 3578 08aa 544B     		ldr	r3, .L253
 3579 08ac 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 99


 3580 08ae 07E0     		b	.L233
 3581              	.L234:
1984:Generated_Source\PSoC5/RTC.c ****         }
1985:Generated_Source\PSoC5/RTC.c ****         else
1986:Generated_Source\PSoC5/RTC.c ****         {
1987:Generated_Source\PSoC5/RTC.c ****             /* Clear day of week alarm */
1988:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 3582              		.loc 1 1988 0
 3583 08b0 524B     		ldr	r3, .L253
 3584 08b2 1B78     		ldrb	r3, [r3]
 3585 08b4 DBB2     		uxtb	r3, r3
 3586 08b6 23F00803 		bic	r3, r3, #8
 3587 08ba DAB2     		uxtb	r2, r3
 3588 08bc 4F4B     		ldr	r3, .L253
 3589 08be 1A70     		strb	r2, [r3]
 3590              	.L233:
1989:Generated_Source\PSoC5/RTC.c ****         }
1990:Generated_Source\PSoC5/RTC.c ****     }
1991:Generated_Source\PSoC5/RTC.c **** 
1992:Generated_Source\PSoC5/RTC.c ****     /* Alarm DAYOFYEAR */
1993:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_DAYOFYEAR_MASK))
 3591              		.loc 1 1993 0
 3592 08c0 4F4B     		ldr	r3, .L253+4
 3593 08c2 1B78     		ldrb	r3, [r3]
 3594 08c4 DBB2     		uxtb	r3, r3
 3595 08c6 03F02003 		and	r3, r3, #32
 3596 08ca 002B     		cmp	r3, #0
 3597 08cc 18D0     		beq	.L235
1994:Generated_Source\PSoC5/RTC.c ****     {
1995:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 3598              		.loc 1 1995 0
 3599 08ce 4D4B     		ldr	r3, .L253+8
 3600 08d0 DB88     		ldrh	r3, [r3, #6]	@ movhi
 3601 08d2 9AB2     		uxth	r2, r3
 3602 08d4 4C4B     		ldr	r3, .L253+12
 3603 08d6 DB88     		ldrh	r3, [r3, #6]	@ movhi
 3604 08d8 9BB2     		uxth	r3, r3
 3605 08da 9A42     		cmp	r2, r3
 3606 08dc 08D1     		bne	.L236
1996:Generated_Source\PSoC5/RTC.c ****         {
1997:Generated_Source\PSoC5/RTC.c ****             /* Set day of year alarm */
1998:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 3607              		.loc 1 1998 0
 3608 08de 474B     		ldr	r3, .L253
 3609 08e0 1B78     		ldrb	r3, [r3]
 3610 08e2 DBB2     		uxtb	r3, r3
 3611 08e4 43F02003 		orr	r3, r3, #32
 3612 08e8 DAB2     		uxtb	r2, r3
 3613 08ea 444B     		ldr	r3, .L253
 3614 08ec 1A70     		strb	r2, [r3]
 3615 08ee 07E0     		b	.L235
 3616              	.L236:
1999:Generated_Source\PSoC5/RTC.c ****         }
2000:Generated_Source\PSoC5/RTC.c ****         else
2001:Generated_Source\PSoC5/RTC.c ****         {
2002:Generated_Source\PSoC5/RTC.c ****             /* Clear day of year alarm */
2003:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 100


 3617              		.loc 1 2003 0
 3618 08f0 424B     		ldr	r3, .L253
 3619 08f2 1B78     		ldrb	r3, [r3]
 3620 08f4 DBB2     		uxtb	r3, r3
 3621 08f6 23F02003 		bic	r3, r3, #32
 3622 08fa DAB2     		uxtb	r2, r3
 3623 08fc 3F4B     		ldr	r3, .L253
 3624 08fe 1A70     		strb	r2, [r3]
 3625              	.L235:
2004:Generated_Source\PSoC5/RTC.c ****         }
2005:Generated_Source\PSoC5/RTC.c ****     }
2006:Generated_Source\PSoC5/RTC.c **** 
2007:Generated_Source\PSoC5/RTC.c ****     /* Alarm DAYOFMONTH */
2008:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_DAYOFMONTH_MASK))
 3626              		.loc 1 2008 0
 3627 0900 3F4B     		ldr	r3, .L253+4
 3628 0902 1B78     		ldrb	r3, [r3]
 3629 0904 DBB2     		uxtb	r3, r3
 3630 0906 03F01003 		and	r3, r3, #16
 3631 090a 002B     		cmp	r3, #0
 3632 090c 18D0     		beq	.L237
2009:Generated_Source\PSoC5/RTC.c ****     {
2010:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 3633              		.loc 1 2010 0
 3634 090e 3D4B     		ldr	r3, .L253+8
 3635 0910 1B79     		ldrb	r3, [r3, #4]
 3636 0912 DAB2     		uxtb	r2, r3
 3637 0914 3C4B     		ldr	r3, .L253+12
 3638 0916 1B79     		ldrb	r3, [r3, #4]
 3639 0918 DBB2     		uxtb	r3, r3
 3640 091a 9A42     		cmp	r2, r3
 3641 091c 08D1     		bne	.L238
2011:Generated_Source\PSoC5/RTC.c ****         {
2012:Generated_Source\PSoC5/RTC.c ****             /* Set day of month alarm */
2013:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 3642              		.loc 1 2013 0
 3643 091e 374B     		ldr	r3, .L253
 3644 0920 1B78     		ldrb	r3, [r3]
 3645 0922 DBB2     		uxtb	r3, r3
 3646 0924 43F01003 		orr	r3, r3, #16
 3647 0928 DAB2     		uxtb	r2, r3
 3648 092a 344B     		ldr	r3, .L253
 3649 092c 1A70     		strb	r2, [r3]
 3650 092e 07E0     		b	.L237
 3651              	.L238:
2014:Generated_Source\PSoC5/RTC.c ****         }
2015:Generated_Source\PSoC5/RTC.c ****            else
2016:Generated_Source\PSoC5/RTC.c ****         {
2017:Generated_Source\PSoC5/RTC.c ****             /* Clear day of month alarm */
2018:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 3652              		.loc 1 2018 0
 3653 0930 324B     		ldr	r3, .L253
 3654 0932 1B78     		ldrb	r3, [r3]
 3655 0934 DBB2     		uxtb	r3, r3
 3656 0936 23F01003 		bic	r3, r3, #16
 3657 093a DAB2     		uxtb	r2, r3
 3658 093c 2F4B     		ldr	r3, .L253
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 101


 3659 093e 1A70     		strb	r2, [r3]
 3660              	.L237:
2019:Generated_Source\PSoC5/RTC.c ****         }
2020:Generated_Source\PSoC5/RTC.c ****     }
2021:Generated_Source\PSoC5/RTC.c **** 
2022:Generated_Source\PSoC5/RTC.c ****     /* Alarm MONTH */
2023:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MONTH_MASK))
 3661              		.loc 1 2023 0
 3662 0940 2F4B     		ldr	r3, .L253+4
 3663 0942 1B78     		ldrb	r3, [r3]
 3664 0944 DBB2     		uxtb	r3, r3
 3665 0946 03F04003 		and	r3, r3, #64
 3666 094a 002B     		cmp	r3, #0
 3667 094c 18D0     		beq	.L239
2024:Generated_Source\PSoC5/RTC.c ****     {
2025:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 3668              		.loc 1 2025 0
 3669 094e 2D4B     		ldr	r3, .L253+8
 3670 0950 1B7A     		ldrb	r3, [r3, #8]
 3671 0952 DAB2     		uxtb	r2, r3
 3672 0954 2C4B     		ldr	r3, .L253+12
 3673 0956 1B7A     		ldrb	r3, [r3, #8]
 3674 0958 DBB2     		uxtb	r3, r3
 3675 095a 9A42     		cmp	r2, r3
 3676 095c 08D1     		bne	.L240
2026:Generated_Source\PSoC5/RTC.c ****         {
2027:Generated_Source\PSoC5/RTC.c ****             /* Set month alarm */
2028:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 3677              		.loc 1 2028 0
 3678 095e 274B     		ldr	r3, .L253
 3679 0960 1B78     		ldrb	r3, [r3]
 3680 0962 DBB2     		uxtb	r3, r3
 3681 0964 43F04003 		orr	r3, r3, #64
 3682 0968 DAB2     		uxtb	r2, r3
 3683 096a 244B     		ldr	r3, .L253
 3684 096c 1A70     		strb	r2, [r3]
 3685 096e 07E0     		b	.L239
 3686              	.L240:
2029:Generated_Source\PSoC5/RTC.c ****         }
2030:Generated_Source\PSoC5/RTC.c ****         else
2031:Generated_Source\PSoC5/RTC.c ****         {
2032:Generated_Source\PSoC5/RTC.c ****             /* Clear month alarm */
2033:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 3687              		.loc 1 2033 0
 3688 0970 224B     		ldr	r3, .L253
 3689 0972 1B78     		ldrb	r3, [r3]
 3690 0974 DBB2     		uxtb	r3, r3
 3691 0976 23F04003 		bic	r3, r3, #64
 3692 097a DAB2     		uxtb	r2, r3
 3693 097c 1F4B     		ldr	r3, .L253
 3694 097e 1A70     		strb	r2, [r3]
 3695              	.L239:
2034:Generated_Source\PSoC5/RTC.c ****         }
2035:Generated_Source\PSoC5/RTC.c ****     }
2036:Generated_Source\PSoC5/RTC.c **** 
2037:Generated_Source\PSoC5/RTC.c ****     /* Alarm YEAR */
2038:Generated_Source\PSoC5/RTC.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_YEAR_MASK))
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 102


 3696              		.loc 1 2038 0
 3697 0980 1F4B     		ldr	r3, .L253+4
 3698 0982 1B78     		ldrb	r3, [r3]
 3699 0984 DBB2     		uxtb	r3, r3
 3700 0986 5BB2     		sxtb	r3, r3
 3701 0988 002B     		cmp	r3, #0
 3702 098a 18DA     		bge	.L241
2039:Generated_Source\PSoC5/RTC.c ****     {
2040:Generated_Source\PSoC5/RTC.c ****         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 3703              		.loc 1 2040 0
 3704 098c 1D4B     		ldr	r3, .L253+8
 3705 098e 5B89     		ldrh	r3, [r3, #10]	@ movhi
 3706 0990 9AB2     		uxth	r2, r3
 3707 0992 1D4B     		ldr	r3, .L253+12
 3708 0994 5B89     		ldrh	r3, [r3, #10]	@ movhi
 3709 0996 9BB2     		uxth	r3, r3
 3710 0998 9A42     		cmp	r2, r3
 3711 099a 08D1     		bne	.L242
2041:Generated_Source\PSoC5/RTC.c ****         {
2042:Generated_Source\PSoC5/RTC.c ****             /* Set year alarm */
2043:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 3712              		.loc 1 2043 0
 3713 099c 174B     		ldr	r3, .L253
 3714 099e 1B78     		ldrb	r3, [r3]
 3715 09a0 DBB2     		uxtb	r3, r3
 3716 09a2 63F07F03 		orn	r3, r3, #127
 3717 09a6 DAB2     		uxtb	r2, r3
 3718 09a8 144B     		ldr	r3, .L253
 3719 09aa 1A70     		strb	r2, [r3]
 3720 09ac 07E0     		b	.L241
 3721              	.L242:
2044:Generated_Source\PSoC5/RTC.c ****         }
2045:Generated_Source\PSoC5/RTC.c ****         else
2046:Generated_Source\PSoC5/RTC.c ****         {
2047:Generated_Source\PSoC5/RTC.c ****             /* Clear year alarm */
2048:Generated_Source\PSoC5/RTC.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 3722              		.loc 1 2048 0
 3723 09ae 134B     		ldr	r3, .L253
 3724 09b0 1B78     		ldrb	r3, [r3]
 3725 09b2 DBB2     		uxtb	r3, r3
 3726 09b4 03F07F03 		and	r3, r3, #127
 3727 09b8 DAB2     		uxtb	r2, r3
 3728 09ba 104B     		ldr	r3, .L253
 3729 09bc 1A70     		strb	r2, [r3]
 3730              	.L241:
2049:Generated_Source\PSoC5/RTC.c ****         }
2050:Generated_Source\PSoC5/RTC.c ****     }
2051:Generated_Source\PSoC5/RTC.c **** 
2052:Generated_Source\PSoC5/RTC.c ****     RTC_alarmCfgMaskTemp = RTC_alarmCfgMask;
 3731              		.loc 1 2052 0
 3732 09be 104B     		ldr	r3, .L253+4
 3733 09c0 1B78     		ldrb	r3, [r3]
 3734 09c2 BB71     		strb	r3, [r7, #6]
2053:Generated_Source\PSoC5/RTC.c ****     /* Set Alarm flag event */
2054:Generated_Source\PSoC5/RTC.c ****     RTC_SET_ALARM(RTC_alarmCfgMaskTemp,
 3735              		.loc 1 2054 0
 3736 09c4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 103


 3737 09c6 002B     		cmp	r3, #0
 3738 09c8 13D0     		beq	.L244
 3739              		.loc 1 2054 0 is_stmt 0 discriminator 1
 3740 09ca 0C4B     		ldr	r3, .L253
 3741 09cc 1B78     		ldrb	r3, [r3]
 3742 09ce DAB2     		uxtb	r2, r3
 3743 09d0 BB79     		ldrb	r3, [r7, #6]
 3744 09d2 1340     		ands	r3, r3, r2
 3745 09d4 DBB2     		uxtb	r3, r3
 3746 09d6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 3747 09d8 9A42     		cmp	r2, r3
 3748 09da 0AD1     		bne	.L244
 3749              		.loc 1 2054 0 discriminator 2
 3750 09dc 0B4B     		ldr	r3, .L253+16
 3751 09de 1B78     		ldrb	r3, [r3]
 3752 09e0 DBB2     		uxtb	r3, r3
 3753 09e2 43F00803 		orr	r3, r3, #8
 3754 09e6 DAB2     		uxtb	r2, r3
 3755 09e8 084B     		ldr	r3, .L253+16
 3756 09ea 1A70     		strb	r2, [r3]
 3757 09ec 034B     		ldr	r3, .L253
 3758 09ee 0022     		movs	r2, #0
 3759 09f0 1A70     		strb	r2, [r3]
 3760              	.L244:
2055:Generated_Source\PSoC5/RTC.c ****                                RTC_alarmCurStatus,
2056:Generated_Source\PSoC5/RTC.c ****                                RTC_statusDateTime);
2057:Generated_Source\PSoC5/RTC.c **** }
 3761              		.loc 1 2057 0 is_stmt 1
 3762 09f2 00BF     		nop
 3763 09f4 0837     		adds	r7, r7, #8
 3764              		.cfi_def_cfa_offset 8
 3765 09f6 BD46     		mov	sp, r7
 3766              		.cfi_def_cfa_register 13
 3767              		@ sp needed
 3768 09f8 80BD     		pop	{r7, pc}
 3769              	.L254:
 3770 09fa 00BF     		.align	2
 3771              	.L253:
 3772 09fc 00000000 		.word	RTC_alarmCurStatus
 3773 0a00 00000000 		.word	RTC_alarmCfgMask
 3774 0a04 00000000 		.word	RTC_alarmCfgTimeDate
 3775 0a08 00000000 		.word	RTC_currentTimeDate
 3776 0a0c 00000000 		.word	RTC_statusDateTime
 3777              		.cfi_endproc
 3778              	.LFE41:
 3779              		.size	RTC_SetInitValues, .-RTC_SetInitValues
 3780              		.section	.text.RTC_WriteDSTMode,"ax",%progbits
 3781              		.align	2
 3782              		.global	RTC_WriteDSTMode
 3783              		.thumb
 3784              		.thumb_func
 3785              		.type	RTC_WriteDSTMode, %function
 3786              	RTC_WriteDSTMode:
 3787              	.LFB42:
2058:Generated_Source\PSoC5/RTC.c **** 
2059:Generated_Source\PSoC5/RTC.c **** 
2060:Generated_Source\PSoC5/RTC.c **** #if (1u == RTC_DST_FUNC_ENABLE)
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 104


2061:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2062:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTMode
2063:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2064:Generated_Source\PSoC5/RTC.c ****     *
2065:Generated_Source\PSoC5/RTC.c ****     * Summary:
2066:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST mode software register. That enables or disables DST changes
2067:Generated_Source\PSoC5/RTC.c ****     *  and sets the date mode to fixed date or relative date. Only generated if DST
2068:Generated_Source\PSoC5/RTC.c ****     *  enabled.
2069:Generated_Source\PSoC5/RTC.c ****     *
2070:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2071:Generated_Source\PSoC5/RTC.c ****     *  mode: DST Mode software register value.
2072:Generated_Source\PSoC5/RTC.c ****     *
2073:Generated_Source\PSoC5/RTC.c ****     * Return:
2074:Generated_Source\PSoC5/RTC.c ****     *  None.
2075:Generated_Source\PSoC5/RTC.c ****     *
2076:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2077:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstModeType: global variable is modified with the new
2078:Generated_Source\PSoC5/RTC.c ****     *  DST mode type: relative or fixed.
2079:Generated_Source\PSoC5/RTC.c ****     *
2080:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Month,
2081:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfWeek,
2082:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Week:
2083:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Month,
2084:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfWeek,
2085:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Week,
2086:Generated_Source\PSoC5/RTC.c ****     *  RTC_currentTimeDate.Year: for the day of week correction,
2087:Generated_Source\PSoC5/RTC.c ****     *   they are used by RTC_DSTDateConversion() function if DST
2088:Generated_Source\PSoC5/RTC.c ****     *   mode is configured to be relative.
2089:Generated_Source\PSoC5/RTC.c ****     *
2090:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfMonth,
2091:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfMonth: updated after convertion by
2092:Generated_Source\PSoC5/RTC.c ****     *  the RTC_DSTDateConversion() function if DST mode is
2093:Generated_Source\PSoC5/RTC.c ****     *  configured to be relative.
2094:Generated_Source\PSoC5/RTC.c ****     *
2095:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2096:Generated_Source\PSoC5/RTC.c ****     *  No.
2097:Generated_Source\PSoC5/RTC.c ****     *
2098:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2099:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTMode(uint8 mode) 
2100:Generated_Source\PSoC5/RTC.c ****     {
 3788              		.loc 1 2100 0
 3789              		.cfi_startproc
 3790              		@ args = 0, pretend = 0, frame = 8
 3791              		@ frame_needed = 1, uses_anonymous_args = 0
 3792 0000 80B5     		push	{r7, lr}
 3793              		.cfi_def_cfa_offset 8
 3794              		.cfi_offset 7, -8
 3795              		.cfi_offset 14, -4
 3796 0002 82B0     		sub	sp, sp, #8
 3797              		.cfi_def_cfa_offset 16
 3798 0004 00AF     		add	r7, sp, #0
 3799              		.cfi_def_cfa_register 7
 3800 0006 0346     		mov	r3, r0
 3801 0008 FB71     		strb	r3, [r7, #7]
2101:Generated_Source\PSoC5/RTC.c ****         /* Set DST mode */
2102:Generated_Source\PSoC5/RTC.c ****         RTC_dstModeType = mode;
 3802              		.loc 1 2102 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 105


 3803 000a 074A     		ldr	r2, .L258
 3804 000c FB79     		ldrb	r3, [r7, #7]
 3805 000e 1370     		strb	r3, [r2]
2103:Generated_Source\PSoC5/RTC.c **** 
2104:Generated_Source\PSoC5/RTC.c ****         if(0u != RTC_IS_BIT_SET(mode, RTC_DST_RELDATE))
 3806              		.loc 1 2104 0
 3807 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3808 0012 03F00203 		and	r3, r3, #2
 3809 0016 002B     		cmp	r3, #0
 3810 0018 01D0     		beq	.L257
2105:Generated_Source\PSoC5/RTC.c ****         {
2106:Generated_Source\PSoC5/RTC.c ****             /* Convert DST date */
2107:Generated_Source\PSoC5/RTC.c ****             RTC_DSTDateConversion();
 3811              		.loc 1 2107 0
 3812 001a FFF7FEFF 		bl	RTC_DSTDateConversion
 3813              	.L257:
2108:Generated_Source\PSoC5/RTC.c ****         }
2109:Generated_Source\PSoC5/RTC.c ****     }
 3814              		.loc 1 2109 0
 3815 001e 00BF     		nop
 3816 0020 0837     		adds	r7, r7, #8
 3817              		.cfi_def_cfa_offset 8
 3818 0022 BD46     		mov	sp, r7
 3819              		.cfi_def_cfa_register 13
 3820              		@ sp needed
 3821 0024 80BD     		pop	{r7, pc}
 3822              	.L259:
 3823 0026 00BF     		.align	2
 3824              	.L258:
 3825 0028 00000000 		.word	RTC_dstModeType
 3826              		.cfi_endproc
 3827              	.LFE42:
 3828              		.size	RTC_WriteDSTMode, .-RTC_WriteDSTMode
 3829              		.section	.text.RTC_WriteDSTStartHour,"ax",%progbits
 3830              		.align	2
 3831              		.global	RTC_WriteDSTStartHour
 3832              		.thumb
 3833              		.thumb_func
 3834              		.type	RTC_WriteDSTStartHour, %function
 3835              	RTC_WriteDSTStartHour:
 3836              	.LFB43:
2110:Generated_Source\PSoC5/RTC.c **** 
2111:Generated_Source\PSoC5/RTC.c **** 
2112:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2113:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTStartHour
2114:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2115:Generated_Source\PSoC5/RTC.c ****     *
2116:Generated_Source\PSoC5/RTC.c ****     * Summary:
2117:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST Start Hour software register. Used for absolute date entry.
2118:Generated_Source\PSoC5/RTC.c ****     *  Only generated if DST is enabled.
2119:Generated_Source\PSoC5/RTC.c ****     *
2120:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2121:Generated_Source\PSoC5/RTC.c ****     *  hour: DST Start Hour software register value.
2122:Generated_Source\PSoC5/RTC.c ****     *
2123:Generated_Source\PSoC5/RTC.c ****     * Return:
2124:Generated_Source\PSoC5/RTC.c ****     *  None.
2125:Generated_Source\PSoC5/RTC.c ****     *
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 106


2126:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2127:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Hour: global variable is modified with
2128:Generated_Source\PSoC5/RTC.c ****     *  the new value.
2129:Generated_Source\PSoC5/RTC.c ****     *
2130:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2131:Generated_Source\PSoC5/RTC.c ****     *  No.
2132:Generated_Source\PSoC5/RTC.c ****     *
2133:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2134:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTStartHour(uint8 hour) 
2135:Generated_Source\PSoC5/RTC.c ****     {
 3837              		.loc 1 2135 0
 3838              		.cfi_startproc
 3839              		@ args = 0, pretend = 0, frame = 8
 3840              		@ frame_needed = 1, uses_anonymous_args = 0
 3841              		@ link register save eliminated.
 3842 0000 80B4     		push	{r7}
 3843              		.cfi_def_cfa_offset 4
 3844              		.cfi_offset 7, -4
 3845 0002 83B0     		sub	sp, sp, #12
 3846              		.cfi_def_cfa_offset 16
 3847 0004 00AF     		add	r7, sp, #0
 3848              		.cfi_def_cfa_register 7
 3849 0006 0346     		mov	r3, r0
 3850 0008 FB71     		strb	r3, [r7, #7]
2136:Generated_Source\PSoC5/RTC.c ****         /* Set DST Start Hour */
2137:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStart.Hour = hour;
 3851              		.loc 1 2137 0
 3852 000a 044A     		ldr	r2, .L261
 3853 000c FB79     		ldrb	r3, [r7, #7]
 3854 000e 1370     		strb	r3, [r2]
2138:Generated_Source\PSoC5/RTC.c ****     }
 3855              		.loc 1 2138 0
 3856 0010 00BF     		nop
 3857 0012 0C37     		adds	r7, r7, #12
 3858              		.cfi_def_cfa_offset 4
 3859 0014 BD46     		mov	sp, r7
 3860              		.cfi_def_cfa_register 13
 3861              		@ sp needed
 3862 0016 80BC     		pop	{r7}
 3863              		.cfi_restore 7
 3864              		.cfi_def_cfa_offset 0
 3865 0018 7047     		bx	lr
 3866              	.L262:
 3867 001a 00BF     		.align	2
 3868              	.L261:
 3869 001c 00000000 		.word	RTC_dstTimeDateStart
 3870              		.cfi_endproc
 3871              	.LFE43:
 3872              		.size	RTC_WriteDSTStartHour, .-RTC_WriteDSTStartHour
 3873              		.section	.text.RTC_WriteDSTStartDayOfMonth,"ax",%progbits
 3874              		.align	2
 3875              		.global	RTC_WriteDSTStartDayOfMonth
 3876              		.thumb
 3877              		.thumb_func
 3878              		.type	RTC_WriteDSTStartDayOfMonth, %function
 3879              	RTC_WriteDSTStartDayOfMonth:
 3880              	.LFB44:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 107


2139:Generated_Source\PSoC5/RTC.c **** 
2140:Generated_Source\PSoC5/RTC.c **** 
2141:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2142:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTStartOfMonth
2143:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2144:Generated_Source\PSoC5/RTC.c ****     *
2145:Generated_Source\PSoC5/RTC.c ****     * Summary:
2146:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST Start DayOfMonth software register. Used for absolute date
2147:Generated_Source\PSoC5/RTC.c ****     *  entry. Only generated if DST is enabled.
2148:Generated_Source\PSoC5/RTC.c ****     *
2149:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2150:Generated_Source\PSoC5/RTC.c ****     *  dayOfMonth: DST Start DayOfMonth software register value.
2151:Generated_Source\PSoC5/RTC.c ****     *
2152:Generated_Source\PSoC5/RTC.c ****     * Return:
2153:Generated_Source\PSoC5/RTC.c ****     *  None.
2154:Generated_Source\PSoC5/RTC.c ****     *
2155:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2156:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfMonth: global variable is modified
2157:Generated_Source\PSoC5/RTC.c ****     *  with the new value.
2158:Generated_Source\PSoC5/RTC.c ****     *
2159:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2160:Generated_Source\PSoC5/RTC.c ****     *  No.
2161:Generated_Source\PSoC5/RTC.c ****     *
2162:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2163:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTStartDayOfMonth(uint8 dayOfMonth)
2164:Generated_Source\PSoC5/RTC.c ****          
2165:Generated_Source\PSoC5/RTC.c ****     {
 3881              		.loc 1 2165 0
 3882              		.cfi_startproc
 3883              		@ args = 0, pretend = 0, frame = 8
 3884              		@ frame_needed = 1, uses_anonymous_args = 0
 3885              		@ link register save eliminated.
 3886 0000 80B4     		push	{r7}
 3887              		.cfi_def_cfa_offset 4
 3888              		.cfi_offset 7, -4
 3889 0002 83B0     		sub	sp, sp, #12
 3890              		.cfi_def_cfa_offset 16
 3891 0004 00AF     		add	r7, sp, #0
 3892              		.cfi_def_cfa_register 7
 3893 0006 0346     		mov	r3, r0
 3894 0008 FB71     		strb	r3, [r7, #7]
2166:Generated_Source\PSoC5/RTC.c ****         /* Set DST Start day of month */
2167:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStart.DayOfMonth = dayOfMonth;
 3895              		.loc 1 2167 0
 3896 000a 044A     		ldr	r2, .L264
 3897 000c FB79     		ldrb	r3, [r7, #7]
 3898 000e D370     		strb	r3, [r2, #3]
2168:Generated_Source\PSoC5/RTC.c ****     }
 3899              		.loc 1 2168 0
 3900 0010 00BF     		nop
 3901 0012 0C37     		adds	r7, r7, #12
 3902              		.cfi_def_cfa_offset 4
 3903 0014 BD46     		mov	sp, r7
 3904              		.cfi_def_cfa_register 13
 3905              		@ sp needed
 3906 0016 80BC     		pop	{r7}
 3907              		.cfi_restore 7
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 108


 3908              		.cfi_def_cfa_offset 0
 3909 0018 7047     		bx	lr
 3910              	.L265:
 3911 001a 00BF     		.align	2
 3912              	.L264:
 3913 001c 00000000 		.word	RTC_dstTimeDateStart
 3914              		.cfi_endproc
 3915              	.LFE44:
 3916              		.size	RTC_WriteDSTStartDayOfMonth, .-RTC_WriteDSTStartDayOfMonth
 3917              		.section	.text.RTC_WriteDSTStartMonth,"ax",%progbits
 3918              		.align	2
 3919              		.global	RTC_WriteDSTStartMonth
 3920              		.thumb
 3921              		.thumb_func
 3922              		.type	RTC_WriteDSTStartMonth, %function
 3923              	RTC_WriteDSTStartMonth:
 3924              	.LFB45:
2169:Generated_Source\PSoC5/RTC.c **** 
2170:Generated_Source\PSoC5/RTC.c **** 
2171:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2172:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTStartMonth
2173:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2174:Generated_Source\PSoC5/RTC.c ****     *
2175:Generated_Source\PSoC5/RTC.c ****     * Summary:
2176:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST Start Month software register. Used for absolute date entry.
2177:Generated_Source\PSoC5/RTC.c ****     *  Only generated if DST is enabled.
2178:Generated_Source\PSoC5/RTC.c ****     *
2179:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2180:Generated_Source\PSoC5/RTC.c ****     *  month: DST Start month software register value.
2181:Generated_Source\PSoC5/RTC.c ****     *
2182:Generated_Source\PSoC5/RTC.c ****     * Return:
2183:Generated_Source\PSoC5/RTC.c ****     *  None.
2184:Generated_Source\PSoC5/RTC.c ****     *
2185:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2186:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Month: global variable is modified
2187:Generated_Source\PSoC5/RTC.c ****     *  with the new value.
2188:Generated_Source\PSoC5/RTC.c ****     *
2189:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2190:Generated_Source\PSoC5/RTC.c ****     *  No.
2191:Generated_Source\PSoC5/RTC.c ****     *
2192:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2193:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTStartMonth(uint8 month) 
2194:Generated_Source\PSoC5/RTC.c ****     {
 3925              		.loc 1 2194 0
 3926              		.cfi_startproc
 3927              		@ args = 0, pretend = 0, frame = 8
 3928              		@ frame_needed = 1, uses_anonymous_args = 0
 3929              		@ link register save eliminated.
 3930 0000 80B4     		push	{r7}
 3931              		.cfi_def_cfa_offset 4
 3932              		.cfi_offset 7, -4
 3933 0002 83B0     		sub	sp, sp, #12
 3934              		.cfi_def_cfa_offset 16
 3935 0004 00AF     		add	r7, sp, #0
 3936              		.cfi_def_cfa_register 7
 3937 0006 0346     		mov	r3, r0
 3938 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 109


2195:Generated_Source\PSoC5/RTC.c ****         /* Set DST Start month */
2196:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStart.Month = month;
 3939              		.loc 1 2196 0
 3940 000a 044A     		ldr	r2, .L267
 3941 000c FB79     		ldrb	r3, [r7, #7]
 3942 000e 1371     		strb	r3, [r2, #4]
2197:Generated_Source\PSoC5/RTC.c ****     }
 3943              		.loc 1 2197 0
 3944 0010 00BF     		nop
 3945 0012 0C37     		adds	r7, r7, #12
 3946              		.cfi_def_cfa_offset 4
 3947 0014 BD46     		mov	sp, r7
 3948              		.cfi_def_cfa_register 13
 3949              		@ sp needed
 3950 0016 80BC     		pop	{r7}
 3951              		.cfi_restore 7
 3952              		.cfi_def_cfa_offset 0
 3953 0018 7047     		bx	lr
 3954              	.L268:
 3955 001a 00BF     		.align	2
 3956              	.L267:
 3957 001c 00000000 		.word	RTC_dstTimeDateStart
 3958              		.cfi_endproc
 3959              	.LFE45:
 3960              		.size	RTC_WriteDSTStartMonth, .-RTC_WriteDSTStartMonth
 3961              		.section	.text.RTC_WriteDSTStartDayOfWeek,"ax",%progbits
 3962              		.align	2
 3963              		.global	RTC_WriteDSTStartDayOfWeek
 3964              		.thumb
 3965              		.thumb_func
 3966              		.type	RTC_WriteDSTStartDayOfWeek, %function
 3967              	RTC_WriteDSTStartDayOfWeek:
 3968              	.LFB46:
2198:Generated_Source\PSoC5/RTC.c **** 
2199:Generated_Source\PSoC5/RTC.c **** 
2200:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2201:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTStartDayOfWeek
2202:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2203:Generated_Source\PSoC5/RTC.c ****     *
2204:Generated_Source\PSoC5/RTC.c ****     * Summary:
2205:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST Start DayOfWeek software register. Used for absolute date
2206:Generated_Source\PSoC5/RTC.c ****     *  entry. Only generated if DST is enabled.
2207:Generated_Source\PSoC5/RTC.c ****     *
2208:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2209:Generated_Source\PSoC5/RTC.c ****     *  dayOfWeek: DST start day of week software register value.
2210:Generated_Source\PSoC5/RTC.c ****     *
2211:Generated_Source\PSoC5/RTC.c ****     * Return:
2212:Generated_Source\PSoC5/RTC.c ****     *  None.
2213:Generated_Source\PSoC5/RTC.c ****     *
2214:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2215:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstModeType: global variable, where DST mode type:
2216:Generated_Source\PSoC5/RTC.c ****     *  relative or fixed is stored.
2217:Generated_Source\PSoC5/RTC.c ****     *
2218:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Month,
2219:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfWeek,
2220:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Week,
2221:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Month,
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 110


2222:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfWeek,
2223:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Week: for the day of week correction,
2224:Generated_Source\PSoC5/RTC.c ****     *   they are used by RTC_DSTDateConversion() function if DST
2225:Generated_Source\PSoC5/RTC.c ****     *   mode is configured to be relative.
2226:Generated_Source\PSoC5/RTC.c ****     *
2227:Generated_Source\PSoC5/RTC.c ****     *  RTC_currentTimeDate.Year: for the day of week calculation,
2228:Generated_Source\PSoC5/RTC.c ****     *   it is used by RTC_DSTDateConversion() function if DST
2229:Generated_Source\PSoC5/RTC.c ****     *   mode is configured to be relative.
2230:Generated_Source\PSoC5/RTC.c ****     *
2231:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfWeek: global variable is modified
2232:Generated_Source\PSoC5/RTC.c ****     *  with the new day of week value.
2233:Generated_Source\PSoC5/RTC.c ****     *
2234:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfMonth and
2235:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfMonth are modified by
2236:Generated_Source\PSoC5/RTC.c ****     *  the RTC_DSTDateConversion() function if DST mode is
2237:Generated_Source\PSoC5/RTC.c ****     *  configured to be relative.
2238:Generated_Source\PSoC5/RTC.c ****     *
2239:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2240:Generated_Source\PSoC5/RTC.c ****     *  No.
2241:Generated_Source\PSoC5/RTC.c ****     *
2242:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2243:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTStartDayOfWeek(uint8 dayOfWeek)
2244:Generated_Source\PSoC5/RTC.c ****          
2245:Generated_Source\PSoC5/RTC.c ****     {
 3969              		.loc 1 2245 0
 3970              		.cfi_startproc
 3971              		@ args = 0, pretend = 0, frame = 8
 3972              		@ frame_needed = 1, uses_anonymous_args = 0
 3973 0000 80B5     		push	{r7, lr}
 3974              		.cfi_def_cfa_offset 8
 3975              		.cfi_offset 7, -8
 3976              		.cfi_offset 14, -4
 3977 0002 82B0     		sub	sp, sp, #8
 3978              		.cfi_def_cfa_offset 16
 3979 0004 00AF     		add	r7, sp, #0
 3980              		.cfi_def_cfa_register 7
 3981 0006 0346     		mov	r3, r0
 3982 0008 FB71     		strb	r3, [r7, #7]
2246:Generated_Source\PSoC5/RTC.c ****         /* Set DST Start day of week */
2247:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStart.DayOfWeek = dayOfWeek;
 3983              		.loc 1 2247 0
 3984 000a 084A     		ldr	r2, .L272
 3985 000c FB79     		ldrb	r3, [r7, #7]
 3986 000e 5370     		strb	r3, [r2, #1]
2248:Generated_Source\PSoC5/RTC.c **** 
2249:Generated_Source\PSoC5/RTC.c ****         if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_RELDATE))
 3987              		.loc 1 2249 0
 3988 0010 074B     		ldr	r3, .L272+4
 3989 0012 1B78     		ldrb	r3, [r3]
 3990 0014 DBB2     		uxtb	r3, r3
 3991 0016 03F00203 		and	r3, r3, #2
 3992 001a 002B     		cmp	r3, #0
 3993 001c 01D0     		beq	.L271
2250:Generated_Source\PSoC5/RTC.c ****         {
2251:Generated_Source\PSoC5/RTC.c ****             /* Convert DST date */
2252:Generated_Source\PSoC5/RTC.c ****             RTC_DSTDateConversion();
 3994              		.loc 1 2252 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 111


 3995 001e FFF7FEFF 		bl	RTC_DSTDateConversion
 3996              	.L271:
2253:Generated_Source\PSoC5/RTC.c ****         }
2254:Generated_Source\PSoC5/RTC.c ****     }
 3997              		.loc 1 2254 0
 3998 0022 00BF     		nop
 3999 0024 0837     		adds	r7, r7, #8
 4000              		.cfi_def_cfa_offset 8
 4001 0026 BD46     		mov	sp, r7
 4002              		.cfi_def_cfa_register 13
 4003              		@ sp needed
 4004 0028 80BD     		pop	{r7, pc}
 4005              	.L273:
 4006 002a 00BF     		.align	2
 4007              	.L272:
 4008 002c 00000000 		.word	RTC_dstTimeDateStart
 4009 0030 00000000 		.word	RTC_dstModeType
 4010              		.cfi_endproc
 4011              	.LFE46:
 4012              		.size	RTC_WriteDSTStartDayOfWeek, .-RTC_WriteDSTStartDayOfWeek
 4013              		.section	.text.RTC_WriteDSTStartWeek,"ax",%progbits
 4014              		.align	2
 4015              		.global	RTC_WriteDSTStartWeek
 4016              		.thumb
 4017              		.thumb_func
 4018              		.type	RTC_WriteDSTStartWeek, %function
 4019              	RTC_WriteDSTStartWeek:
 4020              	.LFB47:
2255:Generated_Source\PSoC5/RTC.c **** 
2256:Generated_Source\PSoC5/RTC.c **** 
2257:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2258:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTStartWeek
2259:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2260:Generated_Source\PSoC5/RTC.c ****     *
2261:Generated_Source\PSoC5/RTC.c ****     * Summary:
2262:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST Start Week software register. Used for absolute date entry.
2263:Generated_Source\PSoC5/RTC.c ****     *  Only generated if DST is enabled.
2264:Generated_Source\PSoC5/RTC.c ****     *
2265:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2266:Generated_Source\PSoC5/RTC.c ****     *  week: DST start week software register value.
2267:Generated_Source\PSoC5/RTC.c ****     *
2268:Generated_Source\PSoC5/RTC.c ****     * Return:
2269:Generated_Source\PSoC5/RTC.c ****     *  None.
2270:Generated_Source\PSoC5/RTC.c ****     *
2271:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2272:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Week: global variable is modified with
2273:Generated_Source\PSoC5/RTC.c ****     *   the new week's value of the DST start time/date.
2274:Generated_Source\PSoC5/RTC.c ****     *
2275:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfMonth,
2276:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfMonth: is modified after convertion
2277:Generated_Source\PSoC5/RTC.c ****     *  by the RTC_DSTDateConversion() function if DST mode is
2278:Generated_Source\PSoC5/RTC.c ****     *  configured to be relative.
2279:Generated_Source\PSoC5/RTC.c ****     *
2280:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstModeType: global variable is used for theDST mode
2281:Generated_Source\PSoC5/RTC.c ****     *   type: relative or fixed store.
2282:Generated_Source\PSoC5/RTC.c ****     *
2283:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Month,
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 112


2284:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfWeek,
2285:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Week: for the day of week correction,
2286:Generated_Source\PSoC5/RTC.c ****     *   they are used by RTC_DSTDateConversion() function if DST
2287:Generated_Source\PSoC5/RTC.c ****     *   mode is configured to be relative.
2288:Generated_Source\PSoC5/RTC.c ****     *
2289:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Month,
2290:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfWeek,
2291:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Week: for the day of week correction,
2292:Generated_Source\PSoC5/RTC.c ****     *   they are used by RTC_DSTDateConversion() function if DST
2293:Generated_Source\PSoC5/RTC.c ****     *   mode is configured to be relative.
2294:Generated_Source\PSoC5/RTC.c ****     *
2295:Generated_Source\PSoC5/RTC.c ****     *  RTC_currentTimeDate.Year: for the day of week calculation,
2296:Generated_Source\PSoC5/RTC.c ****     *   it is used by RTC_DSTDateConversion() function if DST
2297:Generated_Source\PSoC5/RTC.c ****     *   mode is configured to be relative.
2298:Generated_Source\PSoC5/RTC.c ****     *
2299:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2300:Generated_Source\PSoC5/RTC.c ****     *  No.
2301:Generated_Source\PSoC5/RTC.c ****     *
2302:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2303:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTStartWeek(uint8 week) 
2304:Generated_Source\PSoC5/RTC.c ****     {
 4021              		.loc 1 2304 0
 4022              		.cfi_startproc
 4023              		@ args = 0, pretend = 0, frame = 8
 4024              		@ frame_needed = 1, uses_anonymous_args = 0
 4025 0000 80B5     		push	{r7, lr}
 4026              		.cfi_def_cfa_offset 8
 4027              		.cfi_offset 7, -8
 4028              		.cfi_offset 14, -4
 4029 0002 82B0     		sub	sp, sp, #8
 4030              		.cfi_def_cfa_offset 16
 4031 0004 00AF     		add	r7, sp, #0
 4032              		.cfi_def_cfa_register 7
 4033 0006 0346     		mov	r3, r0
 4034 0008 FB71     		strb	r3, [r7, #7]
2305:Generated_Source\PSoC5/RTC.c ****         /* Set DST Start week */
2306:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStart.Week = week;
 4035              		.loc 1 2306 0
 4036 000a 084A     		ldr	r2, .L277
 4037 000c FB79     		ldrb	r3, [r7, #7]
 4038 000e 9370     		strb	r3, [r2, #2]
2307:Generated_Source\PSoC5/RTC.c **** 
2308:Generated_Source\PSoC5/RTC.c ****         if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_RELDATE))
 4039              		.loc 1 2308 0
 4040 0010 074B     		ldr	r3, .L277+4
 4041 0012 1B78     		ldrb	r3, [r3]
 4042 0014 DBB2     		uxtb	r3, r3
 4043 0016 03F00203 		and	r3, r3, #2
 4044 001a 002B     		cmp	r3, #0
 4045 001c 01D0     		beq	.L276
2309:Generated_Source\PSoC5/RTC.c ****         {
2310:Generated_Source\PSoC5/RTC.c ****             /* Convert DST date */
2311:Generated_Source\PSoC5/RTC.c ****             RTC_DSTDateConversion();
 4046              		.loc 1 2311 0
 4047 001e FFF7FEFF 		bl	RTC_DSTDateConversion
 4048              	.L276:
2312:Generated_Source\PSoC5/RTC.c ****         }
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 113


2313:Generated_Source\PSoC5/RTC.c ****     }
 4049              		.loc 1 2313 0
 4050 0022 00BF     		nop
 4051 0024 0837     		adds	r7, r7, #8
 4052              		.cfi_def_cfa_offset 8
 4053 0026 BD46     		mov	sp, r7
 4054              		.cfi_def_cfa_register 13
 4055              		@ sp needed
 4056 0028 80BD     		pop	{r7, pc}
 4057              	.L278:
 4058 002a 00BF     		.align	2
 4059              	.L277:
 4060 002c 00000000 		.word	RTC_dstTimeDateStart
 4061 0030 00000000 		.word	RTC_dstModeType
 4062              		.cfi_endproc
 4063              	.LFE47:
 4064              		.size	RTC_WriteDSTStartWeek, .-RTC_WriteDSTStartWeek
 4065              		.section	.text.RTC_WriteDSTStopHour,"ax",%progbits
 4066              		.align	2
 4067              		.global	RTC_WriteDSTStopHour
 4068              		.thumb
 4069              		.thumb_func
 4070              		.type	RTC_WriteDSTStopHour, %function
 4071              	RTC_WriteDSTStopHour:
 4072              	.LFB48:
2314:Generated_Source\PSoC5/RTC.c **** 
2315:Generated_Source\PSoC5/RTC.c **** 
2316:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2317:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTStopHour
2318:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2319:Generated_Source\PSoC5/RTC.c ****     *
2320:Generated_Source\PSoC5/RTC.c ****     * Summary:
2321:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST Stop Hour software register. Used for absolute date entry.
2322:Generated_Source\PSoC5/RTC.c ****     *  Only generated if DST is enabled.
2323:Generated_Source\PSoC5/RTC.c ****     *
2324:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2325:Generated_Source\PSoC5/RTC.c ****     *  hour: DST stop hour software register value.
2326:Generated_Source\PSoC5/RTC.c ****     *
2327:Generated_Source\PSoC5/RTC.c ****     * Return:
2328:Generated_Source\PSoC5/RTC.c ****     *  None.
2329:Generated_Source\PSoC5/RTC.c ****     *
2330:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2331:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Hour: global variable is modified with the new hour
2332:Generated_Source\PSoC5/RTC.c ****     *   of the DST start time/date.
2333:Generated_Source\PSoC5/RTC.c ****     *
2334:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2335:Generated_Source\PSoC5/RTC.c ****     *  No.
2336:Generated_Source\PSoC5/RTC.c ****     *
2337:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2338:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTStopHour(uint8 hour) 
2339:Generated_Source\PSoC5/RTC.c ****     {
 4073              		.loc 1 2339 0
 4074              		.cfi_startproc
 4075              		@ args = 0, pretend = 0, frame = 8
 4076              		@ frame_needed = 1, uses_anonymous_args = 0
 4077              		@ link register save eliminated.
 4078 0000 80B4     		push	{r7}
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 114


 4079              		.cfi_def_cfa_offset 4
 4080              		.cfi_offset 7, -4
 4081 0002 83B0     		sub	sp, sp, #12
 4082              		.cfi_def_cfa_offset 16
 4083 0004 00AF     		add	r7, sp, #0
 4084              		.cfi_def_cfa_register 7
 4085 0006 0346     		mov	r3, r0
 4086 0008 FB71     		strb	r3, [r7, #7]
2340:Generated_Source\PSoC5/RTC.c ****         /* Set DST Stop hour */
2341:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStop.Hour = hour;
 4087              		.loc 1 2341 0
 4088 000a 044A     		ldr	r2, .L280
 4089 000c FB79     		ldrb	r3, [r7, #7]
 4090 000e 1370     		strb	r3, [r2]
2342:Generated_Source\PSoC5/RTC.c ****     }
 4091              		.loc 1 2342 0
 4092 0010 00BF     		nop
 4093 0012 0C37     		adds	r7, r7, #12
 4094              		.cfi_def_cfa_offset 4
 4095 0014 BD46     		mov	sp, r7
 4096              		.cfi_def_cfa_register 13
 4097              		@ sp needed
 4098 0016 80BC     		pop	{r7}
 4099              		.cfi_restore 7
 4100              		.cfi_def_cfa_offset 0
 4101 0018 7047     		bx	lr
 4102              	.L281:
 4103 001a 00BF     		.align	2
 4104              	.L280:
 4105 001c 00000000 		.word	RTC_dstTimeDateStop
 4106              		.cfi_endproc
 4107              	.LFE48:
 4108              		.size	RTC_WriteDSTStopHour, .-RTC_WriteDSTStopHour
 4109              		.section	.text.RTC_WriteDSTStopDayOfMonth,"ax",%progbits
 4110              		.align	2
 4111              		.global	RTC_WriteDSTStopDayOfMonth
 4112              		.thumb
 4113              		.thumb_func
 4114              		.type	RTC_WriteDSTStopDayOfMonth, %function
 4115              	RTC_WriteDSTStopDayOfMonth:
 4116              	.LFB49:
2343:Generated_Source\PSoC5/RTC.c **** 
2344:Generated_Source\PSoC5/RTC.c **** 
2345:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2346:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTStopDayOfMonth
2347:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2348:Generated_Source\PSoC5/RTC.c ****     *
2349:Generated_Source\PSoC5/RTC.c ****     * Summary:
2350:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST Stop DayOfMonth software register. Used for absolute date
2351:Generated_Source\PSoC5/RTC.c ****     *  entry. Only generated if DST is enabled.
2352:Generated_Source\PSoC5/RTC.c ****     *
2353:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2354:Generated_Source\PSoC5/RTC.c ****     *  dayOfMonth: DST stop day of month software register value.
2355:Generated_Source\PSoC5/RTC.c ****     *
2356:Generated_Source\PSoC5/RTC.c ****     * Return:
2357:Generated_Source\PSoC5/RTC.c ****     *  None.
2358:Generated_Source\PSoC5/RTC.c ****     *
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 115


2359:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2360:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfMonth: global variable is modified
2361:Generated_Source\PSoC5/RTC.c ****     *  where new day of month's value of the DST stop time/date.
2362:Generated_Source\PSoC5/RTC.c ****     *
2363:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2364:Generated_Source\PSoC5/RTC.c ****     *  No.
2365:Generated_Source\PSoC5/RTC.c ****     *
2366:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2367:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTStopDayOfMonth(uint8 dayOfMonth)
2368:Generated_Source\PSoC5/RTC.c ****          
2369:Generated_Source\PSoC5/RTC.c ****     {
 4117              		.loc 1 2369 0
 4118              		.cfi_startproc
 4119              		@ args = 0, pretend = 0, frame = 8
 4120              		@ frame_needed = 1, uses_anonymous_args = 0
 4121              		@ link register save eliminated.
 4122 0000 80B4     		push	{r7}
 4123              		.cfi_def_cfa_offset 4
 4124              		.cfi_offset 7, -4
 4125 0002 83B0     		sub	sp, sp, #12
 4126              		.cfi_def_cfa_offset 16
 4127 0004 00AF     		add	r7, sp, #0
 4128              		.cfi_def_cfa_register 7
 4129 0006 0346     		mov	r3, r0
 4130 0008 FB71     		strb	r3, [r7, #7]
2370:Generated_Source\PSoC5/RTC.c ****         /* Set DST Start day of month */
2371:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStop.DayOfMonth = dayOfMonth;
 4131              		.loc 1 2371 0
 4132 000a 044A     		ldr	r2, .L283
 4133 000c FB79     		ldrb	r3, [r7, #7]
 4134 000e D370     		strb	r3, [r2, #3]
2372:Generated_Source\PSoC5/RTC.c ****     }
 4135              		.loc 1 2372 0
 4136 0010 00BF     		nop
 4137 0012 0C37     		adds	r7, r7, #12
 4138              		.cfi_def_cfa_offset 4
 4139 0014 BD46     		mov	sp, r7
 4140              		.cfi_def_cfa_register 13
 4141              		@ sp needed
 4142 0016 80BC     		pop	{r7}
 4143              		.cfi_restore 7
 4144              		.cfi_def_cfa_offset 0
 4145 0018 7047     		bx	lr
 4146              	.L284:
 4147 001a 00BF     		.align	2
 4148              	.L283:
 4149 001c 00000000 		.word	RTC_dstTimeDateStop
 4150              		.cfi_endproc
 4151              	.LFE49:
 4152              		.size	RTC_WriteDSTStopDayOfMonth, .-RTC_WriteDSTStopDayOfMonth
 4153              		.section	.text.RTC_WriteDSTStopMonth,"ax",%progbits
 4154              		.align	2
 4155              		.global	RTC_WriteDSTStopMonth
 4156              		.thumb
 4157              		.thumb_func
 4158              		.type	RTC_WriteDSTStopMonth, %function
 4159              	RTC_WriteDSTStopMonth:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 116


 4160              	.LFB50:
2373:Generated_Source\PSoC5/RTC.c **** 
2374:Generated_Source\PSoC5/RTC.c **** 
2375:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2376:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTStopMonth
2377:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2378:Generated_Source\PSoC5/RTC.c ****     *
2379:Generated_Source\PSoC5/RTC.c ****     * Summary:
2380:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST Stop Month software  register. Used for absolute date entry.
2381:Generated_Source\PSoC5/RTC.c ****     *  Only generated if DST is enabled.
2382:Generated_Source\PSoC5/RTC.c ****     *
2383:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2384:Generated_Source\PSoC5/RTC.c ****     *  month: DST Stop Month software register value.
2385:Generated_Source\PSoC5/RTC.c ****     *
2386:Generated_Source\PSoC5/RTC.c ****     * Return:
2387:Generated_Source\PSoC5/RTC.c ****     *  None.
2388:Generated_Source\PSoC5/RTC.c ****     *
2389:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2390:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Month: global variable is modified with
2391:Generated_Source\PSoC5/RTC.c ****     *   the new month of the DST stop time/date.
2392:Generated_Source\PSoC5/RTC.c ****     *
2393:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2394:Generated_Source\PSoC5/RTC.c ****     *  No.
2395:Generated_Source\PSoC5/RTC.c ****     *
2396:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2397:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTStopMonth(uint8 month) 
2398:Generated_Source\PSoC5/RTC.c ****     {
 4161              		.loc 1 2398 0
 4162              		.cfi_startproc
 4163              		@ args = 0, pretend = 0, frame = 8
 4164              		@ frame_needed = 1, uses_anonymous_args = 0
 4165              		@ link register save eliminated.
 4166 0000 80B4     		push	{r7}
 4167              		.cfi_def_cfa_offset 4
 4168              		.cfi_offset 7, -4
 4169 0002 83B0     		sub	sp, sp, #12
 4170              		.cfi_def_cfa_offset 16
 4171 0004 00AF     		add	r7, sp, #0
 4172              		.cfi_def_cfa_register 7
 4173 0006 0346     		mov	r3, r0
 4174 0008 FB71     		strb	r3, [r7, #7]
2399:Generated_Source\PSoC5/RTC.c ****         /* Set DST Stop month */
2400:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStop.Month = month;
 4175              		.loc 1 2400 0
 4176 000a 044A     		ldr	r2, .L286
 4177 000c FB79     		ldrb	r3, [r7, #7]
 4178 000e 1371     		strb	r3, [r2, #4]
2401:Generated_Source\PSoC5/RTC.c ****     }
 4179              		.loc 1 2401 0
 4180 0010 00BF     		nop
 4181 0012 0C37     		adds	r7, r7, #12
 4182              		.cfi_def_cfa_offset 4
 4183 0014 BD46     		mov	sp, r7
 4184              		.cfi_def_cfa_register 13
 4185              		@ sp needed
 4186 0016 80BC     		pop	{r7}
 4187              		.cfi_restore 7
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 117


 4188              		.cfi_def_cfa_offset 0
 4189 0018 7047     		bx	lr
 4190              	.L287:
 4191 001a 00BF     		.align	2
 4192              	.L286:
 4193 001c 00000000 		.word	RTC_dstTimeDateStop
 4194              		.cfi_endproc
 4195              	.LFE50:
 4196              		.size	RTC_WriteDSTStopMonth, .-RTC_WriteDSTStopMonth
 4197              		.section	.text.RTC_WriteDSTStopDayOfWeek,"ax",%progbits
 4198              		.align	2
 4199              		.global	RTC_WriteDSTStopDayOfWeek
 4200              		.thumb
 4201              		.thumb_func
 4202              		.type	RTC_WriteDSTStopDayOfWeek, %function
 4203              	RTC_WriteDSTStopDayOfWeek:
 4204              	.LFB51:
2402:Generated_Source\PSoC5/RTC.c **** 
2403:Generated_Source\PSoC5/RTC.c **** 
2404:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2405:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTStopDayOfWeek
2406:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2407:Generated_Source\PSoC5/RTC.c ****     *
2408:Generated_Source\PSoC5/RTC.c ****     * Summary:
2409:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST Stop DayOfWeek software register. Used for relative date
2410:Generated_Source\PSoC5/RTC.c ****     *  entry. Only generated if DST is enabled.
2411:Generated_Source\PSoC5/RTC.c ****     *
2412:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2413:Generated_Source\PSoC5/RTC.c ****     *  dayOfWeek: DST stop day of week software register value.
2414:Generated_Source\PSoC5/RTC.c ****     *
2415:Generated_Source\PSoC5/RTC.c ****     * Return:
2416:Generated_Source\PSoC5/RTC.c ****     *  None.
2417:Generated_Source\PSoC5/RTC.c ****     *
2418:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2419:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfWeek: global variable is modified
2420:Generated_Source\PSoC5/RTC.c ****     *   with the day of week of the DST stop time/date.
2421:Generated_Source\PSoC5/RTC.c ****     *
2422:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstModeType: global variable is used to store DST mode
2423:Generated_Source\PSoC5/RTC.c ****     *   type: relative or fixed.
2424:Generated_Source\PSoC5/RTC.c ****     *
2425:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Month,
2426:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfWeek,
2427:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Week,
2428:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Month,
2429:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfWeek,
2430:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Weekfor the day of week correction,
2431:Generated_Source\PSoC5/RTC.c ****     *   they are used by RTC_DSTDateConversion() function if DST
2432:Generated_Source\PSoC5/RTC.c ****     *   mode is configured to be relative.
2433:Generated_Source\PSoC5/RTC.c ****     *
2434:Generated_Source\PSoC5/RTC.c ****     *  RTC_currentTimeDate.Year: for the day of week calculation,
2435:Generated_Source\PSoC5/RTC.c ****     *   it is used by RTC_DSTDateConversion() function if DST
2436:Generated_Source\PSoC5/RTC.c ****     *   mode is configured to be relative.
2437:Generated_Source\PSoC5/RTC.c ****     *
2438:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfWeek: global variable is modified
2439:Generated_Source\PSoC5/RTC.c ****     *  with the new day of week's value.
2440:Generated_Source\PSoC5/RTC.c ****     *
2441:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfMonth and
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 118


2442:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfMonth are modified by
2443:Generated_Source\PSoC5/RTC.c ****     *  the RTC_DSTDateConversion() function if DST mode is
2444:Generated_Source\PSoC5/RTC.c ****     *  configured to be relative.
2445:Generated_Source\PSoC5/RTC.c ****     *
2446:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2447:Generated_Source\PSoC5/RTC.c ****     *  No.
2448:Generated_Source\PSoC5/RTC.c ****     *
2449:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2450:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTStopDayOfWeek(uint8 dayOfWeek)
2451:Generated_Source\PSoC5/RTC.c ****          
2452:Generated_Source\PSoC5/RTC.c ****     {
 4205              		.loc 1 2452 0
 4206              		.cfi_startproc
 4207              		@ args = 0, pretend = 0, frame = 8
 4208              		@ frame_needed = 1, uses_anonymous_args = 0
 4209 0000 80B5     		push	{r7, lr}
 4210              		.cfi_def_cfa_offset 8
 4211              		.cfi_offset 7, -8
 4212              		.cfi_offset 14, -4
 4213 0002 82B0     		sub	sp, sp, #8
 4214              		.cfi_def_cfa_offset 16
 4215 0004 00AF     		add	r7, sp, #0
 4216              		.cfi_def_cfa_register 7
 4217 0006 0346     		mov	r3, r0
 4218 0008 FB71     		strb	r3, [r7, #7]
2453:Generated_Source\PSoC5/RTC.c ****         /* Set DST Stop day of week */
2454:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStop.DayOfWeek = dayOfWeek;
 4219              		.loc 1 2454 0
 4220 000a 084A     		ldr	r2, .L291
 4221 000c FB79     		ldrb	r3, [r7, #7]
 4222 000e 5370     		strb	r3, [r2, #1]
2455:Generated_Source\PSoC5/RTC.c **** 
2456:Generated_Source\PSoC5/RTC.c ****         if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_RELDATE))
 4223              		.loc 1 2456 0
 4224 0010 074B     		ldr	r3, .L291+4
 4225 0012 1B78     		ldrb	r3, [r3]
 4226 0014 DBB2     		uxtb	r3, r3
 4227 0016 03F00203 		and	r3, r3, #2
 4228 001a 002B     		cmp	r3, #0
 4229 001c 01D0     		beq	.L290
2457:Generated_Source\PSoC5/RTC.c ****         {
2458:Generated_Source\PSoC5/RTC.c ****             /* Convert DST date */
2459:Generated_Source\PSoC5/RTC.c ****             RTC_DSTDateConversion();
 4230              		.loc 1 2459 0
 4231 001e FFF7FEFF 		bl	RTC_DSTDateConversion
 4232              	.L290:
2460:Generated_Source\PSoC5/RTC.c ****         }
2461:Generated_Source\PSoC5/RTC.c ****     }
 4233              		.loc 1 2461 0
 4234 0022 00BF     		nop
 4235 0024 0837     		adds	r7, r7, #8
 4236              		.cfi_def_cfa_offset 8
 4237 0026 BD46     		mov	sp, r7
 4238              		.cfi_def_cfa_register 13
 4239              		@ sp needed
 4240 0028 80BD     		pop	{r7, pc}
 4241              	.L292:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 119


 4242 002a 00BF     		.align	2
 4243              	.L291:
 4244 002c 00000000 		.word	RTC_dstTimeDateStop
 4245 0030 00000000 		.word	RTC_dstModeType
 4246              		.cfi_endproc
 4247              	.LFE51:
 4248              		.size	RTC_WriteDSTStopDayOfWeek, .-RTC_WriteDSTStopDayOfWeek
 4249              		.section	.text.RTC_WriteDSTStopWeek,"ax",%progbits
 4250              		.align	2
 4251              		.global	RTC_WriteDSTStopWeek
 4252              		.thumb
 4253              		.thumb_func
 4254              		.type	RTC_WriteDSTStopWeek, %function
 4255              	RTC_WriteDSTStopWeek:
 4256              	.LFB52:
2462:Generated_Source\PSoC5/RTC.c **** 
2463:Generated_Source\PSoC5/RTC.c **** 
2464:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2465:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTStopWeek
2466:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2467:Generated_Source\PSoC5/RTC.c ****     *
2468:Generated_Source\PSoC5/RTC.c ****     * Summary:
2469:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST Stop Week software register. Used for relative date entry.
2470:Generated_Source\PSoC5/RTC.c ****     *  Only generated if DST is enabled.
2471:Generated_Source\PSoC5/RTC.c ****     *
2472:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2473:Generated_Source\PSoC5/RTC.c ****     *  week: DST stop week software register value.
2474:Generated_Source\PSoC5/RTC.c ****     *
2475:Generated_Source\PSoC5/RTC.c ****     * Return:
2476:Generated_Source\PSoC5/RTC.c ****     *  None.
2477:Generated_Source\PSoC5/RTC.c ****     *
2478:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2479:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Week: global variable used to store the
2480:Generated_Source\PSoC5/RTC.c ****     *  DST stop time/date is stored.
2481:Generated_Source\PSoC5/RTC.c ****     *
2482:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstModeType: global variable is used to store DST mode
2483:Generated_Source\PSoC5/RTC.c ****     *   type: relative or fixed.
2484:Generated_Source\PSoC5/RTC.c ****     *
2485:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Month,
2486:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfWeek,
2487:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.Week,
2488:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Month,
2489:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfWeek,
2490:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Week: used for the day of week correction,
2491:Generated_Source\PSoC5/RTC.c ****     *   they are used by RTC_DSTDateConversion() function if DST
2492:Generated_Source\PSoC5/RTC.c ****     *   mode is configured to be relative.
2493:Generated_Source\PSoC5/RTC.c ****     *
2494:Generated_Source\PSoC5/RTC.c ****     *  RTC_currentTimeDate.Year: for the day of week calculation,
2495:Generated_Source\PSoC5/RTC.c ****     *   it is used by RTC_DSTDateConversion() function if DST
2496:Generated_Source\PSoC5/RTC.c ****     *   mode is configured to be relative.
2497:Generated_Source\PSoC5/RTC.c ****     *
2498:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.Week: global variable is modified with
2499:Generated_Source\PSoC5/RTC.c ****     *  the new value.
2500:Generated_Source\PSoC5/RTC.c ****     *
2501:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStart.DayOfMonth and
2502:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstTimeDateStop.DayOfMonth are modified by
2503:Generated_Source\PSoC5/RTC.c ****     *  the RTC_DSTDateConversion() function if DST mode is
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 120


2504:Generated_Source\PSoC5/RTC.c ****     *  configured to be relative.
2505:Generated_Source\PSoC5/RTC.c ****     *
2506:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2507:Generated_Source\PSoC5/RTC.c ****     *  No.
2508:Generated_Source\PSoC5/RTC.c ****     *
2509:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2510:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTStopWeek(uint8 week) 
2511:Generated_Source\PSoC5/RTC.c ****     {
 4257              		.loc 1 2511 0
 4258              		.cfi_startproc
 4259              		@ args = 0, pretend = 0, frame = 8
 4260              		@ frame_needed = 1, uses_anonymous_args = 0
 4261 0000 80B5     		push	{r7, lr}
 4262              		.cfi_def_cfa_offset 8
 4263              		.cfi_offset 7, -8
 4264              		.cfi_offset 14, -4
 4265 0002 82B0     		sub	sp, sp, #8
 4266              		.cfi_def_cfa_offset 16
 4267 0004 00AF     		add	r7, sp, #0
 4268              		.cfi_def_cfa_register 7
 4269 0006 0346     		mov	r3, r0
 4270 0008 FB71     		strb	r3, [r7, #7]
2512:Generated_Source\PSoC5/RTC.c ****         /* Set DST Stop week */
2513:Generated_Source\PSoC5/RTC.c ****         RTC_dstTimeDateStop.Week = week;
 4271              		.loc 1 2513 0
 4272 000a 084A     		ldr	r2, .L296
 4273 000c FB79     		ldrb	r3, [r7, #7]
 4274 000e 9370     		strb	r3, [r2, #2]
2514:Generated_Source\PSoC5/RTC.c **** 
2515:Generated_Source\PSoC5/RTC.c ****         if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_RELDATE))
 4275              		.loc 1 2515 0
 4276 0010 074B     		ldr	r3, .L296+4
 4277 0012 1B78     		ldrb	r3, [r3]
 4278 0014 DBB2     		uxtb	r3, r3
 4279 0016 03F00203 		and	r3, r3, #2
 4280 001a 002B     		cmp	r3, #0
 4281 001c 01D0     		beq	.L295
2516:Generated_Source\PSoC5/RTC.c ****         {
2517:Generated_Source\PSoC5/RTC.c ****             /* Convert DST date */
2518:Generated_Source\PSoC5/RTC.c ****             RTC_DSTDateConversion();
 4282              		.loc 1 2518 0
 4283 001e FFF7FEFF 		bl	RTC_DSTDateConversion
 4284              	.L295:
2519:Generated_Source\PSoC5/RTC.c ****         }
2520:Generated_Source\PSoC5/RTC.c ****     }
 4285              		.loc 1 2520 0
 4286 0022 00BF     		nop
 4287 0024 0837     		adds	r7, r7, #8
 4288              		.cfi_def_cfa_offset 8
 4289 0026 BD46     		mov	sp, r7
 4290              		.cfi_def_cfa_register 13
 4291              		@ sp needed
 4292 0028 80BD     		pop	{r7, pc}
 4293              	.L297:
 4294 002a 00BF     		.align	2
 4295              	.L296:
 4296 002c 00000000 		.word	RTC_dstTimeDateStop
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 121


 4297 0030 00000000 		.word	RTC_dstModeType
 4298              		.cfi_endproc
 4299              	.LFE52:
 4300              		.size	RTC_WriteDSTStopWeek, .-RTC_WriteDSTStopWeek
 4301              		.section	.text.RTC_WriteDSTOffset,"ax",%progbits
 4302              		.align	2
 4303              		.global	RTC_WriteDSTOffset
 4304              		.thumb
 4305              		.thumb_func
 4306              		.type	RTC_WriteDSTOffset, %function
 4307              	RTC_WriteDSTOffset:
 4308              	.LFB53:
2521:Generated_Source\PSoC5/RTC.c **** 
2522:Generated_Source\PSoC5/RTC.c **** 
2523:Generated_Source\PSoC5/RTC.c ****     /*******************************************************************************
2524:Generated_Source\PSoC5/RTC.c ****     * Function Name:   RTC_WriteDSTOffset
2525:Generated_Source\PSoC5/RTC.c ****     ********************************************************************************
2526:Generated_Source\PSoC5/RTC.c ****     *
2527:Generated_Source\PSoC5/RTC.c ****     * Summary:
2528:Generated_Source\PSoC5/RTC.c ****     *  Writes the DST Offset register. Allows a configurable increment or decrement
2529:Generated_Source\PSoC5/RTC.c ****     *  of time between 0 and 255 minutes. Increment occurs on DST Start and
2530:Generated_Source\PSoC5/RTC.c ****     *  decrement on DST Stop. Only generated if DST is enabled.
2531:Generated_Source\PSoC5/RTC.c ****     *
2532:Generated_Source\PSoC5/RTC.c ****     * Parameters:
2533:Generated_Source\PSoC5/RTC.c ****     *  offset: The DST offset to be saved.
2534:Generated_Source\PSoC5/RTC.c ****     *
2535:Generated_Source\PSoC5/RTC.c ****     * Return:
2536:Generated_Source\PSoC5/RTC.c ****     *  None.
2537:Generated_Source\PSoC5/RTC.c ****     *
2538:Generated_Source\PSoC5/RTC.c ****     * Global variables:
2539:Generated_Source\PSoC5/RTC.c ****     *  RTC_dstOffsetMin: global variable is modified with the new
2540:Generated_Source\PSoC5/RTC.c ****     *  DST offset value (in minutes).
2541:Generated_Source\PSoC5/RTC.c ****     *
2542:Generated_Source\PSoC5/RTC.c ****     * Reentrant:
2543:Generated_Source\PSoC5/RTC.c ****     *  No.
2544:Generated_Source\PSoC5/RTC.c ****     *
2545:Generated_Source\PSoC5/RTC.c ****     *******************************************************************************/
2546:Generated_Source\PSoC5/RTC.c ****     void RTC_WriteDSTOffset(uint8 offset) 
2547:Generated_Source\PSoC5/RTC.c ****     {
 4309              		.loc 1 2547 0
 4310              		.cfi_startproc
 4311              		@ args = 0, pretend = 0, frame = 8
 4312              		@ frame_needed = 1, uses_anonymous_args = 0
 4313              		@ link register save eliminated.
 4314 0000 80B4     		push	{r7}
 4315              		.cfi_def_cfa_offset 4
 4316              		.cfi_offset 7, -4
 4317 0002 83B0     		sub	sp, sp, #12
 4318              		.cfi_def_cfa_offset 16
 4319 0004 00AF     		add	r7, sp, #0
 4320              		.cfi_def_cfa_register 7
 4321 0006 0346     		mov	r3, r0
 4322 0008 FB71     		strb	r3, [r7, #7]
2548:Generated_Source\PSoC5/RTC.c ****         /* Set DST offset */
2549:Generated_Source\PSoC5/RTC.c ****         RTC_dstOffsetMin = offset;
 4323              		.loc 1 2549 0
 4324 000a 044A     		ldr	r2, .L299
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 122


 4325 000c FB79     		ldrb	r3, [r7, #7]
 4326 000e 1370     		strb	r3, [r2]
2550:Generated_Source\PSoC5/RTC.c ****     }
 4327              		.loc 1 2550 0
 4328 0010 00BF     		nop
 4329 0012 0C37     		adds	r7, r7, #12
 4330              		.cfi_def_cfa_offset 4
 4331 0014 BD46     		mov	sp, r7
 4332              		.cfi_def_cfa_register 13
 4333              		@ sp needed
 4334 0016 80BC     		pop	{r7}
 4335              		.cfi_restore 7
 4336              		.cfi_def_cfa_offset 0
 4337 0018 7047     		bx	lr
 4338              	.L300:
 4339 001a 00BF     		.align	2
 4340              	.L299:
 4341 001c 00000000 		.word	RTC_dstOffsetMin
 4342              		.cfi_endproc
 4343              	.LFE53:
 4344              		.size	RTC_WriteDSTOffset, .-RTC_WriteDSTOffset
 4345              		.section	.rodata
 4346              		.align	2
 4347              		.type	RTC_monthTemplate.5230, %object
 4348              		.size	RTC_monthTemplate.5230, 12
 4349              	RTC_monthTemplate.5230:
 4350 000c 00       		.byte	0
 4351 000d 03       		.byte	3
 4352 000e 02       		.byte	2
 4353 000f 05       		.byte	5
 4354 0010 00       		.byte	0
 4355 0011 03       		.byte	3
 4356 0012 05       		.byte	5
 4357 0013 01       		.byte	1
 4358 0014 04       		.byte	4
 4359 0015 06       		.byte	6
 4360 0016 02       		.byte	2
 4361 0017 04       		.byte	4
 4362              		.text
 4363              	.Letext0:
 4364              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 4365              		.file 3 "Generated_Source\\PSoC5\\RTC.h"
 4366              		.section	.debug_info,"",%progbits
 4367              	.Ldebug_info0:
 4368 0000 DE090000 		.4byte	0x9de
 4369 0004 0400     		.2byte	0x4
 4370 0006 00000000 		.4byte	.Ldebug_abbrev0
 4371 000a 04       		.byte	0x4
 4372 000b 01       		.uleb128 0x1
 4373 000c ED000000 		.4byte	.LASF111
 4374 0010 0C       		.byte	0xc
 4375 0011 34000000 		.4byte	.LASF112
 4376 0015 79000000 		.4byte	.LASF113
 4377 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4378 001d 00000000 		.4byte	0
 4379 0021 00000000 		.4byte	.Ldebug_line0
 4380 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 123


 4381 0026 01       		.byte	0x1
 4382 0027 06       		.byte	0x6
 4383 0028 7A020000 		.4byte	.LASF0
 4384 002c 02       		.uleb128 0x2
 4385 002d 01       		.byte	0x1
 4386 002e 08       		.byte	0x8
 4387 002f 74050000 		.4byte	.LASF1
 4388 0033 02       		.uleb128 0x2
 4389 0034 02       		.byte	0x2
 4390 0035 05       		.byte	0x5
 4391 0036 B1050000 		.4byte	.LASF2
 4392 003a 02       		.uleb128 0x2
 4393 003b 02       		.byte	0x2
 4394 003c 07       		.byte	0x7
 4395 003d F4030000 		.4byte	.LASF3
 4396 0041 02       		.uleb128 0x2
 4397 0042 04       		.byte	0x4
 4398 0043 05       		.byte	0x5
 4399 0044 16030000 		.4byte	.LASF4
 4400 0048 02       		.uleb128 0x2
 4401 0049 04       		.byte	0x4
 4402 004a 07       		.byte	0x7
 4403 004b D7030000 		.4byte	.LASF5
 4404 004f 02       		.uleb128 0x2
 4405 0050 08       		.byte	0x8
 4406 0051 05       		.byte	0x5
 4407 0052 6C020000 		.4byte	.LASF6
 4408 0056 02       		.uleb128 0x2
 4409 0057 08       		.byte	0x8
 4410 0058 07       		.byte	0x7
 4411 0059 A1010000 		.4byte	.LASF7
 4412 005d 03       		.uleb128 0x3
 4413 005e 04       		.byte	0x4
 4414 005f 05       		.byte	0x5
 4415 0060 696E7400 		.ascii	"int\000"
 4416 0064 02       		.uleb128 0x2
 4417 0065 04       		.byte	0x4
 4418 0066 07       		.byte	0x7
 4419 0067 CA030000 		.4byte	.LASF8
 4420 006b 04       		.uleb128 0x4
 4421 006c 47030000 		.4byte	.LASF9
 4422 0070 02       		.byte	0x2
 4423 0071 E401     		.2byte	0x1e4
 4424 0073 2C000000 		.4byte	0x2c
 4425 0077 04       		.uleb128 0x4
 4426 0078 00000000 		.4byte	.LASF10
 4427 007c 02       		.byte	0x2
 4428 007d E501     		.2byte	0x1e5
 4429 007f 3A000000 		.4byte	0x3a
 4430 0083 04       		.uleb128 0x4
 4431 0084 74030000 		.4byte	.LASF11
 4432 0088 02       		.byte	0x2
 4433 0089 E601     		.2byte	0x1e6
 4434 008b 48000000 		.4byte	0x48
 4435 008f 02       		.uleb128 0x2
 4436 0090 04       		.byte	0x4
 4437 0091 04       		.byte	0x4
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 124


 4438 0092 2B050000 		.4byte	.LASF12
 4439 0096 02       		.uleb128 0x2
 4440 0097 08       		.byte	0x8
 4441 0098 04       		.byte	0x4
 4442 0099 60030000 		.4byte	.LASF13
 4443 009d 02       		.uleb128 0x2
 4444 009e 01       		.byte	0x1
 4445 009f 08       		.byte	0x8
 4446 00a0 F4050000 		.4byte	.LASF14
 4447 00a4 04       		.uleb128 0x4
 4448 00a5 6F050000 		.4byte	.LASF15
 4449 00a9 02       		.byte	0x2
 4450 00aa 8E02     		.2byte	0x28e
 4451 00ac B0000000 		.4byte	0xb0
 4452 00b0 05       		.uleb128 0x5
 4453 00b1 6B000000 		.4byte	0x6b
 4454 00b5 04       		.uleb128 0x4
 4455 00b6 75040000 		.4byte	.LASF16
 4456 00ba 02       		.byte	0x2
 4457 00bb 9002     		.2byte	0x290
 4458 00bd C1000000 		.4byte	0xc1
 4459 00c1 05       		.uleb128 0x5
 4460 00c2 83000000 		.4byte	0x83
 4461 00c6 06       		.uleb128 0x6
 4462 00c7 0C       		.byte	0xc
 4463 00c8 03       		.byte	0x3
 4464 00c9 30       		.byte	0x30
 4465 00ca 2F010000 		.4byte	0x12f
 4466 00ce 07       		.uleb128 0x7
 4467 00cf 53656300 		.ascii	"Sec\000"
 4468 00d3 03       		.byte	0x3
 4469 00d4 32       		.byte	0x32
 4470 00d5 6B000000 		.4byte	0x6b
 4471 00d9 00       		.byte	0
 4472 00da 07       		.uleb128 0x7
 4473 00db 4D696E00 		.ascii	"Min\000"
 4474 00df 03       		.byte	0x3
 4475 00e0 33       		.byte	0x33
 4476 00e1 6B000000 		.4byte	0x6b
 4477 00e5 01       		.byte	0x1
 4478 00e6 08       		.uleb128 0x8
 4479 00e7 CB010000 		.4byte	.LASF17
 4480 00eb 03       		.byte	0x3
 4481 00ec 34       		.byte	0x34
 4482 00ed 6B000000 		.4byte	0x6b
 4483 00f1 02       		.byte	0x2
 4484 00f2 08       		.uleb128 0x8
 4485 00f3 C4050000 		.4byte	.LASF18
 4486 00f7 03       		.byte	0x3
 4487 00f8 35       		.byte	0x35
 4488 00f9 6B000000 		.4byte	0x6b
 4489 00fd 03       		.byte	0x3
 4490 00fe 08       		.uleb128 0x8
 4491 00ff E9030000 		.4byte	.LASF19
 4492 0103 03       		.byte	0x3
 4493 0104 36       		.byte	0x36
 4494 0105 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 125


 4495 0109 04       		.byte	0x4
 4496 010a 08       		.uleb128 0x8
 4497 010b 93070000 		.4byte	.LASF20
 4498 010f 03       		.byte	0x3
 4499 0110 37       		.byte	0x37
 4500 0111 77000000 		.4byte	0x77
 4501 0115 06       		.byte	0x6
 4502 0116 08       		.uleb128 0x8
 4503 0117 1F030000 		.4byte	.LASF21
 4504 011b 03       		.byte	0x3
 4505 011c 38       		.byte	0x38
 4506 011d 6B000000 		.4byte	0x6b
 4507 0121 08       		.byte	0x8
 4508 0122 08       		.uleb128 0x8
 4509 0123 07040000 		.4byte	.LASF22
 4510 0127 03       		.byte	0x3
 4511 0128 39       		.byte	0x39
 4512 0129 77000000 		.4byte	0x77
 4513 012d 0A       		.byte	0xa
 4514 012e 00       		.byte	0
 4515 012f 09       		.uleb128 0x9
 4516 0130 B9040000 		.4byte	.LASF23
 4517 0134 03       		.byte	0x3
 4518 0135 3A       		.byte	0x3a
 4519 0136 3A010000 		.4byte	0x13a
 4520 013a 05       		.uleb128 0x5
 4521 013b C6000000 		.4byte	0xc6
 4522 013f 06       		.uleb128 0x6
 4523 0140 05       		.byte	0x5
 4524 0141 03       		.byte	0x3
 4525 0142 3C       		.byte	0x3c
 4526 0143 84010000 		.4byte	0x184
 4527 0147 08       		.uleb128 0x8
 4528 0148 CB010000 		.4byte	.LASF17
 4529 014c 03       		.byte	0x3
 4530 014d 3E       		.byte	0x3e
 4531 014e 6B000000 		.4byte	0x6b
 4532 0152 00       		.byte	0
 4533 0153 08       		.uleb128 0x8
 4534 0154 C4050000 		.4byte	.LASF18
 4535 0158 03       		.byte	0x3
 4536 0159 3F       		.byte	0x3f
 4537 015a 6B000000 		.4byte	0x6b
 4538 015e 01       		.byte	0x1
 4539 015f 08       		.uleb128 0x8
 4540 0160 3B020000 		.4byte	.LASF24
 4541 0164 03       		.byte	0x3
 4542 0165 40       		.byte	0x40
 4543 0166 6B000000 		.4byte	0x6b
 4544 016a 02       		.byte	0x2
 4545 016b 08       		.uleb128 0x8
 4546 016c E9030000 		.4byte	.LASF19
 4547 0170 03       		.byte	0x3
 4548 0171 41       		.byte	0x41
 4549 0172 6B000000 		.4byte	0x6b
 4550 0176 03       		.byte	0x3
 4551 0177 08       		.uleb128 0x8
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 126


 4552 0178 1F030000 		.4byte	.LASF21
 4553 017c 03       		.byte	0x3
 4554 017d 42       		.byte	0x42
 4555 017e 6B000000 		.4byte	0x6b
 4556 0182 04       		.byte	0x4
 4557 0183 00       		.byte	0
 4558 0184 09       		.uleb128 0x9
 4559 0185 CE050000 		.4byte	.LASF25
 4560 0189 03       		.byte	0x3
 4561 018a 43       		.byte	0x43
 4562 018b 8F010000 		.4byte	0x18f
 4563 018f 05       		.uleb128 0x5
 4564 0190 3F010000 		.4byte	0x13f
 4565 0194 02       		.uleb128 0x2
 4566 0195 08       		.byte	0x8
 4567 0196 04       		.byte	0x4
 4568 0197 7B030000 		.4byte	.LASF26
 4569 019b 02       		.uleb128 0x2
 4570 019c 04       		.byte	0x4
 4571 019d 07       		.byte	0x7
 4572 019e 8C040000 		.4byte	.LASF27
 4573 01a2 0A       		.uleb128 0xa
 4574 01a3 EC020000 		.4byte	.LASF28
 4575 01a7 01       		.byte	0x1
 4576 01a8 81       		.byte	0x81
 4577 01a9 00000000 		.4byte	.LFB0
 4578 01ad 24000000 		.4byte	.LFE0-.LFB0
 4579 01b1 01       		.uleb128 0x1
 4580 01b2 9C       		.byte	0x9c
 4581 01b3 0B       		.uleb128 0xb
 4582 01b4 BB050000 		.4byte	.LASF35
 4583 01b8 01       		.byte	0x1
 4584 01b9 A3       		.byte	0xa3
 4585 01ba 00000000 		.4byte	.LFB1
 4586 01be 3C000000 		.4byte	.LFE1-.LFB1
 4587 01c2 01       		.uleb128 0x1
 4588 01c3 9C       		.byte	0x9c
 4589 01c4 D7010000 		.4byte	0x1d7
 4590 01c8 0C       		.uleb128 0xc
 4591 01c9 AC020000 		.4byte	.LASF31
 4592 01cd 01       		.byte	0x1
 4593 01ce A5       		.byte	0xa5
 4594 01cf 6B000000 		.4byte	0x6b
 4595 01d3 02       		.uleb128 0x2
 4596 01d4 91       		.byte	0x91
 4597 01d5 77       		.sleb128 -9
 4598 01d6 00       		.byte	0
 4599 01d7 0D       		.uleb128 0xd
 4600 01d8 93010000 		.4byte	.LASF29
 4601 01dc 01       		.byte	0x1
 4602 01dd C3       		.byte	0xc3
 4603 01de 00000000 		.4byte	.LFB2
 4604 01e2 18000000 		.4byte	.LFE2-.LFB2
 4605 01e6 01       		.uleb128 0x1
 4606 01e7 9C       		.byte	0x9c
 4607 01e8 0D       		.uleb128 0xd
 4608 01e9 7B010000 		.4byte	.LASF30
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 127


 4609 01ed 01       		.byte	0x1
 4610 01ee D8       		.byte	0xd8
 4611 01ef 00000000 		.4byte	.LFB3
 4612 01f3 18000000 		.4byte	.LFE3-.LFB3
 4613 01f7 01       		.uleb128 0x1
 4614 01f8 9C       		.byte	0x9c
 4615 01f9 0E       		.uleb128 0xe
 4616 01fa A3040000 		.4byte	.LASF80
 4617 01fe 01       		.byte	0x1
 4618 01ff FF       		.byte	0xff
 4619 0200 00000000 		.4byte	.LFB4
 4620 0204 18010000 		.4byte	.LFE4-.LFB4
 4621 0208 01       		.uleb128 0x1
 4622 0209 9C       		.byte	0x9c
 4623 020a 3C020000 		.4byte	0x23c
 4624 020e 0F       		.uleb128 0xf
 4625 020f 6C070000 		.4byte	.LASF32
 4626 0213 01       		.byte	0x1
 4627 0214 0101     		.2byte	0x101
 4628 0216 6B000000 		.4byte	0x6b
 4629 021a 02       		.uleb128 0x2
 4630 021b 91       		.byte	0x91
 4631 021c 77       		.sleb128 -9
 4632 021d 10       		.uleb128 0x10
 4633 021e 64617900 		.ascii	"day\000"
 4634 0222 01       		.byte	0x1
 4635 0223 0201     		.2byte	0x102
 4636 0225 6B000000 		.4byte	0x6b
 4637 0229 02       		.uleb128 0x2
 4638 022a 91       		.byte	0x91
 4639 022b 76       		.sleb128 -10
 4640 022c 0F       		.uleb128 0xf
 4641 022d 48040000 		.4byte	.LASF33
 4642 0231 01       		.byte	0x1
 4643 0232 0301     		.2byte	0x103
 4644 0234 6B000000 		.4byte	0x6b
 4645 0238 02       		.uleb128 0x2
 4646 0239 91       		.byte	0x91
 4647 023a 75       		.sleb128 -11
 4648 023b 00       		.byte	0
 4649 023c 11       		.uleb128 0x11
 4650 023d 8A010000 		.4byte	.LASF34
 4651 0241 01       		.byte	0x1
 4652 0242 8701     		.2byte	0x187
 4653 0244 00000000 		.4byte	.LFB5
 4654 0248 2C000000 		.4byte	.LFE5-.LFB5
 4655 024c 01       		.uleb128 0x1
 4656 024d 9C       		.byte	0x9c
 4657 024e 12       		.uleb128 0x12
 4658 024f 8C030000 		.4byte	.LASF36
 4659 0253 01       		.byte	0x1
 4660 0254 AB01     		.2byte	0x1ab
 4661 0256 00000000 		.4byte	.LFB6
 4662 025a 3C000000 		.4byte	.LFE6-.LFB6
 4663 025e 01       		.uleb128 0x1
 4664 025f 9C       		.byte	0x9c
 4665 0260 74020000 		.4byte	0x274
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 128


 4666 0264 0F       		.uleb128 0xf
 4667 0265 AC020000 		.4byte	.LASF31
 4668 0269 01       		.byte	0x1
 4669 026a AD01     		.2byte	0x1ad
 4670 026c 6B000000 		.4byte	0x6b
 4671 0270 02       		.uleb128 0x2
 4672 0271 91       		.byte	0x91
 4673 0272 77       		.sleb128 -9
 4674 0273 00       		.byte	0
 4675 0274 13       		.uleb128 0x13
 4676 0275 67030000 		.4byte	.LASF60
 4677 0279 01       		.byte	0x1
 4678 027a D501     		.2byte	0x1d5
 4679 027c 8A020000 		.4byte	0x28a
 4680 0280 00000000 		.4byte	.LFB7
 4681 0284 14000000 		.4byte	.LFE7-.LFB7
 4682 0288 01       		.uleb128 0x1
 4683 0289 9C       		.byte	0x9c
 4684 028a 14       		.uleb128 0x14
 4685 028b 04       		.byte	0x4
 4686 028c 2F010000 		.4byte	0x12f
 4687 0290 12       		.uleb128 0x12
 4688 0291 39030000 		.4byte	.LASF37
 4689 0295 01       		.byte	0x1
 4690 0296 F401     		.2byte	0x1f4
 4691 0298 00000000 		.4byte	.LFB8
 4692 029c 58000000 		.4byte	.LFE8-.LFB8
 4693 02a0 01       		.uleb128 0x1
 4694 02a1 9C       		.byte	0x9c
 4695 02a2 B6020000 		.4byte	0x2b6
 4696 02a6 15       		.uleb128 0x15
 4697 02a7 E2040000 		.4byte	.LASF39
 4698 02ab 01       		.byte	0x1
 4699 02ac F401     		.2byte	0x1f4
 4700 02ae B6020000 		.4byte	0x2b6
 4701 02b2 02       		.uleb128 0x2
 4702 02b3 91       		.byte	0x91
 4703 02b4 74       		.sleb128 -12
 4704 02b5 00       		.byte	0
 4705 02b6 14       		.uleb128 0x14
 4706 02b7 04       		.byte	0x4
 4707 02b8 BC020000 		.4byte	0x2bc
 4708 02bc 16       		.uleb128 0x16
 4709 02bd 2F010000 		.4byte	0x12f
 4710 02c1 17       		.uleb128 0x17
 4711 02c2 83070000 		.4byte	.LASF38
 4712 02c6 01       		.byte	0x1
 4713 02c7 1C02     		.2byte	0x21c
 4714 02c9 00000000 		.4byte	.LFB9
 4715 02cd 20000000 		.4byte	.LFE9-.LFB9
 4716 02d1 01       		.uleb128 0x1
 4717 02d2 9C       		.byte	0x9c
 4718 02d3 E7020000 		.4byte	0x2e7
 4719 02d7 15       		.uleb128 0x15
 4720 02d8 96050000 		.4byte	.LASF40
 4721 02dc 01       		.byte	0x1
 4722 02dd 1C02     		.2byte	0x21c
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 129


 4723 02df 6B000000 		.4byte	0x6b
 4724 02e3 02       		.uleb128 0x2
 4725 02e4 91       		.byte	0x91
 4726 02e5 77       		.sleb128 -9
 4727 02e6 00       		.byte	0
 4728 02e7 17       		.uleb128 0x17
 4729 02e8 4A050000 		.4byte	.LASF41
 4730 02ec 01       		.byte	0x1
 4731 02ed 3802     		.2byte	0x238
 4732 02ef 00000000 		.4byte	.LFB10
 4733 02f3 20000000 		.4byte	.LFE10-.LFB10
 4734 02f7 01       		.uleb128 0x1
 4735 02f8 9C       		.byte	0x9c
 4736 02f9 0D030000 		.4byte	0x30d
 4737 02fd 15       		.uleb128 0x15
 4738 02fe D9060000 		.4byte	.LASF42
 4739 0302 01       		.byte	0x1
 4740 0303 3802     		.2byte	0x238
 4741 0305 6B000000 		.4byte	0x6b
 4742 0309 02       		.uleb128 0x2
 4743 030a 91       		.byte	0x91
 4744 030b 77       		.sleb128 -9
 4745 030c 00       		.byte	0
 4746 030d 17       		.uleb128 0x17
 4747 030e 95040000 		.4byte	.LASF43
 4748 0312 01       		.byte	0x1
 4749 0313 5402     		.2byte	0x254
 4750 0315 00000000 		.4byte	.LFB11
 4751 0319 20000000 		.4byte	.LFE11-.LFB11
 4752 031d 01       		.uleb128 0x1
 4753 031e 9C       		.byte	0x9c
 4754 031f 33030000 		.4byte	0x333
 4755 0323 15       		.uleb128 0x15
 4756 0324 F8040000 		.4byte	.LASF44
 4757 0328 01       		.byte	0x1
 4758 0329 5402     		.2byte	0x254
 4759 032b 6B000000 		.4byte	0x6b
 4760 032f 02       		.uleb128 0x2
 4761 0330 91       		.byte	0x91
 4762 0331 77       		.sleb128 -9
 4763 0332 00       		.byte	0
 4764 0333 17       		.uleb128 0x17
 4765 0334 91060000 		.4byte	.LASF45
 4766 0338 01       		.byte	0x1
 4767 0339 7002     		.2byte	0x270
 4768 033b 00000000 		.4byte	.LFB12
 4769 033f 20000000 		.4byte	.LFE12-.LFB12
 4770 0343 01       		.uleb128 0x1
 4771 0344 9C       		.byte	0x9c
 4772 0345 59030000 		.4byte	0x359
 4773 0349 15       		.uleb128 0x15
 4774 034a 31050000 		.4byte	.LASF46
 4775 034e 01       		.byte	0x1
 4776 034f 7002     		.2byte	0x270
 4777 0351 6B000000 		.4byte	0x6b
 4778 0355 02       		.uleb128 0x2
 4779 0356 91       		.byte	0x91
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 130


 4780 0357 77       		.sleb128 -9
 4781 0358 00       		.byte	0
 4782 0359 17       		.uleb128 0x17
 4783 035a B8060000 		.4byte	.LASF47
 4784 035e 01       		.byte	0x1
 4785 035f 8C02     		.2byte	0x28c
 4786 0361 00000000 		.4byte	.LFB13
 4787 0365 20000000 		.4byte	.LFE13-.LFB13
 4788 0369 01       		.uleb128 0x1
 4789 036a 9C       		.byte	0x9c
 4790 036b 7F030000 		.4byte	0x37f
 4791 036f 15       		.uleb128 0x15
 4792 0370 AC030000 		.4byte	.LASF48
 4793 0374 01       		.byte	0x1
 4794 0375 8C02     		.2byte	0x28c
 4795 0377 6B000000 		.4byte	0x6b
 4796 037b 02       		.uleb128 0x2
 4797 037c 91       		.byte	0x91
 4798 037d 77       		.sleb128 -9
 4799 037e 00       		.byte	0
 4800 037f 17       		.uleb128 0x17
 4801 0380 6D060000 		.4byte	.LASF49
 4802 0384 01       		.byte	0x1
 4803 0385 A802     		.2byte	0x2a8
 4804 0387 00000000 		.4byte	.LFB14
 4805 038b 20000000 		.4byte	.LFE14-.LFB14
 4806 038f 01       		.uleb128 0x1
 4807 0390 9C       		.byte	0x9c
 4808 0391 A5030000 		.4byte	0x3a5
 4809 0395 15       		.uleb128 0x15
 4810 0396 02030000 		.4byte	.LASF50
 4811 039a 01       		.byte	0x1
 4812 039b A802     		.2byte	0x2a8
 4813 039d 77000000 		.4byte	0x77
 4814 03a1 02       		.uleb128 0x2
 4815 03a2 91       		.byte	0x91
 4816 03a3 76       		.sleb128 -10
 4817 03a4 00       		.byte	0
 4818 03a5 17       		.uleb128 0x17
 4819 03a6 F9010000 		.4byte	.LASF51
 4820 03aa 01       		.byte	0x1
 4821 03ab CA02     		.2byte	0x2ca
 4822 03ad 00000000 		.4byte	.LFB15
 4823 03b1 58000000 		.4byte	.LFE15-.LFB15
 4824 03b5 01       		.uleb128 0x1
 4825 03b6 9C       		.byte	0x9c
 4826 03b7 CB030000 		.4byte	0x3cb
 4827 03bb 15       		.uleb128 0x15
 4828 03bc 96050000 		.4byte	.LASF40
 4829 03c0 01       		.byte	0x1
 4830 03c1 CA02     		.2byte	0x2ca
 4831 03c3 6B000000 		.4byte	0x6b
 4832 03c7 02       		.uleb128 0x2
 4833 03c8 91       		.byte	0x91
 4834 03c9 77       		.sleb128 -9
 4835 03ca 00       		.byte	0
 4836 03cb 17       		.uleb128 0x17
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 131


 4837 03cc 25060000 		.4byte	.LASF52
 4838 03d0 01       		.byte	0x1
 4839 03d1 F702     		.2byte	0x2f7
 4840 03d3 00000000 		.4byte	.LFB16
 4841 03d7 58000000 		.4byte	.LFE16-.LFB16
 4842 03db 01       		.uleb128 0x1
 4843 03dc 9C       		.byte	0x9c
 4844 03dd F1030000 		.4byte	0x3f1
 4845 03e1 15       		.uleb128 0x15
 4846 03e2 D9060000 		.4byte	.LASF42
 4847 03e6 01       		.byte	0x1
 4848 03e7 F702     		.2byte	0x2f7
 4849 03e9 6B000000 		.4byte	0x6b
 4850 03ed 02       		.uleb128 0x2
 4851 03ee 91       		.byte	0x91
 4852 03ef 77       		.sleb128 -9
 4853 03f0 00       		.byte	0
 4854 03f1 17       		.uleb128 0x17
 4855 03f2 59020000 		.4byte	.LASF53
 4856 03f6 01       		.byte	0x1
 4857 03f7 2403     		.2byte	0x324
 4858 03f9 00000000 		.4byte	.LFB17
 4859 03fd 58000000 		.4byte	.LFE17-.LFB17
 4860 0401 01       		.uleb128 0x1
 4861 0402 9C       		.byte	0x9c
 4862 0403 17040000 		.4byte	0x417
 4863 0407 15       		.uleb128 0x15
 4864 0408 F8040000 		.4byte	.LASF44
 4865 040c 01       		.byte	0x1
 4866 040d 2403     		.2byte	0x324
 4867 040f 6B000000 		.4byte	0x6b
 4868 0413 02       		.uleb128 0x2
 4869 0414 91       		.byte	0x91
 4870 0415 77       		.sleb128 -9
 4871 0416 00       		.byte	0
 4872 0417 17       		.uleb128 0x17
 4873 0418 40020000 		.4byte	.LASF54
 4874 041c 01       		.byte	0x1
 4875 041d 5103     		.2byte	0x351
 4876 041f 00000000 		.4byte	.LFB18
 4877 0423 58000000 		.4byte	.LFE18-.LFB18
 4878 0427 01       		.uleb128 0x1
 4879 0428 9C       		.byte	0x9c
 4880 0429 3D040000 		.4byte	0x43d
 4881 042d 15       		.uleb128 0x15
 4882 042e 31050000 		.4byte	.LASF46
 4883 0432 01       		.byte	0x1
 4884 0433 5103     		.2byte	0x351
 4885 0435 6B000000 		.4byte	0x6b
 4886 0439 02       		.uleb128 0x2
 4887 043a 91       		.byte	0x91
 4888 043b 77       		.sleb128 -9
 4889 043c 00       		.byte	0
 4890 043d 17       		.uleb128 0x17
 4891 043e 25030000 		.4byte	.LASF55
 4892 0442 01       		.byte	0x1
 4893 0443 7E03     		.2byte	0x37e
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 132


 4894 0445 00000000 		.4byte	.LFB19
 4895 0449 58000000 		.4byte	.LFE19-.LFB19
 4896 044d 01       		.uleb128 0x1
 4897 044e 9C       		.byte	0x9c
 4898 044f 63040000 		.4byte	0x463
 4899 0453 15       		.uleb128 0x15
 4900 0454 AC030000 		.4byte	.LASF48
 4901 0458 01       		.byte	0x1
 4902 0459 7E03     		.2byte	0x37e
 4903 045b 6B000000 		.4byte	0x6b
 4904 045f 02       		.uleb128 0x2
 4905 0460 91       		.byte	0x91
 4906 0461 77       		.sleb128 -9
 4907 0462 00       		.byte	0
 4908 0463 17       		.uleb128 0x17
 4909 0464 21040000 		.4byte	.LASF56
 4910 0468 01       		.byte	0x1
 4911 0469 AB03     		.2byte	0x3ab
 4912 046b 00000000 		.4byte	.LFB20
 4913 046f 58000000 		.4byte	.LFE20-.LFB20
 4914 0473 01       		.uleb128 0x1
 4915 0474 9C       		.byte	0x9c
 4916 0475 89040000 		.4byte	0x489
 4917 0479 15       		.uleb128 0x15
 4918 047a 02030000 		.4byte	.LASF50
 4919 047e 01       		.byte	0x1
 4920 047f AB03     		.2byte	0x3ab
 4921 0481 77000000 		.4byte	0x77
 4922 0485 02       		.uleb128 0x2
 4923 0486 91       		.byte	0x91
 4924 0487 76       		.sleb128 -10
 4925 0488 00       		.byte	0
 4926 0489 17       		.uleb128 0x17
 4927 048a 61000000 		.4byte	.LASF57
 4928 048e 01       		.byte	0x1
 4929 048f D903     		.2byte	0x3d9
 4930 0491 00000000 		.4byte	.LFB21
 4931 0495 58000000 		.4byte	.LFE21-.LFB21
 4932 0499 01       		.uleb128 0x1
 4933 049a 9C       		.byte	0x9c
 4934 049b AF040000 		.4byte	0x4af
 4935 049f 15       		.uleb128 0x15
 4936 04a0 48040000 		.4byte	.LASF33
 4937 04a4 01       		.byte	0x1
 4938 04a5 D903     		.2byte	0x3d9
 4939 04a7 6B000000 		.4byte	0x6b
 4940 04ab 02       		.uleb128 0x2
 4941 04ac 91       		.byte	0x91
 4942 04ad 77       		.sleb128 -9
 4943 04ae 00       		.byte	0
 4944 04af 17       		.uleb128 0x17
 4945 04b0 B2030000 		.4byte	.LASF58
 4946 04b4 01       		.byte	0x1
 4947 04b5 0604     		.2byte	0x406
 4948 04b7 00000000 		.4byte	.LFB22
 4949 04bb 58000000 		.4byte	.LFE22-.LFB22
 4950 04bf 01       		.uleb128 0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 133


 4951 04c0 9C       		.byte	0x9c
 4952 04c1 D5040000 		.4byte	0x4d5
 4953 04c5 15       		.uleb128 0x15
 4954 04c6 EA050000 		.4byte	.LASF59
 4955 04ca 01       		.byte	0x1
 4956 04cb 0604     		.2byte	0x406
 4957 04cd 77000000 		.4byte	0x77
 4958 04d1 02       		.uleb128 0x2
 4959 04d2 91       		.byte	0x91
 4960 04d3 76       		.sleb128 -10
 4961 04d4 00       		.byte	0
 4962 04d5 13       		.uleb128 0x13
 4963 04d6 07030000 		.4byte	.LASF61
 4964 04da 01       		.byte	0x1
 4965 04db 2904     		.2byte	0x429
 4966 04dd 6B000000 		.4byte	0x6b
 4967 04e1 00000000 		.4byte	.LFB23
 4968 04e5 18000000 		.4byte	.LFE23-.LFB23
 4969 04e9 01       		.uleb128 0x1
 4970 04ea 9C       		.byte	0x9c
 4971 04eb 13       		.uleb128 0x13
 4972 04ec FB060000 		.4byte	.LASF62
 4973 04f0 01       		.byte	0x1
 4974 04f1 4104     		.2byte	0x441
 4975 04f3 6B000000 		.4byte	0x6b
 4976 04f7 00000000 		.4byte	.LFB24
 4977 04fb 18000000 		.4byte	.LFE24-.LFB24
 4978 04ff 01       		.uleb128 0x1
 4979 0500 9C       		.byte	0x9c
 4980 0501 13       		.uleb128 0x13
 4981 0502 EB040000 		.4byte	.LASF63
 4982 0506 01       		.byte	0x1
 4983 0507 5904     		.2byte	0x459
 4984 0509 6B000000 		.4byte	0x6b
 4985 050d 00000000 		.4byte	.LFB25
 4986 0511 18000000 		.4byte	.LFE25-.LFB25
 4987 0515 01       		.uleb128 0x1
 4988 0516 9C       		.byte	0x9c
 4989 0517 13       		.uleb128 0x13
 4990 0518 12060000 		.4byte	.LASF64
 4991 051c 01       		.byte	0x1
 4992 051d 7304     		.2byte	0x473
 4993 051f 6B000000 		.4byte	0x6b
 4994 0523 00000000 		.4byte	.LFB26
 4995 0527 18000000 		.4byte	.LFE26-.LFB26
 4996 052b 01       		.uleb128 0x1
 4997 052c 9C       		.byte	0x9c
 4998 052d 13       		.uleb128 0x13
 4999 052e DE020000 		.4byte	.LASF65
 5000 0532 01       		.byte	0x1
 5001 0533 8B04     		.2byte	0x48b
 5002 0535 6B000000 		.4byte	0x6b
 5003 0539 00000000 		.4byte	.LFB27
 5004 053d 18000000 		.4byte	.LFE27-.LFB27
 5005 0541 01       		.uleb128 0x1
 5006 0542 9C       		.byte	0x9c
 5007 0543 13       		.uleb128 0x13
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 134


 5008 0544 37070000 		.4byte	.LASF66
 5009 0548 01       		.byte	0x1
 5010 0549 A304     		.2byte	0x4a3
 5011 054b 77000000 		.4byte	0x77
 5012 054f 00000000 		.4byte	.LFB28
 5013 0553 18000000 		.4byte	.LFE28-.LFB28
 5014 0557 01       		.uleb128 0x1
 5015 0558 9C       		.byte	0x9c
 5016 0559 13       		.uleb128 0x13
 5017 055a FE050000 		.4byte	.LASF67
 5018 055e 01       		.byte	0x1
 5019 055f BC04     		.2byte	0x4bc
 5020 0561 6B000000 		.4byte	0x6b
 5021 0565 00000000 		.4byte	.LFB29
 5022 0569 18000000 		.4byte	.LFE29-.LFB29
 5023 056d 01       		.uleb128 0x1
 5024 056e 9C       		.byte	0x9c
 5025 056f 13       		.uleb128 0x13
 5026 0570 34040000 		.4byte	.LASF68
 5027 0574 01       		.byte	0x1
 5028 0575 D404     		.2byte	0x4d4
 5029 0577 6B000000 		.4byte	0x6b
 5030 057b 00000000 		.4byte	.LFB30
 5031 057f 18000000 		.4byte	.LFE30-.LFB30
 5032 0583 01       		.uleb128 0x1
 5033 0584 9C       		.byte	0x9c
 5034 0585 13       		.uleb128 0x13
 5035 0586 CC020000 		.4byte	.LASF69
 5036 058a 01       		.byte	0x1
 5037 058b EC04     		.2byte	0x4ec
 5038 058d 6B000000 		.4byte	0x6b
 5039 0591 00000000 		.4byte	.LFB31
 5040 0595 18000000 		.4byte	.LFE31-.LFB31
 5041 0599 01       		.uleb128 0x1
 5042 059a 9C       		.byte	0x9c
 5043 059b 13       		.uleb128 0x13
 5044 059c FD040000 		.4byte	.LASF70
 5045 05a0 01       		.byte	0x1
 5046 05a1 0505     		.2byte	0x505
 5047 05a3 6B000000 		.4byte	0x6b
 5048 05a7 00000000 		.4byte	.LFB32
 5049 05ab 18000000 		.4byte	.LFE32-.LFB32
 5050 05af 01       		.uleb128 0x1
 5051 05b0 9C       		.byte	0x9c
 5052 05b1 13       		.uleb128 0x13
 5053 05b2 99020000 		.4byte	.LASF71
 5054 05b6 01       		.byte	0x1
 5055 05b7 1E05     		.2byte	0x51e
 5056 05b9 6B000000 		.4byte	0x6b
 5057 05bd 00000000 		.4byte	.LFB33
 5058 05c1 18000000 		.4byte	.LFE33-.LFB33
 5059 05c5 01       		.uleb128 0x1
 5060 05c6 9C       		.byte	0x9c
 5061 05c7 13       		.uleb128 0x13
 5062 05c8 5A070000 		.4byte	.LASF72
 5063 05cc 01       		.byte	0x1
 5064 05cd 3605     		.2byte	0x536
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 135


 5065 05cf 77000000 		.4byte	0x77
 5066 05d3 00000000 		.4byte	.LFB34
 5067 05d7 18000000 		.4byte	.LFE34-.LFB34
 5068 05db 01       		.uleb128 0x1
 5069 05dc 9C       		.byte	0x9c
 5070 05dd 13       		.uleb128 0x13
 5071 05de 0A070000 		.4byte	.LASF73
 5072 05e2 01       		.byte	0x1
 5073 05e3 4F05     		.2byte	0x54f
 5074 05e5 6B000000 		.4byte	0x6b
 5075 05e9 00000000 		.4byte	.LFB35
 5076 05ed 18000000 		.4byte	.LFE35-.LFB35
 5077 05f1 01       		.uleb128 0x1
 5078 05f2 9C       		.byte	0x9c
 5079 05f3 13       		.uleb128 0x13
 5080 05f4 56060000 		.4byte	.LASF74
 5081 05f8 01       		.byte	0x1
 5082 05f9 6805     		.2byte	0x568
 5083 05fb 77000000 		.4byte	0x77
 5084 05ff 00000000 		.4byte	.LFB36
 5085 0603 18000000 		.4byte	.LFE36-.LFB36
 5086 0607 01       		.uleb128 0x1
 5087 0608 9C       		.byte	0x9c
 5088 0609 17       		.uleb128 0x17
 5089 060a A5060000 		.4byte	.LASF75
 5090 060e 01       		.byte	0x1
 5091 060f 8505     		.2byte	0x585
 5092 0611 00000000 		.4byte	.LFB37
 5093 0615 20000000 		.4byte	.LFE37-.LFB37
 5094 0619 01       		.uleb128 0x1
 5095 061a 9C       		.byte	0x9c
 5096 061b 2F060000 		.4byte	0x62f
 5097 061f 15       		.uleb128 0x15
 5098 0620 87030000 		.4byte	.LASF76
 5099 0624 01       		.byte	0x1
 5100 0625 8505     		.2byte	0x585
 5101 0627 6B000000 		.4byte	0x6b
 5102 062b 02       		.uleb128 0x2
 5103 062c 91       		.byte	0x91
 5104 062d 77       		.sleb128 -9
 5105 062e 00       		.byte	0
 5106 062f 17       		.uleb128 0x17
 5107 0630 15050000 		.4byte	.LASF77
 5108 0634 01       		.byte	0x1
 5109 0635 A105     		.2byte	0x5a1
 5110 0637 00000000 		.4byte	.LFB38
 5111 063b 20000000 		.4byte	.LFE38-.LFB38
 5112 063f 01       		.uleb128 0x1
 5113 0640 9C       		.byte	0x9c
 5114 0641 55060000 		.4byte	0x655
 5115 0645 15       		.uleb128 0x15
 5116 0646 87030000 		.4byte	.LASF76
 5117 064a 01       		.byte	0x1
 5118 064b A105     		.2byte	0x5a1
 5119 064d 6B000000 		.4byte	0x6b
 5120 0651 02       		.uleb128 0x2
 5121 0652 91       		.byte	0x91
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 136


 5122 0653 77       		.sleb128 -9
 5123 0654 00       		.byte	0
 5124 0655 18       		.uleb128 0x18
 5125 0656 4B070000 		.4byte	.LASF114
 5126 065a 01       		.byte	0x1
 5127 065b C005     		.2byte	0x5c0
 5128 065d 6B000000 		.4byte	0x6b
 5129 0661 00000000 		.4byte	.LFB39
 5130 0665 2C000000 		.4byte	.LFE39-.LFB39
 5131 0669 01       		.uleb128 0x1
 5132 066a 9C       		.byte	0x9c
 5133 066b 7F060000 		.4byte	0x67f
 5134 066f 0F       		.uleb128 0xf
 5135 0670 44070000 		.4byte	.LASF78
 5136 0674 01       		.byte	0x1
 5137 0675 C205     		.2byte	0x5c2
 5138 0677 6B000000 		.4byte	0x6b
 5139 067b 02       		.uleb128 0x2
 5140 067c 91       		.byte	0x91
 5141 067d 77       		.sleb128 -9
 5142 067e 00       		.byte	0
 5143 067f 19       		.uleb128 0x19
 5144 0680 3C050000 		.4byte	.LASF115
 5145 0684 01       		.byte	0x1
 5146 0685 DE05     		.2byte	0x5de
 5147 0687 6B000000 		.4byte	0x6b
 5148 068b 00000000 		.4byte	.LFB40
 5149 068f 84000000 		.4byte	.LFE40-.LFB40
 5150 0693 01       		.uleb128 0x1
 5151 0694 9C       		.byte	0x9c
 5152 0695 D9060000 		.4byte	0x6d9
 5153 0699 15       		.uleb128 0x15
 5154 069a 31050000 		.4byte	.LASF46
 5155 069e 01       		.byte	0x1
 5156 069f DE05     		.2byte	0x5de
 5157 06a1 6B000000 		.4byte	0x6b
 5158 06a5 02       		.uleb128 0x2
 5159 06a6 91       		.byte	0x91
 5160 06a7 77       		.sleb128 -9
 5161 06a8 15       		.uleb128 0x15
 5162 06a9 AC030000 		.4byte	.LASF48
 5163 06ad 01       		.byte	0x1
 5164 06ae DE05     		.2byte	0x5de
 5165 06b0 6B000000 		.4byte	0x6b
 5166 06b4 02       		.uleb128 0x2
 5167 06b5 91       		.byte	0x91
 5168 06b6 76       		.sleb128 -10
 5169 06b7 15       		.uleb128 0x15
 5170 06b8 02030000 		.4byte	.LASF50
 5171 06bc 01       		.byte	0x1
 5172 06bd DE05     		.2byte	0x5de
 5173 06bf 77000000 		.4byte	0x77
 5174 06c3 02       		.uleb128 0x2
 5175 06c4 91       		.byte	0x91
 5176 06c5 74       		.sleb128 -12
 5177 06c6 0F       		.uleb128 0xf
 5178 06c7 52040000 		.4byte	.LASF79
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 137


 5179 06cb 01       		.byte	0x1
 5180 06cc E205     		.2byte	0x5e2
 5181 06ce EE060000 		.4byte	0x6ee
 5182 06d2 05       		.uleb128 0x5
 5183 06d3 03       		.byte	0x3
 5184 06d4 0C000000 		.4byte	RTC_monthTemplate.5230
 5185 06d8 00       		.byte	0
 5186 06d9 1A       		.uleb128 0x1a
 5187 06da E9060000 		.4byte	0x6e9
 5188 06de E9060000 		.4byte	0x6e9
 5189 06e2 1B       		.uleb128 0x1b
 5190 06e3 9B010000 		.4byte	0x19b
 5191 06e7 0B       		.byte	0xb
 5192 06e8 00       		.byte	0
 5193 06e9 16       		.uleb128 0x16
 5194 06ea 6B000000 		.4byte	0x6b
 5195 06ee 16       		.uleb128 0x16
 5196 06ef D9060000 		.4byte	0x6d9
 5197 06f3 1C       		.uleb128 0x1c
 5198 06f4 C7060000 		.4byte	.LASF81
 5199 06f8 01       		.byte	0x1
 5200 06f9 1806     		.2byte	0x618
 5201 06fb 00000000 		.4byte	.LFB41
 5202 06ff 100A0000 		.4byte	.LFE41-.LFB41
 5203 0703 01       		.uleb128 0x1
 5204 0704 9C       		.byte	0x9c
 5205 0705 26070000 		.4byte	0x726
 5206 0709 10       		.uleb128 0x10
 5207 070a 6900     		.ascii	"i\000"
 5208 070c 01       		.byte	0x1
 5209 070d 1A06     		.2byte	0x61a
 5210 070f 6B000000 		.4byte	0x6b
 5211 0713 02       		.uleb128 0x2
 5212 0714 91       		.byte	0x91
 5213 0715 77       		.sleb128 -9
 5214 0716 0F       		.uleb128 0xf
 5215 0717 0C040000 		.4byte	.LASF82
 5216 071b 01       		.byte	0x1
 5217 071c 1B06     		.2byte	0x61b
 5218 071e 6B000000 		.4byte	0x6b
 5219 0722 02       		.uleb128 0x2
 5220 0723 91       		.byte	0x91
 5221 0724 76       		.sleb128 -10
 5222 0725 00       		.byte	0
 5223 0726 12       		.uleb128 0x12
 5224 0727 D9050000 		.4byte	.LASF83
 5225 072b 01       		.byte	0x1
 5226 072c 3308     		.2byte	0x833
 5227 072e 00000000 		.4byte	.LFB42
 5228 0732 2C000000 		.4byte	.LFE42-.LFB42
 5229 0736 01       		.uleb128 0x1
 5230 0737 9C       		.byte	0x9c
 5231 0738 4C070000 		.4byte	0x74c
 5232 073c 15       		.uleb128 0x15
 5233 073d F9050000 		.4byte	.LASF84
 5234 0741 01       		.byte	0x1
 5235 0742 3308     		.2byte	0x833
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 138


 5236 0744 6B000000 		.4byte	0x6b
 5237 0748 02       		.uleb128 0x2
 5238 0749 91       		.byte	0x91
 5239 074a 77       		.sleb128 -9
 5240 074b 00       		.byte	0
 5241 074c 17       		.uleb128 0x17
 5242 074d 7B060000 		.4byte	.LASF85
 5243 0751 01       		.byte	0x1
 5244 0752 5608     		.2byte	0x856
 5245 0754 00000000 		.4byte	.LFB43
 5246 0758 20000000 		.4byte	.LFE43-.LFB43
 5247 075c 01       		.uleb128 0x1
 5248 075d 9C       		.byte	0x9c
 5249 075e 72070000 		.4byte	0x772
 5250 0762 15       		.uleb128 0x15
 5251 0763 F8040000 		.4byte	.LASF44
 5252 0767 01       		.byte	0x1
 5253 0768 5608     		.2byte	0x856
 5254 076a 6B000000 		.4byte	0x6b
 5255 076e 02       		.uleb128 0x2
 5256 076f 91       		.byte	0x91
 5257 0770 77       		.sleb128 -9
 5258 0771 00       		.byte	0
 5259 0772 17       		.uleb128 0x17
 5260 0773 D1000000 		.4byte	.LASF86
 5261 0777 01       		.byte	0x1
 5262 0778 7308     		.2byte	0x873
 5263 077a 00000000 		.4byte	.LFB44
 5264 077e 20000000 		.4byte	.LFE44-.LFB44
 5265 0782 01       		.uleb128 0x1
 5266 0783 9C       		.byte	0x9c
 5267 0784 98070000 		.4byte	0x798
 5268 0788 15       		.uleb128 0x15
 5269 0789 31050000 		.4byte	.LASF46
 5270 078d 01       		.byte	0x1
 5271 078e 7308     		.2byte	0x873
 5272 0790 6B000000 		.4byte	0x6b
 5273 0794 02       		.uleb128 0x2
 5274 0795 91       		.byte	0x91
 5275 0796 77       		.sleb128 -9
 5276 0797 00       		.byte	0
 5277 0798 17       		.uleb128 0x17
 5278 0799 07000000 		.4byte	.LASF87
 5279 079d 01       		.byte	0x1
 5280 079e 9108     		.2byte	0x891
 5281 07a0 00000000 		.4byte	.LFB45
 5282 07a4 20000000 		.4byte	.LFE45-.LFB45
 5283 07a8 01       		.uleb128 0x1
 5284 07a9 9C       		.byte	0x9c
 5285 07aa BE070000 		.4byte	0x7be
 5286 07ae 15       		.uleb128 0x15
 5287 07af AC030000 		.4byte	.LASF48
 5288 07b3 01       		.byte	0x1
 5289 07b4 9108     		.2byte	0x891
 5290 07b6 6B000000 		.4byte	0x6b
 5291 07ba 02       		.uleb128 0x2
 5292 07bb 91       		.byte	0x91
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 139


 5293 07bc 77       		.sleb128 -9
 5294 07bd 00       		.byte	0
 5295 07be 12       		.uleb128 0x12
 5296 07bf E0060000 		.4byte	.LASF88
 5297 07c3 01       		.byte	0x1
 5298 07c4 C308     		.2byte	0x8c3
 5299 07c6 00000000 		.4byte	.LFB46
 5300 07ca 34000000 		.4byte	.LFE46-.LFB46
 5301 07ce 01       		.uleb128 0x1
 5302 07cf 9C       		.byte	0x9c
 5303 07d0 E4070000 		.4byte	0x7e4
 5304 07d4 15       		.uleb128 0x15
 5305 07d5 48040000 		.4byte	.LASF33
 5306 07d9 01       		.byte	0x1
 5307 07da C308     		.2byte	0x8c3
 5308 07dc 6B000000 		.4byte	0x6b
 5309 07e0 02       		.uleb128 0x2
 5310 07e1 91       		.byte	0x91
 5311 07e2 77       		.sleb128 -9
 5312 07e3 00       		.byte	0
 5313 07e4 12       		.uleb128 0x12
 5314 07e5 21070000 		.4byte	.LASF89
 5315 07e9 01       		.byte	0x1
 5316 07ea FF08     		.2byte	0x8ff
 5317 07ec 00000000 		.4byte	.LFB47
 5318 07f0 34000000 		.4byte	.LFE47-.LFB47
 5319 07f4 01       		.uleb128 0x1
 5320 07f5 9C       		.byte	0x9c
 5321 07f6 0A080000 		.4byte	0x80a
 5322 07fa 15       		.uleb128 0x15
 5323 07fb 6C070000 		.4byte	.LASF32
 5324 07ff 01       		.byte	0x1
 5325 0800 FF08     		.2byte	0x8ff
 5326 0802 6B000000 		.4byte	0x6b
 5327 0806 02       		.uleb128 0x2
 5328 0807 91       		.byte	0x91
 5329 0808 77       		.sleb128 -9
 5330 0809 00       		.byte	0
 5331 080a 17       		.uleb128 0x17
 5332 080b 5A050000 		.4byte	.LASF90
 5333 080f 01       		.byte	0x1
 5334 0810 2209     		.2byte	0x922
 5335 0812 00000000 		.4byte	.LFB48
 5336 0816 20000000 		.4byte	.LFE48-.LFB48
 5337 081a 01       		.uleb128 0x1
 5338 081b 9C       		.byte	0x9c
 5339 081c 30080000 		.4byte	0x830
 5340 0820 15       		.uleb128 0x15
 5341 0821 F8040000 		.4byte	.LASF44
 5342 0825 01       		.byte	0x1
 5343 0826 2209     		.2byte	0x922
 5344 0828 6B000000 		.4byte	0x6b
 5345 082c 02       		.uleb128 0x2
 5346 082d 91       		.byte	0x91
 5347 082e 77       		.sleb128 -9
 5348 082f 00       		.byte	0
 5349 0830 17       		.uleb128 0x17
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 140


 5350 0831 C7040000 		.4byte	.LASF91
 5351 0835 01       		.byte	0x1
 5352 0836 3F09     		.2byte	0x93f
 5353 0838 00000000 		.4byte	.LFB49
 5354 083c 20000000 		.4byte	.LFE49-.LFB49
 5355 0840 01       		.uleb128 0x1
 5356 0841 9C       		.byte	0x9c
 5357 0842 56080000 		.4byte	0x856
 5358 0846 15       		.uleb128 0x15
 5359 0847 31050000 		.4byte	.LASF46
 5360 084b 01       		.byte	0x1
 5361 084c 3F09     		.2byte	0x93f
 5362 084e 6B000000 		.4byte	0x6b
 5363 0852 02       		.uleb128 0x2
 5364 0853 91       		.byte	0x91
 5365 0854 77       		.sleb128 -9
 5366 0855 00       		.byte	0
 5367 0856 17       		.uleb128 0x17
 5368 0857 1E000000 		.4byte	.LASF92
 5369 085b 01       		.byte	0x1
 5370 085c 5D09     		.2byte	0x95d
 5371 085e 00000000 		.4byte	.LFB50
 5372 0862 20000000 		.4byte	.LFE50-.LFB50
 5373 0866 01       		.uleb128 0x1
 5374 0867 9C       		.byte	0x9c
 5375 0868 7C080000 		.4byte	0x87c
 5376 086c 15       		.uleb128 0x15
 5377 086d AC030000 		.4byte	.LASF48
 5378 0871 01       		.byte	0x1
 5379 0872 5D09     		.2byte	0x95d
 5380 0874 6B000000 		.4byte	0x6b
 5381 0878 02       		.uleb128 0x2
 5382 0879 91       		.byte	0x91
 5383 087a 77       		.sleb128 -9
 5384 087b 00       		.byte	0
 5385 087c 12       		.uleb128 0x12
 5386 087d 0E020000 		.4byte	.LASF93
 5387 0881 01       		.byte	0x1
 5388 0882 9209     		.2byte	0x992
 5389 0884 00000000 		.4byte	.LFB51
 5390 0888 34000000 		.4byte	.LFE51-.LFB51
 5391 088c 01       		.uleb128 0x1
 5392 088d 9C       		.byte	0x9c
 5393 088e A2080000 		.4byte	0x8a2
 5394 0892 15       		.uleb128 0x15
 5395 0893 48040000 		.4byte	.LASF33
 5396 0897 01       		.byte	0x1
 5397 0898 9209     		.2byte	0x992
 5398 089a 6B000000 		.4byte	0x6b
 5399 089e 02       		.uleb128 0x2
 5400 089f 91       		.byte	0x91
 5401 08a0 77       		.sleb128 -9
 5402 08a1 00       		.byte	0
 5403 08a2 12       		.uleb128 0x12
 5404 08a3 D0010000 		.4byte	.LASF94
 5405 08a7 01       		.byte	0x1
 5406 08a8 CE09     		.2byte	0x9ce
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 141


 5407 08aa 00000000 		.4byte	.LFB52
 5408 08ae 34000000 		.4byte	.LFE52-.LFB52
 5409 08b2 01       		.uleb128 0x1
 5410 08b3 9C       		.byte	0x9c
 5411 08b4 C8080000 		.4byte	0x8c8
 5412 08b8 15       		.uleb128 0x15
 5413 08b9 6C070000 		.4byte	.LASF32
 5414 08bd 01       		.byte	0x1
 5415 08be CE09     		.2byte	0x9ce
 5416 08c0 6B000000 		.4byte	0x6b
 5417 08c4 02       		.uleb128 0x2
 5418 08c5 91       		.byte	0x91
 5419 08c6 77       		.sleb128 -9
 5420 08c7 00       		.byte	0
 5421 08c8 17       		.uleb128 0x17
 5422 08c9 28020000 		.4byte	.LASF95
 5423 08cd 01       		.byte	0x1
 5424 08ce F209     		.2byte	0x9f2
 5425 08d0 00000000 		.4byte	.LFB53
 5426 08d4 20000000 		.4byte	.LFE53-.LFB53
 5427 08d8 01       		.uleb128 0x1
 5428 08d9 9C       		.byte	0x9c
 5429 08da EE080000 		.4byte	0x8ee
 5430 08de 15       		.uleb128 0x15
 5431 08df 3A060000 		.4byte	.LASF96
 5432 08e3 01       		.byte	0x1
 5433 08e4 F209     		.2byte	0x9f2
 5434 08e6 6B000000 		.4byte	0x6b
 5435 08ea 02       		.uleb128 0x2
 5436 08eb 91       		.byte	0x91
 5437 08ec 77       		.sleb128 -9
 5438 08ed 00       		.byte	0
 5439 08ee 1D       		.uleb128 0x1d
 5440 08ef F6020000 		.4byte	.LASF97
 5441 08f3 01       		.byte	0x1
 5442 08f4 1C       		.byte	0x1c
 5443 08f5 6B000000 		.4byte	0x6b
 5444 08f9 05       		.uleb128 0x5
 5445 08fa 03       		.byte	0x3
 5446 08fb 00000000 		.4byte	RTC_initVar
 5447 08ff 1D       		.uleb128 0x1d
 5448 0900 97030000 		.4byte	.LASF98
 5449 0904 01       		.byte	0x1
 5450 0905 28       		.byte	0x28
 5451 0906 2F010000 		.4byte	0x12f
 5452 090a 05       		.uleb128 0x5
 5453 090b 03       		.byte	0x3
 5454 090c 00000000 		.4byte	RTC_alarmCfgTimeDate
 5455 0910 1D       		.uleb128 0x1d
 5456 0911 82050000 		.4byte	.LASF99
 5457 0915 01       		.byte	0x1
 5458 0916 22       		.byte	0x22
 5459 0917 2F010000 		.4byte	0x12f
 5460 091b 05       		.uleb128 0x5
 5461 091c 03       		.byte	0x3
 5462 091d 00000000 		.4byte	RTC_currentTimeDate
 5463 0921 1D       		.uleb128 0x1d
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 142


 5464 0922 51000000 		.4byte	.LASF100
 5465 0926 01       		.byte	0x1
 5466 0927 2D       		.byte	0x2d
 5467 0928 B0000000 		.4byte	0xb0
 5468 092c 05       		.uleb128 0x5
 5469 092d 03       		.byte	0x3
 5470 092e 00000000 		.4byte	RTC_dstModeType
 5471 0932 1D       		.uleb128 0x1d
 5472 0933 41060000 		.4byte	.LASF101
 5473 0937 01       		.byte	0x1
 5474 0938 30       		.byte	0x30
 5475 0939 84010000 		.4byte	0x184
 5476 093d 05       		.uleb128 0x5
 5477 093e 03       		.byte	0x3
 5478 093f 00000000 		.4byte	RTC_dstTimeDateStart
 5479 0943 1D       		.uleb128 0x1d
 5480 0944 E5010000 		.4byte	.LASF102
 5481 0948 01       		.byte	0x1
 5482 0949 31       		.byte	0x31
 5483 094a 84010000 		.4byte	0x184
 5484 094e 05       		.uleb128 0x5
 5485 094f 03       		.byte	0x3
 5486 0950 00000000 		.4byte	RTC_dstTimeDateStop
 5487 0954 1D       		.uleb128 0x1d
 5488 0955 64040000 		.4byte	.LASF103
 5489 0959 01       		.byte	0x1
 5490 095a 34       		.byte	0x34
 5491 095b B0000000 		.4byte	0xb0
 5492 095f 05       		.uleb128 0x5
 5493 0960 03       		.byte	0x3
 5494 0961 00000000 		.4byte	RTC_dstOffsetMin
 5495 0965 1D       		.uleb128 0x1d
 5496 0966 86020000 		.4byte	.LASF104
 5497 096a 01       		.byte	0x1
 5498 096b 35       		.byte	0x35
 5499 096c B0000000 		.4byte	0xb0
 5500 0970 05       		.uleb128 0x5
 5501 0971 03       		.byte	0x3
 5502 0972 00000000 		.4byte	RTC_dstStartStatus
 5503 0976 1D       		.uleb128 0x1d
 5504 0977 71070000 		.4byte	.LASF105
 5505 097b 01       		.byte	0x1
 5506 097c 36       		.byte	0x36
 5507 097d B0000000 		.4byte	0xb0
 5508 0981 05       		.uleb128 0x5
 5509 0982 03       		.byte	0x3
 5510 0983 00000000 		.4byte	RTC_dstStopStatus
 5511 0987 1D       		.uleb128 0x1d
 5512 0988 BB020000 		.4byte	.LASF106
 5513 098c 01       		.byte	0x1
 5514 098d 3B       		.byte	0x3b
 5515 098e B0000000 		.4byte	0xb0
 5516 0992 05       		.uleb128 0x5
 5517 0993 03       		.byte	0x3
 5518 0994 00000000 		.4byte	RTC_alarmCfgMask
 5519 0998 1D       		.uleb128 0x1d
 5520 0999 B8010000 		.4byte	.LASF107
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 143


 5521 099d 01       		.byte	0x1
 5522 099e 3C       		.byte	0x3c
 5523 099f B0000000 		.4byte	0xb0
 5524 09a3 05       		.uleb128 0x5
 5525 09a4 03       		.byte	0x3
 5526 09a5 00000000 		.4byte	RTC_alarmCurStatus
 5527 09a9 1D       		.uleb128 0x1d
 5528 09aa 9D050000 		.4byte	.LASF108
 5529 09ae 01       		.byte	0x1
 5530 09af 3D       		.byte	0x3d
 5531 09b0 B0000000 		.4byte	0xb0
 5532 09b4 05       		.uleb128 0x5
 5533 09b5 03       		.byte	0x3
 5534 09b6 00000000 		.4byte	RTC_intervalCfgMask
 5535 09ba 1D       		.uleb128 0x1d
 5536 09bb 4D030000 		.4byte	.LASF109
 5537 09bf 01       		.byte	0x1
 5538 09c0 40       		.byte	0x40
 5539 09c1 B0000000 		.4byte	0xb0
 5540 09c5 05       		.uleb128 0x5
 5541 09c6 03       		.byte	0x3
 5542 09c7 00000000 		.4byte	RTC_statusDateTime
 5543 09cb 1D       		.uleb128 0x1d
 5544 09cc 7B040000 		.4byte	.LASF110
 5545 09d0 01       		.byte	0x1
 5546 09d1 43       		.byte	0x43
 5547 09d2 DC090000 		.4byte	0x9dc
 5548 09d6 05       		.uleb128 0x5
 5549 09d7 03       		.byte	0x3
 5550 09d8 00000000 		.4byte	RTC_daysInMonths
 5551 09dc 16       		.uleb128 0x16
 5552 09dd D9060000 		.4byte	0x6d9
 5553 09e1 00       		.byte	0
 5554              		.section	.debug_abbrev,"",%progbits
 5555              	.Ldebug_abbrev0:
 5556 0000 01       		.uleb128 0x1
 5557 0001 11       		.uleb128 0x11
 5558 0002 01       		.byte	0x1
 5559 0003 25       		.uleb128 0x25
 5560 0004 0E       		.uleb128 0xe
 5561 0005 13       		.uleb128 0x13
 5562 0006 0B       		.uleb128 0xb
 5563 0007 03       		.uleb128 0x3
 5564 0008 0E       		.uleb128 0xe
 5565 0009 1B       		.uleb128 0x1b
 5566 000a 0E       		.uleb128 0xe
 5567 000b 55       		.uleb128 0x55
 5568 000c 17       		.uleb128 0x17
 5569 000d 11       		.uleb128 0x11
 5570 000e 01       		.uleb128 0x1
 5571 000f 10       		.uleb128 0x10
 5572 0010 17       		.uleb128 0x17
 5573 0011 00       		.byte	0
 5574 0012 00       		.byte	0
 5575 0013 02       		.uleb128 0x2
 5576 0014 24       		.uleb128 0x24
 5577 0015 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 144


 5578 0016 0B       		.uleb128 0xb
 5579 0017 0B       		.uleb128 0xb
 5580 0018 3E       		.uleb128 0x3e
 5581 0019 0B       		.uleb128 0xb
 5582 001a 03       		.uleb128 0x3
 5583 001b 0E       		.uleb128 0xe
 5584 001c 00       		.byte	0
 5585 001d 00       		.byte	0
 5586 001e 03       		.uleb128 0x3
 5587 001f 24       		.uleb128 0x24
 5588 0020 00       		.byte	0
 5589 0021 0B       		.uleb128 0xb
 5590 0022 0B       		.uleb128 0xb
 5591 0023 3E       		.uleb128 0x3e
 5592 0024 0B       		.uleb128 0xb
 5593 0025 03       		.uleb128 0x3
 5594 0026 08       		.uleb128 0x8
 5595 0027 00       		.byte	0
 5596 0028 00       		.byte	0
 5597 0029 04       		.uleb128 0x4
 5598 002a 16       		.uleb128 0x16
 5599 002b 00       		.byte	0
 5600 002c 03       		.uleb128 0x3
 5601 002d 0E       		.uleb128 0xe
 5602 002e 3A       		.uleb128 0x3a
 5603 002f 0B       		.uleb128 0xb
 5604 0030 3B       		.uleb128 0x3b
 5605 0031 05       		.uleb128 0x5
 5606 0032 49       		.uleb128 0x49
 5607 0033 13       		.uleb128 0x13
 5608 0034 00       		.byte	0
 5609 0035 00       		.byte	0
 5610 0036 05       		.uleb128 0x5
 5611 0037 35       		.uleb128 0x35
 5612 0038 00       		.byte	0
 5613 0039 49       		.uleb128 0x49
 5614 003a 13       		.uleb128 0x13
 5615 003b 00       		.byte	0
 5616 003c 00       		.byte	0
 5617 003d 06       		.uleb128 0x6
 5618 003e 13       		.uleb128 0x13
 5619 003f 01       		.byte	0x1
 5620 0040 0B       		.uleb128 0xb
 5621 0041 0B       		.uleb128 0xb
 5622 0042 3A       		.uleb128 0x3a
 5623 0043 0B       		.uleb128 0xb
 5624 0044 3B       		.uleb128 0x3b
 5625 0045 0B       		.uleb128 0xb
 5626 0046 01       		.uleb128 0x1
 5627 0047 13       		.uleb128 0x13
 5628 0048 00       		.byte	0
 5629 0049 00       		.byte	0
 5630 004a 07       		.uleb128 0x7
 5631 004b 0D       		.uleb128 0xd
 5632 004c 00       		.byte	0
 5633 004d 03       		.uleb128 0x3
 5634 004e 08       		.uleb128 0x8
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 145


 5635 004f 3A       		.uleb128 0x3a
 5636 0050 0B       		.uleb128 0xb
 5637 0051 3B       		.uleb128 0x3b
 5638 0052 0B       		.uleb128 0xb
 5639 0053 49       		.uleb128 0x49
 5640 0054 13       		.uleb128 0x13
 5641 0055 38       		.uleb128 0x38
 5642 0056 0B       		.uleb128 0xb
 5643 0057 00       		.byte	0
 5644 0058 00       		.byte	0
 5645 0059 08       		.uleb128 0x8
 5646 005a 0D       		.uleb128 0xd
 5647 005b 00       		.byte	0
 5648 005c 03       		.uleb128 0x3
 5649 005d 0E       		.uleb128 0xe
 5650 005e 3A       		.uleb128 0x3a
 5651 005f 0B       		.uleb128 0xb
 5652 0060 3B       		.uleb128 0x3b
 5653 0061 0B       		.uleb128 0xb
 5654 0062 49       		.uleb128 0x49
 5655 0063 13       		.uleb128 0x13
 5656 0064 38       		.uleb128 0x38
 5657 0065 0B       		.uleb128 0xb
 5658 0066 00       		.byte	0
 5659 0067 00       		.byte	0
 5660 0068 09       		.uleb128 0x9
 5661 0069 16       		.uleb128 0x16
 5662 006a 00       		.byte	0
 5663 006b 03       		.uleb128 0x3
 5664 006c 0E       		.uleb128 0xe
 5665 006d 3A       		.uleb128 0x3a
 5666 006e 0B       		.uleb128 0xb
 5667 006f 3B       		.uleb128 0x3b
 5668 0070 0B       		.uleb128 0xb
 5669 0071 49       		.uleb128 0x49
 5670 0072 13       		.uleb128 0x13
 5671 0073 00       		.byte	0
 5672 0074 00       		.byte	0
 5673 0075 0A       		.uleb128 0xa
 5674 0076 2E       		.uleb128 0x2e
 5675 0077 00       		.byte	0
 5676 0078 3F       		.uleb128 0x3f
 5677 0079 19       		.uleb128 0x19
 5678 007a 03       		.uleb128 0x3
 5679 007b 0E       		.uleb128 0xe
 5680 007c 3A       		.uleb128 0x3a
 5681 007d 0B       		.uleb128 0xb
 5682 007e 3B       		.uleb128 0x3b
 5683 007f 0B       		.uleb128 0xb
 5684 0080 27       		.uleb128 0x27
 5685 0081 19       		.uleb128 0x19
 5686 0082 11       		.uleb128 0x11
 5687 0083 01       		.uleb128 0x1
 5688 0084 12       		.uleb128 0x12
 5689 0085 06       		.uleb128 0x6
 5690 0086 40       		.uleb128 0x40
 5691 0087 18       		.uleb128 0x18
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 146


 5692 0088 9642     		.uleb128 0x2116
 5693 008a 19       		.uleb128 0x19
 5694 008b 00       		.byte	0
 5695 008c 00       		.byte	0
 5696 008d 0B       		.uleb128 0xb
 5697 008e 2E       		.uleb128 0x2e
 5698 008f 01       		.byte	0x1
 5699 0090 3F       		.uleb128 0x3f
 5700 0091 19       		.uleb128 0x19
 5701 0092 03       		.uleb128 0x3
 5702 0093 0E       		.uleb128 0xe
 5703 0094 3A       		.uleb128 0x3a
 5704 0095 0B       		.uleb128 0xb
 5705 0096 3B       		.uleb128 0x3b
 5706 0097 0B       		.uleb128 0xb
 5707 0098 27       		.uleb128 0x27
 5708 0099 19       		.uleb128 0x19
 5709 009a 11       		.uleb128 0x11
 5710 009b 01       		.uleb128 0x1
 5711 009c 12       		.uleb128 0x12
 5712 009d 06       		.uleb128 0x6
 5713 009e 40       		.uleb128 0x40
 5714 009f 18       		.uleb128 0x18
 5715 00a0 9642     		.uleb128 0x2116
 5716 00a2 19       		.uleb128 0x19
 5717 00a3 01       		.uleb128 0x1
 5718 00a4 13       		.uleb128 0x13
 5719 00a5 00       		.byte	0
 5720 00a6 00       		.byte	0
 5721 00a7 0C       		.uleb128 0xc
 5722 00a8 34       		.uleb128 0x34
 5723 00a9 00       		.byte	0
 5724 00aa 03       		.uleb128 0x3
 5725 00ab 0E       		.uleb128 0xe
 5726 00ac 3A       		.uleb128 0x3a
 5727 00ad 0B       		.uleb128 0xb
 5728 00ae 3B       		.uleb128 0x3b
 5729 00af 0B       		.uleb128 0xb
 5730 00b0 49       		.uleb128 0x49
 5731 00b1 13       		.uleb128 0x13
 5732 00b2 02       		.uleb128 0x2
 5733 00b3 18       		.uleb128 0x18
 5734 00b4 00       		.byte	0
 5735 00b5 00       		.byte	0
 5736 00b6 0D       		.uleb128 0xd
 5737 00b7 2E       		.uleb128 0x2e
 5738 00b8 00       		.byte	0
 5739 00b9 3F       		.uleb128 0x3f
 5740 00ba 19       		.uleb128 0x19
 5741 00bb 03       		.uleb128 0x3
 5742 00bc 0E       		.uleb128 0xe
 5743 00bd 3A       		.uleb128 0x3a
 5744 00be 0B       		.uleb128 0xb
 5745 00bf 3B       		.uleb128 0x3b
 5746 00c0 0B       		.uleb128 0xb
 5747 00c1 27       		.uleb128 0x27
 5748 00c2 19       		.uleb128 0x19
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 147


 5749 00c3 11       		.uleb128 0x11
 5750 00c4 01       		.uleb128 0x1
 5751 00c5 12       		.uleb128 0x12
 5752 00c6 06       		.uleb128 0x6
 5753 00c7 40       		.uleb128 0x40
 5754 00c8 18       		.uleb128 0x18
 5755 00c9 9742     		.uleb128 0x2117
 5756 00cb 19       		.uleb128 0x19
 5757 00cc 00       		.byte	0
 5758 00cd 00       		.byte	0
 5759 00ce 0E       		.uleb128 0xe
 5760 00cf 2E       		.uleb128 0x2e
 5761 00d0 01       		.byte	0x1
 5762 00d1 03       		.uleb128 0x3
 5763 00d2 0E       		.uleb128 0xe
 5764 00d3 3A       		.uleb128 0x3a
 5765 00d4 0B       		.uleb128 0xb
 5766 00d5 3B       		.uleb128 0x3b
 5767 00d6 0B       		.uleb128 0xb
 5768 00d7 27       		.uleb128 0x27
 5769 00d8 19       		.uleb128 0x19
 5770 00d9 11       		.uleb128 0x11
 5771 00da 01       		.uleb128 0x1
 5772 00db 12       		.uleb128 0x12
 5773 00dc 06       		.uleb128 0x6
 5774 00dd 40       		.uleb128 0x40
 5775 00de 18       		.uleb128 0x18
 5776 00df 9642     		.uleb128 0x2116
 5777 00e1 19       		.uleb128 0x19
 5778 00e2 01       		.uleb128 0x1
 5779 00e3 13       		.uleb128 0x13
 5780 00e4 00       		.byte	0
 5781 00e5 00       		.byte	0
 5782 00e6 0F       		.uleb128 0xf
 5783 00e7 34       		.uleb128 0x34
 5784 00e8 00       		.byte	0
 5785 00e9 03       		.uleb128 0x3
 5786 00ea 0E       		.uleb128 0xe
 5787 00eb 3A       		.uleb128 0x3a
 5788 00ec 0B       		.uleb128 0xb
 5789 00ed 3B       		.uleb128 0x3b
 5790 00ee 05       		.uleb128 0x5
 5791 00ef 49       		.uleb128 0x49
 5792 00f0 13       		.uleb128 0x13
 5793 00f1 02       		.uleb128 0x2
 5794 00f2 18       		.uleb128 0x18
 5795 00f3 00       		.byte	0
 5796 00f4 00       		.byte	0
 5797 00f5 10       		.uleb128 0x10
 5798 00f6 34       		.uleb128 0x34
 5799 00f7 00       		.byte	0
 5800 00f8 03       		.uleb128 0x3
 5801 00f9 08       		.uleb128 0x8
 5802 00fa 3A       		.uleb128 0x3a
 5803 00fb 0B       		.uleb128 0xb
 5804 00fc 3B       		.uleb128 0x3b
 5805 00fd 05       		.uleb128 0x5
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 148


 5806 00fe 49       		.uleb128 0x49
 5807 00ff 13       		.uleb128 0x13
 5808 0100 02       		.uleb128 0x2
 5809 0101 18       		.uleb128 0x18
 5810 0102 00       		.byte	0
 5811 0103 00       		.byte	0
 5812 0104 11       		.uleb128 0x11
 5813 0105 2E       		.uleb128 0x2e
 5814 0106 00       		.byte	0
 5815 0107 3F       		.uleb128 0x3f
 5816 0108 19       		.uleb128 0x19
 5817 0109 03       		.uleb128 0x3
 5818 010a 0E       		.uleb128 0xe
 5819 010b 3A       		.uleb128 0x3a
 5820 010c 0B       		.uleb128 0xb
 5821 010d 3B       		.uleb128 0x3b
 5822 010e 05       		.uleb128 0x5
 5823 010f 27       		.uleb128 0x27
 5824 0110 19       		.uleb128 0x19
 5825 0111 11       		.uleb128 0x11
 5826 0112 01       		.uleb128 0x1
 5827 0113 12       		.uleb128 0x12
 5828 0114 06       		.uleb128 0x6
 5829 0115 40       		.uleb128 0x40
 5830 0116 18       		.uleb128 0x18
 5831 0117 9642     		.uleb128 0x2116
 5832 0119 19       		.uleb128 0x19
 5833 011a 00       		.byte	0
 5834 011b 00       		.byte	0
 5835 011c 12       		.uleb128 0x12
 5836 011d 2E       		.uleb128 0x2e
 5837 011e 01       		.byte	0x1
 5838 011f 3F       		.uleb128 0x3f
 5839 0120 19       		.uleb128 0x19
 5840 0121 03       		.uleb128 0x3
 5841 0122 0E       		.uleb128 0xe
 5842 0123 3A       		.uleb128 0x3a
 5843 0124 0B       		.uleb128 0xb
 5844 0125 3B       		.uleb128 0x3b
 5845 0126 05       		.uleb128 0x5
 5846 0127 27       		.uleb128 0x27
 5847 0128 19       		.uleb128 0x19
 5848 0129 11       		.uleb128 0x11
 5849 012a 01       		.uleb128 0x1
 5850 012b 12       		.uleb128 0x12
 5851 012c 06       		.uleb128 0x6
 5852 012d 40       		.uleb128 0x40
 5853 012e 18       		.uleb128 0x18
 5854 012f 9642     		.uleb128 0x2116
 5855 0131 19       		.uleb128 0x19
 5856 0132 01       		.uleb128 0x1
 5857 0133 13       		.uleb128 0x13
 5858 0134 00       		.byte	0
 5859 0135 00       		.byte	0
 5860 0136 13       		.uleb128 0x13
 5861 0137 2E       		.uleb128 0x2e
 5862 0138 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 149


 5863 0139 3F       		.uleb128 0x3f
 5864 013a 19       		.uleb128 0x19
 5865 013b 03       		.uleb128 0x3
 5866 013c 0E       		.uleb128 0xe
 5867 013d 3A       		.uleb128 0x3a
 5868 013e 0B       		.uleb128 0xb
 5869 013f 3B       		.uleb128 0x3b
 5870 0140 05       		.uleb128 0x5
 5871 0141 27       		.uleb128 0x27
 5872 0142 19       		.uleb128 0x19
 5873 0143 49       		.uleb128 0x49
 5874 0144 13       		.uleb128 0x13
 5875 0145 11       		.uleb128 0x11
 5876 0146 01       		.uleb128 0x1
 5877 0147 12       		.uleb128 0x12
 5878 0148 06       		.uleb128 0x6
 5879 0149 40       		.uleb128 0x40
 5880 014a 18       		.uleb128 0x18
 5881 014b 9742     		.uleb128 0x2117
 5882 014d 19       		.uleb128 0x19
 5883 014e 00       		.byte	0
 5884 014f 00       		.byte	0
 5885 0150 14       		.uleb128 0x14
 5886 0151 0F       		.uleb128 0xf
 5887 0152 00       		.byte	0
 5888 0153 0B       		.uleb128 0xb
 5889 0154 0B       		.uleb128 0xb
 5890 0155 49       		.uleb128 0x49
 5891 0156 13       		.uleb128 0x13
 5892 0157 00       		.byte	0
 5893 0158 00       		.byte	0
 5894 0159 15       		.uleb128 0x15
 5895 015a 05       		.uleb128 0x5
 5896 015b 00       		.byte	0
 5897 015c 03       		.uleb128 0x3
 5898 015d 0E       		.uleb128 0xe
 5899 015e 3A       		.uleb128 0x3a
 5900 015f 0B       		.uleb128 0xb
 5901 0160 3B       		.uleb128 0x3b
 5902 0161 05       		.uleb128 0x5
 5903 0162 49       		.uleb128 0x49
 5904 0163 13       		.uleb128 0x13
 5905 0164 02       		.uleb128 0x2
 5906 0165 18       		.uleb128 0x18
 5907 0166 00       		.byte	0
 5908 0167 00       		.byte	0
 5909 0168 16       		.uleb128 0x16
 5910 0169 26       		.uleb128 0x26
 5911 016a 00       		.byte	0
 5912 016b 49       		.uleb128 0x49
 5913 016c 13       		.uleb128 0x13
 5914 016d 00       		.byte	0
 5915 016e 00       		.byte	0
 5916 016f 17       		.uleb128 0x17
 5917 0170 2E       		.uleb128 0x2e
 5918 0171 01       		.byte	0x1
 5919 0172 3F       		.uleb128 0x3f
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 150


 5920 0173 19       		.uleb128 0x19
 5921 0174 03       		.uleb128 0x3
 5922 0175 0E       		.uleb128 0xe
 5923 0176 3A       		.uleb128 0x3a
 5924 0177 0B       		.uleb128 0xb
 5925 0178 3B       		.uleb128 0x3b
 5926 0179 05       		.uleb128 0x5
 5927 017a 27       		.uleb128 0x27
 5928 017b 19       		.uleb128 0x19
 5929 017c 11       		.uleb128 0x11
 5930 017d 01       		.uleb128 0x1
 5931 017e 12       		.uleb128 0x12
 5932 017f 06       		.uleb128 0x6
 5933 0180 40       		.uleb128 0x40
 5934 0181 18       		.uleb128 0x18
 5935 0182 9742     		.uleb128 0x2117
 5936 0184 19       		.uleb128 0x19
 5937 0185 01       		.uleb128 0x1
 5938 0186 13       		.uleb128 0x13
 5939 0187 00       		.byte	0
 5940 0188 00       		.byte	0
 5941 0189 18       		.uleb128 0x18
 5942 018a 2E       		.uleb128 0x2e
 5943 018b 01       		.byte	0x1
 5944 018c 3F       		.uleb128 0x3f
 5945 018d 19       		.uleb128 0x19
 5946 018e 03       		.uleb128 0x3
 5947 018f 0E       		.uleb128 0xe
 5948 0190 3A       		.uleb128 0x3a
 5949 0191 0B       		.uleb128 0xb
 5950 0192 3B       		.uleb128 0x3b
 5951 0193 05       		.uleb128 0x5
 5952 0194 27       		.uleb128 0x27
 5953 0195 19       		.uleb128 0x19
 5954 0196 49       		.uleb128 0x49
 5955 0197 13       		.uleb128 0x13
 5956 0198 11       		.uleb128 0x11
 5957 0199 01       		.uleb128 0x1
 5958 019a 12       		.uleb128 0x12
 5959 019b 06       		.uleb128 0x6
 5960 019c 40       		.uleb128 0x40
 5961 019d 18       		.uleb128 0x18
 5962 019e 9742     		.uleb128 0x2117
 5963 01a0 19       		.uleb128 0x19
 5964 01a1 01       		.uleb128 0x1
 5965 01a2 13       		.uleb128 0x13
 5966 01a3 00       		.byte	0
 5967 01a4 00       		.byte	0
 5968 01a5 19       		.uleb128 0x19
 5969 01a6 2E       		.uleb128 0x2e
 5970 01a7 01       		.byte	0x1
 5971 01a8 03       		.uleb128 0x3
 5972 01a9 0E       		.uleb128 0xe
 5973 01aa 3A       		.uleb128 0x3a
 5974 01ab 0B       		.uleb128 0xb
 5975 01ac 3B       		.uleb128 0x3b
 5976 01ad 05       		.uleb128 0x5
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 151


 5977 01ae 27       		.uleb128 0x27
 5978 01af 19       		.uleb128 0x19
 5979 01b0 49       		.uleb128 0x49
 5980 01b1 13       		.uleb128 0x13
 5981 01b2 11       		.uleb128 0x11
 5982 01b3 01       		.uleb128 0x1
 5983 01b4 12       		.uleb128 0x12
 5984 01b5 06       		.uleb128 0x6
 5985 01b6 40       		.uleb128 0x40
 5986 01b7 18       		.uleb128 0x18
 5987 01b8 9742     		.uleb128 0x2117
 5988 01ba 19       		.uleb128 0x19
 5989 01bb 01       		.uleb128 0x1
 5990 01bc 13       		.uleb128 0x13
 5991 01bd 00       		.byte	0
 5992 01be 00       		.byte	0
 5993 01bf 1A       		.uleb128 0x1a
 5994 01c0 01       		.uleb128 0x1
 5995 01c1 01       		.byte	0x1
 5996 01c2 49       		.uleb128 0x49
 5997 01c3 13       		.uleb128 0x13
 5998 01c4 01       		.uleb128 0x1
 5999 01c5 13       		.uleb128 0x13
 6000 01c6 00       		.byte	0
 6001 01c7 00       		.byte	0
 6002 01c8 1B       		.uleb128 0x1b
 6003 01c9 21       		.uleb128 0x21
 6004 01ca 00       		.byte	0
 6005 01cb 49       		.uleb128 0x49
 6006 01cc 13       		.uleb128 0x13
 6007 01cd 2F       		.uleb128 0x2f
 6008 01ce 0B       		.uleb128 0xb
 6009 01cf 00       		.byte	0
 6010 01d0 00       		.byte	0
 6011 01d1 1C       		.uleb128 0x1c
 6012 01d2 2E       		.uleb128 0x2e
 6013 01d3 01       		.byte	0x1
 6014 01d4 03       		.uleb128 0x3
 6015 01d5 0E       		.uleb128 0xe
 6016 01d6 3A       		.uleb128 0x3a
 6017 01d7 0B       		.uleb128 0xb
 6018 01d8 3B       		.uleb128 0x3b
 6019 01d9 05       		.uleb128 0x5
 6020 01da 27       		.uleb128 0x27
 6021 01db 19       		.uleb128 0x19
 6022 01dc 11       		.uleb128 0x11
 6023 01dd 01       		.uleb128 0x1
 6024 01de 12       		.uleb128 0x12
 6025 01df 06       		.uleb128 0x6
 6026 01e0 40       		.uleb128 0x40
 6027 01e1 18       		.uleb128 0x18
 6028 01e2 9642     		.uleb128 0x2116
 6029 01e4 19       		.uleb128 0x19
 6030 01e5 01       		.uleb128 0x1
 6031 01e6 13       		.uleb128 0x13
 6032 01e7 00       		.byte	0
 6033 01e8 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 152


 6034 01e9 1D       		.uleb128 0x1d
 6035 01ea 34       		.uleb128 0x34
 6036 01eb 00       		.byte	0
 6037 01ec 03       		.uleb128 0x3
 6038 01ed 0E       		.uleb128 0xe
 6039 01ee 3A       		.uleb128 0x3a
 6040 01ef 0B       		.uleb128 0xb
 6041 01f0 3B       		.uleb128 0x3b
 6042 01f1 0B       		.uleb128 0xb
 6043 01f2 49       		.uleb128 0x49
 6044 01f3 13       		.uleb128 0x13
 6045 01f4 3F       		.uleb128 0x3f
 6046 01f5 19       		.uleb128 0x19
 6047 01f6 02       		.uleb128 0x2
 6048 01f7 18       		.uleb128 0x18
 6049 01f8 00       		.byte	0
 6050 01f9 00       		.byte	0
 6051 01fa 00       		.byte	0
 6052              		.section	.debug_aranges,"",%progbits
 6053 0000 C4010000 		.4byte	0x1c4
 6054 0004 0200     		.2byte	0x2
 6055 0006 00000000 		.4byte	.Ldebug_info0
 6056 000a 04       		.byte	0x4
 6057 000b 00       		.byte	0
 6058 000c 0000     		.2byte	0
 6059 000e 0000     		.2byte	0
 6060 0010 00000000 		.4byte	.LFB0
 6061 0014 24000000 		.4byte	.LFE0-.LFB0
 6062 0018 00000000 		.4byte	.LFB1
 6063 001c 3C000000 		.4byte	.LFE1-.LFB1
 6064 0020 00000000 		.4byte	.LFB2
 6065 0024 18000000 		.4byte	.LFE2-.LFB2
 6066 0028 00000000 		.4byte	.LFB3
 6067 002c 18000000 		.4byte	.LFE3-.LFB3
 6068 0030 00000000 		.4byte	.LFB4
 6069 0034 18010000 		.4byte	.LFE4-.LFB4
 6070 0038 00000000 		.4byte	.LFB5
 6071 003c 2C000000 		.4byte	.LFE5-.LFB5
 6072 0040 00000000 		.4byte	.LFB6
 6073 0044 3C000000 		.4byte	.LFE6-.LFB6
 6074 0048 00000000 		.4byte	.LFB7
 6075 004c 14000000 		.4byte	.LFE7-.LFB7
 6076 0050 00000000 		.4byte	.LFB8
 6077 0054 58000000 		.4byte	.LFE8-.LFB8
 6078 0058 00000000 		.4byte	.LFB9
 6079 005c 20000000 		.4byte	.LFE9-.LFB9
 6080 0060 00000000 		.4byte	.LFB10
 6081 0064 20000000 		.4byte	.LFE10-.LFB10
 6082 0068 00000000 		.4byte	.LFB11
 6083 006c 20000000 		.4byte	.LFE11-.LFB11
 6084 0070 00000000 		.4byte	.LFB12
 6085 0074 20000000 		.4byte	.LFE12-.LFB12
 6086 0078 00000000 		.4byte	.LFB13
 6087 007c 20000000 		.4byte	.LFE13-.LFB13
 6088 0080 00000000 		.4byte	.LFB14
 6089 0084 20000000 		.4byte	.LFE14-.LFB14
 6090 0088 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 153


 6091 008c 58000000 		.4byte	.LFE15-.LFB15
 6092 0090 00000000 		.4byte	.LFB16
 6093 0094 58000000 		.4byte	.LFE16-.LFB16
 6094 0098 00000000 		.4byte	.LFB17
 6095 009c 58000000 		.4byte	.LFE17-.LFB17
 6096 00a0 00000000 		.4byte	.LFB18
 6097 00a4 58000000 		.4byte	.LFE18-.LFB18
 6098 00a8 00000000 		.4byte	.LFB19
 6099 00ac 58000000 		.4byte	.LFE19-.LFB19
 6100 00b0 00000000 		.4byte	.LFB20
 6101 00b4 58000000 		.4byte	.LFE20-.LFB20
 6102 00b8 00000000 		.4byte	.LFB21
 6103 00bc 58000000 		.4byte	.LFE21-.LFB21
 6104 00c0 00000000 		.4byte	.LFB22
 6105 00c4 58000000 		.4byte	.LFE22-.LFB22
 6106 00c8 00000000 		.4byte	.LFB23
 6107 00cc 18000000 		.4byte	.LFE23-.LFB23
 6108 00d0 00000000 		.4byte	.LFB24
 6109 00d4 18000000 		.4byte	.LFE24-.LFB24
 6110 00d8 00000000 		.4byte	.LFB25
 6111 00dc 18000000 		.4byte	.LFE25-.LFB25
 6112 00e0 00000000 		.4byte	.LFB26
 6113 00e4 18000000 		.4byte	.LFE26-.LFB26
 6114 00e8 00000000 		.4byte	.LFB27
 6115 00ec 18000000 		.4byte	.LFE27-.LFB27
 6116 00f0 00000000 		.4byte	.LFB28
 6117 00f4 18000000 		.4byte	.LFE28-.LFB28
 6118 00f8 00000000 		.4byte	.LFB29
 6119 00fc 18000000 		.4byte	.LFE29-.LFB29
 6120 0100 00000000 		.4byte	.LFB30
 6121 0104 18000000 		.4byte	.LFE30-.LFB30
 6122 0108 00000000 		.4byte	.LFB31
 6123 010c 18000000 		.4byte	.LFE31-.LFB31
 6124 0110 00000000 		.4byte	.LFB32
 6125 0114 18000000 		.4byte	.LFE32-.LFB32
 6126 0118 00000000 		.4byte	.LFB33
 6127 011c 18000000 		.4byte	.LFE33-.LFB33
 6128 0120 00000000 		.4byte	.LFB34
 6129 0124 18000000 		.4byte	.LFE34-.LFB34
 6130 0128 00000000 		.4byte	.LFB35
 6131 012c 18000000 		.4byte	.LFE35-.LFB35
 6132 0130 00000000 		.4byte	.LFB36
 6133 0134 18000000 		.4byte	.LFE36-.LFB36
 6134 0138 00000000 		.4byte	.LFB37
 6135 013c 20000000 		.4byte	.LFE37-.LFB37
 6136 0140 00000000 		.4byte	.LFB38
 6137 0144 20000000 		.4byte	.LFE38-.LFB38
 6138 0148 00000000 		.4byte	.LFB39
 6139 014c 2C000000 		.4byte	.LFE39-.LFB39
 6140 0150 00000000 		.4byte	.LFB40
 6141 0154 84000000 		.4byte	.LFE40-.LFB40
 6142 0158 00000000 		.4byte	.LFB41
 6143 015c 100A0000 		.4byte	.LFE41-.LFB41
 6144 0160 00000000 		.4byte	.LFB42
 6145 0164 2C000000 		.4byte	.LFE42-.LFB42
 6146 0168 00000000 		.4byte	.LFB43
 6147 016c 20000000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 154


 6148 0170 00000000 		.4byte	.LFB44
 6149 0174 20000000 		.4byte	.LFE44-.LFB44
 6150 0178 00000000 		.4byte	.LFB45
 6151 017c 20000000 		.4byte	.LFE45-.LFB45
 6152 0180 00000000 		.4byte	.LFB46
 6153 0184 34000000 		.4byte	.LFE46-.LFB46
 6154 0188 00000000 		.4byte	.LFB47
 6155 018c 34000000 		.4byte	.LFE47-.LFB47
 6156 0190 00000000 		.4byte	.LFB48
 6157 0194 20000000 		.4byte	.LFE48-.LFB48
 6158 0198 00000000 		.4byte	.LFB49
 6159 019c 20000000 		.4byte	.LFE49-.LFB49
 6160 01a0 00000000 		.4byte	.LFB50
 6161 01a4 20000000 		.4byte	.LFE50-.LFB50
 6162 01a8 00000000 		.4byte	.LFB51
 6163 01ac 34000000 		.4byte	.LFE51-.LFB51
 6164 01b0 00000000 		.4byte	.LFB52
 6165 01b4 34000000 		.4byte	.LFE52-.LFB52
 6166 01b8 00000000 		.4byte	.LFB53
 6167 01bc 20000000 		.4byte	.LFE53-.LFB53
 6168 01c0 00000000 		.4byte	0
 6169 01c4 00000000 		.4byte	0
 6170              		.section	.debug_ranges,"",%progbits
 6171              	.Ldebug_ranges0:
 6172 0000 00000000 		.4byte	.LFB0
 6173 0004 24000000 		.4byte	.LFE0
 6174 0008 00000000 		.4byte	.LFB1
 6175 000c 3C000000 		.4byte	.LFE1
 6176 0010 00000000 		.4byte	.LFB2
 6177 0014 18000000 		.4byte	.LFE2
 6178 0018 00000000 		.4byte	.LFB3
 6179 001c 18000000 		.4byte	.LFE3
 6180 0020 00000000 		.4byte	.LFB4
 6181 0024 18010000 		.4byte	.LFE4
 6182 0028 00000000 		.4byte	.LFB5
 6183 002c 2C000000 		.4byte	.LFE5
 6184 0030 00000000 		.4byte	.LFB6
 6185 0034 3C000000 		.4byte	.LFE6
 6186 0038 00000000 		.4byte	.LFB7
 6187 003c 14000000 		.4byte	.LFE7
 6188 0040 00000000 		.4byte	.LFB8
 6189 0044 58000000 		.4byte	.LFE8
 6190 0048 00000000 		.4byte	.LFB9
 6191 004c 20000000 		.4byte	.LFE9
 6192 0050 00000000 		.4byte	.LFB10
 6193 0054 20000000 		.4byte	.LFE10
 6194 0058 00000000 		.4byte	.LFB11
 6195 005c 20000000 		.4byte	.LFE11
 6196 0060 00000000 		.4byte	.LFB12
 6197 0064 20000000 		.4byte	.LFE12
 6198 0068 00000000 		.4byte	.LFB13
 6199 006c 20000000 		.4byte	.LFE13
 6200 0070 00000000 		.4byte	.LFB14
 6201 0074 20000000 		.4byte	.LFE14
 6202 0078 00000000 		.4byte	.LFB15
 6203 007c 58000000 		.4byte	.LFE15
 6204 0080 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 155


 6205 0084 58000000 		.4byte	.LFE16
 6206 0088 00000000 		.4byte	.LFB17
 6207 008c 58000000 		.4byte	.LFE17
 6208 0090 00000000 		.4byte	.LFB18
 6209 0094 58000000 		.4byte	.LFE18
 6210 0098 00000000 		.4byte	.LFB19
 6211 009c 58000000 		.4byte	.LFE19
 6212 00a0 00000000 		.4byte	.LFB20
 6213 00a4 58000000 		.4byte	.LFE20
 6214 00a8 00000000 		.4byte	.LFB21
 6215 00ac 58000000 		.4byte	.LFE21
 6216 00b0 00000000 		.4byte	.LFB22
 6217 00b4 58000000 		.4byte	.LFE22
 6218 00b8 00000000 		.4byte	.LFB23
 6219 00bc 18000000 		.4byte	.LFE23
 6220 00c0 00000000 		.4byte	.LFB24
 6221 00c4 18000000 		.4byte	.LFE24
 6222 00c8 00000000 		.4byte	.LFB25
 6223 00cc 18000000 		.4byte	.LFE25
 6224 00d0 00000000 		.4byte	.LFB26
 6225 00d4 18000000 		.4byte	.LFE26
 6226 00d8 00000000 		.4byte	.LFB27
 6227 00dc 18000000 		.4byte	.LFE27
 6228 00e0 00000000 		.4byte	.LFB28
 6229 00e4 18000000 		.4byte	.LFE28
 6230 00e8 00000000 		.4byte	.LFB29
 6231 00ec 18000000 		.4byte	.LFE29
 6232 00f0 00000000 		.4byte	.LFB30
 6233 00f4 18000000 		.4byte	.LFE30
 6234 00f8 00000000 		.4byte	.LFB31
 6235 00fc 18000000 		.4byte	.LFE31
 6236 0100 00000000 		.4byte	.LFB32
 6237 0104 18000000 		.4byte	.LFE32
 6238 0108 00000000 		.4byte	.LFB33
 6239 010c 18000000 		.4byte	.LFE33
 6240 0110 00000000 		.4byte	.LFB34
 6241 0114 18000000 		.4byte	.LFE34
 6242 0118 00000000 		.4byte	.LFB35
 6243 011c 18000000 		.4byte	.LFE35
 6244 0120 00000000 		.4byte	.LFB36
 6245 0124 18000000 		.4byte	.LFE36
 6246 0128 00000000 		.4byte	.LFB37
 6247 012c 20000000 		.4byte	.LFE37
 6248 0130 00000000 		.4byte	.LFB38
 6249 0134 20000000 		.4byte	.LFE38
 6250 0138 00000000 		.4byte	.LFB39
 6251 013c 2C000000 		.4byte	.LFE39
 6252 0140 00000000 		.4byte	.LFB40
 6253 0144 84000000 		.4byte	.LFE40
 6254 0148 00000000 		.4byte	.LFB41
 6255 014c 100A0000 		.4byte	.LFE41
 6256 0150 00000000 		.4byte	.LFB42
 6257 0154 2C000000 		.4byte	.LFE42
 6258 0158 00000000 		.4byte	.LFB43
 6259 015c 20000000 		.4byte	.LFE43
 6260 0160 00000000 		.4byte	.LFB44
 6261 0164 20000000 		.4byte	.LFE44
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 156


 6262 0168 00000000 		.4byte	.LFB45
 6263 016c 20000000 		.4byte	.LFE45
 6264 0170 00000000 		.4byte	.LFB46
 6265 0174 34000000 		.4byte	.LFE46
 6266 0178 00000000 		.4byte	.LFB47
 6267 017c 34000000 		.4byte	.LFE47
 6268 0180 00000000 		.4byte	.LFB48
 6269 0184 20000000 		.4byte	.LFE48
 6270 0188 00000000 		.4byte	.LFB49
 6271 018c 20000000 		.4byte	.LFE49
 6272 0190 00000000 		.4byte	.LFB50
 6273 0194 20000000 		.4byte	.LFE50
 6274 0198 00000000 		.4byte	.LFB51
 6275 019c 34000000 		.4byte	.LFE51
 6276 01a0 00000000 		.4byte	.LFB52
 6277 01a4 34000000 		.4byte	.LFE52
 6278 01a8 00000000 		.4byte	.LFB53
 6279 01ac 20000000 		.4byte	.LFE53
 6280 01b0 00000000 		.4byte	0
 6281 01b4 00000000 		.4byte	0
 6282              		.section	.debug_line,"",%progbits
 6283              	.Ldebug_line0:
 6284 0000 72050000 		.section	.debug_str,"MS",%progbits,1
 6284      02004900 
 6284      00000201 
 6284      FB0E0D00 
 6284      01010101 
 6285              	.LASF10:
 6286 0000 75696E74 		.ascii	"uint16\000"
 6286      313600
 6287              	.LASF87:
 6288 0007 5254435F 		.ascii	"RTC_WriteDSTStartMonth\000"
 6288      57726974 
 6288      65445354 
 6288      53746172 
 6288      744D6F6E 
 6289              	.LASF92:
 6290 001e 5254435F 		.ascii	"RTC_WriteDSTStopMonth\000"
 6290      57726974 
 6290      65445354 
 6290      53746F70 
 6290      4D6F6E74 
 6291              	.LASF112:
 6292 0034 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC.c\000"
 6292      72617465 
 6292      645F536F 
 6292      75726365 
 6292      5C50536F 
 6293              	.LASF100:
 6294 0051 5254435F 		.ascii	"RTC_dstModeType\000"
 6294      6473744D 
 6294      6F646554 
 6294      79706500 
 6295              	.LASF57:
 6296 0061 5254435F 		.ascii	"RTC_WriteAlarmDayOfWeek\000"
 6296      57726974 
 6296      65416C61 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 157


 6296      726D4461 
 6296      794F6657 
 6297              	.LASF113:
 6298 0079 433A5C55 		.ascii	"C:\\Users\\krist\\Documents\\GitHub\\P4_Vertical_fa"
 6298      73657273 
 6298      5C6B7269 
 6298      73745C44 
 6298      6F63756D 
 6299 00a7 726D5C52 		.ascii	"rm\\RTOS_TEMPLATE-master\\PlanteModul.cydsn\000"
 6299      544F535F 
 6299      54454D50 
 6299      4C415445 
 6299      2D6D6173 
 6300              	.LASF86:
 6301 00d1 5254435F 		.ascii	"RTC_WriteDSTStartDayOfMonth\000"
 6301      57726974 
 6301      65445354 
 6301      53746172 
 6301      74446179 
 6302              	.LASF111:
 6303 00ed 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6303      43313120 
 6303      352E342E 
 6303      31203230 
 6303      31363036 
 6304 0120 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 6304      20726576 
 6304      6973696F 
 6304      6E203233 
 6304      37373135 
 6305 0153 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 6305      66756E63 
 6305      74696F6E 
 6305      2D736563 
 6305      74696F6E 
 6306              	.LASF30:
 6307 017b 5254435F 		.ascii	"RTC_DisableInt\000"
 6307      44697361 
 6307      626C6549 
 6307      6E7400
 6308              	.LASF34:
 6309 018a 5254435F 		.ascii	"RTC_Init\000"
 6309      496E6974 
 6309      00
 6310              	.LASF29:
 6311 0193 5254435F 		.ascii	"RTC_EnableInt\000"
 6311      456E6162 
 6311      6C65496E 
 6311      7400
 6312              	.LASF7:
 6313 01a1 6C6F6E67 		.ascii	"long long unsigned int\000"
 6313      206C6F6E 
 6313      6720756E 
 6313      7369676E 
 6313      65642069 
 6314              	.LASF107:
 6315 01b8 5254435F 		.ascii	"RTC_alarmCurStatus\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 158


 6315      616C6172 
 6315      6D437572 
 6315      53746174 
 6315      757300
 6316              	.LASF17:
 6317 01cb 486F7572 		.ascii	"Hour\000"
 6317      00
 6318              	.LASF94:
 6319 01d0 5254435F 		.ascii	"RTC_WriteDSTStopWeek\000"
 6319      57726974 
 6319      65445354 
 6319      53746F70 
 6319      5765656B 
 6320              	.LASF102:
 6321 01e5 5254435F 		.ascii	"RTC_dstTimeDateStop\000"
 6321      64737454 
 6321      696D6544 
 6321      61746553 
 6321      746F7000 
 6322              	.LASF51:
 6323 01f9 5254435F 		.ascii	"RTC_WriteAlarmSecond\000"
 6323      57726974 
 6323      65416C61 
 6323      726D5365 
 6323      636F6E64 
 6324              	.LASF93:
 6325 020e 5254435F 		.ascii	"RTC_WriteDSTStopDayOfWeek\000"
 6325      57726974 
 6325      65445354 
 6325      53746F70 
 6325      4461794F 
 6326              	.LASF95:
 6327 0228 5254435F 		.ascii	"RTC_WriteDSTOffset\000"
 6327      57726974 
 6327      65445354 
 6327      4F666673 
 6327      657400
 6328              	.LASF24:
 6329 023b 5765656B 		.ascii	"Week\000"
 6329      00
 6330              	.LASF54:
 6331 0240 5254435F 		.ascii	"RTC_WriteAlarmDayOfMonth\000"
 6331      57726974 
 6331      65416C61 
 6331      726D4461 
 6331      794F664D 
 6332              	.LASF53:
 6333 0259 5254435F 		.ascii	"RTC_WriteAlarmHour\000"
 6333      57726974 
 6333      65416C61 
 6333      726D486F 
 6333      757200
 6334              	.LASF6:
 6335 026c 6C6F6E67 		.ascii	"long long int\000"
 6335      206C6F6E 
 6335      6720696E 
 6335      7400
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 159


 6336              	.LASF0:
 6337 027a 7369676E 		.ascii	"signed char\000"
 6337      65642063 
 6337      68617200 
 6338              	.LASF104:
 6339 0286 5254435F 		.ascii	"RTC_dstStartStatus\000"
 6339      64737453 
 6339      74617274 
 6339      53746174 
 6339      757300
 6340              	.LASF71:
 6341 0299 5254435F 		.ascii	"RTC_ReadAlarmMonth\000"
 6341      52656164 
 6341      416C6172 
 6341      6D4D6F6E 
 6341      746800
 6342              	.LASF31:
 6343 02ac 696E7465 		.ascii	"interruptState\000"
 6343      72727570 
 6343      74537461 
 6343      746500
 6344              	.LASF106:
 6345 02bb 5254435F 		.ascii	"RTC_alarmCfgMask\000"
 6345      616C6172 
 6345      6D436667 
 6345      4D61736B 
 6345      00
 6346              	.LASF69:
 6347 02cc 5254435F 		.ascii	"RTC_ReadAlarmHour\000"
 6347      52656164 
 6347      416C6172 
 6347      6D486F75 
 6347      7200
 6348              	.LASF65:
 6349 02de 5254435F 		.ascii	"RTC_ReadMonth\000"
 6349      52656164 
 6349      4D6F6E74 
 6349      6800
 6350              	.LASF28:
 6351 02ec 5254435F 		.ascii	"RTC_Start\000"
 6351      53746172 
 6351      7400
 6352              	.LASF97:
 6353 02f6 5254435F 		.ascii	"RTC_initVar\000"
 6353      696E6974 
 6353      56617200 
 6354              	.LASF50:
 6355 0302 79656172 		.ascii	"year\000"
 6355      00
 6356              	.LASF61:
 6357 0307 5254435F 		.ascii	"RTC_ReadSecond\000"
 6357      52656164 
 6357      5365636F 
 6357      6E6400
 6358              	.LASF4:
 6359 0316 6C6F6E67 		.ascii	"long int\000"
 6359      20696E74 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 160


 6359      00
 6360              	.LASF21:
 6361 031f 4D6F6E74 		.ascii	"Month\000"
 6361      6800
 6362              	.LASF55:
 6363 0325 5254435F 		.ascii	"RTC_WriteAlarmMonth\000"
 6363      57726974 
 6363      65416C61 
 6363      726D4D6F 
 6363      6E746800 
 6364              	.LASF37:
 6365 0339 5254435F 		.ascii	"RTC_WriteTime\000"
 6365      57726974 
 6365      6554696D 
 6365      6500
 6366              	.LASF9:
 6367 0347 75696E74 		.ascii	"uint8\000"
 6367      3800
 6368              	.LASF109:
 6369 034d 5254435F 		.ascii	"RTC_statusDateTime\000"
 6369      73746174 
 6369      75734461 
 6369      74655469 
 6369      6D6500
 6370              	.LASF13:
 6371 0360 646F7562 		.ascii	"double\000"
 6371      6C6500
 6372              	.LASF60:
 6373 0367 5254435F 		.ascii	"RTC_ReadTime\000"
 6373      52656164 
 6373      54696D65 
 6373      00
 6374              	.LASF11:
 6375 0374 75696E74 		.ascii	"uint32\000"
 6375      333200
 6376              	.LASF26:
 6377 037b 6C6F6E67 		.ascii	"long double\000"
 6377      20646F75 
 6377      626C6500 
 6378              	.LASF76:
 6379 0387 6D61736B 		.ascii	"mask\000"
 6379      00
 6380              	.LASF36:
 6381 038c 5254435F 		.ascii	"RTC_Enable\000"
 6381      456E6162 
 6381      6C6500
 6382              	.LASF98:
 6383 0397 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 6383      616C6172 
 6383      6D436667 
 6383      54696D65 
 6383      44617465 
 6384              	.LASF48:
 6385 03ac 6D6F6E74 		.ascii	"month\000"
 6385      6800
 6386              	.LASF58:
 6387 03b2 5254435F 		.ascii	"RTC_WriteAlarmDayOfYear\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 161


 6387      57726974 
 6387      65416C61 
 6387      726D4461 
 6387      794F6659 
 6388              	.LASF8:
 6389 03ca 756E7369 		.ascii	"unsigned int\000"
 6389      676E6564 
 6389      20696E74 
 6389      00
 6390              	.LASF5:
 6391 03d7 6C6F6E67 		.ascii	"long unsigned int\000"
 6391      20756E73 
 6391      69676E65 
 6391      6420696E 
 6391      7400
 6392              	.LASF19:
 6393 03e9 4461794F 		.ascii	"DayOfMonth\000"
 6393      664D6F6E 
 6393      746800
 6394              	.LASF3:
 6395 03f4 73686F72 		.ascii	"short unsigned int\000"
 6395      7420756E 
 6395      7369676E 
 6395      65642069 
 6395      6E7400
 6396              	.LASF22:
 6397 0407 59656172 		.ascii	"Year\000"
 6397      00
 6398              	.LASF82:
 6399 040c 5254435F 		.ascii	"RTC_alarmCfgMaskTemp\000"
 6399      616C6172 
 6399      6D436667 
 6399      4D61736B 
 6399      54656D70 
 6400              	.LASF56:
 6401 0421 5254435F 		.ascii	"RTC_WriteAlarmYear\000"
 6401      57726974 
 6401      65416C61 
 6401      726D5965 
 6401      617200
 6402              	.LASF68:
 6403 0434 5254435F 		.ascii	"RTC_ReadAlarmMinute\000"
 6403      52656164 
 6403      416C6172 
 6403      6D4D696E 
 6403      75746500 
 6404              	.LASF33:
 6405 0448 6461794F 		.ascii	"dayOfWeek\000"
 6405      66576565 
 6405      6B00
 6406              	.LASF79:
 6407 0452 5254435F 		.ascii	"RTC_monthTemplate\000"
 6407      6D6F6E74 
 6407      6854656D 
 6407      706C6174 
 6407      6500
 6408              	.LASF103:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 162


 6409 0464 5254435F 		.ascii	"RTC_dstOffsetMin\000"
 6409      6473744F 
 6409      66667365 
 6409      744D696E 
 6409      00
 6410              	.LASF16:
 6411 0475 72656733 		.ascii	"reg32\000"
 6411      3200
 6412              	.LASF110:
 6413 047b 5254435F 		.ascii	"RTC_daysInMonths\000"
 6413      64617973 
 6413      496E4D6F 
 6413      6E746873 
 6413      00
 6414              	.LASF27:
 6415 048c 73697A65 		.ascii	"sizetype\000"
 6415      74797065 
 6415      00
 6416              	.LASF43:
 6417 0495 5254435F 		.ascii	"RTC_WriteHour\000"
 6417      57726974 
 6417      65486F75 
 6417      7200
 6418              	.LASF80:
 6419 04a3 5254435F 		.ascii	"RTC_DSTDateConversion\000"
 6419      44535444 
 6419      61746543 
 6419      6F6E7665 
 6419      7273696F 
 6420              	.LASF23:
 6421 04b9 5254435F 		.ascii	"RTC_TIME_DATE\000"
 6421      54494D45 
 6421      5F444154 
 6421      4500
 6422              	.LASF91:
 6423 04c7 5254435F 		.ascii	"RTC_WriteDSTStopDayOfMonth\000"
 6423      57726974 
 6423      65445354 
 6423      53746F70 
 6423      4461794F 
 6424              	.LASF39:
 6425 04e2 74696D65 		.ascii	"timeDate\000"
 6425      44617465 
 6425      00
 6426              	.LASF63:
 6427 04eb 5254435F 		.ascii	"RTC_ReadHour\000"
 6427      52656164 
 6427      486F7572 
 6427      00
 6428              	.LASF44:
 6429 04f8 686F7572 		.ascii	"hour\000"
 6429      00
 6430              	.LASF70:
 6431 04fd 5254435F 		.ascii	"RTC_ReadAlarmDayOfMonth\000"
 6431      52656164 
 6431      416C6172 
 6431      6D446179 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 163


 6431      4F664D6F 
 6432              	.LASF77:
 6433 0515 5254435F 		.ascii	"RTC_WriteIntervalMask\000"
 6433      57726974 
 6433      65496E74 
 6433      65727661 
 6433      6C4D6173 
 6434              	.LASF12:
 6435 052b 666C6F61 		.ascii	"float\000"
 6435      7400
 6436              	.LASF46:
 6437 0531 6461794F 		.ascii	"dayOfMonth\000"
 6437      664D6F6E 
 6437      746800
 6438              	.LASF115:
 6439 053c 5254435F 		.ascii	"RTC_DayOfWeek\000"
 6439      4461794F 
 6439      66576565 
 6439      6B00
 6440              	.LASF41:
 6441 054a 5254435F 		.ascii	"RTC_WriteMinute\000"
 6441      57726974 
 6441      654D696E 
 6441      75746500 
 6442              	.LASF90:
 6443 055a 5254435F 		.ascii	"RTC_WriteDSTStopHour\000"
 6443      57726974 
 6443      65445354 
 6443      53746F70 
 6443      486F7572 
 6444              	.LASF15:
 6445 056f 72656738 		.ascii	"reg8\000"
 6445      00
 6446              	.LASF1:
 6447 0574 756E7369 		.ascii	"unsigned char\000"
 6447      676E6564 
 6447      20636861 
 6447      7200
 6448              	.LASF99:
 6449 0582 5254435F 		.ascii	"RTC_currentTimeDate\000"
 6449      63757272 
 6449      656E7454 
 6449      696D6544 
 6449      61746500 
 6450              	.LASF40:
 6451 0596 7365636F 		.ascii	"second\000"
 6451      6E6400
 6452              	.LASF108:
 6453 059d 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 6453      696E7465 
 6453      7276616C 
 6453      4366674D 
 6453      61736B00 
 6454              	.LASF2:
 6455 05b1 73686F72 		.ascii	"short int\000"
 6455      7420696E 
 6455      7400
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 164


 6456              	.LASF35:
 6457 05bb 5254435F 		.ascii	"RTC_Stop\000"
 6457      53746F70 
 6457      00
 6458              	.LASF18:
 6459 05c4 4461794F 		.ascii	"DayOfWeek\000"
 6459      66576565 
 6459      6B00
 6460              	.LASF25:
 6461 05ce 5254435F 		.ascii	"RTC_DSTIME\000"
 6461      44535449 
 6461      4D4500
 6462              	.LASF83:
 6463 05d9 5254435F 		.ascii	"RTC_WriteDSTMode\000"
 6463      57726974 
 6463      65445354 
 6463      4D6F6465 
 6463      00
 6464              	.LASF59:
 6465 05ea 6461794F 		.ascii	"dayOfYear\000"
 6465      66596561 
 6465      7200
 6466              	.LASF14:
 6467 05f4 63686172 		.ascii	"char\000"
 6467      00
 6468              	.LASF84:
 6469 05f9 6D6F6465 		.ascii	"mode\000"
 6469      00
 6470              	.LASF67:
 6471 05fe 5254435F 		.ascii	"RTC_ReadAlarmSecond\000"
 6471      52656164 
 6471      416C6172 
 6471      6D536563 
 6471      6F6E6400 
 6472              	.LASF64:
 6473 0612 5254435F 		.ascii	"RTC_ReadDayOfMonth\000"
 6473      52656164 
 6473      4461794F 
 6473      664D6F6E 
 6473      746800
 6474              	.LASF52:
 6475 0625 5254435F 		.ascii	"RTC_WriteAlarmMinute\000"
 6475      57726974 
 6475      65416C61 
 6475      726D4D69 
 6475      6E757465 
 6476              	.LASF96:
 6477 063a 6F666673 		.ascii	"offset\000"
 6477      657400
 6478              	.LASF101:
 6479 0641 5254435F 		.ascii	"RTC_dstTimeDateStart\000"
 6479      64737454 
 6479      696D6544 
 6479      61746553 
 6479      74617274 
 6480              	.LASF74:
 6481 0656 5254435F 		.ascii	"RTC_ReadAlarmDayOfYear\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 165


 6481      52656164 
 6481      416C6172 
 6481      6D446179 
 6481      4F665965 
 6482              	.LASF49:
 6483 066d 5254435F 		.ascii	"RTC_WriteYear\000"
 6483      57726974 
 6483      65596561 
 6483      7200
 6484              	.LASF85:
 6485 067b 5254435F 		.ascii	"RTC_WriteDSTStartHour\000"
 6485      57726974 
 6485      65445354 
 6485      53746172 
 6485      74486F75 
 6486              	.LASF45:
 6487 0691 5254435F 		.ascii	"RTC_WriteDayOfMonth\000"
 6487      57726974 
 6487      65446179 
 6487      4F664D6F 
 6487      6E746800 
 6488              	.LASF75:
 6489 06a5 5254435F 		.ascii	"RTC_WriteAlarmMask\000"
 6489      57726974 
 6489      65416C61 
 6489      726D4D61 
 6489      736B00
 6490              	.LASF47:
 6491 06b8 5254435F 		.ascii	"RTC_WriteMonth\000"
 6491      57726974 
 6491      654D6F6E 
 6491      746800
 6492              	.LASF81:
 6493 06c7 5254435F 		.ascii	"RTC_SetInitValues\000"
 6493      53657449 
 6493      6E697456 
 6493      616C7565 
 6493      7300
 6494              	.LASF42:
 6495 06d9 6D696E75 		.ascii	"minute\000"
 6495      746500
 6496              	.LASF88:
 6497 06e0 5254435F 		.ascii	"RTC_WriteDSTStartDayOfWeek\000"
 6497      57726974 
 6497      65445354 
 6497      53746172 
 6497      74446179 
 6498              	.LASF62:
 6499 06fb 5254435F 		.ascii	"RTC_ReadMinute\000"
 6499      52656164 
 6499      4D696E75 
 6499      746500
 6500              	.LASF73:
 6501 070a 5254435F 		.ascii	"RTC_ReadAlarmDayOfWeek\000"
 6501      52656164 
 6501      416C6172 
 6501      6D446179 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccOIbftP.s 			page 166


 6501      4F665765 
 6502              	.LASF89:
 6503 0721 5254435F 		.ascii	"RTC_WriteDSTStartWeek\000"
 6503      57726974 
 6503      65445354 
 6503      53746172 
 6503      74576565 
 6504              	.LASF66:
 6505 0737 5254435F 		.ascii	"RTC_ReadYear\000"
 6505      52656164 
 6505      59656172 
 6505      00
 6506              	.LASF78:
 6507 0744 73746174 		.ascii	"status\000"
 6507      757300
 6508              	.LASF114:
 6509 074b 5254435F 		.ascii	"RTC_ReadStatus\000"
 6509      52656164 
 6509      53746174 
 6509      757300
 6510              	.LASF72:
 6511 075a 5254435F 		.ascii	"RTC_ReadAlarmYear\000"
 6511      52656164 
 6511      416C6172 
 6511      6D596561 
 6511      7200
 6512              	.LASF32:
 6513 076c 7765656B 		.ascii	"week\000"
 6513      00
 6514              	.LASF105:
 6515 0771 5254435F 		.ascii	"RTC_dstStopStatus\000"
 6515      64737453 
 6515      746F7053 
 6515      74617475 
 6515      7300
 6516              	.LASF38:
 6517 0783 5254435F 		.ascii	"RTC_WriteSecond\000"
 6517      57726974 
 6517      65536563 
 6517      6F6E6400 
 6518              	.LASF20:
 6519 0793 4461794F 		.ascii	"DayOfYear\000"
 6519      66596561 
 6519      7200
 6520              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
