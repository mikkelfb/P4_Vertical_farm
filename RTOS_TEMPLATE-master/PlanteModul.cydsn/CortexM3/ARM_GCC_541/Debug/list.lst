ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"list.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	DS18x8_Sensor,32,4
  20              		.comm	DS18x8_DataReady,1,1
  21              		.section	.text.vListInitialise,"ax",%progbits
  22              		.align	2
  23              		.global	vListInitialise
  24              		.thumb
  25              		.thumb_func
  26              		.type	vListInitialise, %function
  27              	vListInitialise:
  28              	.LFB68:
  29              		.file 1 "Source\\list.c"
   1:Source/list.c **** /*
   2:Source/list.c ****  * FreeRTOS Kernel V10.3.1
   3:Source/list.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Source/list.c ****  *
   5:Source/list.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Source/list.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Source/list.c ****  * the Software without restriction, including without limitation the rights to
   8:Source/list.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Source/list.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Source/list.c ****  * subject to the following conditions:
  11:Source/list.c ****  *
  12:Source/list.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Source/list.c ****  * copies or substantial portions of the Software.
  14:Source/list.c ****  *
  15:Source/list.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Source/list.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Source/list.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Source/list.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Source/list.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Source/list.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Source/list.c ****  *
  22:Source/list.c ****  * http://www.FreeRTOS.org
  23:Source/list.c ****  * http://aws.amazon.com/freertos
  24:Source/list.c ****  *
  25:Source/list.c ****  * 1 tab == 4 spaces!
  26:Source/list.c ****  */
  27:Source/list.c **** 
  28:Source/list.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 2


  29:Source/list.c **** #include <stdlib.h>
  30:Source/list.c **** #include "FreeRTOS.h"
  31:Source/list.c **** #include "list.h"
  32:Source/list.c **** 
  33:Source/list.c **** /*-----------------------------------------------------------
  34:Source/list.c ****  * PUBLIC LIST API documented in list.h
  35:Source/list.c ****  *----------------------------------------------------------*/
  36:Source/list.c **** 
  37:Source/list.c **** void vListInitialise( List_t * const pxList )
  38:Source/list.c **** {
  30              		.loc 1 38 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35 0000 80B4     		push	{r7}
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  39:Source/list.c **** 	/* The list structure contains a list item which is used to mark the
  40:Source/list.c **** 	end of the list.  To initialise the list the list end is inserted
  41:Source/list.c **** 	as the only list entry. */
  42:Source/list.c **** 	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini lis
  43              		.loc 1 42 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 03F10802 		add	r2, r3, #8
  46 000e 7B68     		ldr	r3, [r7, #4]
  47 0010 5A60     		str	r2, [r3, #4]
  43:Source/list.c **** 
  44:Source/list.c **** 	/* The list end value is the highest possible value in the list to
  45:Source/list.c **** 	ensure it remains at the end of the list. */
  46:Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  48              		.loc 1 46 0
  49 0012 7B68     		ldr	r3, [r7, #4]
  50 0014 4FF0FF32 		mov	r2, #-1
  51 0018 9A60     		str	r2, [r3, #8]
  47:Source/list.c **** 
  48:Source/list.c **** 	/* The list end next and previous pointers point to itself so we know
  49:Source/list.c **** 	when the list is empty. */
  50:Source/list.c **** 	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mi
  52              		.loc 1 50 0
  53 001a 7B68     		ldr	r3, [r7, #4]
  54 001c 03F10802 		add	r2, r3, #8
  55 0020 7B68     		ldr	r3, [r7, #4]
  56 0022 DA60     		str	r2, [r3, #12]
  51:Source/list.c **** 	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The
  57              		.loc 1 51 0
  58 0024 7B68     		ldr	r3, [r7, #4]
  59 0026 03F10802 		add	r2, r3, #8
  60 002a 7B68     		ldr	r3, [r7, #4]
  61 002c 1A61     		str	r2, [r3, #16]
  52:Source/list.c **** 
  53:Source/list.c **** 	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 3


  62              		.loc 1 53 0
  63 002e 7B68     		ldr	r3, [r7, #4]
  64 0030 0022     		movs	r2, #0
  65 0032 1A60     		str	r2, [r3]
  54:Source/list.c **** 
  55:Source/list.c **** 	/* Write known values into the list if
  56:Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  57:Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  58:Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  59:Source/list.c **** }
  66              		.loc 1 59 0
  67 0034 00BF     		nop
  68 0036 0C37     		adds	r7, r7, #12
  69              		.cfi_def_cfa_offset 4
  70 0038 BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 003a 80BC     		pop	{r7}
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 003c 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE68:
  79              		.size	vListInitialise, .-vListInitialise
  80 003e 00BF     		.section	.text.vListInitialiseItem,"ax",%progbits
  81              		.align	2
  82              		.global	vListInitialiseItem
  83              		.thumb
  84              		.thumb_func
  85              		.type	vListInitialiseItem, %function
  86              	vListInitialiseItem:
  87              	.LFB69:
  60:Source/list.c **** /*-----------------------------------------------------------*/
  61:Source/list.c **** 
  62:Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
  63:Source/list.c **** {
  88              		.loc 1 63 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 8
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93 0000 80B4     		push	{r7}
  94              		.cfi_def_cfa_offset 4
  95              		.cfi_offset 7, -4
  96 0002 83B0     		sub	sp, sp, #12
  97              		.cfi_def_cfa_offset 16
  98 0004 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
 100 0006 7860     		str	r0, [r7, #4]
  64:Source/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
  65:Source/list.c **** 	pxItem->pxContainer = NULL;
 101              		.loc 1 65 0
 102 0008 7B68     		ldr	r3, [r7, #4]
 103 000a 0022     		movs	r2, #0
 104 000c 1A61     		str	r2, [r3, #16]
  66:Source/list.c **** 
  67:Source/list.c **** 	/* Write known values into the list item if
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 4


  68:Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  69:Source/list.c **** 	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  70:Source/list.c **** 	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  71:Source/list.c **** }
 105              		.loc 1 71 0
 106 000e 00BF     		nop
 107 0010 0C37     		adds	r7, r7, #12
 108              		.cfi_def_cfa_offset 4
 109 0012 BD46     		mov	sp, r7
 110              		.cfi_def_cfa_register 13
 111              		@ sp needed
 112 0014 80BC     		pop	{r7}
 113              		.cfi_restore 7
 114              		.cfi_def_cfa_offset 0
 115 0016 7047     		bx	lr
 116              		.cfi_endproc
 117              	.LFE69:
 118              		.size	vListInitialiseItem, .-vListInitialiseItem
 119              		.section	.text.vListInsertEnd,"ax",%progbits
 120              		.align	2
 121              		.global	vListInsertEnd
 122              		.thumb
 123              		.thumb_func
 124              		.type	vListInsertEnd, %function
 125              	vListInsertEnd:
 126              	.LFB70:
  72:Source/list.c **** /*-----------------------------------------------------------*/
  73:Source/list.c **** 
  74:Source/list.c **** void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
  75:Source/list.c **** {
 127              		.loc 1 75 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 16
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132 0000 80B4     		push	{r7}
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 7, -4
 135 0002 85B0     		sub	sp, sp, #20
 136              		.cfi_def_cfa_offset 24
 137 0004 00AF     		add	r7, sp, #0
 138              		.cfi_def_cfa_register 7
 139 0006 7860     		str	r0, [r7, #4]
 140 0008 3960     		str	r1, [r7]
  76:Source/list.c **** ListItem_t * const pxIndex = pxList->pxIndex;
 141              		.loc 1 76 0
 142 000a 7B68     		ldr	r3, [r7, #4]
 143 000c 5B68     		ldr	r3, [r3, #4]
 144 000e FB60     		str	r3, [r7, #12]
  77:Source/list.c **** 
  78:Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
  79:Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
  80:Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
  81:Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
  82:Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
  83:Source/list.c **** 
  84:Source/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 5


  85:Source/list.c **** 	makes the new list item the last item to be removed by a call to
  86:Source/list.c **** 	listGET_OWNER_OF_NEXT_ENTRY(). */
  87:Source/list.c **** 	pxNewListItem->pxNext = pxIndex;
 145              		.loc 1 87 0
 146 0010 3B68     		ldr	r3, [r7]
 147 0012 FA68     		ldr	r2, [r7, #12]
 148 0014 5A60     		str	r2, [r3, #4]
  88:Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 149              		.loc 1 88 0
 150 0016 FB68     		ldr	r3, [r7, #12]
 151 0018 9A68     		ldr	r2, [r3, #8]
 152 001a 3B68     		ldr	r3, [r7]
 153 001c 9A60     		str	r2, [r3, #8]
  89:Source/list.c **** 
  90:Source/list.c **** 	/* Only used during decision coverage testing. */
  91:Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
  92:Source/list.c **** 
  93:Source/list.c **** 	pxIndex->pxPrevious->pxNext = pxNewListItem;
 154              		.loc 1 93 0
 155 001e FB68     		ldr	r3, [r7, #12]
 156 0020 9B68     		ldr	r3, [r3, #8]
 157 0022 3A68     		ldr	r2, [r7]
 158 0024 5A60     		str	r2, [r3, #4]
  94:Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
 159              		.loc 1 94 0
 160 0026 FB68     		ldr	r3, [r7, #12]
 161 0028 3A68     		ldr	r2, [r7]
 162 002a 9A60     		str	r2, [r3, #8]
  95:Source/list.c **** 
  96:Source/list.c **** 	/* Remember which list the item is in. */
  97:Source/list.c **** 	pxNewListItem->pxContainer = pxList;
 163              		.loc 1 97 0
 164 002c 3B68     		ldr	r3, [r7]
 165 002e 7A68     		ldr	r2, [r7, #4]
 166 0030 1A61     		str	r2, [r3, #16]
  98:Source/list.c **** 
  99:Source/list.c **** 	( pxList->uxNumberOfItems )++;
 167              		.loc 1 99 0
 168 0032 7B68     		ldr	r3, [r7, #4]
 169 0034 1B68     		ldr	r3, [r3]
 170 0036 5A1C     		adds	r2, r3, #1
 171 0038 7B68     		ldr	r3, [r7, #4]
 172 003a 1A60     		str	r2, [r3]
 100:Source/list.c **** }
 173              		.loc 1 100 0
 174 003c 00BF     		nop
 175 003e 1437     		adds	r7, r7, #20
 176              		.cfi_def_cfa_offset 4
 177 0040 BD46     		mov	sp, r7
 178              		.cfi_def_cfa_register 13
 179              		@ sp needed
 180 0042 80BC     		pop	{r7}
 181              		.cfi_restore 7
 182              		.cfi_def_cfa_offset 0
 183 0044 7047     		bx	lr
 184              		.cfi_endproc
 185              	.LFE70:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 6


 186              		.size	vListInsertEnd, .-vListInsertEnd
 187 0046 00BF     		.section	.text.vListInsert,"ax",%progbits
 188              		.align	2
 189              		.global	vListInsert
 190              		.thumb
 191              		.thumb_func
 192              		.type	vListInsert, %function
 193              	vListInsert:
 194              	.LFB71:
 101:Source/list.c **** /*-----------------------------------------------------------*/
 102:Source/list.c **** 
 103:Source/list.c **** void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
 104:Source/list.c **** {
 195              		.loc 1 104 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 16
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200 0000 80B4     		push	{r7}
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 7, -4
 203 0002 85B0     		sub	sp, sp, #20
 204              		.cfi_def_cfa_offset 24
 205 0004 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
 207 0006 7860     		str	r0, [r7, #4]
 208 0008 3960     		str	r1, [r7]
 105:Source/list.c **** ListItem_t *pxIterator;
 106:Source/list.c **** const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 209              		.loc 1 106 0
 210 000a 3B68     		ldr	r3, [r7]
 211 000c 1B68     		ldr	r3, [r3]
 212 000e BB60     		str	r3, [r7, #8]
 107:Source/list.c **** 
 108:Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 109:Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 110:Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 111:Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 112:Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 113:Source/list.c **** 
 114:Source/list.c **** 	/* Insert the new list item into the list, sorted in xItemValue order.
 115:Source/list.c **** 
 116:Source/list.c **** 	If the list already contains a list item with the same item value then the
 117:Source/list.c **** 	new list item should be placed after it.  This ensures that TCBs which are
 118:Source/list.c **** 	stored in ready lists (all of which have the same xItemValue value) get a
 119:Source/list.c **** 	share of the CPU.  However, if the xItemValue is the same as the back marker
 120:Source/list.c **** 	the iteration loop below will not end.  Therefore the value is checked
 121:Source/list.c **** 	first, and the algorithm slightly modified if necessary. */
 122:Source/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 213              		.loc 1 122 0
 214 0010 BB68     		ldr	r3, [r7, #8]
 215 0012 B3F1FF3F 		cmp	r3, #-1
 216 0016 03D1     		bne	.L5
 123:Source/list.c **** 	{
 124:Source/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 217              		.loc 1 124 0
 218 0018 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 7


 219 001a 1B69     		ldr	r3, [r3, #16]
 220 001c FB60     		str	r3, [r7, #12]
 221 001e 0CE0     		b	.L6
 222              	.L5:
 125:Source/list.c **** 	}
 126:Source/list.c **** 	else
 127:Source/list.c **** 	{
 128:Source/list.c **** 		/* *** NOTE ***********************************************************
 129:Source/list.c **** 		If you find your application is crashing here then likely causes are
 130:Source/list.c **** 		listed below.  In addition see https://www.freertos.org/FAQHelp.html for
 131:Source/list.c **** 		more tips, and ensure configASSERT() is defined!
 132:Source/list.c **** 		https://www.freertos.org/a00110.html#configASSERT
 133:Source/list.c **** 
 134:Source/list.c **** 			1) Stack overflow -
 135:Source/list.c **** 			   see https://www.freertos.org/Stacks-and-stack-overflow-checking.html
 136:Source/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M
 137:Source/list.c **** 			   parts where numerically high priority values denote low actual
 138:Source/list.c **** 			   interrupt priorities, which can seem counter intuitive.  See
 139:Source/list.c **** 			   https://www.freertos.org/RTOS-Cortex-M3-M4.html and the definition
 140:Source/list.c **** 			   of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 141:Source/list.c **** 			   https://www.freertos.org/a00110.html
 142:Source/list.c **** 			3) Calling an API function from within a critical section or when
 143:Source/list.c **** 			   the scheduler is suspended, or calling an API function that does
 144:Source/list.c **** 			   not end in "FromISR" from an interrupt.
 145:Source/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 146:Source/list.c **** 			   before the scheduler has been started (are interrupts firing
 147:Source/list.c **** 			   before vTaskStartScheduler() has been called?).
 148:Source/list.c **** 		**********************************************************************/
 149:Source/list.c **** 
 150:Source/list.c **** 		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValu
 223              		.loc 1 150 0
 224 0020 7B68     		ldr	r3, [r7, #4]
 225 0022 0833     		adds	r3, r3, #8
 226 0024 FB60     		str	r3, [r7, #12]
 227 0026 02E0     		b	.L7
 228              	.L8:
 229              		.loc 1 150 0 is_stmt 0 discriminator 3
 230 0028 FB68     		ldr	r3, [r7, #12]
 231 002a 5B68     		ldr	r3, [r3, #4]
 232 002c FB60     		str	r3, [r7, #12]
 233              	.L7:
 234              		.loc 1 150 0 discriminator 1
 235 002e FB68     		ldr	r3, [r7, #12]
 236 0030 5B68     		ldr	r3, [r3, #4]
 237 0032 1A68     		ldr	r2, [r3]
 238 0034 BB68     		ldr	r3, [r7, #8]
 239 0036 9A42     		cmp	r2, r3
 240 0038 F6D9     		bls	.L8
 241              	.L6:
 151:Source/list.c **** 		{
 152:Source/list.c **** 			/* There is nothing to do here, just iterating to the wanted
 153:Source/list.c **** 			insertion position. */
 154:Source/list.c **** 		}
 155:Source/list.c **** 	}
 156:Source/list.c **** 
 157:Source/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 242              		.loc 1 157 0 is_stmt 1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 8


 243 003a FB68     		ldr	r3, [r7, #12]
 244 003c 5A68     		ldr	r2, [r3, #4]
 245 003e 3B68     		ldr	r3, [r7]
 246 0040 5A60     		str	r2, [r3, #4]
 158:Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 247              		.loc 1 158 0
 248 0042 3B68     		ldr	r3, [r7]
 249 0044 5B68     		ldr	r3, [r3, #4]
 250 0046 3A68     		ldr	r2, [r7]
 251 0048 9A60     		str	r2, [r3, #8]
 159:Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 252              		.loc 1 159 0
 253 004a 3B68     		ldr	r3, [r7]
 254 004c FA68     		ldr	r2, [r7, #12]
 255 004e 9A60     		str	r2, [r3, #8]
 160:Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 256              		.loc 1 160 0
 257 0050 FB68     		ldr	r3, [r7, #12]
 258 0052 3A68     		ldr	r2, [r7]
 259 0054 5A60     		str	r2, [r3, #4]
 161:Source/list.c **** 
 162:Source/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 163:Source/list.c **** 	item later. */
 164:Source/list.c **** 	pxNewListItem->pxContainer = pxList;
 260              		.loc 1 164 0
 261 0056 3B68     		ldr	r3, [r7]
 262 0058 7A68     		ldr	r2, [r7, #4]
 263 005a 1A61     		str	r2, [r3, #16]
 165:Source/list.c **** 
 166:Source/list.c **** 	( pxList->uxNumberOfItems )++;
 264              		.loc 1 166 0
 265 005c 7B68     		ldr	r3, [r7, #4]
 266 005e 1B68     		ldr	r3, [r3]
 267 0060 5A1C     		adds	r2, r3, #1
 268 0062 7B68     		ldr	r3, [r7, #4]
 269 0064 1A60     		str	r2, [r3]
 167:Source/list.c **** }
 270              		.loc 1 167 0
 271 0066 00BF     		nop
 272 0068 1437     		adds	r7, r7, #20
 273              		.cfi_def_cfa_offset 4
 274 006a BD46     		mov	sp, r7
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 006c 80BC     		pop	{r7}
 278              		.cfi_restore 7
 279              		.cfi_def_cfa_offset 0
 280 006e 7047     		bx	lr
 281              		.cfi_endproc
 282              	.LFE71:
 283              		.size	vListInsert, .-vListInsert
 284              		.section	.text.uxListRemove,"ax",%progbits
 285              		.align	2
 286              		.global	uxListRemove
 287              		.thumb
 288              		.thumb_func
 289              		.type	uxListRemove, %function
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 9


 290              	uxListRemove:
 291              	.LFB72:
 168:Source/list.c **** /*-----------------------------------------------------------*/
 169:Source/list.c **** 
 170:Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 171:Source/list.c **** {
 292              		.loc 1 171 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 16
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297 0000 80B4     		push	{r7}
 298              		.cfi_def_cfa_offset 4
 299              		.cfi_offset 7, -4
 300 0002 85B0     		sub	sp, sp, #20
 301              		.cfi_def_cfa_offset 24
 302 0004 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 304 0006 7860     		str	r0, [r7, #4]
 172:Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 173:Source/list.c **** item. */
 174:Source/list.c **** List_t * const pxList = pxItemToRemove->pxContainer;
 305              		.loc 1 174 0
 306 0008 7B68     		ldr	r3, [r7, #4]
 307 000a 1B69     		ldr	r3, [r3, #16]
 308 000c FB60     		str	r3, [r7, #12]
 175:Source/list.c **** 
 176:Source/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 309              		.loc 1 176 0
 310 000e 7B68     		ldr	r3, [r7, #4]
 311 0010 5B68     		ldr	r3, [r3, #4]
 312 0012 7A68     		ldr	r2, [r7, #4]
 313 0014 9268     		ldr	r2, [r2, #8]
 314 0016 9A60     		str	r2, [r3, #8]
 177:Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 315              		.loc 1 177 0
 316 0018 7B68     		ldr	r3, [r7, #4]
 317 001a 9B68     		ldr	r3, [r3, #8]
 318 001c 7A68     		ldr	r2, [r7, #4]
 319 001e 5268     		ldr	r2, [r2, #4]
 320 0020 5A60     		str	r2, [r3, #4]
 178:Source/list.c **** 
 179:Source/list.c **** 	/* Only used during decision coverage testing. */
 180:Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 181:Source/list.c **** 
 182:Source/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 183:Source/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 321              		.loc 1 183 0
 322 0022 FB68     		ldr	r3, [r7, #12]
 323 0024 5A68     		ldr	r2, [r3, #4]
 324 0026 7B68     		ldr	r3, [r7, #4]
 325 0028 9A42     		cmp	r2, r3
 326 002a 03D1     		bne	.L10
 184:Source/list.c **** 	{
 185:Source/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 327              		.loc 1 185 0
 328 002c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 10


 329 002e 9A68     		ldr	r2, [r3, #8]
 330 0030 FB68     		ldr	r3, [r7, #12]
 331 0032 5A60     		str	r2, [r3, #4]
 332              	.L10:
 186:Source/list.c **** 	}
 187:Source/list.c **** 	else
 188:Source/list.c **** 	{
 189:Source/list.c **** 		mtCOVERAGE_TEST_MARKER();
 190:Source/list.c **** 	}
 191:Source/list.c **** 
 192:Source/list.c **** 	pxItemToRemove->pxContainer = NULL;
 333              		.loc 1 192 0
 334 0034 7B68     		ldr	r3, [r7, #4]
 335 0036 0022     		movs	r2, #0
 336 0038 1A61     		str	r2, [r3, #16]
 193:Source/list.c **** 	( pxList->uxNumberOfItems )--;
 337              		.loc 1 193 0
 338 003a FB68     		ldr	r3, [r7, #12]
 339 003c 1B68     		ldr	r3, [r3]
 340 003e 5A1E     		subs	r2, r3, #1
 341 0040 FB68     		ldr	r3, [r7, #12]
 342 0042 1A60     		str	r2, [r3]
 194:Source/list.c **** 
 195:Source/list.c **** 	return pxList->uxNumberOfItems;
 343              		.loc 1 195 0
 344 0044 FB68     		ldr	r3, [r7, #12]
 345 0046 1B68     		ldr	r3, [r3]
 196:Source/list.c **** }
 346              		.loc 1 196 0
 347 0048 1846     		mov	r0, r3
 348 004a 1437     		adds	r7, r7, #20
 349              		.cfi_def_cfa_offset 4
 350 004c BD46     		mov	sp, r7
 351              		.cfi_def_cfa_register 13
 352              		@ sp needed
 353 004e 80BC     		pop	{r7}
 354              		.cfi_restore 7
 355              		.cfi_def_cfa_offset 0
 356 0050 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE72:
 359              		.size	uxListRemove, .-uxListRemove
 360 0052 00BF     		.text
 361              	.Letext0:
 362              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 363              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 364              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 365              		.file 5 "Generated_Source\\PSoC5/DS18x8.h"
 366              		.file 6 ".\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
 367              		.file 7 ".\\Source\\include/list.h"
 368              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 369              		.section	.debug_info,"",%progbits
 370              	.Ldebug_info0:
 371 0000 58030000 		.4byte	0x358
 372 0004 0400     		.2byte	0x4
 373 0006 00000000 		.4byte	.Ldebug_abbrev0
 374 000a 04       		.byte	0x4
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 11


 375 000b 01       		.uleb128 0x1
 376 000c 13000000 		.4byte	.LASF52
 377 0010 0C       		.byte	0xc
 378 0011 E5000000 		.4byte	.LASF53
 379 0015 21020000 		.4byte	.LASF54
 380 0019 00000000 		.4byte	.Ldebug_ranges0+0
 381 001d 00000000 		.4byte	0
 382 0021 00000000 		.4byte	.Ldebug_line0
 383 0025 02       		.uleb128 0x2
 384 0026 04       		.byte	0x4
 385 0027 07       		.byte	0x7
 386 0028 DB010000 		.4byte	.LASF0
 387 002c 03       		.uleb128 0x3
 388 002d 04       		.byte	0x4
 389 002e 05       		.byte	0x5
 390 002f 696E7400 		.ascii	"int\000"
 391 0033 02       		.uleb128 0x2
 392 0034 08       		.byte	0x8
 393 0035 05       		.byte	0x5
 394 0036 B3020000 		.4byte	.LASF1
 395 003a 02       		.uleb128 0x2
 396 003b 08       		.byte	0x8
 397 003c 04       		.byte	0x4
 398 003d 8B020000 		.4byte	.LASF2
 399 0041 02       		.uleb128 0x2
 400 0042 01       		.byte	0x1
 401 0043 06       		.byte	0x6
 402 0044 21030000 		.4byte	.LASF3
 403 0048 02       		.uleb128 0x2
 404 0049 01       		.byte	0x1
 405 004a 08       		.byte	0x8
 406 004b 3A010000 		.4byte	.LASF4
 407 004f 02       		.uleb128 0x2
 408 0050 02       		.byte	0x2
 409 0051 05       		.byte	0x5
 410 0052 D1020000 		.4byte	.LASF5
 411 0056 02       		.uleb128 0x2
 412 0057 02       		.byte	0x2
 413 0058 07       		.byte	0x7
 414 0059 A0020000 		.4byte	.LASF6
 415 005d 04       		.uleb128 0x4
 416 005e D0000000 		.4byte	.LASF8
 417 0062 02       		.byte	0x2
 418 0063 3F       		.byte	0x3f
 419 0064 68000000 		.4byte	0x68
 420 0068 02       		.uleb128 0x2
 421 0069 04       		.byte	0x4
 422 006a 05       		.byte	0x5
 423 006b FB020000 		.4byte	.LASF7
 424 006f 04       		.uleb128 0x4
 425 0070 A3010000 		.4byte	.LASF9
 426 0074 02       		.byte	0x2
 427 0075 41       		.byte	0x41
 428 0076 7A000000 		.4byte	0x7a
 429 007a 02       		.uleb128 0x2
 430 007b 04       		.byte	0x4
 431 007c 07       		.byte	0x7
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 12


 432 007d 48010000 		.4byte	.LASF10
 433 0081 02       		.uleb128 0x2
 434 0082 08       		.byte	0x8
 435 0083 07       		.byte	0x7
 436 0084 0A020000 		.4byte	.LASF11
 437 0088 02       		.uleb128 0x2
 438 0089 04       		.byte	0x4
 439 008a 07       		.byte	0x7
 440 008b 97020000 		.4byte	.LASF12
 441 008f 05       		.uleb128 0x5
 442 0090 04       		.byte	0x4
 443 0091 02       		.uleb128 0x2
 444 0092 01       		.byte	0x1
 445 0093 08       		.byte	0x8
 446 0094 C1020000 		.4byte	.LASF13
 447 0098 04       		.uleb128 0x4
 448 0099 1E010000 		.4byte	.LASF14
 449 009d 03       		.byte	0x3
 450 009e 2C       		.byte	0x2c
 451 009f 5D000000 		.4byte	0x5d
 452 00a3 04       		.uleb128 0x4
 453 00a4 F2020000 		.4byte	.LASF15
 454 00a8 03       		.byte	0x3
 455 00a9 30       		.byte	0x30
 456 00aa 6F000000 		.4byte	0x6f
 457 00ae 06       		.uleb128 0x6
 458 00af EC020000 		.4byte	.LASF16
 459 00b3 04       		.byte	0x4
 460 00b4 E401     		.2byte	0x1e4
 461 00b6 48000000 		.4byte	0x48
 462 00ba 06       		.uleb128 0x6
 463 00bb AE010000 		.4byte	.LASF17
 464 00bf 04       		.byte	0x4
 465 00c0 E501     		.2byte	0x1e5
 466 00c2 56000000 		.4byte	0x56
 467 00c6 02       		.uleb128 0x2
 468 00c7 04       		.byte	0x4
 469 00c8 04       		.byte	0x4
 470 00c9 26010000 		.4byte	.LASF18
 471 00cd 02       		.uleb128 0x2
 472 00ce 08       		.byte	0x8
 473 00cf 04       		.byte	0x4
 474 00d0 9C010000 		.4byte	.LASF19
 475 00d4 07       		.uleb128 0x7
 476 00d5 AE000000 		.4byte	0xae
 477 00d9 08       		.uleb128 0x8
 478 00da 0F010000 		.4byte	.LASF24
 479 00de 04       		.byte	0x4
 480 00df 05       		.byte	0x5
 481 00e0 30       		.byte	0x30
 482 00e1 FE000000 		.4byte	0xfe
 483 00e5 09       		.uleb128 0x9
 484 00e6 C4000000 		.4byte	.LASF20
 485 00ea 05       		.byte	0x5
 486 00eb 31       		.byte	0x31
 487 00ec BA000000 		.4byte	0xba
 488 00f0 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 13


 489 00f1 09       		.uleb128 0x9
 490 00f2 0B000000 		.4byte	.LASF21
 491 00f6 05       		.byte	0x5
 492 00f7 32       		.byte	0x32
 493 00f8 AE000000 		.4byte	0xae
 494 00fc 02       		.byte	0x2
 495 00fd 00       		.byte	0
 496 00fe 04       		.uleb128 0x4
 497 00ff 3A030000 		.4byte	.LASF22
 498 0103 06       		.byte	0x6
 499 0104 39       		.byte	0x39
 500 0105 7A000000 		.4byte	0x7a
 501 0109 04       		.uleb128 0x4
 502 010a 00000000 		.4byte	.LASF23
 503 010e 06       		.byte	0x6
 504 010f 3F       		.byte	0x3f
 505 0110 A3000000 		.4byte	0xa3
 506 0114 08       		.uleb128 0x8
 507 0115 04010000 		.4byte	.LASF25
 508 0119 14       		.byte	0x14
 509 011a 07       		.byte	0x7
 510 011b 8C       		.byte	0x8c
 511 011c 5D010000 		.4byte	0x15d
 512 0120 09       		.uleb128 0x9
 513 0121 DA000000 		.4byte	.LASF26
 514 0125 07       		.byte	0x7
 515 0126 8F       		.byte	0x8f
 516 0127 09010000 		.4byte	0x109
 517 012b 00       		.byte	0
 518 012c 09       		.uleb128 0x9
 519 012d D4010000 		.4byte	.LASF27
 520 0131 07       		.byte	0x7
 521 0132 90       		.byte	0x90
 522 0133 5D010000 		.4byte	0x15d
 523 0137 04       		.byte	0x4
 524 0138 09       		.uleb128 0x9
 525 0139 69010000 		.4byte	.LASF28
 526 013d 07       		.byte	0x7
 527 013e 91       		.byte	0x91
 528 013f 5D010000 		.4byte	0x15d
 529 0143 08       		.byte	0x8
 530 0144 09       		.uleb128 0x9
 531 0145 FC000000 		.4byte	.LASF29
 532 0149 07       		.byte	0x7
 533 014a 92       		.byte	0x92
 534 014b 8F000000 		.4byte	0x8f
 535 014f 0C       		.byte	0xc
 536 0150 09       		.uleb128 0x9
 537 0151 A1000000 		.4byte	.LASF30
 538 0155 07       		.byte	0x7
 539 0156 93       		.byte	0x93
 540 0157 94010000 		.4byte	0x194
 541 015b 10       		.byte	0x10
 542 015c 00       		.byte	0
 543 015d 0A       		.uleb128 0xa
 544 015e 04       		.byte	0x4
 545 015f 14010000 		.4byte	0x114
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 14


 546 0163 08       		.uleb128 0x8
 547 0164 34030000 		.4byte	.LASF31
 548 0168 14       		.byte	0x14
 549 0169 07       		.byte	0x7
 550 016a A4       		.byte	0xa4
 551 016b 94010000 		.4byte	0x194
 552 016f 09       		.uleb128 0x9
 553 0170 B5010000 		.4byte	.LASF32
 554 0174 07       		.byte	0x7
 555 0175 A7       		.byte	0xa7
 556 0176 E1010000 		.4byte	0x1e1
 557 017a 00       		.byte	0
 558 017b 09       		.uleb128 0x9
 559 017c AD000000 		.4byte	.LASF33
 560 0180 07       		.byte	0x7
 561 0181 A8       		.byte	0xa8
 562 0182 E6010000 		.4byte	0x1e6
 563 0186 04       		.byte	0x4
 564 0187 09       		.uleb128 0x9
 565 0188 F3000000 		.4byte	.LASF34
 566 018c 07       		.byte	0x7
 567 018d A9       		.byte	0xa9
 568 018e D6010000 		.4byte	0x1d6
 569 0192 08       		.byte	0x8
 570 0193 00       		.byte	0
 571 0194 0A       		.uleb128 0xa
 572 0195 04       		.byte	0x4
 573 0196 63010000 		.4byte	0x163
 574 019a 04       		.uleb128 0x4
 575 019b 80020000 		.4byte	.LASF35
 576 019f 07       		.byte	0x7
 577 01a0 96       		.byte	0x96
 578 01a1 14010000 		.4byte	0x114
 579 01a5 08       		.uleb128 0x8
 580 01a6 11030000 		.4byte	.LASF36
 581 01aa 0C       		.byte	0xc
 582 01ab 07       		.byte	0x7
 583 01ac 98       		.byte	0x98
 584 01ad D6010000 		.4byte	0x1d6
 585 01b1 09       		.uleb128 0x9
 586 01b2 DA000000 		.4byte	.LASF26
 587 01b6 07       		.byte	0x7
 588 01b7 9B       		.byte	0x9b
 589 01b8 09010000 		.4byte	0x109
 590 01bc 00       		.byte	0
 591 01bd 09       		.uleb128 0x9
 592 01be D4010000 		.4byte	.LASF27
 593 01c2 07       		.byte	0x7
 594 01c3 9C       		.byte	0x9c
 595 01c4 5D010000 		.4byte	0x15d
 596 01c8 04       		.byte	0x4
 597 01c9 09       		.uleb128 0x9
 598 01ca 69010000 		.4byte	.LASF28
 599 01ce 07       		.byte	0x7
 600 01cf 9D       		.byte	0x9d
 601 01d0 5D010000 		.4byte	0x15d
 602 01d4 08       		.byte	0x8
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 15


 603 01d5 00       		.byte	0
 604 01d6 04       		.uleb128 0x4
 605 01d7 B5000000 		.4byte	.LASF37
 606 01db 07       		.byte	0x7
 607 01dc 9F       		.byte	0x9f
 608 01dd A5010000 		.4byte	0x1a5
 609 01e1 07       		.uleb128 0x7
 610 01e2 FE000000 		.4byte	0xfe
 611 01e6 0A       		.uleb128 0xa
 612 01e7 04       		.byte	0x4
 613 01e8 9A010000 		.4byte	0x19a
 614 01ec 04       		.uleb128 0x4
 615 01ed 95010000 		.4byte	.LASF38
 616 01f1 07       		.byte	0x7
 617 01f2 AB       		.byte	0xab
 618 01f3 63010000 		.4byte	0x163
 619 01f7 0B       		.uleb128 0xb
 620 01f8 E8010000 		.4byte	.LASF39
 621 01fc 01       		.byte	0x1
 622 01fd 25       		.byte	0x25
 623 01fe 00000000 		.4byte	.LFB68
 624 0202 3E000000 		.4byte	.LFE68-.LFB68
 625 0206 01       		.uleb128 0x1
 626 0207 9C       		.byte	0x9c
 627 0208 1B020000 		.4byte	0x21b
 628 020c 0C       		.uleb128 0xc
 629 020d 2D030000 		.4byte	.LASF41
 630 0211 01       		.byte	0x1
 631 0212 25       		.byte	0x25
 632 0213 21020000 		.4byte	0x221
 633 0217 02       		.uleb128 0x2
 634 0218 91       		.byte	0x91
 635 0219 74       		.sleb128 -12
 636 021a 00       		.byte	0
 637 021b 0A       		.uleb128 0xa
 638 021c 04       		.byte	0x4
 639 021d EC010000 		.4byte	0x1ec
 640 0221 0D       		.uleb128 0xd
 641 0222 1B020000 		.4byte	0x21b
 642 0226 0B       		.uleb128 0xb
 643 0227 81010000 		.4byte	.LASF40
 644 022b 01       		.byte	0x1
 645 022c 3E       		.byte	0x3e
 646 022d 00000000 		.4byte	.LFB69
 647 0231 18000000 		.4byte	.LFE69-.LFB69
 648 0235 01       		.uleb128 0x1
 649 0236 9C       		.byte	0x9c
 650 0237 4A020000 		.4byte	0x24a
 651 023b 0C       		.uleb128 0xc
 652 023c 79020000 		.4byte	.LASF42
 653 0240 01       		.byte	0x1
 654 0241 3E       		.byte	0x3e
 655 0242 4A020000 		.4byte	0x24a
 656 0246 02       		.uleb128 0x2
 657 0247 91       		.byte	0x91
 658 0248 74       		.sleb128 -12
 659 0249 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 16


 660 024a 0D       		.uleb128 0xd
 661 024b E6010000 		.4byte	0x1e6
 662 024f 0B       		.uleb128 0xb
 663 0250 C5010000 		.4byte	.LASF43
 664 0254 01       		.byte	0x1
 665 0255 4A       		.byte	0x4a
 666 0256 00000000 		.4byte	.LFB70
 667 025a 46000000 		.4byte	.LFE70-.LFB70
 668 025e 01       		.uleb128 0x1
 669 025f 9C       		.byte	0x9c
 670 0260 8F020000 		.4byte	0x28f
 671 0264 0C       		.uleb128 0xc
 672 0265 2D030000 		.4byte	.LASF41
 673 0269 01       		.byte	0x1
 674 026a 4A       		.byte	0x4a
 675 026b 21020000 		.4byte	0x221
 676 026f 02       		.uleb128 0x2
 677 0270 91       		.byte	0x91
 678 0271 6C       		.sleb128 -20
 679 0272 0C       		.uleb128 0xc
 680 0273 46030000 		.4byte	.LASF44
 681 0277 01       		.byte	0x1
 682 0278 4A       		.byte	0x4a
 683 0279 4A020000 		.4byte	0x24a
 684 027d 02       		.uleb128 0x2
 685 027e 91       		.byte	0x91
 686 027f 68       		.sleb128 -24
 687 0280 0E       		.uleb128 0xe
 688 0281 AD000000 		.4byte	.LASF33
 689 0285 01       		.byte	0x1
 690 0286 4C       		.byte	0x4c
 691 0287 4A020000 		.4byte	0x24a
 692 028b 02       		.uleb128 0x2
 693 028c 91       		.byte	0x91
 694 028d 74       		.sleb128 -12
 695 028e 00       		.byte	0
 696 028f 0B       		.uleb128 0xb
 697 0290 54030000 		.4byte	.LASF45
 698 0294 01       		.byte	0x1
 699 0295 67       		.byte	0x67
 700 0296 00000000 		.4byte	.LFB71
 701 029a 70000000 		.4byte	.LFE71-.LFB71
 702 029e 01       		.uleb128 0x1
 703 029f 9C       		.byte	0x9c
 704 02a0 DD020000 		.4byte	0x2dd
 705 02a4 0C       		.uleb128 0xc
 706 02a5 2D030000 		.4byte	.LASF41
 707 02a9 01       		.byte	0x1
 708 02aa 67       		.byte	0x67
 709 02ab 21020000 		.4byte	0x221
 710 02af 02       		.uleb128 0x2
 711 02b0 91       		.byte	0x91
 712 02b1 6C       		.sleb128 -20
 713 02b2 0C       		.uleb128 0xc
 714 02b3 46030000 		.4byte	.LASF44
 715 02b7 01       		.byte	0x1
 716 02b8 67       		.byte	0x67
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 17


 717 02b9 4A020000 		.4byte	0x24a
 718 02bd 02       		.uleb128 0x2
 719 02be 91       		.byte	0x91
 720 02bf 68       		.sleb128 -24
 721 02c0 0E       		.uleb128 0xe
 722 02c1 C6020000 		.4byte	.LASF46
 723 02c5 01       		.byte	0x1
 724 02c6 69       		.byte	0x69
 725 02c7 E6010000 		.4byte	0x1e6
 726 02cb 02       		.uleb128 0x2
 727 02cc 91       		.byte	0x91
 728 02cd 74       		.sleb128 -12
 729 02ce 0E       		.uleb128 0xe
 730 02cf F8010000 		.4byte	.LASF47
 731 02d3 01       		.byte	0x1
 732 02d4 6A       		.byte	0x6a
 733 02d5 DD020000 		.4byte	0x2dd
 734 02d9 02       		.uleb128 0x2
 735 02da 91       		.byte	0x91
 736 02db 70       		.sleb128 -16
 737 02dc 00       		.byte	0
 738 02dd 0D       		.uleb128 0xd
 739 02de 09010000 		.4byte	0x109
 740 02e2 0F       		.uleb128 0xf
 741 02e3 04030000 		.4byte	.LASF55
 742 02e7 01       		.byte	0x1
 743 02e8 AA       		.byte	0xaa
 744 02e9 FE000000 		.4byte	0xfe
 745 02ed 00000000 		.4byte	.LFB72
 746 02f1 52000000 		.4byte	.LFE72-.LFB72
 747 02f5 01       		.uleb128 0x1
 748 02f6 9C       		.byte	0x9c
 749 02f7 18030000 		.4byte	0x318
 750 02fb 0C       		.uleb128 0xc
 751 02fc 5A010000 		.4byte	.LASF48
 752 0300 01       		.byte	0x1
 753 0301 AA       		.byte	0xaa
 754 0302 4A020000 		.4byte	0x24a
 755 0306 02       		.uleb128 0x2
 756 0307 91       		.byte	0x91
 757 0308 6C       		.sleb128 -20
 758 0309 0E       		.uleb128 0xe
 759 030a 2D030000 		.4byte	.LASF41
 760 030e 01       		.byte	0x1
 761 030f AE       		.byte	0xae
 762 0310 21020000 		.4byte	0x221
 763 0314 02       		.uleb128 0x2
 764 0315 91       		.byte	0x91
 765 0316 74       		.sleb128 -12
 766 0317 00       		.byte	0
 767 0318 10       		.uleb128 0x10
 768 0319 D9000000 		.4byte	0xd9
 769 031d 28030000 		.4byte	0x328
 770 0321 11       		.uleb128 0x11
 771 0322 88000000 		.4byte	0x88
 772 0326 07       		.byte	0x7
 773 0327 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 18


 774 0328 12       		.uleb128 0x12
 775 0329 2C010000 		.4byte	.LASF49
 776 032d 05       		.byte	0x5
 777 032e 34       		.byte	0x34
 778 032f 18030000 		.4byte	0x318
 779 0333 05       		.uleb128 0x5
 780 0334 03       		.byte	0x3
 781 0335 00000000 		.4byte	DS18x8_Sensor
 782 0339 12       		.uleb128 0x12
 783 033a DB020000 		.4byte	.LASF50
 784 033e 05       		.byte	0x5
 785 033f 39       		.byte	0x39
 786 0340 D4000000 		.4byte	0xd4
 787 0344 05       		.uleb128 0x5
 788 0345 03       		.byte	0x3
 789 0346 00000000 		.4byte	DS18x8_DataReady
 790 034a 13       		.uleb128 0x13
 791 034b 74010000 		.4byte	.LASF51
 792 034f 08       		.byte	0x8
 793 0350 1207     		.2byte	0x712
 794 0352 56030000 		.4byte	0x356
 795 0356 07       		.uleb128 0x7
 796 0357 98000000 		.4byte	0x98
 797 035b 00       		.byte	0
 798              		.section	.debug_abbrev,"",%progbits
 799              	.Ldebug_abbrev0:
 800 0000 01       		.uleb128 0x1
 801 0001 11       		.uleb128 0x11
 802 0002 01       		.byte	0x1
 803 0003 25       		.uleb128 0x25
 804 0004 0E       		.uleb128 0xe
 805 0005 13       		.uleb128 0x13
 806 0006 0B       		.uleb128 0xb
 807 0007 03       		.uleb128 0x3
 808 0008 0E       		.uleb128 0xe
 809 0009 1B       		.uleb128 0x1b
 810 000a 0E       		.uleb128 0xe
 811 000b 55       		.uleb128 0x55
 812 000c 17       		.uleb128 0x17
 813 000d 11       		.uleb128 0x11
 814 000e 01       		.uleb128 0x1
 815 000f 10       		.uleb128 0x10
 816 0010 17       		.uleb128 0x17
 817 0011 00       		.byte	0
 818 0012 00       		.byte	0
 819 0013 02       		.uleb128 0x2
 820 0014 24       		.uleb128 0x24
 821 0015 00       		.byte	0
 822 0016 0B       		.uleb128 0xb
 823 0017 0B       		.uleb128 0xb
 824 0018 3E       		.uleb128 0x3e
 825 0019 0B       		.uleb128 0xb
 826 001a 03       		.uleb128 0x3
 827 001b 0E       		.uleb128 0xe
 828 001c 00       		.byte	0
 829 001d 00       		.byte	0
 830 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 19


 831 001f 24       		.uleb128 0x24
 832 0020 00       		.byte	0
 833 0021 0B       		.uleb128 0xb
 834 0022 0B       		.uleb128 0xb
 835 0023 3E       		.uleb128 0x3e
 836 0024 0B       		.uleb128 0xb
 837 0025 03       		.uleb128 0x3
 838 0026 08       		.uleb128 0x8
 839 0027 00       		.byte	0
 840 0028 00       		.byte	0
 841 0029 04       		.uleb128 0x4
 842 002a 16       		.uleb128 0x16
 843 002b 00       		.byte	0
 844 002c 03       		.uleb128 0x3
 845 002d 0E       		.uleb128 0xe
 846 002e 3A       		.uleb128 0x3a
 847 002f 0B       		.uleb128 0xb
 848 0030 3B       		.uleb128 0x3b
 849 0031 0B       		.uleb128 0xb
 850 0032 49       		.uleb128 0x49
 851 0033 13       		.uleb128 0x13
 852 0034 00       		.byte	0
 853 0035 00       		.byte	0
 854 0036 05       		.uleb128 0x5
 855 0037 0F       		.uleb128 0xf
 856 0038 00       		.byte	0
 857 0039 0B       		.uleb128 0xb
 858 003a 0B       		.uleb128 0xb
 859 003b 00       		.byte	0
 860 003c 00       		.byte	0
 861 003d 06       		.uleb128 0x6
 862 003e 16       		.uleb128 0x16
 863 003f 00       		.byte	0
 864 0040 03       		.uleb128 0x3
 865 0041 0E       		.uleb128 0xe
 866 0042 3A       		.uleb128 0x3a
 867 0043 0B       		.uleb128 0xb
 868 0044 3B       		.uleb128 0x3b
 869 0045 05       		.uleb128 0x5
 870 0046 49       		.uleb128 0x49
 871 0047 13       		.uleb128 0x13
 872 0048 00       		.byte	0
 873 0049 00       		.byte	0
 874 004a 07       		.uleb128 0x7
 875 004b 35       		.uleb128 0x35
 876 004c 00       		.byte	0
 877 004d 49       		.uleb128 0x49
 878 004e 13       		.uleb128 0x13
 879 004f 00       		.byte	0
 880 0050 00       		.byte	0
 881 0051 08       		.uleb128 0x8
 882 0052 13       		.uleb128 0x13
 883 0053 01       		.byte	0x1
 884 0054 03       		.uleb128 0x3
 885 0055 0E       		.uleb128 0xe
 886 0056 0B       		.uleb128 0xb
 887 0057 0B       		.uleb128 0xb
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 20


 888 0058 3A       		.uleb128 0x3a
 889 0059 0B       		.uleb128 0xb
 890 005a 3B       		.uleb128 0x3b
 891 005b 0B       		.uleb128 0xb
 892 005c 01       		.uleb128 0x1
 893 005d 13       		.uleb128 0x13
 894 005e 00       		.byte	0
 895 005f 00       		.byte	0
 896 0060 09       		.uleb128 0x9
 897 0061 0D       		.uleb128 0xd
 898 0062 00       		.byte	0
 899 0063 03       		.uleb128 0x3
 900 0064 0E       		.uleb128 0xe
 901 0065 3A       		.uleb128 0x3a
 902 0066 0B       		.uleb128 0xb
 903 0067 3B       		.uleb128 0x3b
 904 0068 0B       		.uleb128 0xb
 905 0069 49       		.uleb128 0x49
 906 006a 13       		.uleb128 0x13
 907 006b 38       		.uleb128 0x38
 908 006c 0B       		.uleb128 0xb
 909 006d 00       		.byte	0
 910 006e 00       		.byte	0
 911 006f 0A       		.uleb128 0xa
 912 0070 0F       		.uleb128 0xf
 913 0071 00       		.byte	0
 914 0072 0B       		.uleb128 0xb
 915 0073 0B       		.uleb128 0xb
 916 0074 49       		.uleb128 0x49
 917 0075 13       		.uleb128 0x13
 918 0076 00       		.byte	0
 919 0077 00       		.byte	0
 920 0078 0B       		.uleb128 0xb
 921 0079 2E       		.uleb128 0x2e
 922 007a 01       		.byte	0x1
 923 007b 3F       		.uleb128 0x3f
 924 007c 19       		.uleb128 0x19
 925 007d 03       		.uleb128 0x3
 926 007e 0E       		.uleb128 0xe
 927 007f 3A       		.uleb128 0x3a
 928 0080 0B       		.uleb128 0xb
 929 0081 3B       		.uleb128 0x3b
 930 0082 0B       		.uleb128 0xb
 931 0083 27       		.uleb128 0x27
 932 0084 19       		.uleb128 0x19
 933 0085 11       		.uleb128 0x11
 934 0086 01       		.uleb128 0x1
 935 0087 12       		.uleb128 0x12
 936 0088 06       		.uleb128 0x6
 937 0089 40       		.uleb128 0x40
 938 008a 18       		.uleb128 0x18
 939 008b 9742     		.uleb128 0x2117
 940 008d 19       		.uleb128 0x19
 941 008e 01       		.uleb128 0x1
 942 008f 13       		.uleb128 0x13
 943 0090 00       		.byte	0
 944 0091 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 21


 945 0092 0C       		.uleb128 0xc
 946 0093 05       		.uleb128 0x5
 947 0094 00       		.byte	0
 948 0095 03       		.uleb128 0x3
 949 0096 0E       		.uleb128 0xe
 950 0097 3A       		.uleb128 0x3a
 951 0098 0B       		.uleb128 0xb
 952 0099 3B       		.uleb128 0x3b
 953 009a 0B       		.uleb128 0xb
 954 009b 49       		.uleb128 0x49
 955 009c 13       		.uleb128 0x13
 956 009d 02       		.uleb128 0x2
 957 009e 18       		.uleb128 0x18
 958 009f 00       		.byte	0
 959 00a0 00       		.byte	0
 960 00a1 0D       		.uleb128 0xd
 961 00a2 26       		.uleb128 0x26
 962 00a3 00       		.byte	0
 963 00a4 49       		.uleb128 0x49
 964 00a5 13       		.uleb128 0x13
 965 00a6 00       		.byte	0
 966 00a7 00       		.byte	0
 967 00a8 0E       		.uleb128 0xe
 968 00a9 34       		.uleb128 0x34
 969 00aa 00       		.byte	0
 970 00ab 03       		.uleb128 0x3
 971 00ac 0E       		.uleb128 0xe
 972 00ad 3A       		.uleb128 0x3a
 973 00ae 0B       		.uleb128 0xb
 974 00af 3B       		.uleb128 0x3b
 975 00b0 0B       		.uleb128 0xb
 976 00b1 49       		.uleb128 0x49
 977 00b2 13       		.uleb128 0x13
 978 00b3 02       		.uleb128 0x2
 979 00b4 18       		.uleb128 0x18
 980 00b5 00       		.byte	0
 981 00b6 00       		.byte	0
 982 00b7 0F       		.uleb128 0xf
 983 00b8 2E       		.uleb128 0x2e
 984 00b9 01       		.byte	0x1
 985 00ba 3F       		.uleb128 0x3f
 986 00bb 19       		.uleb128 0x19
 987 00bc 03       		.uleb128 0x3
 988 00bd 0E       		.uleb128 0xe
 989 00be 3A       		.uleb128 0x3a
 990 00bf 0B       		.uleb128 0xb
 991 00c0 3B       		.uleb128 0x3b
 992 00c1 0B       		.uleb128 0xb
 993 00c2 27       		.uleb128 0x27
 994 00c3 19       		.uleb128 0x19
 995 00c4 49       		.uleb128 0x49
 996 00c5 13       		.uleb128 0x13
 997 00c6 11       		.uleb128 0x11
 998 00c7 01       		.uleb128 0x1
 999 00c8 12       		.uleb128 0x12
 1000 00c9 06       		.uleb128 0x6
 1001 00ca 40       		.uleb128 0x40
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 22


 1002 00cb 18       		.uleb128 0x18
 1003 00cc 9742     		.uleb128 0x2117
 1004 00ce 19       		.uleb128 0x19
 1005 00cf 01       		.uleb128 0x1
 1006 00d0 13       		.uleb128 0x13
 1007 00d1 00       		.byte	0
 1008 00d2 00       		.byte	0
 1009 00d3 10       		.uleb128 0x10
 1010 00d4 01       		.uleb128 0x1
 1011 00d5 01       		.byte	0x1
 1012 00d6 49       		.uleb128 0x49
 1013 00d7 13       		.uleb128 0x13
 1014 00d8 01       		.uleb128 0x1
 1015 00d9 13       		.uleb128 0x13
 1016 00da 00       		.byte	0
 1017 00db 00       		.byte	0
 1018 00dc 11       		.uleb128 0x11
 1019 00dd 21       		.uleb128 0x21
 1020 00de 00       		.byte	0
 1021 00df 49       		.uleb128 0x49
 1022 00e0 13       		.uleb128 0x13
 1023 00e1 2F       		.uleb128 0x2f
 1024 00e2 0B       		.uleb128 0xb
 1025 00e3 00       		.byte	0
 1026 00e4 00       		.byte	0
 1027 00e5 12       		.uleb128 0x12
 1028 00e6 34       		.uleb128 0x34
 1029 00e7 00       		.byte	0
 1030 00e8 03       		.uleb128 0x3
 1031 00e9 0E       		.uleb128 0xe
 1032 00ea 3A       		.uleb128 0x3a
 1033 00eb 0B       		.uleb128 0xb
 1034 00ec 3B       		.uleb128 0x3b
 1035 00ed 0B       		.uleb128 0xb
 1036 00ee 49       		.uleb128 0x49
 1037 00ef 13       		.uleb128 0x13
 1038 00f0 3F       		.uleb128 0x3f
 1039 00f1 19       		.uleb128 0x19
 1040 00f2 02       		.uleb128 0x2
 1041 00f3 18       		.uleb128 0x18
 1042 00f4 00       		.byte	0
 1043 00f5 00       		.byte	0
 1044 00f6 13       		.uleb128 0x13
 1045 00f7 34       		.uleb128 0x34
 1046 00f8 00       		.byte	0
 1047 00f9 03       		.uleb128 0x3
 1048 00fa 0E       		.uleb128 0xe
 1049 00fb 3A       		.uleb128 0x3a
 1050 00fc 0B       		.uleb128 0xb
 1051 00fd 3B       		.uleb128 0x3b
 1052 00fe 05       		.uleb128 0x5
 1053 00ff 49       		.uleb128 0x49
 1054 0100 13       		.uleb128 0x13
 1055 0101 3F       		.uleb128 0x3f
 1056 0102 19       		.uleb128 0x19
 1057 0103 3C       		.uleb128 0x3c
 1058 0104 19       		.uleb128 0x19
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 23


 1059 0105 00       		.byte	0
 1060 0106 00       		.byte	0
 1061 0107 00       		.byte	0
 1062              		.section	.debug_aranges,"",%progbits
 1063 0000 3C000000 		.4byte	0x3c
 1064 0004 0200     		.2byte	0x2
 1065 0006 00000000 		.4byte	.Ldebug_info0
 1066 000a 04       		.byte	0x4
 1067 000b 00       		.byte	0
 1068 000c 0000     		.2byte	0
 1069 000e 0000     		.2byte	0
 1070 0010 00000000 		.4byte	.LFB68
 1071 0014 3E000000 		.4byte	.LFE68-.LFB68
 1072 0018 00000000 		.4byte	.LFB69
 1073 001c 18000000 		.4byte	.LFE69-.LFB69
 1074 0020 00000000 		.4byte	.LFB70
 1075 0024 46000000 		.4byte	.LFE70-.LFB70
 1076 0028 00000000 		.4byte	.LFB71
 1077 002c 70000000 		.4byte	.LFE71-.LFB71
 1078 0030 00000000 		.4byte	.LFB72
 1079 0034 52000000 		.4byte	.LFE72-.LFB72
 1080 0038 00000000 		.4byte	0
 1081 003c 00000000 		.4byte	0
 1082              		.section	.debug_ranges,"",%progbits
 1083              	.Ldebug_ranges0:
 1084 0000 00000000 		.4byte	.LFB68
 1085 0004 3E000000 		.4byte	.LFE68
 1086 0008 00000000 		.4byte	.LFB69
 1087 000c 18000000 		.4byte	.LFE69
 1088 0010 00000000 		.4byte	.LFB70
 1089 0014 46000000 		.4byte	.LFE70
 1090 0018 00000000 		.4byte	.LFB71
 1091 001c 70000000 		.4byte	.LFE71
 1092 0020 00000000 		.4byte	.LFB72
 1093 0024 52000000 		.4byte	.LFE72
 1094 0028 00000000 		.4byte	0
 1095 002c 00000000 		.4byte	0
 1096              		.section	.debug_line,"",%progbits
 1097              	.Ldebug_line0:
 1098 0000 31020000 		.section	.debug_str,"MS",%progbits,1
 1098      0200A701 
 1098      00000201 
 1098      FB0E0D00 
 1098      01010101 
 1099              	.LASF23:
 1100 0000 5469636B 		.ascii	"TickType_t\000"
 1100      54797065 
 1100      5F7400
 1101              	.LASF21:
 1102 000b 70726573 		.ascii	"present\000"
 1102      656E7400 
 1103              	.LASF52:
 1104 0013 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1104      43313120 
 1104      352E342E 
 1104      31203230 
 1104      31363036 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 24


 1105 0046 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1105      20726576 
 1105      6973696F 
 1105      6E203233 
 1105      37373135 
 1106 0079 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1106      66756E63 
 1106      74696F6E 
 1106      2D736563 
 1106      74696F6E 
 1107              	.LASF30:
 1108 00a1 7076436F 		.ascii	"pvContainer\000"
 1108      6E746169 
 1108      6E657200 
 1109              	.LASF33:
 1110 00ad 7078496E 		.ascii	"pxIndex\000"
 1110      64657800 
 1111              	.LASF37:
 1112 00b5 4D696E69 		.ascii	"MiniListItem_t\000"
 1112      4C697374 
 1112      4974656D 
 1112      5F7400
 1113              	.LASF20:
 1114 00c4 54656D70 		.ascii	"Temperature\000"
 1114      65726174 
 1114      75726500 
 1115              	.LASF8:
 1116 00d0 5F5F696E 		.ascii	"__int32_t\000"
 1116      7433325F 
 1116      7400
 1117              	.LASF26:
 1118 00da 78497465 		.ascii	"xItemValue\000"
 1118      6D56616C 
 1118      756500
 1119              	.LASF53:
 1120 00e5 536F7572 		.ascii	"Source\\list.c\000"
 1120      63655C6C 
 1120      6973742E 
 1120      6300
 1121              	.LASF34:
 1122 00f3 784C6973 		.ascii	"xListEnd\000"
 1122      74456E64 
 1122      00
 1123              	.LASF29:
 1124 00fc 70764F77 		.ascii	"pvOwner\000"
 1124      6E657200 
 1125              	.LASF25:
 1126 0104 784C4953 		.ascii	"xLIST_ITEM\000"
 1126      545F4954 
 1126      454D00
 1127              	.LASF24:
 1128 010f 44533138 		.ascii	"DS18x8_TSensor\000"
 1128      78385F54 
 1128      53656E73 
 1128      6F7200
 1129              	.LASF14:
 1130 011e 696E7433 		.ascii	"int32_t\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 25


 1130      325F7400 
 1131              	.LASF18:
 1132 0126 666C6F61 		.ascii	"float\000"
 1132      7400
 1133              	.LASF49:
 1134 012c 44533138 		.ascii	"DS18x8_Sensor\000"
 1134      78385F53 
 1134      656E736F 
 1134      7200
 1135              	.LASF4:
 1136 013a 756E7369 		.ascii	"unsigned char\000"
 1136      676E6564 
 1136      20636861 
 1136      7200
 1137              	.LASF10:
 1138 0148 6C6F6E67 		.ascii	"long unsigned int\000"
 1138      20756E73 
 1138      69676E65 
 1138      6420696E 
 1138      7400
 1139              	.LASF48:
 1140 015a 70784974 		.ascii	"pxItemToRemove\000"
 1140      656D546F 
 1140      52656D6F 
 1140      766500
 1141              	.LASF28:
 1142 0169 70785072 		.ascii	"pxPrevious\000"
 1142      6576696F 
 1142      757300
 1143              	.LASF51:
 1144 0174 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1144      52784275 
 1144      66666572 
 1144      00
 1145              	.LASF40:
 1146 0181 764C6973 		.ascii	"vListInitialiseItem\000"
 1146      74496E69 
 1146      7469616C 
 1146      69736549 
 1146      74656D00 
 1147              	.LASF38:
 1148 0195 4C697374 		.ascii	"List_t\000"
 1148      5F7400
 1149              	.LASF19:
 1150 019c 646F7562 		.ascii	"double\000"
 1150      6C6500
 1151              	.LASF9:
 1152 01a3 5F5F7569 		.ascii	"__uint32_t\000"
 1152      6E743332 
 1152      5F7400
 1153              	.LASF17:
 1154 01ae 75696E74 		.ascii	"uint16\000"
 1154      313600
 1155              	.LASF32:
 1156 01b5 75784E75 		.ascii	"uxNumberOfItems\000"
 1156      6D626572 
 1156      4F664974 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 26


 1156      656D7300 
 1157              	.LASF43:
 1158 01c5 764C6973 		.ascii	"vListInsertEnd\000"
 1158      74496E73 
 1158      65727445 
 1158      6E6400
 1159              	.LASF27:
 1160 01d4 70784E65 		.ascii	"pxNext\000"
 1160      787400
 1161              	.LASF0:
 1162 01db 756E7369 		.ascii	"unsigned int\000"
 1162      676E6564 
 1162      20696E74 
 1162      00
 1163              	.LASF39:
 1164 01e8 764C6973 		.ascii	"vListInitialise\000"
 1164      74496E69 
 1164      7469616C 
 1164      69736500 
 1165              	.LASF47:
 1166 01f8 7856616C 		.ascii	"xValueOfInsertion\000"
 1166      75654F66 
 1166      496E7365 
 1166      7274696F 
 1166      6E00
 1167              	.LASF11:
 1168 020a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1168      206C6F6E 
 1168      6720756E 
 1168      7369676E 
 1168      65642069 
 1169              	.LASF54:
 1170 0221 433A5C55 		.ascii	"C:\\Users\\krist\\Documents\\GitHub\\P4_Vertical_fa"
 1170      73657273 
 1170      5C6B7269 
 1170      73745C44 
 1170      6F63756D 
 1171 024f 726D5C52 		.ascii	"rm\\RTOS_TEMPLATE-master\\PlanteModul.cydsn\000"
 1171      544F535F 
 1171      54454D50 
 1171      4C415445 
 1171      2D6D6173 
 1172              	.LASF42:
 1173 0279 70784974 		.ascii	"pxItem\000"
 1173      656D00
 1174              	.LASF35:
 1175 0280 4C697374 		.ascii	"ListItem_t\000"
 1175      4974656D 
 1175      5F7400
 1176              	.LASF2:
 1177 028b 6C6F6E67 		.ascii	"long double\000"
 1177      20646F75 
 1177      626C6500 
 1178              	.LASF12:
 1179 0297 73697A65 		.ascii	"sizetype\000"
 1179      74797065 
 1179      00
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 27


 1180              	.LASF6:
 1181 02a0 73686F72 		.ascii	"short unsigned int\000"
 1181      7420756E 
 1181      7369676E 
 1181      65642069 
 1181      6E7400
 1182              	.LASF1:
 1183 02b3 6C6F6E67 		.ascii	"long long int\000"
 1183      206C6F6E 
 1183      6720696E 
 1183      7400
 1184              	.LASF13:
 1185 02c1 63686172 		.ascii	"char\000"
 1185      00
 1186              	.LASF46:
 1187 02c6 70784974 		.ascii	"pxIterator\000"
 1187      65726174 
 1187      6F7200
 1188              	.LASF5:
 1189 02d1 73686F72 		.ascii	"short int\000"
 1189      7420696E 
 1189      7400
 1190              	.LASF50:
 1191 02db 44533138 		.ascii	"DS18x8_DataReady\000"
 1191      78385F44 
 1191      61746152 
 1191      65616479 
 1191      00
 1192              	.LASF16:
 1193 02ec 75696E74 		.ascii	"uint8\000"
 1193      3800
 1194              	.LASF15:
 1195 02f2 75696E74 		.ascii	"uint32_t\000"
 1195      33325F74 
 1195      00
 1196              	.LASF7:
 1197 02fb 6C6F6E67 		.ascii	"long int\000"
 1197      20696E74 
 1197      00
 1198              	.LASF55:
 1199 0304 75784C69 		.ascii	"uxListRemove\000"
 1199      73745265 
 1199      6D6F7665 
 1199      00
 1200              	.LASF36:
 1201 0311 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 1201      495F4C49 
 1201      53545F49 
 1201      54454D00 
 1202              	.LASF3:
 1203 0321 7369676E 		.ascii	"signed char\000"
 1203      65642063 
 1203      68617200 
 1204              	.LASF41:
 1205 032d 70784C69 		.ascii	"pxList\000"
 1205      737400
 1206              	.LASF31:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccRAOwSb.s 			page 28


 1207 0334 784C4953 		.ascii	"xLIST\000"
 1207      5400
 1208              	.LASF22:
 1209 033a 55426173 		.ascii	"UBaseType_t\000"
 1209      65547970 
 1209      655F7400 
 1210              	.LASF44:
 1211 0346 70784E65 		.ascii	"pxNewListItem\000"
 1211      774C6973 
 1211      74497465 
 1211      6D00
 1212              	.LASF45:
 1213 0354 764C6973 		.ascii	"vListInsert\000"
 1213      74496E73 
 1213      65727400 
 1214              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
