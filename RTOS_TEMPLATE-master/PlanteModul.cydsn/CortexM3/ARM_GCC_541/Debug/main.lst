ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.main,"ax",%progbits
  20              		.align	2
  21              		.global	main
  22              		.thumb
  23              		.thumb_func
  24              		.type	main, %function
  25              	main:
  26              	.LFB68:
  27              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * FreeRTOS Kernel V10.3.1
   3:main.c        ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:main.c        ****  * this software and associated documentation files (the "Software"), to deal in
   7:main.c        ****  * the Software without restriction, including without limitation the rights to
   8:main.c        ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:main.c        ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:main.c        ****  * subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in all
  13:main.c        ****  * copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:main.c        ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:main.c        ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:main.c        ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:main.c        ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:main.c        ****  *
  22:main.c        ****  * http://www.FreeRTOS.org
  23:main.c        ****  * http://aws.amazon.com/freertos
  24:main.c        ****  *
  25:main.c        ****  * 1 tab == 4 spaces!
  26:main.c        ****  */
  27:main.c        **** 
  28:main.c        **** #include <device.h>
  29:main.c        **** 
  30:main.c        **** /* RTOS includes. */
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 2


  31:main.c        **** #include "FreeRTOS.h"
  32:main.c        **** #include "task.h"
  33:main.c        **** #include "queue.h"
  34:main.c        **** #include "semphr.h"
  35:main.c        **** 
  36:main.c        **** /* Plantemodul includes */
  37:main.c        **** #include "Nutrients.h"
  38:main.c        **** 
  39:main.c        **** 
  40:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  41:main.c        **** tick hook. */
  42:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  43:main.c        **** #define mainCOM_LED							( 3 )
  44:main.c        **** 
  45:main.c        **** /* The number of nano seconds between each processor clock. */
  46:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  47:main.c        **** 
  48:main.c        **** /*
  49:main.c        ****  * Installs the RTOS interrupt handlers and starts the peripherals.
  50:main.c        ****  */
  51:main.c        **** static void prvHardwareSetup( void );
  52:main.c        **** /*---------------------------------------------------------------------------*/
  53:main.c        **** 
  54:main.c        **** 
  55:main.c        **** int main( void )
  56:main.c        **** {
  28              		.loc 1 56 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  57:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  58:main.c        **** 	prvHardwareSetup();
  38              		.loc 1 58 0
  39 0004 FFF7FEFF 		bl	prvHardwareSetup
  59:main.c        ****     
  60:main.c        ****     vNutrientsInit(); //initialize Nutrients control task and parameteres
  40              		.loc 1 60 0
  41 0008 FFF7FEFF 		bl	vNutrientsInit
  61:main.c        ****      
  62:main.c        ****     
  63:main.c        ****     
  64:main.c        **** 	/* Will only get here if there was insufficient memory to create the idle
  65:main.c        ****     task.  The idle task is created within vTaskStartScheduler(). */
  66:main.c        **** 	vTaskStartScheduler();
  42              		.loc 1 66 0
  43 000c FFF7FEFF 		bl	vTaskStartScheduler
  44              	.L2:
  67:main.c        **** 
  68:main.c        ****     
  69:main.c        ****     
  70:main.c        **** 	/* Should never reach here as the kernel will now be running.  If
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 3


  71:main.c        **** 	vTaskStartScheduler() does return then it is very likely that there was
  72:main.c        **** 	insufficient (FreeRTOS) heap space available to create all the tasks,
  73:main.c        **** 	including the idle task that is created within vTaskStartScheduler() itself. */
  74:main.c        **** 	for( ;; );
  45              		.loc 1 74 0 discriminator 1
  46 0010 FEE7     		b	.L2
  47              		.cfi_endproc
  48              	.LFE68:
  49              		.size	main, .-main
  50 0012 00BF     		.section	.text.prvHardwareSetup,"ax",%progbits
  51              		.align	2
  52              		.thumb
  53              		.thumb_func
  54              		.type	prvHardwareSetup, %function
  55              	prvHardwareSetup:
  56              	.LFB69:
  75:main.c        **** }
  76:main.c        **** /*---------------------------------------------------------------------------*/
  77:main.c        **** 
  78:main.c        **** 
  79:main.c        **** 
  80:main.c        **** 
  81:main.c        **** 
  82:main.c        **** void prvHardwareSetup( void )
  83:main.c        **** {
  57              		.loc 1 83 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 00AF     		add	r7, sp, #0
  66              		.cfi_def_cfa_register 7
  84:main.c        **** /* Port layer functions that need to be copied into the vector table. */
  85:main.c        **** extern void xPortPendSVHandler( void );
  86:main.c        **** extern void xPortSysTickHandler( void );
  87:main.c        **** extern void vPortSVCHandler( void );
  88:main.c        **** extern cyisraddress CyRamVectors[];
  89:main.c        **** 
  90:main.c        **** 
  91:main.c        **** 
  92:main.c        **** 	/* Install the OS Interrupt Handlers. */
  93:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
  67              		.loc 1 93 0
  68 0004 0A4B     		ldr	r3, .L4
  69 0006 0B4A     		ldr	r2, .L4+4
  70 0008 DA62     		str	r2, [r3, #44]
  94:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
  71              		.loc 1 94 0
  72 000a 094B     		ldr	r3, .L4
  73 000c 0A4A     		ldr	r2, .L4+8
  74 000e 9A63     		str	r2, [r3, #56]
  95:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
  75              		.loc 1 95 0
  76 0010 074B     		ldr	r3, .L4
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 4


  77 0012 0A4A     		ldr	r2, .L4+12
  78 0014 DA63     		str	r2, [r3, #60]
  96:main.c        **** 
  97:main.c        ****     
  98:main.c        **** 	/* Start-up the peripherals. */
  99:main.c        ****     
 100:main.c        ****     
 101:main.c        ****     PWM_PERISTALTISK_1_Start(); //start PWM module 1
  79              		.loc 1 101 0
  80 0016 FFF7FEFF 		bl	PWM_PERISTALTISK_1_Start
 102:main.c        ****     PWM_PERISTALTISK_2_Start(); //start PWM module 2
  81              		.loc 1 102 0
  82 001a FFF7FEFF 		bl	PWM_PERISTALTISK_2_Start
 103:main.c        ****     ADC_PH_Start(); //start ADC_PH module
  83              		.loc 1 103 0
  84 001e FFF7FEFF 		bl	ADC_PH_Start
 104:main.c        ****     I2C_Start();
  85              		.loc 1 104 0
  86 0022 FFF7FEFF 		bl	I2C_Start
 105:main.c        ****     SW_UART_TEST_USB_Start();
  87              		.loc 1 105 0
  88 0026 FFF7FEFF 		bl	SW_UART_TEST_USB_Start
 106:main.c        **** }
  89              		.loc 1 106 0
  90 002a 00BF     		nop
  91 002c 80BD     		pop	{r7, pc}
  92              	.L5:
  93 002e 00BF     		.align	2
  94              	.L4:
  95 0030 00000000 		.word	CyRamVectors
  96 0034 00000000 		.word	vPortSVCHandler
  97 0038 00000000 		.word	xPortPendSVHandler
  98 003c 00000000 		.word	xPortSysTickHandler
  99              		.cfi_endproc
 100              	.LFE69:
 101              		.size	prvHardwareSetup, .-prvHardwareSetup
 102              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 103              		.align	2
 104              		.global	vApplicationStackOverflowHook
 105              		.thumb
 106              		.thumb_func
 107              		.type	vApplicationStackOverflowHook, %function
 108              	vApplicationStackOverflowHook:
 109              	.LFB70:
 107:main.c        **** /*---------------------------------------------------------------------------*/
 108:main.c        **** 
 109:main.c        **** 
 110:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName )
 111:main.c        **** {
 110              		.loc 1 111 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 16
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 115 0000 80B4     		push	{r7}
 116              		.cfi_def_cfa_offset 4
 117              		.cfi_offset 7, -4
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 5


 118 0002 85B0     		sub	sp, sp, #20
 119              		.cfi_def_cfa_offset 24
 120 0004 00AF     		add	r7, sp, #0
 121              		.cfi_def_cfa_register 7
 122 0006 7860     		str	r0, [r7, #4]
 123 0008 3960     		str	r1, [r7]
 124              	.LBB6:
 125              	.LBB7:
 126              		.file 2 ".\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 6


  49:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 7


 106:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:.\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:.\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 8


 163:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 170:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 171:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 173:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 174:.\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 175:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 176:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 177:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 178:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 179:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 180:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 181:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 182:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 183:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 184:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 185:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 186:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 187:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 188:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 189:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 190:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 192:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 193:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 195:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 196:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 197:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 127              		.loc 2 197 0
 128              		.syntax unified
 129              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 130 000a 4FF0A003 			mov r3, #160												
 131 000e 83F31188 		msr basepri, r3											
 132 0012 BFF36F8F 		isb														
 133 0016 BFF34F8F 		dsb														
 134              	
 135              	@ 0 "" 2
 136              		.thumb
 137              		.syntax unified
 138 001a FB60     		str	r3, [r7, #12]
 139              	.L7:
 140              	.LBE7:
 141              	.LBE6:
 112:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 113:main.c        **** 	taskDISABLE_INTERRUPTS();
 114:main.c        **** 	for( ;; );
 142              		.loc 1 114 0 discriminator 1
 143 001c FEE7     		b	.L7
 144              		.cfi_endproc
 145              	.LFE70:
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 9


 146              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 147 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 148              		.align	2
 149              		.global	vApplicationMallocFailedHook
 150              		.thumb
 151              		.thumb_func
 152              		.type	vApplicationMallocFailedHook, %function
 153              	vApplicationMallocFailedHook:
 154              	.LFB71:
 115:main.c        **** }
 116:main.c        **** /*---------------------------------------------------------------------------*/
 117:main.c        **** 
 118:main.c        **** void vApplicationMallocFailedHook( void )
 119:main.c        **** {
 155              		.loc 1 119 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 8
 158              		@ frame_needed = 1, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160 0000 80B4     		push	{r7}
 161              		.cfi_def_cfa_offset 4
 162              		.cfi_offset 7, -4
 163 0002 83B0     		sub	sp, sp, #12
 164              		.cfi_def_cfa_offset 16
 165 0004 00AF     		add	r7, sp, #0
 166              		.cfi_def_cfa_register 7
 167              	.LBB8:
 168              	.LBB9:
 169              		.loc 2 197 0
 170              		.syntax unified
 171              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 172 0006 4FF0A003 			mov r3, #160												
 173 000a 83F31188 		msr basepri, r3											
 174 000e BFF36F8F 		isb														
 175 0012 BFF34F8F 		dsb														
 176              	
 177              	@ 0 "" 2
 178              		.thumb
 179              		.syntax unified
 180 0016 7B60     		str	r3, [r7, #4]
 181              	.L9:
 182              	.LBE9:
 183              	.LBE8:
 120:main.c        **** 	/* The heap space has been execeeded. */
 121:main.c        **** 	taskDISABLE_INTERRUPTS();
 122:main.c        **** 	for( ;; );
 184              		.loc 1 122 0 discriminator 1
 185 0018 FEE7     		b	.L9
 186              		.cfi_endproc
 187              	.LFE71:
 188              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 189 001a 00BF     		.text
 190              	.Letext0:
 191              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 192              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 193              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 194              		.file 6 ".\\Source\\include/task.h"
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 10


 195              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 196              		.section	.debug_info,"",%progbits
 197              	.Ldebug_info0:
 198 0000 FC010000 		.4byte	0x1fc
 199 0004 0400     		.2byte	0x4
 200 0006 00000000 		.4byte	.Ldebug_abbrev0
 201 000a 04       		.byte	0x4
 202 000b 01       		.uleb128 0x1
 203 000c 00000000 		.4byte	.LASF29
 204 0010 0C       		.byte	0xc
 205 0011 20020000 		.4byte	.LASF30
 206 0015 CA000000 		.4byte	.LASF31
 207 0019 00000000 		.4byte	.Ldebug_ranges0+0
 208 001d 00000000 		.4byte	0
 209 0021 00000000 		.4byte	.Ldebug_line0
 210 0025 02       		.uleb128 0x2
 211 0026 01       		.byte	0x1
 212 0027 06       		.byte	0x6
 213 0028 83020000 		.4byte	.LASF0
 214 002c 02       		.uleb128 0x2
 215 002d 01       		.byte	0x1
 216 002e 08       		.byte	0x8
 217 002f 27010000 		.4byte	.LASF1
 218 0033 02       		.uleb128 0x2
 219 0034 02       		.byte	0x2
 220 0035 05       		.byte	0x5
 221 0036 43020000 		.4byte	.LASF2
 222 003a 02       		.uleb128 0x2
 223 003b 02       		.byte	0x2
 224 003c 07       		.byte	0x7
 225 003d 52010000 		.4byte	.LASF3
 226 0041 03       		.uleb128 0x3
 227 0042 9B000000 		.4byte	.LASF5
 228 0046 03       		.byte	0x3
 229 0047 3F       		.byte	0x3f
 230 0048 4C000000 		.4byte	0x4c
 231 004c 02       		.uleb128 0x2
 232 004d 04       		.byte	0x4
 233 004e 05       		.byte	0x5
 234 004f 6E020000 		.4byte	.LASF4
 235 0053 03       		.uleb128 0x3
 236 0054 35010000 		.4byte	.LASF6
 237 0058 03       		.byte	0x3
 238 0059 41       		.byte	0x41
 239 005a 5E000000 		.4byte	0x5e
 240 005e 02       		.uleb128 0x2
 241 005f 04       		.byte	0x4
 242 0060 07       		.byte	0x7
 243 0061 40010000 		.4byte	.LASF7
 244 0065 02       		.uleb128 0x2
 245 0066 08       		.byte	0x8
 246 0067 05       		.byte	0x5
 247 0068 12020000 		.4byte	.LASF8
 248 006c 02       		.uleb128 0x2
 249 006d 08       		.byte	0x8
 250 006e 07       		.byte	0x7
 251 006f C0010000 		.4byte	.LASF9
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 11


 252 0073 04       		.uleb128 0x4
 253 0074 04       		.byte	0x4
 254 0075 05       		.byte	0x5
 255 0076 696E7400 		.ascii	"int\000"
 256 007a 02       		.uleb128 0x2
 257 007b 04       		.byte	0x4
 258 007c 07       		.byte	0x7
 259 007d B3010000 		.4byte	.LASF10
 260 0081 03       		.uleb128 0x3
 261 0082 01020000 		.4byte	.LASF11
 262 0086 04       		.byte	0x4
 263 0087 2C       		.byte	0x2c
 264 0088 41000000 		.4byte	0x41
 265 008c 03       		.uleb128 0x3
 266 008d 65020000 		.4byte	.LASF12
 267 0091 04       		.byte	0x4
 268 0092 30       		.byte	0x30
 269 0093 53000000 		.4byte	0x53
 270 0097 02       		.uleb128 0x2
 271 0098 04       		.byte	0x4
 272 0099 04       		.byte	0x4
 273 009a 21010000 		.4byte	.LASF13
 274 009e 02       		.uleb128 0x2
 275 009f 08       		.byte	0x8
 276 00a0 04       		.byte	0x4
 277 00a1 72010000 		.4byte	.LASF14
 278 00a5 02       		.uleb128 0x2
 279 00a6 01       		.byte	0x1
 280 00a7 08       		.byte	0x8
 281 00a8 27020000 		.4byte	.LASF15
 282 00ac 05       		.uleb128 0x5
 283 00ad D7010000 		.4byte	.LASF16
 284 00b1 05       		.byte	0x5
 285 00b2 A002     		.2byte	0x2a0
 286 00b4 B8000000 		.4byte	0xb8
 287 00b8 06       		.uleb128 0x6
 288 00b9 04       		.byte	0x4
 289 00ba BE000000 		.4byte	0xbe
 290 00be 07       		.uleb128 0x7
 291 00bf 02       		.uleb128 0x2
 292 00c0 08       		.byte	0x8
 293 00c1 04       		.byte	0x4
 294 00c2 77020000 		.4byte	.LASF17
 295 00c6 02       		.uleb128 0x2
 296 00c7 04       		.byte	0x4
 297 00c8 07       		.byte	0x7
 298 00c9 09020000 		.4byte	.LASF18
 299 00cd 06       		.uleb128 0x6
 300 00ce 04       		.byte	0x4
 301 00cf A5000000 		.4byte	0xa5
 302 00d3 03       		.uleb128 0x3
 303 00d4 58020000 		.4byte	.LASF19
 304 00d8 06       		.byte	0x6
 305 00d9 46       		.byte	0x46
 306 00da DE000000 		.4byte	0xde
 307 00de 06       		.uleb128 0x6
 308 00df 04       		.byte	0x4
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 12


 309 00e0 E4000000 		.4byte	0xe4
 310 00e4 08       		.uleb128 0x8
 311 00e5 86010000 		.4byte	.LASF32
 312 00e9 09       		.uleb128 0x9
 313 00ea A5000000 		.4byte	.LASF33
 314 00ee 02       		.byte	0x2
 315 00ef C1       		.byte	0xc1
 316 00f0 03       		.byte	0x3
 317 00f1 01010000 		.4byte	0x101
 318 00f5 0A       		.uleb128 0xa
 319 00f6 79010000 		.4byte	.LASF34
 320 00fa 02       		.byte	0x2
 321 00fb C3       		.byte	0xc3
 322 00fc 8C000000 		.4byte	0x8c
 323 0100 00       		.byte	0
 324 0101 0B       		.uleb128 0xb
 325 0102 9A010000 		.4byte	.LASF35
 326 0106 01       		.byte	0x1
 327 0107 37       		.byte	0x37
 328 0108 73000000 		.4byte	0x73
 329 010c 00000000 		.4byte	.LFB68
 330 0110 12000000 		.4byte	.LFE68-.LFB68
 331 0114 01       		.uleb128 0x1
 332 0115 9C       		.byte	0x9c
 333 0116 0C       		.uleb128 0xc
 334 0117 AD020000 		.4byte	.LASF36
 335 011b 01       		.byte	0x1
 336 011c 52       		.byte	0x52
 337 011d 00000000 		.4byte	.LFB69
 338 0121 40000000 		.4byte	.LFE69-.LFB69
 339 0125 01       		.uleb128 0x1
 340 0126 9C       		.byte	0x9c
 341 0127 4C010000 		.4byte	0x14c
 342 012b 0D       		.uleb128 0xd
 343 012c B7000000 		.4byte	.LASF20
 344 0130 01       		.byte	0x1
 345 0131 55       		.byte	0x55
 346 0132 0D       		.uleb128 0xd
 347 0133 9F010000 		.4byte	.LASF21
 348 0137 01       		.byte	0x1
 349 0138 56       		.byte	0x56
 350 0139 0D       		.uleb128 0xd
 351 013a 2C020000 		.4byte	.LASF22
 352 013e 01       		.byte	0x1
 353 013f 57       		.byte	0x57
 354 0140 0E       		.uleb128 0xe
 355 0141 8E000000 		.4byte	.LASF27
 356 0145 01       		.byte	0x1
 357 0146 58       		.byte	0x58
 358 0147 4C010000 		.4byte	0x14c
 359 014b 00       		.byte	0
 360 014c 0F       		.uleb128 0xf
 361 014d AC000000 		.4byte	0xac
 362 0151 57010000 		.4byte	0x157
 363 0155 10       		.uleb128 0x10
 364 0156 00       		.byte	0
 365 0157 11       		.uleb128 0x11
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 13


 366 0158 8F020000 		.4byte	.LASF25
 367 015c 01       		.byte	0x1
 368 015d 6E       		.byte	0x6e
 369 015e 00000000 		.4byte	.LFB70
 370 0162 1E000000 		.4byte	.LFE70-.LFB70
 371 0166 01       		.uleb128 0x1
 372 0167 9C       		.byte	0x9c
 373 0168 AB010000 		.4byte	0x1ab
 374 016c 12       		.uleb128 0x12
 375 016d 3C020000 		.4byte	.LASF23
 376 0171 01       		.byte	0x1
 377 0172 6E       		.byte	0x6e
 378 0173 D3000000 		.4byte	0xd3
 379 0177 02       		.uleb128 0x2
 380 0178 91       		.byte	0x91
 381 0179 6C       		.sleb128 -20
 382 017a 12       		.uleb128 0x12
 383 017b 4D020000 		.4byte	.LASF24
 384 017f 01       		.byte	0x1
 385 0180 6E       		.byte	0x6e
 386 0181 CD000000 		.4byte	0xcd
 387 0185 02       		.uleb128 0x2
 388 0186 91       		.byte	0x91
 389 0187 68       		.sleb128 -24
 390 0188 13       		.uleb128 0x13
 391 0189 E9000000 		.4byte	0xe9
 392 018d 0A000000 		.4byte	.LBB6
 393 0191 12000000 		.4byte	.LBE6-.LBB6
 394 0195 01       		.byte	0x1
 395 0196 71       		.byte	0x71
 396 0197 14       		.uleb128 0x14
 397 0198 0A000000 		.4byte	.LBB7
 398 019c 12000000 		.4byte	.LBE7-.LBB7
 399 01a0 15       		.uleb128 0x15
 400 01a1 F5000000 		.4byte	0xf5
 401 01a5 02       		.uleb128 0x2
 402 01a6 91       		.byte	0x91
 403 01a7 74       		.sleb128 -12
 404 01a8 00       		.byte	0
 405 01a9 00       		.byte	0
 406 01aa 00       		.byte	0
 407 01ab 11       		.uleb128 0x11
 408 01ac E4010000 		.4byte	.LASF26
 409 01b0 01       		.byte	0x1
 410 01b1 76       		.byte	0x76
 411 01b2 00000000 		.4byte	.LFB71
 412 01b6 1A000000 		.4byte	.LFE71-.LFB71
 413 01ba 01       		.uleb128 0x1
 414 01bb 9C       		.byte	0x9c
 415 01bc E3010000 		.4byte	0x1e3
 416 01c0 13       		.uleb128 0x13
 417 01c1 E9000000 		.4byte	0xe9
 418 01c5 06000000 		.4byte	.LBB8
 419 01c9 12000000 		.4byte	.LBE8-.LBB8
 420 01cd 01       		.byte	0x1
 421 01ce 79       		.byte	0x79
 422 01cf 14       		.uleb128 0x14
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 14


 423 01d0 06000000 		.4byte	.LBB9
 424 01d4 12000000 		.4byte	.LBE9-.LBB9
 425 01d8 15       		.uleb128 0x15
 426 01d9 F5000000 		.4byte	0xf5
 427 01dd 02       		.uleb128 0x2
 428 01de 91       		.byte	0x91
 429 01df 74       		.sleb128 -12
 430 01e0 00       		.byte	0
 431 01e1 00       		.byte	0
 432 01e2 00       		.byte	0
 433 01e3 16       		.uleb128 0x16
 434 01e4 65010000 		.4byte	.LASF28
 435 01e8 07       		.byte	0x7
 436 01e9 1207     		.2byte	0x712
 437 01eb EF010000 		.4byte	0x1ef
 438 01ef 17       		.uleb128 0x17
 439 01f0 81000000 		.4byte	0x81
 440 01f4 0E       		.uleb128 0xe
 441 01f5 8E000000 		.4byte	.LASF27
 442 01f9 01       		.byte	0x1
 443 01fa 58       		.byte	0x58
 444 01fb 4C010000 		.4byte	0x14c
 445 01ff 00       		.byte	0
 446              		.section	.debug_abbrev,"",%progbits
 447              	.Ldebug_abbrev0:
 448 0000 01       		.uleb128 0x1
 449 0001 11       		.uleb128 0x11
 450 0002 01       		.byte	0x1
 451 0003 25       		.uleb128 0x25
 452 0004 0E       		.uleb128 0xe
 453 0005 13       		.uleb128 0x13
 454 0006 0B       		.uleb128 0xb
 455 0007 03       		.uleb128 0x3
 456 0008 0E       		.uleb128 0xe
 457 0009 1B       		.uleb128 0x1b
 458 000a 0E       		.uleb128 0xe
 459 000b 55       		.uleb128 0x55
 460 000c 17       		.uleb128 0x17
 461 000d 11       		.uleb128 0x11
 462 000e 01       		.uleb128 0x1
 463 000f 10       		.uleb128 0x10
 464 0010 17       		.uleb128 0x17
 465 0011 00       		.byte	0
 466 0012 00       		.byte	0
 467 0013 02       		.uleb128 0x2
 468 0014 24       		.uleb128 0x24
 469 0015 00       		.byte	0
 470 0016 0B       		.uleb128 0xb
 471 0017 0B       		.uleb128 0xb
 472 0018 3E       		.uleb128 0x3e
 473 0019 0B       		.uleb128 0xb
 474 001a 03       		.uleb128 0x3
 475 001b 0E       		.uleb128 0xe
 476 001c 00       		.byte	0
 477 001d 00       		.byte	0
 478 001e 03       		.uleb128 0x3
 479 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 15


 480 0020 00       		.byte	0
 481 0021 03       		.uleb128 0x3
 482 0022 0E       		.uleb128 0xe
 483 0023 3A       		.uleb128 0x3a
 484 0024 0B       		.uleb128 0xb
 485 0025 3B       		.uleb128 0x3b
 486 0026 0B       		.uleb128 0xb
 487 0027 49       		.uleb128 0x49
 488 0028 13       		.uleb128 0x13
 489 0029 00       		.byte	0
 490 002a 00       		.byte	0
 491 002b 04       		.uleb128 0x4
 492 002c 24       		.uleb128 0x24
 493 002d 00       		.byte	0
 494 002e 0B       		.uleb128 0xb
 495 002f 0B       		.uleb128 0xb
 496 0030 3E       		.uleb128 0x3e
 497 0031 0B       		.uleb128 0xb
 498 0032 03       		.uleb128 0x3
 499 0033 08       		.uleb128 0x8
 500 0034 00       		.byte	0
 501 0035 00       		.byte	0
 502 0036 05       		.uleb128 0x5
 503 0037 16       		.uleb128 0x16
 504 0038 00       		.byte	0
 505 0039 03       		.uleb128 0x3
 506 003a 0E       		.uleb128 0xe
 507 003b 3A       		.uleb128 0x3a
 508 003c 0B       		.uleb128 0xb
 509 003d 3B       		.uleb128 0x3b
 510 003e 05       		.uleb128 0x5
 511 003f 49       		.uleb128 0x49
 512 0040 13       		.uleb128 0x13
 513 0041 00       		.byte	0
 514 0042 00       		.byte	0
 515 0043 06       		.uleb128 0x6
 516 0044 0F       		.uleb128 0xf
 517 0045 00       		.byte	0
 518 0046 0B       		.uleb128 0xb
 519 0047 0B       		.uleb128 0xb
 520 0048 49       		.uleb128 0x49
 521 0049 13       		.uleb128 0x13
 522 004a 00       		.byte	0
 523 004b 00       		.byte	0
 524 004c 07       		.uleb128 0x7
 525 004d 15       		.uleb128 0x15
 526 004e 00       		.byte	0
 527 004f 27       		.uleb128 0x27
 528 0050 19       		.uleb128 0x19
 529 0051 00       		.byte	0
 530 0052 00       		.byte	0
 531 0053 08       		.uleb128 0x8
 532 0054 13       		.uleb128 0x13
 533 0055 00       		.byte	0
 534 0056 03       		.uleb128 0x3
 535 0057 0E       		.uleb128 0xe
 536 0058 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 16


 537 0059 19       		.uleb128 0x19
 538 005a 00       		.byte	0
 539 005b 00       		.byte	0
 540 005c 09       		.uleb128 0x9
 541 005d 2E       		.uleb128 0x2e
 542 005e 01       		.byte	0x1
 543 005f 03       		.uleb128 0x3
 544 0060 0E       		.uleb128 0xe
 545 0061 3A       		.uleb128 0x3a
 546 0062 0B       		.uleb128 0xb
 547 0063 3B       		.uleb128 0x3b
 548 0064 0B       		.uleb128 0xb
 549 0065 27       		.uleb128 0x27
 550 0066 19       		.uleb128 0x19
 551 0067 20       		.uleb128 0x20
 552 0068 0B       		.uleb128 0xb
 553 0069 01       		.uleb128 0x1
 554 006a 13       		.uleb128 0x13
 555 006b 00       		.byte	0
 556 006c 00       		.byte	0
 557 006d 0A       		.uleb128 0xa
 558 006e 34       		.uleb128 0x34
 559 006f 00       		.byte	0
 560 0070 03       		.uleb128 0x3
 561 0071 0E       		.uleb128 0xe
 562 0072 3A       		.uleb128 0x3a
 563 0073 0B       		.uleb128 0xb
 564 0074 3B       		.uleb128 0x3b
 565 0075 0B       		.uleb128 0xb
 566 0076 49       		.uleb128 0x49
 567 0077 13       		.uleb128 0x13
 568 0078 00       		.byte	0
 569 0079 00       		.byte	0
 570 007a 0B       		.uleb128 0xb
 571 007b 2E       		.uleb128 0x2e
 572 007c 00       		.byte	0
 573 007d 3F       		.uleb128 0x3f
 574 007e 19       		.uleb128 0x19
 575 007f 03       		.uleb128 0x3
 576 0080 0E       		.uleb128 0xe
 577 0081 3A       		.uleb128 0x3a
 578 0082 0B       		.uleb128 0xb
 579 0083 3B       		.uleb128 0x3b
 580 0084 0B       		.uleb128 0xb
 581 0085 27       		.uleb128 0x27
 582 0086 19       		.uleb128 0x19
 583 0087 49       		.uleb128 0x49
 584 0088 13       		.uleb128 0x13
 585 0089 11       		.uleb128 0x11
 586 008a 01       		.uleb128 0x1
 587 008b 12       		.uleb128 0x12
 588 008c 06       		.uleb128 0x6
 589 008d 40       		.uleb128 0x40
 590 008e 18       		.uleb128 0x18
 591 008f 9642     		.uleb128 0x2116
 592 0091 19       		.uleb128 0x19
 593 0092 00       		.byte	0
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 17


 594 0093 00       		.byte	0
 595 0094 0C       		.uleb128 0xc
 596 0095 2E       		.uleb128 0x2e
 597 0096 01       		.byte	0x1
 598 0097 03       		.uleb128 0x3
 599 0098 0E       		.uleb128 0xe
 600 0099 3A       		.uleb128 0x3a
 601 009a 0B       		.uleb128 0xb
 602 009b 3B       		.uleb128 0x3b
 603 009c 0B       		.uleb128 0xb
 604 009d 27       		.uleb128 0x27
 605 009e 19       		.uleb128 0x19
 606 009f 11       		.uleb128 0x11
 607 00a0 01       		.uleb128 0x1
 608 00a1 12       		.uleb128 0x12
 609 00a2 06       		.uleb128 0x6
 610 00a3 40       		.uleb128 0x40
 611 00a4 18       		.uleb128 0x18
 612 00a5 9642     		.uleb128 0x2116
 613 00a7 19       		.uleb128 0x19
 614 00a8 01       		.uleb128 0x1
 615 00a9 13       		.uleb128 0x13
 616 00aa 00       		.byte	0
 617 00ab 00       		.byte	0
 618 00ac 0D       		.uleb128 0xd
 619 00ad 2E       		.uleb128 0x2e
 620 00ae 00       		.byte	0
 621 00af 3F       		.uleb128 0x3f
 622 00b0 19       		.uleb128 0x19
 623 00b1 03       		.uleb128 0x3
 624 00b2 0E       		.uleb128 0xe
 625 00b3 3A       		.uleb128 0x3a
 626 00b4 0B       		.uleb128 0xb
 627 00b5 3B       		.uleb128 0x3b
 628 00b6 0B       		.uleb128 0xb
 629 00b7 27       		.uleb128 0x27
 630 00b8 19       		.uleb128 0x19
 631 00b9 3C       		.uleb128 0x3c
 632 00ba 19       		.uleb128 0x19
 633 00bb 00       		.byte	0
 634 00bc 00       		.byte	0
 635 00bd 0E       		.uleb128 0xe
 636 00be 34       		.uleb128 0x34
 637 00bf 00       		.byte	0
 638 00c0 03       		.uleb128 0x3
 639 00c1 0E       		.uleb128 0xe
 640 00c2 3A       		.uleb128 0x3a
 641 00c3 0B       		.uleb128 0xb
 642 00c4 3B       		.uleb128 0x3b
 643 00c5 0B       		.uleb128 0xb
 644 00c6 49       		.uleb128 0x49
 645 00c7 13       		.uleb128 0x13
 646 00c8 3F       		.uleb128 0x3f
 647 00c9 19       		.uleb128 0x19
 648 00ca 3C       		.uleb128 0x3c
 649 00cb 19       		.uleb128 0x19
 650 00cc 00       		.byte	0
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 18


 651 00cd 00       		.byte	0
 652 00ce 0F       		.uleb128 0xf
 653 00cf 01       		.uleb128 0x1
 654 00d0 01       		.byte	0x1
 655 00d1 49       		.uleb128 0x49
 656 00d2 13       		.uleb128 0x13
 657 00d3 01       		.uleb128 0x1
 658 00d4 13       		.uleb128 0x13
 659 00d5 00       		.byte	0
 660 00d6 00       		.byte	0
 661 00d7 10       		.uleb128 0x10
 662 00d8 21       		.uleb128 0x21
 663 00d9 00       		.byte	0
 664 00da 00       		.byte	0
 665 00db 00       		.byte	0
 666 00dc 11       		.uleb128 0x11
 667 00dd 2E       		.uleb128 0x2e
 668 00de 01       		.byte	0x1
 669 00df 3F       		.uleb128 0x3f
 670 00e0 19       		.uleb128 0x19
 671 00e1 03       		.uleb128 0x3
 672 00e2 0E       		.uleb128 0xe
 673 00e3 3A       		.uleb128 0x3a
 674 00e4 0B       		.uleb128 0xb
 675 00e5 3B       		.uleb128 0x3b
 676 00e6 0B       		.uleb128 0xb
 677 00e7 27       		.uleb128 0x27
 678 00e8 19       		.uleb128 0x19
 679 00e9 11       		.uleb128 0x11
 680 00ea 01       		.uleb128 0x1
 681 00eb 12       		.uleb128 0x12
 682 00ec 06       		.uleb128 0x6
 683 00ed 40       		.uleb128 0x40
 684 00ee 18       		.uleb128 0x18
 685 00ef 9742     		.uleb128 0x2117
 686 00f1 19       		.uleb128 0x19
 687 00f2 01       		.uleb128 0x1
 688 00f3 13       		.uleb128 0x13
 689 00f4 00       		.byte	0
 690 00f5 00       		.byte	0
 691 00f6 12       		.uleb128 0x12
 692 00f7 05       		.uleb128 0x5
 693 00f8 00       		.byte	0
 694 00f9 03       		.uleb128 0x3
 695 00fa 0E       		.uleb128 0xe
 696 00fb 3A       		.uleb128 0x3a
 697 00fc 0B       		.uleb128 0xb
 698 00fd 3B       		.uleb128 0x3b
 699 00fe 0B       		.uleb128 0xb
 700 00ff 49       		.uleb128 0x49
 701 0100 13       		.uleb128 0x13
 702 0101 02       		.uleb128 0x2
 703 0102 18       		.uleb128 0x18
 704 0103 00       		.byte	0
 705 0104 00       		.byte	0
 706 0105 13       		.uleb128 0x13
 707 0106 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 19


 708 0107 01       		.byte	0x1
 709 0108 31       		.uleb128 0x31
 710 0109 13       		.uleb128 0x13
 711 010a 11       		.uleb128 0x11
 712 010b 01       		.uleb128 0x1
 713 010c 12       		.uleb128 0x12
 714 010d 06       		.uleb128 0x6
 715 010e 58       		.uleb128 0x58
 716 010f 0B       		.uleb128 0xb
 717 0110 59       		.uleb128 0x59
 718 0111 0B       		.uleb128 0xb
 719 0112 00       		.byte	0
 720 0113 00       		.byte	0
 721 0114 14       		.uleb128 0x14
 722 0115 0B       		.uleb128 0xb
 723 0116 01       		.byte	0x1
 724 0117 11       		.uleb128 0x11
 725 0118 01       		.uleb128 0x1
 726 0119 12       		.uleb128 0x12
 727 011a 06       		.uleb128 0x6
 728 011b 00       		.byte	0
 729 011c 00       		.byte	0
 730 011d 15       		.uleb128 0x15
 731 011e 34       		.uleb128 0x34
 732 011f 00       		.byte	0
 733 0120 31       		.uleb128 0x31
 734 0121 13       		.uleb128 0x13
 735 0122 02       		.uleb128 0x2
 736 0123 18       		.uleb128 0x18
 737 0124 00       		.byte	0
 738 0125 00       		.byte	0
 739 0126 16       		.uleb128 0x16
 740 0127 34       		.uleb128 0x34
 741 0128 00       		.byte	0
 742 0129 03       		.uleb128 0x3
 743 012a 0E       		.uleb128 0xe
 744 012b 3A       		.uleb128 0x3a
 745 012c 0B       		.uleb128 0xb
 746 012d 3B       		.uleb128 0x3b
 747 012e 05       		.uleb128 0x5
 748 012f 49       		.uleb128 0x49
 749 0130 13       		.uleb128 0x13
 750 0131 3F       		.uleb128 0x3f
 751 0132 19       		.uleb128 0x19
 752 0133 3C       		.uleb128 0x3c
 753 0134 19       		.uleb128 0x19
 754 0135 00       		.byte	0
 755 0136 00       		.byte	0
 756 0137 17       		.uleb128 0x17
 757 0138 35       		.uleb128 0x35
 758 0139 00       		.byte	0
 759 013a 49       		.uleb128 0x49
 760 013b 13       		.uleb128 0x13
 761 013c 00       		.byte	0
 762 013d 00       		.byte	0
 763 013e 00       		.byte	0
 764              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 20


 765 0000 34000000 		.4byte	0x34
 766 0004 0200     		.2byte	0x2
 767 0006 00000000 		.4byte	.Ldebug_info0
 768 000a 04       		.byte	0x4
 769 000b 00       		.byte	0
 770 000c 0000     		.2byte	0
 771 000e 0000     		.2byte	0
 772 0010 00000000 		.4byte	.LFB68
 773 0014 12000000 		.4byte	.LFE68-.LFB68
 774 0018 00000000 		.4byte	.LFB69
 775 001c 40000000 		.4byte	.LFE69-.LFB69
 776 0020 00000000 		.4byte	.LFB70
 777 0024 1E000000 		.4byte	.LFE70-.LFB70
 778 0028 00000000 		.4byte	.LFB71
 779 002c 1A000000 		.4byte	.LFE71-.LFB71
 780 0030 00000000 		.4byte	0
 781 0034 00000000 		.4byte	0
 782              		.section	.debug_ranges,"",%progbits
 783              	.Ldebug_ranges0:
 784 0000 00000000 		.4byte	.LFB68
 785 0004 12000000 		.4byte	.LFE68
 786 0008 00000000 		.4byte	.LFB69
 787 000c 40000000 		.4byte	.LFE69
 788 0010 00000000 		.4byte	.LFB70
 789 0014 1E000000 		.4byte	.LFE70
 790 0018 00000000 		.4byte	.LFB71
 791 001c 1A000000 		.4byte	.LFE71
 792 0020 00000000 		.4byte	0
 793 0024 00000000 		.4byte	0
 794              		.section	.debug_line,"",%progbits
 795              	.Ldebug_line0:
 796 0000 0C020000 		.section	.debug_str,"MS",%progbits,1
 796      02009401 
 796      00000201 
 796      FB0E0D00 
 796      01010101 
 797              	.LASF29:
 798 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 798      43313120 
 798      352E342E 
 798      31203230 
 798      31363036 
 799 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 799      20726576 
 799      6973696F 
 799      6E203233 
 799      37373135 
 800 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 800      66756E63 
 800      74696F6E 
 800      2D736563 
 800      74696F6E 
 801              	.LASF27:
 802 008e 43795261 		.ascii	"CyRamVectors\000"
 802      6D566563 
 802      746F7273 
 802      00
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 21


 803              	.LASF5:
 804 009b 5F5F696E 		.ascii	"__int32_t\000"
 804      7433325F 
 804      7400
 805              	.LASF33:
 806 00a5 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 806      74526169 
 806      73654241 
 806      53455052 
 806      4900
 807              	.LASF20:
 808 00b7 78506F72 		.ascii	"xPortPendSVHandler\000"
 808      7450656E 
 808      64535648 
 808      616E646C 
 808      657200
 809              	.LASF31:
 810 00ca 433A5C55 		.ascii	"C:\\Users\\Emil\\Documents\\GitHub\\P4_Vertical_far"
 810      73657273 
 810      5C456D69 
 810      6C5C446F 
 810      63756D65 
 811 00f8 6D5C5254 		.ascii	"m\\RTOS_TEMPLATE-master\\PlanteModul.cydsn\000"
 811      4F535F54 
 811      454D504C 
 811      4154452D 
 811      6D617374 
 812              	.LASF13:
 813 0121 666C6F61 		.ascii	"float\000"
 813      7400
 814              	.LASF1:
 815 0127 756E7369 		.ascii	"unsigned char\000"
 815      676E6564 
 815      20636861 
 815      7200
 816              	.LASF6:
 817 0135 5F5F7569 		.ascii	"__uint32_t\000"
 817      6E743332 
 817      5F7400
 818              	.LASF7:
 819 0140 6C6F6E67 		.ascii	"long unsigned int\000"
 819      20756E73 
 819      69676E65 
 819      6420696E 
 819      7400
 820              	.LASF3:
 821 0152 73686F72 		.ascii	"short unsigned int\000"
 821      7420756E 
 821      7369676E 
 821      65642069 
 821      6E7400
 822              	.LASF28:
 823 0165 49544D5F 		.ascii	"ITM_RxBuffer\000"
 823      52784275 
 823      66666572 
 823      00
 824              	.LASF14:
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 22


 825 0172 646F7562 		.ascii	"double\000"
 825      6C6500
 826              	.LASF34:
 827 0179 756C4E65 		.ascii	"ulNewBASEPRI\000"
 827      77424153 
 827      45505249 
 827      00
 828              	.LASF32:
 829 0186 74736B54 		.ascii	"tskTaskControlBlock\000"
 829      61736B43 
 829      6F6E7472 
 829      6F6C426C 
 829      6F636B00 
 830              	.LASF35:
 831 019a 6D61696E 		.ascii	"main\000"
 831      00
 832              	.LASF21:
 833 019f 78506F72 		.ascii	"xPortSysTickHandler\000"
 833      74537973 
 833      5469636B 
 833      48616E64 
 833      6C657200 
 834              	.LASF10:
 835 01b3 756E7369 		.ascii	"unsigned int\000"
 835      676E6564 
 835      20696E74 
 835      00
 836              	.LASF9:
 837 01c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 837      206C6F6E 
 837      6720756E 
 837      7369676E 
 837      65642069 
 838              	.LASF16:
 839 01d7 63796973 		.ascii	"cyisraddress\000"
 839      72616464 
 839      72657373 
 839      00
 840              	.LASF26:
 841 01e4 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 841      6C696361 
 841      74696F6E 
 841      4D616C6C 
 841      6F634661 
 842              	.LASF11:
 843 0201 696E7433 		.ascii	"int32_t\000"
 843      325F7400 
 844              	.LASF18:
 845 0209 73697A65 		.ascii	"sizetype\000"
 845      74797065 
 845      00
 846              	.LASF8:
 847 0212 6C6F6E67 		.ascii	"long long int\000"
 847      206C6F6E 
 847      6720696E 
 847      7400
 848              	.LASF30:
ARM GAS  C:\Users\Emil\AppData\Local\Temp\ccNEbeoi.s 			page 23


 849 0220 6D61696E 		.ascii	"main.c\000"
 849      2E6300
 850              	.LASF15:
 851 0227 63686172 		.ascii	"char\000"
 851      00
 852              	.LASF22:
 853 022c 76506F72 		.ascii	"vPortSVCHandler\000"
 853      74535643 
 853      48616E64 
 853      6C657200 
 854              	.LASF23:
 855 023c 70785461 		.ascii	"pxTask\000"
 855      736B00
 856              	.LASF2:
 857 0243 73686F72 		.ascii	"short int\000"
 857      7420696E 
 857      7400
 858              	.LASF24:
 859 024d 70635461 		.ascii	"pcTaskName\000"
 859      736B4E61 
 859      6D6500
 860              	.LASF19:
 861 0258 5461736B 		.ascii	"TaskHandle_t\000"
 861      48616E64 
 861      6C655F74 
 861      00
 862              	.LASF12:
 863 0265 75696E74 		.ascii	"uint32_t\000"
 863      33325F74 
 863      00
 864              	.LASF4:
 865 026e 6C6F6E67 		.ascii	"long int\000"
 865      20696E74 
 865      00
 866              	.LASF17:
 867 0277 6C6F6E67 		.ascii	"long double\000"
 867      20646F75 
 867      626C6500 
 868              	.LASF0:
 869 0283 7369676E 		.ascii	"signed char\000"
 869      65642063 
 869      68617200 
 870              	.LASF25:
 871 028f 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 871      6C696361 
 871      74696F6E 
 871      53746163 
 871      6B4F7665 
 872              	.LASF36:
 873 02ad 70727648 		.ascii	"prvHardwareSetup\000"
 873      61726477 
 873      61726553 
 873      65747570 
 873      00
 874              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
