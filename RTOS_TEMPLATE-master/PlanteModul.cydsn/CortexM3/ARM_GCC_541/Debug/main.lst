ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xQueue,4,4
  20              		.section	.rodata
  21              		.align	2
  22              	.LC0:
  23 0000 4932435F 		.ascii	"I2C_Input\000"
  23      496E7075 
  23      7400
  24 000a 0000     		.align	2
  25              	.LC1:
  26 000c 4932435F 		.ascii	"I2C_LED_SET\000"
  26      4C45445F 
  26      53455400 
  27              		.section	.text.main,"ax",%progbits
  28              		.align	2
  29              		.global	main
  30              		.thumb
  31              		.thumb_func
  32              		.type	main, %function
  33              	main:
  34              	.LFB68:
  35              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * FreeRTOS Kernel V10.3.1
   3:main.c        ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:main.c        ****  * this software and associated documentation files (the "Software"), to deal in
   7:main.c        ****  * the Software without restriction, including without limitation the rights to
   8:main.c        ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:main.c        ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:main.c        ****  * subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in all
  13:main.c        ****  * copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:main.c        ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:main.c        ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 2


  19:main.c        ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:main.c        ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:main.c        ****  *
  22:main.c        ****  * http://www.FreeRTOS.org
  23:main.c        ****  * http://aws.amazon.com/freertos
  24:main.c        ****  *
  25:main.c        ****  * 1 tab == 4 spaces!
  26:main.c        ****  */
  27:main.c        **** 
  28:main.c        **** #include <device.h>
  29:main.c        **** 
  30:main.c        **** /* RTOS includes. */
  31:main.c        **** #include "FreeRTOS.h"
  32:main.c        **** #include "task.h"
  33:main.c        **** #include "queue.h"
  34:main.c        **** #include "semphr.h"
  35:main.c        **** #include "GlobalVariables.h"
  36:main.c        **** #include "i2cReaction.h"
  37:main.c        **** 
  38:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  39:main.c        **** tick hook. */
  40:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  41:main.c        **** #define mainCOM_LED							( 3 )
  42:main.c        **** 
  43:main.c        **** /* The number of nano seconds between each processor clock. */
  44:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  45:main.c        **** 
  46:main.c        **** /*
  47:main.c        ****  * Installs the RTOS interrupt handlers and starts the peripherals.
  48:main.c        ****  */
  49:main.c        **** static void prvHardwareSetup( void );
  50:main.c        **** /*---------------------------------------------------------------------------*/
  51:main.c        **** 
  52:main.c        **** void vTask1(void *pvParameters);
  53:main.c        **** void vTask2(void *pvParameters);
  54:main.c        **** 
  55:main.c        **** 
  56:main.c        **** 
  57:main.c        **** 
  58:main.c        **** int main( void )
  59:main.c        **** {
  36              		.loc 1 59 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 82B0     		sub	sp, sp, #8
  45              		.cfi_def_cfa_offset 16
  46 0004 02AF     		add	r7, sp, #8
  47              		.cfi_def_cfa 7, 8
  60:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  61:main.c        **** 	prvHardwareSetup();
  48              		.loc 1 61 0
  49 0006 FFF7FEFF 		bl	prvHardwareSetup
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 3


  62:main.c        **** 
  63:main.c        ****     xQueue = xQueueCreate(5 , sizeof(int8_t));
  50              		.loc 1 63 0
  51 000a 0022     		movs	r2, #0
  52 000c 0121     		movs	r1, #1
  53 000e 0520     		movs	r0, #5
  54 0010 FFF7FEFF 		bl	xQueueGenericCreate
  55 0014 0246     		mov	r2, r0
  56 0016 0D4B     		ldr	r3, .L3
  57 0018 1A60     		str	r2, [r3]
  64:main.c        ****     
  65:main.c        ****     //xTaskCreate(vTask1 , "Task 1" , 1000 , NULL , 1 , NULL);
  66:main.c        ****     //xTaskCreate(vTask2 , "Task 2" , 1000 , NULL , 1 , NULL);
  67:main.c        ****     xTaskCreate(vTaskGetI2CData,"I2C_Input", 1000 ,NULL , 2 , NULL);
  58              		.loc 1 67 0
  59 001a 0023     		movs	r3, #0
  60 001c 0193     		str	r3, [sp, #4]
  61 001e 0223     		movs	r3, #2
  62 0020 0093     		str	r3, [sp]
  63 0022 0023     		movs	r3, #0
  64 0024 4FF47A72 		mov	r2, #1000
  65 0028 0949     		ldr	r1, .L3+4
  66 002a 0A48     		ldr	r0, .L3+8
  67 002c FFF7FEFF 		bl	xTaskCreate
  68:main.c        ****     xTaskCreate(vTaskGetSetLed,"I2C_LED_SET", 1000 ,NULL , 1 , NULL);
  68              		.loc 1 68 0
  69 0030 0023     		movs	r3, #0
  70 0032 0193     		str	r3, [sp, #4]
  71 0034 0123     		movs	r3, #1
  72 0036 0093     		str	r3, [sp]
  73 0038 0023     		movs	r3, #0
  74 003a 4FF47A72 		mov	r2, #1000
  75 003e 0649     		ldr	r1, .L3+12
  76 0040 0648     		ldr	r0, .L3+16
  77 0042 FFF7FEFF 		bl	xTaskCreate
  69:main.c        ****     
  70:main.c        ****     
  71:main.c        **** 	/* Will only get here if there was insufficient memory to create the idle
  72:main.c        ****     task.  The idle task is created within vTaskStartScheduler(). */
  73:main.c        **** 	vTaskStartScheduler();
  78              		.loc 1 73 0
  79 0046 FFF7FEFF 		bl	vTaskStartScheduler
  80              	.L2:
  74:main.c        **** 
  75:main.c        ****     
  76:main.c        ****     
  77:main.c        **** 	/* Should never reach here as the kernel will now be running.  If
  78:main.c        **** 	vTaskStartScheduler() does return then it is very likely that there was
  79:main.c        **** 	insufficient (FreeRTOS) heap space available to create all the tasks,
  80:main.c        **** 	including the idle task that is created within vTaskStartScheduler() itself. */
  81:main.c        **** 	for( ;; );
  81              		.loc 1 81 0 discriminator 1
  82 004a FEE7     		b	.L2
  83              	.L4:
  84              		.align	2
  85              	.L3:
  86 004c 00000000 		.word	xQueue
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 4


  87 0050 00000000 		.word	.LC0
  88 0054 00000000 		.word	vTaskGetI2CData
  89 0058 0C000000 		.word	.LC1
  90 005c 00000000 		.word	vTaskGetSetLed
  91              		.cfi_endproc
  92              	.LFE68:
  93              		.size	main, .-main
  94              		.section	.text.vApplicationIdleHook,"ax",%progbits
  95              		.align	2
  96              		.global	vApplicationIdleHook
  97              		.thumb
  98              		.thumb_func
  99              		.type	vApplicationIdleHook, %function
 100              	vApplicationIdleHook:
 101              	.LFB69:
  82:main.c        **** }
  83:main.c        **** /*---------------------------------------------------------------------------*/
  84:main.c        **** 
  85:main.c        **** 
  86:main.c        **** void vApplicationIdleHook( void ){
 102              		.loc 1 86 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107 0000 80B4     		push	{r7}
 108              		.cfi_def_cfa_offset 4
 109              		.cfi_offset 7, -4
 110 0002 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
  87:main.c        ****     //Pin_LED0_Write(1);
  88:main.c        **** }
 112              		.loc 1 88 0
 113 0004 00BF     		nop
 114 0006 BD46     		mov	sp, r7
 115              		.cfi_def_cfa_register 13
 116              		@ sp needed
 117 0008 80BC     		pop	{r7}
 118              		.cfi_restore 7
 119              		.cfi_def_cfa_offset 0
 120 000a 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE69:
 123              		.size	vApplicationIdleHook, .-vApplicationIdleHook
 124              		.section	.text.prvHardwareSetup,"ax",%progbits
 125              		.align	2
 126              		.thumb
 127              		.thumb_func
 128              		.type	prvHardwareSetup, %function
 129              	prvHardwareSetup:
 130              	.LFB70:
  89:main.c        **** 
  90:main.c        **** 
  91:main.c        **** 
  92:main.c        **** void prvHardwareSetup( void )
  93:main.c        **** {
 131              		.loc 1 93 0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 5


 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0000 80B5     		push	{r7, lr}
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 7, -8
 138              		.cfi_offset 14, -4
 139 0002 00AF     		add	r7, sp, #0
 140              		.cfi_def_cfa_register 7
  94:main.c        **** /* Port layer functions that need to be copied into the vector table. */
  95:main.c        **** extern void xPortPendSVHandler( void );
  96:main.c        **** extern void xPortSysTickHandler( void );
  97:main.c        **** extern void vPortSVCHandler( void );
  98:main.c        **** extern cyisraddress CyRamVectors[];
  99:main.c        **** 
 100:main.c        ****     /*Starting I2C module*/
 101:main.c        ****     I2C_Start();
 141              		.loc 1 101 0
 142 0004 FFF7FEFF 		bl	I2C_Start
 102:main.c        **** 
 103:main.c        **** 	/* Install the OS Interrupt Handlers. */
 104:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
 143              		.loc 1 104 0
 144 0008 054B     		ldr	r3, .L7
 145 000a 064A     		ldr	r2, .L7+4
 146 000c DA62     		str	r2, [r3, #44]
 105:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
 147              		.loc 1 105 0
 148 000e 044B     		ldr	r3, .L7
 149 0010 054A     		ldr	r2, .L7+8
 150 0012 9A63     		str	r2, [r3, #56]
 106:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
 151              		.loc 1 106 0
 152 0014 024B     		ldr	r3, .L7
 153 0016 054A     		ldr	r2, .L7+12
 154 0018 DA63     		str	r2, [r3, #60]
 107:main.c        **** 
 108:main.c        **** 	/* Start-up the peripherals. */
 109:main.c        **** 
 110:main.c        **** 
 111:main.c        **** }
 155              		.loc 1 111 0
 156 001a 00BF     		nop
 157 001c 80BD     		pop	{r7, pc}
 158              	.L8:
 159 001e 00BF     		.align	2
 160              	.L7:
 161 0020 00000000 		.word	CyRamVectors
 162 0024 00000000 		.word	vPortSVCHandler
 163 0028 00000000 		.word	xPortPendSVHandler
 164 002c 00000000 		.word	xPortSysTickHandler
 165              		.cfi_endproc
 166              	.LFE70:
 167              		.size	prvHardwareSetup, .-prvHardwareSetup
 168              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 169              		.align	2
 170              		.global	vApplicationStackOverflowHook
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 6


 171              		.thumb
 172              		.thumb_func
 173              		.type	vApplicationStackOverflowHook, %function
 174              	vApplicationStackOverflowHook:
 175              	.LFB71:
 112:main.c        **** /*---------------------------------------------------------------------------*/
 113:main.c        **** 
 114:main.c        **** 
 115:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName )
 116:main.c        **** {
 176              		.loc 1 116 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 16
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181 0000 80B4     		push	{r7}
 182              		.cfi_def_cfa_offset 4
 183              		.cfi_offset 7, -4
 184 0002 85B0     		sub	sp, sp, #20
 185              		.cfi_def_cfa_offset 24
 186 0004 00AF     		add	r7, sp, #0
 187              		.cfi_def_cfa_register 7
 188 0006 7860     		str	r0, [r7, #4]
 189 0008 3960     		str	r1, [r7]
 190              	.LBB6:
 191              	.LBB7:
 192              		.file 2 ".\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 7


  31:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 8


  88:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:.\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:.\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 9


 145:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 170:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 171:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 173:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 174:.\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 175:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 176:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 177:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 178:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 179:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 180:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 181:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 182:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 183:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 184:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 185:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 186:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 187:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 188:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 189:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 190:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 192:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 193:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 195:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 196:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 197:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 193              		.loc 2 197 0
 194              		.syntax unified
 195              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 196 000a 4FF0A003 			mov r3, #160												
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 10


 197 000e 83F31188 		msr basepri, r3											
 198 0012 BFF36F8F 		isb														
 199 0016 BFF34F8F 		dsb														
 200              	
 201              	@ 0 "" 2
 202              		.thumb
 203              		.syntax unified
 204 001a FB60     		str	r3, [r7, #12]
 205              	.L10:
 206              	.LBE7:
 207              	.LBE6:
 117:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 118:main.c        **** 	taskDISABLE_INTERRUPTS();
 119:main.c        **** 	for( ;; );
 208              		.loc 1 119 0 discriminator 1
 209 001c FEE7     		b	.L10
 210              		.cfi_endproc
 211              	.LFE71:
 212              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 213 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 214              		.align	2
 215              		.global	vApplicationMallocFailedHook
 216              		.thumb
 217              		.thumb_func
 218              		.type	vApplicationMallocFailedHook, %function
 219              	vApplicationMallocFailedHook:
 220              	.LFB72:
 120:main.c        **** }
 121:main.c        **** /*---------------------------------------------------------------------------*/
 122:main.c        **** 
 123:main.c        **** void vApplicationMallocFailedHook( void )
 124:main.c        **** {
 221              		.loc 1 124 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 8
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226 0000 80B4     		push	{r7}
 227              		.cfi_def_cfa_offset 4
 228              		.cfi_offset 7, -4
 229 0002 83B0     		sub	sp, sp, #12
 230              		.cfi_def_cfa_offset 16
 231 0004 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
 233              	.LBB8:
 234              	.LBB9:
 235              		.loc 2 197 0
 236              		.syntax unified
 237              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 238 0006 4FF0A003 			mov r3, #160												
 239 000a 83F31188 		msr basepri, r3											
 240 000e BFF36F8F 		isb														
 241 0012 BFF34F8F 		dsb														
 242              	
 243              	@ 0 "" 2
 244              		.thumb
 245              		.syntax unified
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 11


 246 0016 7B60     		str	r3, [r7, #4]
 247              	.L12:
 248              	.LBE9:
 249              	.LBE8:
 125:main.c        **** 	/* The heap space has been execeeded. */
 126:main.c        **** 	taskDISABLE_INTERRUPTS();
 127:main.c        **** 	for( ;; );
 250              		.loc 1 127 0 discriminator 1
 251 0018 FEE7     		b	.L12
 252              		.cfi_endproc
 253              	.LFE72:
 254              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 255 001a 00BF     		.text
 256              	.Letext0:
 257              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 258              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 259              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 260              		.file 6 ".\\Source\\include/task.h"
 261              		.file 7 ".\\Source\\include/queue.h"
 262              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 263              		.file 9 "GlobalVariables.h"
 264              		.section	.debug_info,"",%progbits
 265              	.Ldebug_info0:
 266 0000 4A020000 		.4byte	0x24a
 267 0004 0400     		.2byte	0x4
 268 0006 00000000 		.4byte	.Ldebug_abbrev0
 269 000a 04       		.byte	0x4
 270 000b 01       		.uleb128 0x1
 271 000c 0A000000 		.4byte	.LASF35
 272 0010 0C       		.byte	0xc
 273 0011 3F020000 		.4byte	.LASF36
 274 0015 E9000000 		.4byte	.LASF37
 275 0019 00000000 		.4byte	.Ldebug_ranges0+0
 276 001d 00000000 		.4byte	0
 277 0021 00000000 		.4byte	.Ldebug_line0
 278 0025 02       		.uleb128 0x2
 279 0026 01       		.byte	0x1
 280 0027 06       		.byte	0x6
 281 0028 A2020000 		.4byte	.LASF0
 282 002c 03       		.uleb128 0x3
 283 002d 00000000 		.4byte	.LASF4
 284 0031 03       		.byte	0x3
 285 0032 1D       		.byte	0x1d
 286 0033 37000000 		.4byte	0x37
 287 0037 02       		.uleb128 0x2
 288 0038 01       		.byte	0x1
 289 0039 08       		.byte	0x8
 290 003a 2E010000 		.4byte	.LASF1
 291 003e 02       		.uleb128 0x2
 292 003f 02       		.byte	0x2
 293 0040 05       		.byte	0x5
 294 0041 62020000 		.4byte	.LASF2
 295 0045 02       		.uleb128 0x2
 296 0046 02       		.byte	0x2
 297 0047 07       		.byte	0x7
 298 0048 59010000 		.4byte	.LASF3
 299 004c 03       		.uleb128 0x3
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 12


 300 004d A5000000 		.4byte	.LASF5
 301 0051 03       		.byte	0x3
 302 0052 3F       		.byte	0x3f
 303 0053 57000000 		.4byte	0x57
 304 0057 02       		.uleb128 0x2
 305 0058 04       		.byte	0x4
 306 0059 05       		.byte	0x5
 307 005a 8D020000 		.4byte	.LASF6
 308 005e 03       		.uleb128 0x3
 309 005f 3C010000 		.4byte	.LASF7
 310 0063 03       		.byte	0x3
 311 0064 41       		.byte	0x41
 312 0065 69000000 		.4byte	0x69
 313 0069 02       		.uleb128 0x2
 314 006a 04       		.byte	0x4
 315 006b 07       		.byte	0x7
 316 006c 47010000 		.4byte	.LASF8
 317 0070 02       		.uleb128 0x2
 318 0071 08       		.byte	0x8
 319 0072 05       		.byte	0x5
 320 0073 31020000 		.4byte	.LASF9
 321 0077 02       		.uleb128 0x2
 322 0078 08       		.byte	0x8
 323 0079 07       		.byte	0x7
 324 007a DF010000 		.4byte	.LASF10
 325 007e 04       		.uleb128 0x4
 326 007f 04       		.byte	0x4
 327 0080 05       		.byte	0x5
 328 0081 696E7400 		.ascii	"int\000"
 329 0085 02       		.uleb128 0x2
 330 0086 04       		.byte	0x4
 331 0087 07       		.byte	0x7
 332 0088 D2010000 		.4byte	.LASF11
 333 008c 03       		.uleb128 0x3
 334 008d F6010000 		.4byte	.LASF12
 335 0091 04       		.byte	0x4
 336 0092 18       		.byte	0x18
 337 0093 2C000000 		.4byte	0x2c
 338 0097 03       		.uleb128 0x3
 339 0098 20020000 		.4byte	.LASF13
 340 009c 04       		.byte	0x4
 341 009d 2C       		.byte	0x2c
 342 009e 4C000000 		.4byte	0x4c
 343 00a2 03       		.uleb128 0x3
 344 00a3 84020000 		.4byte	.LASF14
 345 00a7 04       		.byte	0x4
 346 00a8 30       		.byte	0x30
 347 00a9 5E000000 		.4byte	0x5e
 348 00ad 02       		.uleb128 0x2
 349 00ae 04       		.byte	0x4
 350 00af 04       		.byte	0x4
 351 00b0 28010000 		.4byte	.LASF15
 352 00b4 02       		.uleb128 0x2
 353 00b5 08       		.byte	0x8
 354 00b6 04       		.byte	0x4
 355 00b7 79010000 		.4byte	.LASF16
 356 00bb 02       		.uleb128 0x2
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 13


 357 00bc 01       		.byte	0x1
 358 00bd 08       		.byte	0x8
 359 00be 46020000 		.4byte	.LASF17
 360 00c2 05       		.uleb128 0x5
 361 00c3 8D010000 		.4byte	.LASF18
 362 00c7 05       		.byte	0x5
 363 00c8 A002     		.2byte	0x2a0
 364 00ca CE000000 		.4byte	0xce
 365 00ce 06       		.uleb128 0x6
 366 00cf 04       		.byte	0x4
 367 00d0 D4000000 		.4byte	0xd4
 368 00d4 07       		.uleb128 0x7
 369 00d5 02       		.uleb128 0x2
 370 00d6 08       		.byte	0x8
 371 00d7 04       		.byte	0x4
 372 00d8 96020000 		.4byte	.LASF19
 373 00dc 02       		.uleb128 0x2
 374 00dd 04       		.byte	0x4
 375 00de 07       		.byte	0x7
 376 00df 28020000 		.4byte	.LASF20
 377 00e3 06       		.uleb128 0x6
 378 00e4 04       		.byte	0x4
 379 00e5 BB000000 		.4byte	0xbb
 380 00e9 03       		.uleb128 0x3
 381 00ea 77020000 		.4byte	.LASF21
 382 00ee 06       		.byte	0x6
 383 00ef 46       		.byte	0x46
 384 00f0 F4000000 		.4byte	0xf4
 385 00f4 06       		.uleb128 0x6
 386 00f5 04       		.byte	0x4
 387 00f6 FA000000 		.4byte	0xfa
 388 00fa 08       		.uleb128 0x8
 389 00fb 9A010000 		.4byte	.LASF23
 390 00ff 03       		.uleb128 0x3
 391 0100 B6000000 		.4byte	.LASF22
 392 0104 07       		.byte	0x7
 393 0105 30       		.byte	0x30
 394 0106 0A010000 		.4byte	0x10a
 395 010a 06       		.uleb128 0x6
 396 010b 04       		.byte	0x4
 397 010c 10010000 		.4byte	0x110
 398 0110 08       		.uleb128 0x8
 399 0111 AE010000 		.4byte	.LASF24
 400 0115 09       		.uleb128 0x9
 401 0116 C4000000 		.4byte	.LASF38
 402 011a 02       		.byte	0x2
 403 011b C1       		.byte	0xc1
 404 011c 03       		.byte	0x3
 405 011d 2D010000 		.4byte	0x12d
 406 0121 0A       		.uleb128 0xa
 407 0122 80010000 		.4byte	.LASF39
 408 0126 02       		.byte	0x2
 409 0127 C3       		.byte	0xc3
 410 0128 A2000000 		.4byte	0xa2
 411 012c 00       		.byte	0
 412 012d 0B       		.uleb128 0xb
 413 012e 1B020000 		.4byte	.LASF40
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 14


 414 0132 01       		.byte	0x1
 415 0133 3A       		.byte	0x3a
 416 0134 7E000000 		.4byte	0x7e
 417 0138 00000000 		.4byte	.LFB68
 418 013c 60000000 		.4byte	.LFE68-.LFB68
 419 0140 01       		.uleb128 0x1
 420 0141 9C       		.byte	0x9c
 421 0142 0C       		.uleb128 0xc
 422 0143 DD020000 		.4byte	.LASF41
 423 0147 01       		.byte	0x1
 424 0148 56       		.byte	0x56
 425 0149 00000000 		.4byte	.LFB69
 426 014d 0C000000 		.4byte	.LFE69-.LFB69
 427 0151 01       		.uleb128 0x1
 428 0152 9C       		.byte	0x9c
 429 0153 0D       		.uleb128 0xd
 430 0154 CC020000 		.4byte	.LASF42
 431 0158 01       		.byte	0x1
 432 0159 5C       		.byte	0x5c
 433 015a 00000000 		.4byte	.LFB70
 434 015e 30000000 		.4byte	.LFE70-.LFB70
 435 0162 01       		.uleb128 0x1
 436 0163 9C       		.byte	0x9c
 437 0164 89010000 		.4byte	0x189
 438 0168 0E       		.uleb128 0xe
 439 0169 D6000000 		.4byte	.LASF25
 440 016d 01       		.byte	0x1
 441 016e 5F       		.byte	0x5f
 442 016f 0E       		.uleb128 0xe
 443 0170 BE010000 		.4byte	.LASF26
 444 0174 01       		.byte	0x1
 445 0175 60       		.byte	0x60
 446 0176 0E       		.uleb128 0xe
 447 0177 4B020000 		.4byte	.LASF27
 448 017b 01       		.byte	0x1
 449 017c 61       		.byte	0x61
 450 017d 0F       		.uleb128 0xf
 451 017e 98000000 		.4byte	.LASF32
 452 0182 01       		.byte	0x1
 453 0183 62       		.byte	0x62
 454 0184 89010000 		.4byte	0x189
 455 0188 00       		.byte	0
 456 0189 10       		.uleb128 0x10
 457 018a C2000000 		.4byte	0xc2
 458 018e 94010000 		.4byte	0x194
 459 0192 11       		.uleb128 0x11
 460 0193 00       		.byte	0
 461 0194 12       		.uleb128 0x12
 462 0195 AE020000 		.4byte	.LASF30
 463 0199 01       		.byte	0x1
 464 019a 73       		.byte	0x73
 465 019b 00000000 		.4byte	.LFB71
 466 019f 1E000000 		.4byte	.LFE71-.LFB71
 467 01a3 01       		.uleb128 0x1
 468 01a4 9C       		.byte	0x9c
 469 01a5 E8010000 		.4byte	0x1e8
 470 01a9 13       		.uleb128 0x13
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 15


 471 01aa 5B020000 		.4byte	.LASF28
 472 01ae 01       		.byte	0x1
 473 01af 73       		.byte	0x73
 474 01b0 E9000000 		.4byte	0xe9
 475 01b4 02       		.uleb128 0x2
 476 01b5 91       		.byte	0x91
 477 01b6 6C       		.sleb128 -20
 478 01b7 13       		.uleb128 0x13
 479 01b8 6C020000 		.4byte	.LASF29
 480 01bc 01       		.byte	0x1
 481 01bd 73       		.byte	0x73
 482 01be E3000000 		.4byte	0xe3
 483 01c2 02       		.uleb128 0x2
 484 01c3 91       		.byte	0x91
 485 01c4 68       		.sleb128 -24
 486 01c5 14       		.uleb128 0x14
 487 01c6 15010000 		.4byte	0x115
 488 01ca 0A000000 		.4byte	.LBB6
 489 01ce 12000000 		.4byte	.LBE6-.LBB6
 490 01d2 01       		.byte	0x1
 491 01d3 76       		.byte	0x76
 492 01d4 15       		.uleb128 0x15
 493 01d5 0A000000 		.4byte	.LBB7
 494 01d9 12000000 		.4byte	.LBE7-.LBB7
 495 01dd 16       		.uleb128 0x16
 496 01de 21010000 		.4byte	0x121
 497 01e2 02       		.uleb128 0x2
 498 01e3 91       		.byte	0x91
 499 01e4 74       		.sleb128 -12
 500 01e5 00       		.byte	0
 501 01e6 00       		.byte	0
 502 01e7 00       		.byte	0
 503 01e8 12       		.uleb128 0x12
 504 01e9 FE010000 		.4byte	.LASF31
 505 01ed 01       		.byte	0x1
 506 01ee 7B       		.byte	0x7b
 507 01ef 00000000 		.4byte	.LFB72
 508 01f3 1A000000 		.4byte	.LFE72-.LFB72
 509 01f7 01       		.uleb128 0x1
 510 01f8 9C       		.byte	0x9c
 511 01f9 20020000 		.4byte	0x220
 512 01fd 14       		.uleb128 0x14
 513 01fe 15010000 		.4byte	0x115
 514 0202 06000000 		.4byte	.LBB8
 515 0206 12000000 		.4byte	.LBE8-.LBB8
 516 020a 01       		.byte	0x1
 517 020b 7E       		.byte	0x7e
 518 020c 15       		.uleb128 0x15
 519 020d 06000000 		.4byte	.LBB9
 520 0211 12000000 		.4byte	.LBE9-.LBB9
 521 0215 16       		.uleb128 0x16
 522 0216 21010000 		.4byte	0x121
 523 021a 02       		.uleb128 0x2
 524 021b 91       		.byte	0x91
 525 021c 74       		.sleb128 -12
 526 021d 00       		.byte	0
 527 021e 00       		.byte	0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 16


 528 021f 00       		.byte	0
 529 0220 17       		.uleb128 0x17
 530 0221 6C010000 		.4byte	.LASF33
 531 0225 08       		.byte	0x8
 532 0226 1207     		.2byte	0x712
 533 0228 2C020000 		.4byte	0x22c
 534 022c 18       		.uleb128 0x18
 535 022d 97000000 		.4byte	0x97
 536 0231 19       		.uleb128 0x19
 537 0232 AF000000 		.4byte	.LASF34
 538 0236 09       		.byte	0x9
 539 0237 15       		.byte	0x15
 540 0238 FF000000 		.4byte	0xff
 541 023c 05       		.uleb128 0x5
 542 023d 03       		.byte	0x3
 543 023e 00000000 		.4byte	xQueue
 544 0242 0F       		.uleb128 0xf
 545 0243 98000000 		.4byte	.LASF32
 546 0247 01       		.byte	0x1
 547 0248 62       		.byte	0x62
 548 0249 89010000 		.4byte	0x189
 549 024d 00       		.byte	0
 550              		.section	.debug_abbrev,"",%progbits
 551              	.Ldebug_abbrev0:
 552 0000 01       		.uleb128 0x1
 553 0001 11       		.uleb128 0x11
 554 0002 01       		.byte	0x1
 555 0003 25       		.uleb128 0x25
 556 0004 0E       		.uleb128 0xe
 557 0005 13       		.uleb128 0x13
 558 0006 0B       		.uleb128 0xb
 559 0007 03       		.uleb128 0x3
 560 0008 0E       		.uleb128 0xe
 561 0009 1B       		.uleb128 0x1b
 562 000a 0E       		.uleb128 0xe
 563 000b 55       		.uleb128 0x55
 564 000c 17       		.uleb128 0x17
 565 000d 11       		.uleb128 0x11
 566 000e 01       		.uleb128 0x1
 567 000f 10       		.uleb128 0x10
 568 0010 17       		.uleb128 0x17
 569 0011 00       		.byte	0
 570 0012 00       		.byte	0
 571 0013 02       		.uleb128 0x2
 572 0014 24       		.uleb128 0x24
 573 0015 00       		.byte	0
 574 0016 0B       		.uleb128 0xb
 575 0017 0B       		.uleb128 0xb
 576 0018 3E       		.uleb128 0x3e
 577 0019 0B       		.uleb128 0xb
 578 001a 03       		.uleb128 0x3
 579 001b 0E       		.uleb128 0xe
 580 001c 00       		.byte	0
 581 001d 00       		.byte	0
 582 001e 03       		.uleb128 0x3
 583 001f 16       		.uleb128 0x16
 584 0020 00       		.byte	0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 17


 585 0021 03       		.uleb128 0x3
 586 0022 0E       		.uleb128 0xe
 587 0023 3A       		.uleb128 0x3a
 588 0024 0B       		.uleb128 0xb
 589 0025 3B       		.uleb128 0x3b
 590 0026 0B       		.uleb128 0xb
 591 0027 49       		.uleb128 0x49
 592 0028 13       		.uleb128 0x13
 593 0029 00       		.byte	0
 594 002a 00       		.byte	0
 595 002b 04       		.uleb128 0x4
 596 002c 24       		.uleb128 0x24
 597 002d 00       		.byte	0
 598 002e 0B       		.uleb128 0xb
 599 002f 0B       		.uleb128 0xb
 600 0030 3E       		.uleb128 0x3e
 601 0031 0B       		.uleb128 0xb
 602 0032 03       		.uleb128 0x3
 603 0033 08       		.uleb128 0x8
 604 0034 00       		.byte	0
 605 0035 00       		.byte	0
 606 0036 05       		.uleb128 0x5
 607 0037 16       		.uleb128 0x16
 608 0038 00       		.byte	0
 609 0039 03       		.uleb128 0x3
 610 003a 0E       		.uleb128 0xe
 611 003b 3A       		.uleb128 0x3a
 612 003c 0B       		.uleb128 0xb
 613 003d 3B       		.uleb128 0x3b
 614 003e 05       		.uleb128 0x5
 615 003f 49       		.uleb128 0x49
 616 0040 13       		.uleb128 0x13
 617 0041 00       		.byte	0
 618 0042 00       		.byte	0
 619 0043 06       		.uleb128 0x6
 620 0044 0F       		.uleb128 0xf
 621 0045 00       		.byte	0
 622 0046 0B       		.uleb128 0xb
 623 0047 0B       		.uleb128 0xb
 624 0048 49       		.uleb128 0x49
 625 0049 13       		.uleb128 0x13
 626 004a 00       		.byte	0
 627 004b 00       		.byte	0
 628 004c 07       		.uleb128 0x7
 629 004d 15       		.uleb128 0x15
 630 004e 00       		.byte	0
 631 004f 27       		.uleb128 0x27
 632 0050 19       		.uleb128 0x19
 633 0051 00       		.byte	0
 634 0052 00       		.byte	0
 635 0053 08       		.uleb128 0x8
 636 0054 13       		.uleb128 0x13
 637 0055 00       		.byte	0
 638 0056 03       		.uleb128 0x3
 639 0057 0E       		.uleb128 0xe
 640 0058 3C       		.uleb128 0x3c
 641 0059 19       		.uleb128 0x19
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 18


 642 005a 00       		.byte	0
 643 005b 00       		.byte	0
 644 005c 09       		.uleb128 0x9
 645 005d 2E       		.uleb128 0x2e
 646 005e 01       		.byte	0x1
 647 005f 03       		.uleb128 0x3
 648 0060 0E       		.uleb128 0xe
 649 0061 3A       		.uleb128 0x3a
 650 0062 0B       		.uleb128 0xb
 651 0063 3B       		.uleb128 0x3b
 652 0064 0B       		.uleb128 0xb
 653 0065 27       		.uleb128 0x27
 654 0066 19       		.uleb128 0x19
 655 0067 20       		.uleb128 0x20
 656 0068 0B       		.uleb128 0xb
 657 0069 01       		.uleb128 0x1
 658 006a 13       		.uleb128 0x13
 659 006b 00       		.byte	0
 660 006c 00       		.byte	0
 661 006d 0A       		.uleb128 0xa
 662 006e 34       		.uleb128 0x34
 663 006f 00       		.byte	0
 664 0070 03       		.uleb128 0x3
 665 0071 0E       		.uleb128 0xe
 666 0072 3A       		.uleb128 0x3a
 667 0073 0B       		.uleb128 0xb
 668 0074 3B       		.uleb128 0x3b
 669 0075 0B       		.uleb128 0xb
 670 0076 49       		.uleb128 0x49
 671 0077 13       		.uleb128 0x13
 672 0078 00       		.byte	0
 673 0079 00       		.byte	0
 674 007a 0B       		.uleb128 0xb
 675 007b 2E       		.uleb128 0x2e
 676 007c 00       		.byte	0
 677 007d 3F       		.uleb128 0x3f
 678 007e 19       		.uleb128 0x19
 679 007f 03       		.uleb128 0x3
 680 0080 0E       		.uleb128 0xe
 681 0081 3A       		.uleb128 0x3a
 682 0082 0B       		.uleb128 0xb
 683 0083 3B       		.uleb128 0x3b
 684 0084 0B       		.uleb128 0xb
 685 0085 27       		.uleb128 0x27
 686 0086 19       		.uleb128 0x19
 687 0087 49       		.uleb128 0x49
 688 0088 13       		.uleb128 0x13
 689 0089 11       		.uleb128 0x11
 690 008a 01       		.uleb128 0x1
 691 008b 12       		.uleb128 0x12
 692 008c 06       		.uleb128 0x6
 693 008d 40       		.uleb128 0x40
 694 008e 18       		.uleb128 0x18
 695 008f 9642     		.uleb128 0x2116
 696 0091 19       		.uleb128 0x19
 697 0092 00       		.byte	0
 698 0093 00       		.byte	0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 19


 699 0094 0C       		.uleb128 0xc
 700 0095 2E       		.uleb128 0x2e
 701 0096 00       		.byte	0
 702 0097 3F       		.uleb128 0x3f
 703 0098 19       		.uleb128 0x19
 704 0099 03       		.uleb128 0x3
 705 009a 0E       		.uleb128 0xe
 706 009b 3A       		.uleb128 0x3a
 707 009c 0B       		.uleb128 0xb
 708 009d 3B       		.uleb128 0x3b
 709 009e 0B       		.uleb128 0xb
 710 009f 27       		.uleb128 0x27
 711 00a0 19       		.uleb128 0x19
 712 00a1 11       		.uleb128 0x11
 713 00a2 01       		.uleb128 0x1
 714 00a3 12       		.uleb128 0x12
 715 00a4 06       		.uleb128 0x6
 716 00a5 40       		.uleb128 0x40
 717 00a6 18       		.uleb128 0x18
 718 00a7 9742     		.uleb128 0x2117
 719 00a9 19       		.uleb128 0x19
 720 00aa 00       		.byte	0
 721 00ab 00       		.byte	0
 722 00ac 0D       		.uleb128 0xd
 723 00ad 2E       		.uleb128 0x2e
 724 00ae 01       		.byte	0x1
 725 00af 03       		.uleb128 0x3
 726 00b0 0E       		.uleb128 0xe
 727 00b1 3A       		.uleb128 0x3a
 728 00b2 0B       		.uleb128 0xb
 729 00b3 3B       		.uleb128 0x3b
 730 00b4 0B       		.uleb128 0xb
 731 00b5 27       		.uleb128 0x27
 732 00b6 19       		.uleb128 0x19
 733 00b7 11       		.uleb128 0x11
 734 00b8 01       		.uleb128 0x1
 735 00b9 12       		.uleb128 0x12
 736 00ba 06       		.uleb128 0x6
 737 00bb 40       		.uleb128 0x40
 738 00bc 18       		.uleb128 0x18
 739 00bd 9642     		.uleb128 0x2116
 740 00bf 19       		.uleb128 0x19
 741 00c0 01       		.uleb128 0x1
 742 00c1 13       		.uleb128 0x13
 743 00c2 00       		.byte	0
 744 00c3 00       		.byte	0
 745 00c4 0E       		.uleb128 0xe
 746 00c5 2E       		.uleb128 0x2e
 747 00c6 00       		.byte	0
 748 00c7 3F       		.uleb128 0x3f
 749 00c8 19       		.uleb128 0x19
 750 00c9 03       		.uleb128 0x3
 751 00ca 0E       		.uleb128 0xe
 752 00cb 3A       		.uleb128 0x3a
 753 00cc 0B       		.uleb128 0xb
 754 00cd 3B       		.uleb128 0x3b
 755 00ce 0B       		.uleb128 0xb
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 20


 756 00cf 27       		.uleb128 0x27
 757 00d0 19       		.uleb128 0x19
 758 00d1 3C       		.uleb128 0x3c
 759 00d2 19       		.uleb128 0x19
 760 00d3 00       		.byte	0
 761 00d4 00       		.byte	0
 762 00d5 0F       		.uleb128 0xf
 763 00d6 34       		.uleb128 0x34
 764 00d7 00       		.byte	0
 765 00d8 03       		.uleb128 0x3
 766 00d9 0E       		.uleb128 0xe
 767 00da 3A       		.uleb128 0x3a
 768 00db 0B       		.uleb128 0xb
 769 00dc 3B       		.uleb128 0x3b
 770 00dd 0B       		.uleb128 0xb
 771 00de 49       		.uleb128 0x49
 772 00df 13       		.uleb128 0x13
 773 00e0 3F       		.uleb128 0x3f
 774 00e1 19       		.uleb128 0x19
 775 00e2 3C       		.uleb128 0x3c
 776 00e3 19       		.uleb128 0x19
 777 00e4 00       		.byte	0
 778 00e5 00       		.byte	0
 779 00e6 10       		.uleb128 0x10
 780 00e7 01       		.uleb128 0x1
 781 00e8 01       		.byte	0x1
 782 00e9 49       		.uleb128 0x49
 783 00ea 13       		.uleb128 0x13
 784 00eb 01       		.uleb128 0x1
 785 00ec 13       		.uleb128 0x13
 786 00ed 00       		.byte	0
 787 00ee 00       		.byte	0
 788 00ef 11       		.uleb128 0x11
 789 00f0 21       		.uleb128 0x21
 790 00f1 00       		.byte	0
 791 00f2 00       		.byte	0
 792 00f3 00       		.byte	0
 793 00f4 12       		.uleb128 0x12
 794 00f5 2E       		.uleb128 0x2e
 795 00f6 01       		.byte	0x1
 796 00f7 3F       		.uleb128 0x3f
 797 00f8 19       		.uleb128 0x19
 798 00f9 03       		.uleb128 0x3
 799 00fa 0E       		.uleb128 0xe
 800 00fb 3A       		.uleb128 0x3a
 801 00fc 0B       		.uleb128 0xb
 802 00fd 3B       		.uleb128 0x3b
 803 00fe 0B       		.uleb128 0xb
 804 00ff 27       		.uleb128 0x27
 805 0100 19       		.uleb128 0x19
 806 0101 11       		.uleb128 0x11
 807 0102 01       		.uleb128 0x1
 808 0103 12       		.uleb128 0x12
 809 0104 06       		.uleb128 0x6
 810 0105 40       		.uleb128 0x40
 811 0106 18       		.uleb128 0x18
 812 0107 9742     		.uleb128 0x2117
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 21


 813 0109 19       		.uleb128 0x19
 814 010a 01       		.uleb128 0x1
 815 010b 13       		.uleb128 0x13
 816 010c 00       		.byte	0
 817 010d 00       		.byte	0
 818 010e 13       		.uleb128 0x13
 819 010f 05       		.uleb128 0x5
 820 0110 00       		.byte	0
 821 0111 03       		.uleb128 0x3
 822 0112 0E       		.uleb128 0xe
 823 0113 3A       		.uleb128 0x3a
 824 0114 0B       		.uleb128 0xb
 825 0115 3B       		.uleb128 0x3b
 826 0116 0B       		.uleb128 0xb
 827 0117 49       		.uleb128 0x49
 828 0118 13       		.uleb128 0x13
 829 0119 02       		.uleb128 0x2
 830 011a 18       		.uleb128 0x18
 831 011b 00       		.byte	0
 832 011c 00       		.byte	0
 833 011d 14       		.uleb128 0x14
 834 011e 1D       		.uleb128 0x1d
 835 011f 01       		.byte	0x1
 836 0120 31       		.uleb128 0x31
 837 0121 13       		.uleb128 0x13
 838 0122 11       		.uleb128 0x11
 839 0123 01       		.uleb128 0x1
 840 0124 12       		.uleb128 0x12
 841 0125 06       		.uleb128 0x6
 842 0126 58       		.uleb128 0x58
 843 0127 0B       		.uleb128 0xb
 844 0128 59       		.uleb128 0x59
 845 0129 0B       		.uleb128 0xb
 846 012a 00       		.byte	0
 847 012b 00       		.byte	0
 848 012c 15       		.uleb128 0x15
 849 012d 0B       		.uleb128 0xb
 850 012e 01       		.byte	0x1
 851 012f 11       		.uleb128 0x11
 852 0130 01       		.uleb128 0x1
 853 0131 12       		.uleb128 0x12
 854 0132 06       		.uleb128 0x6
 855 0133 00       		.byte	0
 856 0134 00       		.byte	0
 857 0135 16       		.uleb128 0x16
 858 0136 34       		.uleb128 0x34
 859 0137 00       		.byte	0
 860 0138 31       		.uleb128 0x31
 861 0139 13       		.uleb128 0x13
 862 013a 02       		.uleb128 0x2
 863 013b 18       		.uleb128 0x18
 864 013c 00       		.byte	0
 865 013d 00       		.byte	0
 866 013e 17       		.uleb128 0x17
 867 013f 34       		.uleb128 0x34
 868 0140 00       		.byte	0
 869 0141 03       		.uleb128 0x3
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 22


 870 0142 0E       		.uleb128 0xe
 871 0143 3A       		.uleb128 0x3a
 872 0144 0B       		.uleb128 0xb
 873 0145 3B       		.uleb128 0x3b
 874 0146 05       		.uleb128 0x5
 875 0147 49       		.uleb128 0x49
 876 0148 13       		.uleb128 0x13
 877 0149 3F       		.uleb128 0x3f
 878 014a 19       		.uleb128 0x19
 879 014b 3C       		.uleb128 0x3c
 880 014c 19       		.uleb128 0x19
 881 014d 00       		.byte	0
 882 014e 00       		.byte	0
 883 014f 18       		.uleb128 0x18
 884 0150 35       		.uleb128 0x35
 885 0151 00       		.byte	0
 886 0152 49       		.uleb128 0x49
 887 0153 13       		.uleb128 0x13
 888 0154 00       		.byte	0
 889 0155 00       		.byte	0
 890 0156 19       		.uleb128 0x19
 891 0157 34       		.uleb128 0x34
 892 0158 00       		.byte	0
 893 0159 03       		.uleb128 0x3
 894 015a 0E       		.uleb128 0xe
 895 015b 3A       		.uleb128 0x3a
 896 015c 0B       		.uleb128 0xb
 897 015d 3B       		.uleb128 0x3b
 898 015e 0B       		.uleb128 0xb
 899 015f 49       		.uleb128 0x49
 900 0160 13       		.uleb128 0x13
 901 0161 3F       		.uleb128 0x3f
 902 0162 19       		.uleb128 0x19
 903 0163 02       		.uleb128 0x2
 904 0164 18       		.uleb128 0x18
 905 0165 00       		.byte	0
 906 0166 00       		.byte	0
 907 0167 00       		.byte	0
 908              		.section	.debug_aranges,"",%progbits
 909 0000 3C000000 		.4byte	0x3c
 910 0004 0200     		.2byte	0x2
 911 0006 00000000 		.4byte	.Ldebug_info0
 912 000a 04       		.byte	0x4
 913 000b 00       		.byte	0
 914 000c 0000     		.2byte	0
 915 000e 0000     		.2byte	0
 916 0010 00000000 		.4byte	.LFB68
 917 0014 60000000 		.4byte	.LFE68-.LFB68
 918 0018 00000000 		.4byte	.LFB69
 919 001c 0C000000 		.4byte	.LFE69-.LFB69
 920 0020 00000000 		.4byte	.LFB70
 921 0024 30000000 		.4byte	.LFE70-.LFB70
 922 0028 00000000 		.4byte	.LFB71
 923 002c 1E000000 		.4byte	.LFE71-.LFB71
 924 0030 00000000 		.4byte	.LFB72
 925 0034 1A000000 		.4byte	.LFE72-.LFB72
 926 0038 00000000 		.4byte	0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 23


 927 003c 00000000 		.4byte	0
 928              		.section	.debug_ranges,"",%progbits
 929              	.Ldebug_ranges0:
 930 0000 00000000 		.4byte	.LFB68
 931 0004 60000000 		.4byte	.LFE68
 932 0008 00000000 		.4byte	.LFB69
 933 000c 0C000000 		.4byte	.LFE69
 934 0010 00000000 		.4byte	.LFB70
 935 0014 30000000 		.4byte	.LFE70
 936 0018 00000000 		.4byte	.LFB71
 937 001c 1E000000 		.4byte	.LFE71
 938 0020 00000000 		.4byte	.LFB72
 939 0024 1A000000 		.4byte	.LFE72
 940 0028 00000000 		.4byte	0
 941 002c 00000000 		.4byte	0
 942              		.section	.debug_line,"",%progbits
 943              	.Ldebug_line0:
 944 0000 39020000 		.section	.debug_str,"MS",%progbits,1
 944      0200B401 
 944      00000201 
 944      FB0E0D00 
 944      01010101 
 945              	.LASF4:
 946 0000 5F5F7569 		.ascii	"__uint8_t\000"
 946      6E74385F 
 946      7400
 947              	.LASF35:
 948 000a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 948      43313120 
 948      352E342E 
 948      31203230 
 948      31363036 
 949 003d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 949      20726576 
 949      6973696F 
 949      6E203233 
 949      37373135 
 950 0070 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 950      66756E63 
 950      74696F6E 
 950      2D736563 
 950      74696F6E 
 951              	.LASF32:
 952 0098 43795261 		.ascii	"CyRamVectors\000"
 952      6D566563 
 952      746F7273 
 952      00
 953              	.LASF5:
 954 00a5 5F5F696E 		.ascii	"__int32_t\000"
 954      7433325F 
 954      7400
 955              	.LASF34:
 956 00af 78517565 		.ascii	"xQueue\000"
 956      756500
 957              	.LASF22:
 958 00b6 51756575 		.ascii	"QueueHandle_t\000"
 958      6548616E 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 24


 958      646C655F 
 958      7400
 959              	.LASF38:
 960 00c4 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 960      74526169 
 960      73654241 
 960      53455052 
 960      4900
 961              	.LASF25:
 962 00d6 78506F72 		.ascii	"xPortPendSVHandler\000"
 962      7450656E 
 962      64535648 
 962      616E646C 
 962      657200
 963              	.LASF37:
 964 00e9 433A5C43 		.ascii	"C:\\Code\\PSoCProjector\\RTOS_TEMPLATE-master\\Test"
 964      6F64655C 
 964      50536F43 
 964      50726F6A 
 964      6563746F 
 965 0118 4C656765 		.ascii	"LegePlads.cydsn\000"
 965      506C6164 
 965      732E6379 
 965      64736E00 
 966              	.LASF15:
 967 0128 666C6F61 		.ascii	"float\000"
 967      7400
 968              	.LASF1:
 969 012e 756E7369 		.ascii	"unsigned char\000"
 969      676E6564 
 969      20636861 
 969      7200
 970              	.LASF7:
 971 013c 5F5F7569 		.ascii	"__uint32_t\000"
 971      6E743332 
 971      5F7400
 972              	.LASF8:
 973 0147 6C6F6E67 		.ascii	"long unsigned int\000"
 973      20756E73 
 973      69676E65 
 973      6420696E 
 973      7400
 974              	.LASF3:
 975 0159 73686F72 		.ascii	"short unsigned int\000"
 975      7420756E 
 975      7369676E 
 975      65642069 
 975      6E7400
 976              	.LASF33:
 977 016c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 977      52784275 
 977      66666572 
 977      00
 978              	.LASF16:
 979 0179 646F7562 		.ascii	"double\000"
 979      6C6500
 980              	.LASF39:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 25


 981 0180 756C4E65 		.ascii	"ulNewBASEPRI\000"
 981      77424153 
 981      45505249 
 981      00
 982              	.LASF18:
 983 018d 63796973 		.ascii	"cyisraddress\000"
 983      72616464 
 983      72657373 
 983      00
 984              	.LASF23:
 985 019a 74736B54 		.ascii	"tskTaskControlBlock\000"
 985      61736B43 
 985      6F6E7472 
 985      6F6C426C 
 985      6F636B00 
 986              	.LASF24:
 987 01ae 51756575 		.ascii	"QueueDefinition\000"
 987      65446566 
 987      696E6974 
 987      696F6E00 
 988              	.LASF26:
 989 01be 78506F72 		.ascii	"xPortSysTickHandler\000"
 989      74537973 
 989      5469636B 
 989      48616E64 
 989      6C657200 
 990              	.LASF11:
 991 01d2 756E7369 		.ascii	"unsigned int\000"
 991      676E6564 
 991      20696E74 
 991      00
 992              	.LASF10:
 993 01df 6C6F6E67 		.ascii	"long long unsigned int\000"
 993      206C6F6E 
 993      6720756E 
 993      7369676E 
 993      65642069 
 994              	.LASF12:
 995 01f6 75696E74 		.ascii	"uint8_t\000"
 995      385F7400 
 996              	.LASF31:
 997 01fe 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 997      6C696361 
 997      74696F6E 
 997      4D616C6C 
 997      6F634661 
 998              	.LASF40:
 999 021b 6D61696E 		.ascii	"main\000"
 999      00
 1000              	.LASF13:
 1001 0220 696E7433 		.ascii	"int32_t\000"
 1001      325F7400 
 1002              	.LASF20:
 1003 0228 73697A65 		.ascii	"sizetype\000"
 1003      74797065 
 1003      00
 1004              	.LASF9:
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 26


 1005 0231 6C6F6E67 		.ascii	"long long int\000"
 1005      206C6F6E 
 1005      6720696E 
 1005      7400
 1006              	.LASF36:
 1007 023f 6D61696E 		.ascii	"main.c\000"
 1007      2E6300
 1008              	.LASF17:
 1009 0246 63686172 		.ascii	"char\000"
 1009      00
 1010              	.LASF27:
 1011 024b 76506F72 		.ascii	"vPortSVCHandler\000"
 1011      74535643 
 1011      48616E64 
 1011      6C657200 
 1012              	.LASF28:
 1013 025b 70785461 		.ascii	"pxTask\000"
 1013      736B00
 1014              	.LASF2:
 1015 0262 73686F72 		.ascii	"short int\000"
 1015      7420696E 
 1015      7400
 1016              	.LASF29:
 1017 026c 70635461 		.ascii	"pcTaskName\000"
 1017      736B4E61 
 1017      6D6500
 1018              	.LASF21:
 1019 0277 5461736B 		.ascii	"TaskHandle_t\000"
 1019      48616E64 
 1019      6C655F74 
 1019      00
 1020              	.LASF14:
 1021 0284 75696E74 		.ascii	"uint32_t\000"
 1021      33325F74 
 1021      00
 1022              	.LASF6:
 1023 028d 6C6F6E67 		.ascii	"long int\000"
 1023      20696E74 
 1023      00
 1024              	.LASF19:
 1025 0296 6C6F6E67 		.ascii	"long double\000"
 1025      20646F75 
 1025      626C6500 
 1026              	.LASF0:
 1027 02a2 7369676E 		.ascii	"signed char\000"
 1027      65642063 
 1027      68617200 
 1028              	.LASF30:
 1029 02ae 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 1029      6C696361 
 1029      74696F6E 
 1029      53746163 
 1029      6B4F7665 
 1030              	.LASF42:
 1031 02cc 70727648 		.ascii	"prvHardwareSetup\000"
 1031      61726477 
 1031      61726553 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\cczdy24I.s 			page 27


 1031      65747570 
 1031      00
 1032              	.LASF41:
 1033 02dd 76417070 		.ascii	"vApplicationIdleHook\000"
 1033      6C696361 
 1033      74696F6E 
 1033      49646C65 
 1033      486F6F6B 
 1034              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
