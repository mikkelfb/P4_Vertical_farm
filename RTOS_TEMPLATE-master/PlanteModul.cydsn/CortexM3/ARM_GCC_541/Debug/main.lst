ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.main,"ax",%progbits
  20              		.align	2
  21              		.global	main
  22              		.thumb
  23              		.thumb_func
  24              		.type	main, %function
  25              	main:
  26              	.LFB68:
  27              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * FreeRTOS Kernel V10.3.1
   3:main.c        ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:main.c        ****  * this software and associated documentation files (the "Software"), to deal in
   7:main.c        ****  * the Software without restriction, including without limitation the rights to
   8:main.c        ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:main.c        ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:main.c        ****  * subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in all
  13:main.c        ****  * copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:main.c        ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:main.c        ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:main.c        ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:main.c        ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:main.c        ****  *
  22:main.c        ****  * http://www.FreeRTOS.org
  23:main.c        ****  * http://aws.amazon.com/freertos
  24:main.c        ****  *
  25:main.c        ****  * 1 tab == 4 spaces!
  26:main.c        ****  */
  27:main.c        **** 
  28:main.c        **** #include <device.h>
  29:main.c        **** 
  30:main.c        **** /* RTOS includes. */
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 2


  31:main.c        **** #include "FreeRTOS.h"
  32:main.c        **** #include "task.h"
  33:main.c        **** #include "queue.h"
  34:main.c        **** #include "semphr.h"
  35:main.c        **** 
  36:main.c        **** /* Plantemodul includes */
  37:main.c        **** #include "Nutrients.h"
  38:main.c        **** 
  39:main.c        **** 
  40:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  41:main.c        **** tick hook. */
  42:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  43:main.c        **** #define mainCOM_LED							( 3 )
  44:main.c        **** 
  45:main.c        **** /* The number of nano seconds between each processor clock. */
  46:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  47:main.c        **** 
  48:main.c        **** /*
  49:main.c        ****  * Installs the RTOS interrupt handlers and starts the peripherals.
  50:main.c        ****  */
  51:main.c        **** static void prvHardwareSetup( void );
  52:main.c        **** /*---------------------------------------------------------------------------*/
  53:main.c        **** 
  54:main.c        **** 
  55:main.c        **** int main( void )
  56:main.c        **** {
  28              		.loc 1 56 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  57:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  58:main.c        **** 	prvHardwareSetup();
  38              		.loc 1 58 0
  39 0004 FFF7FEFF 		bl	prvHardwareSetup
  59:main.c        ****     
  60:main.c        ****     vNutrientsInit(); //initialize Nutrients control task and parameteres
  40              		.loc 1 60 0
  41 0008 FFF7FEFF 		bl	vNutrientsInit
  61:main.c        ****      
  62:main.c        ****     
  63:main.c        ****     
  64:main.c        **** 	/* Will only get here if there was insufficient memory to create the idle
  65:main.c        ****     task.  The idle task is created within vTaskStartScheduler(). */
  66:main.c        **** 	vTaskStartScheduler();
  42              		.loc 1 66 0
  43 000c FFF7FEFF 		bl	vTaskStartScheduler
  44              	.L2:
  67:main.c        **** 
  68:main.c        ****     
  69:main.c        ****     
  70:main.c        **** 	/* Should never reach here as the kernel will now be running.  If
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 3


  71:main.c        **** 	vTaskStartScheduler() does return then it is very likely that there was
  72:main.c        **** 	insufficient (FreeRTOS) heap space available to create all the tasks,
  73:main.c        **** 	including the idle task that is created within vTaskStartScheduler() itself. */
  74:main.c        **** 	for( ;; );
  45              		.loc 1 74 0 discriminator 1
  46 0010 FEE7     		b	.L2
  47              		.cfi_endproc
  48              	.LFE68:
  49              		.size	main, .-main
  50 0012 00BF     		.section	.text.prvHardwareSetup,"ax",%progbits
  51              		.align	2
  52              		.thumb
  53              		.thumb_func
  54              		.type	prvHardwareSetup, %function
  55              	prvHardwareSetup:
  56              	.LFB69:
  75:main.c        **** }
  76:main.c        **** /*---------------------------------------------------------------------------*/
  77:main.c        **** 
  78:main.c        **** 
  79:main.c        **** 
  80:main.c        **** 
  81:main.c        **** 
  82:main.c        **** void prvHardwareSetup( void )
  83:main.c        **** {
  57              		.loc 1 83 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 00AF     		add	r7, sp, #0
  66              		.cfi_def_cfa_register 7
  84:main.c        **** /* Port layer functions that need to be copied into the vector table. */
  85:main.c        **** extern void xPortPendSVHandler( void );
  86:main.c        **** extern void xPortSysTickHandler( void );
  87:main.c        **** extern void vPortSVCHandler( void );
  88:main.c        **** extern cyisraddress CyRamVectors[];
  89:main.c        **** 
  90:main.c        **** 
  91:main.c        **** 
  92:main.c        **** 	/* Install the OS Interrupt Handlers. */
  93:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
  67              		.loc 1 93 0
  68 0004 074B     		ldr	r3, .L4
  69 0006 084A     		ldr	r2, .L4+4
  70 0008 DA62     		str	r2, [r3, #44]
  94:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
  71              		.loc 1 94 0
  72 000a 064B     		ldr	r3, .L4
  73 000c 074A     		ldr	r2, .L4+8
  74 000e 9A63     		str	r2, [r3, #56]
  95:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
  75              		.loc 1 95 0
  76 0010 044B     		ldr	r3, .L4
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 4


  77 0012 074A     		ldr	r2, .L4+12
  78 0014 DA63     		str	r2, [r3, #60]
  96:main.c        **** 
  97:main.c        ****     
  98:main.c        **** 	/* Start-up the peripherals. */
  99:main.c        ****     
 100:main.c        ****     
 101:main.c        ****     PWM_PERISTALTISK_1_Start(); //start PWM module 1
  79              		.loc 1 101 0
  80 0016 FFF7FEFF 		bl	PWM_PERISTALTISK_1_Start
 102:main.c        ****     PWM_PERISTALTISK_2_Start(); //start PWM module 2
  81              		.loc 1 102 0
  82 001a FFF7FEFF 		bl	PWM_PERISTALTISK_2_Start
 103:main.c        **** }
  83              		.loc 1 103 0
  84 001e 00BF     		nop
  85 0020 80BD     		pop	{r7, pc}
  86              	.L5:
  87 0022 00BF     		.align	2
  88              	.L4:
  89 0024 00000000 		.word	CyRamVectors
  90 0028 00000000 		.word	vPortSVCHandler
  91 002c 00000000 		.word	xPortPendSVHandler
  92 0030 00000000 		.word	xPortSysTickHandler
  93              		.cfi_endproc
  94              	.LFE69:
  95              		.size	prvHardwareSetup, .-prvHardwareSetup
  96              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
  97              		.align	2
  98              		.global	vApplicationStackOverflowHook
  99              		.thumb
 100              		.thumb_func
 101              		.type	vApplicationStackOverflowHook, %function
 102              	vApplicationStackOverflowHook:
 103              	.LFB70:
 104:main.c        **** /*---------------------------------------------------------------------------*/
 105:main.c        **** 
 106:main.c        **** 
 107:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName )
 108:main.c        **** {
 104              		.loc 1 108 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 16
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109 0000 80B4     		push	{r7}
 110              		.cfi_def_cfa_offset 4
 111              		.cfi_offset 7, -4
 112 0002 85B0     		sub	sp, sp, #20
 113              		.cfi_def_cfa_offset 24
 114 0004 00AF     		add	r7, sp, #0
 115              		.cfi_def_cfa_register 7
 116 0006 7860     		str	r0, [r7, #4]
 117 0008 3960     		str	r1, [r7]
 118              	.LBB6:
 119              	.LBB7:
 120              		.file 2 ".\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 5


   1:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 6


  58:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:.\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:.\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 7


 115:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 170:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 171:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 8


 172:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 173:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 174:.\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 175:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 176:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 177:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 178:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 179:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 180:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 181:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 182:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 183:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 184:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 185:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 186:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 187:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 188:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 189:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 190:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 192:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 193:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 195:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 196:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 197:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 121              		.loc 2 197 0
 122              		.syntax unified
 123              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 124 000a 4FF0A003 			mov r3, #160												
 125 000e 83F31188 		msr basepri, r3											
 126 0012 BFF36F8F 		isb														
 127 0016 BFF34F8F 		dsb														
 128              	
 129              	@ 0 "" 2
 130              		.thumb
 131              		.syntax unified
 132 001a FB60     		str	r3, [r7, #12]
 133              	.L7:
 134              	.LBE7:
 135              	.LBE6:
 109:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 110:main.c        **** 	taskDISABLE_INTERRUPTS();
 111:main.c        **** 	for( ;; );
 136              		.loc 1 111 0 discriminator 1
 137 001c FEE7     		b	.L7
 138              		.cfi_endproc
 139              	.LFE70:
 140              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 141 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 142              		.align	2
 143              		.global	vApplicationMallocFailedHook
 144              		.thumb
 145              		.thumb_func
 146              		.type	vApplicationMallocFailedHook, %function
 147              	vApplicationMallocFailedHook:
 148              	.LFB71:
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 9


 112:main.c        **** }
 113:main.c        **** /*---------------------------------------------------------------------------*/
 114:main.c        **** 
 115:main.c        **** void vApplicationMallocFailedHook( void )
 116:main.c        **** {
 149              		.loc 1 116 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154 0000 80B4     		push	{r7}
 155              		.cfi_def_cfa_offset 4
 156              		.cfi_offset 7, -4
 157 0002 83B0     		sub	sp, sp, #12
 158              		.cfi_def_cfa_offset 16
 159 0004 00AF     		add	r7, sp, #0
 160              		.cfi_def_cfa_register 7
 161              	.LBB8:
 162              	.LBB9:
 163              		.loc 2 197 0
 164              		.syntax unified
 165              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 166 0006 4FF0A003 			mov r3, #160												
 167 000a 83F31188 		msr basepri, r3											
 168 000e BFF36F8F 		isb														
 169 0012 BFF34F8F 		dsb														
 170              	
 171              	@ 0 "" 2
 172              		.thumb
 173              		.syntax unified
 174 0016 7B60     		str	r3, [r7, #4]
 175              	.L9:
 176              	.LBE9:
 177              	.LBE8:
 117:main.c        **** 	/* The heap space has been execeeded. */
 118:main.c        **** 	taskDISABLE_INTERRUPTS();
 119:main.c        **** 	for( ;; );
 178              		.loc 1 119 0 discriminator 1
 179 0018 FEE7     		b	.L9
 180              		.cfi_endproc
 181              	.LFE71:
 182              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 183 001a 00BF     		.text
 184              	.Letext0:
 185              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 186              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 187              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 188              		.file 6 ".\\Source\\include/task.h"
 189              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 190              		.section	.debug_info,"",%progbits
 191              	.Ldebug_info0:
 192 0000 FC010000 		.4byte	0x1fc
 193 0004 0400     		.2byte	0x4
 194 0006 00000000 		.4byte	.Ldebug_abbrev0
 195 000a 04       		.byte	0x4
 196 000b 01       		.uleb128 0x1
 197 000c 00000000 		.4byte	.LASF29
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 10


 198 0010 0C       		.byte	0xc
 199 0011 C9010000 		.4byte	.LASF30
 200 0015 E5010000 		.4byte	.LASF31
 201 0019 00000000 		.4byte	.Ldebug_ranges0+0
 202 001d 00000000 		.4byte	0
 203 0021 00000000 		.4byte	.Ldebug_line0
 204 0025 02       		.uleb128 0x2
 205 0026 01       		.byte	0x1
 206 0027 06       		.byte	0x6
 207 0028 8F020000 		.4byte	.LASF0
 208 002c 02       		.uleb128 0x2
 209 002d 01       		.byte	0x1
 210 002e 08       		.byte	0x8
 211 002f D0000000 		.4byte	.LASF1
 212 0033 02       		.uleb128 0x2
 213 0034 02       		.byte	0x2
 214 0035 05       		.byte	0x5
 215 0036 4F020000 		.4byte	.LASF2
 216 003a 02       		.uleb128 0x2
 217 003b 02       		.byte	0x2
 218 003c 07       		.byte	0x7
 219 003d FB000000 		.4byte	.LASF3
 220 0041 03       		.uleb128 0x3
 221 0042 9B000000 		.4byte	.LASF5
 222 0046 03       		.byte	0x3
 223 0047 3F       		.byte	0x3f
 224 0048 4C000000 		.4byte	0x4c
 225 004c 02       		.uleb128 0x2
 226 004d 04       		.byte	0x4
 227 004e 05       		.byte	0x5
 228 004f 7A020000 		.4byte	.LASF4
 229 0053 03       		.uleb128 0x3
 230 0054 DE000000 		.4byte	.LASF6
 231 0058 03       		.byte	0x3
 232 0059 41       		.byte	0x41
 233 005a 5E000000 		.4byte	0x5e
 234 005e 02       		.uleb128 0x2
 235 005f 04       		.byte	0x4
 236 0060 07       		.byte	0x7
 237 0061 E9000000 		.4byte	.LASF7
 238 0065 02       		.uleb128 0x2
 239 0066 08       		.byte	0x8
 240 0067 05       		.byte	0x5
 241 0068 BB010000 		.4byte	.LASF8
 242 006c 02       		.uleb128 0x2
 243 006d 08       		.byte	0x8
 244 006e 07       		.byte	0x7
 245 006f 69010000 		.4byte	.LASF9
 246 0073 04       		.uleb128 0x4
 247 0074 04       		.byte	0x4
 248 0075 05       		.byte	0x5
 249 0076 696E7400 		.ascii	"int\000"
 250 007a 02       		.uleb128 0x2
 251 007b 04       		.byte	0x4
 252 007c 07       		.byte	0x7
 253 007d 5C010000 		.4byte	.LASF10
 254 0081 03       		.uleb128 0x3
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 11


 255 0082 AA010000 		.4byte	.LASF11
 256 0086 04       		.byte	0x4
 257 0087 2C       		.byte	0x2c
 258 0088 41000000 		.4byte	0x41
 259 008c 03       		.uleb128 0x3
 260 008d 71020000 		.4byte	.LASF12
 261 0091 04       		.byte	0x4
 262 0092 30       		.byte	0x30
 263 0093 53000000 		.4byte	0x53
 264 0097 02       		.uleb128 0x2
 265 0098 04       		.byte	0x4
 266 0099 04       		.byte	0x4
 267 009a CA000000 		.4byte	.LASF13
 268 009e 02       		.uleb128 0x2
 269 009f 08       		.byte	0x8
 270 00a0 04       		.byte	0x4
 271 00a1 1B010000 		.4byte	.LASF14
 272 00a5 02       		.uleb128 0x2
 273 00a6 01       		.byte	0x1
 274 00a7 08       		.byte	0x8
 275 00a8 D0010000 		.4byte	.LASF15
 276 00ac 05       		.uleb128 0x5
 277 00ad 80010000 		.4byte	.LASF16
 278 00b1 05       		.byte	0x5
 279 00b2 A002     		.2byte	0x2a0
 280 00b4 B8000000 		.4byte	0xb8
 281 00b8 06       		.uleb128 0x6
 282 00b9 04       		.byte	0x4
 283 00ba BE000000 		.4byte	0xbe
 284 00be 07       		.uleb128 0x7
 285 00bf 02       		.uleb128 0x2
 286 00c0 08       		.byte	0x8
 287 00c1 04       		.byte	0x4
 288 00c2 83020000 		.4byte	.LASF17
 289 00c6 02       		.uleb128 0x2
 290 00c7 04       		.byte	0x4
 291 00c8 07       		.byte	0x7
 292 00c9 B2010000 		.4byte	.LASF18
 293 00cd 06       		.uleb128 0x6
 294 00ce 04       		.byte	0x4
 295 00cf A5000000 		.4byte	0xa5
 296 00d3 03       		.uleb128 0x3
 297 00d4 64020000 		.4byte	.LASF19
 298 00d8 06       		.byte	0x6
 299 00d9 46       		.byte	0x46
 300 00da DE000000 		.4byte	0xde
 301 00de 06       		.uleb128 0x6
 302 00df 04       		.byte	0x4
 303 00e0 E4000000 		.4byte	0xe4
 304 00e4 08       		.uleb128 0x8
 305 00e5 2F010000 		.4byte	.LASF32
 306 00e9 09       		.uleb128 0x9
 307 00ea A5000000 		.4byte	.LASF33
 308 00ee 02       		.byte	0x2
 309 00ef C1       		.byte	0xc1
 310 00f0 03       		.byte	0x3
 311 00f1 01010000 		.4byte	0x101
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 12


 312 00f5 0A       		.uleb128 0xa
 313 00f6 22010000 		.4byte	.LASF34
 314 00fa 02       		.byte	0x2
 315 00fb C3       		.byte	0xc3
 316 00fc 8C000000 		.4byte	0x8c
 317 0100 00       		.byte	0
 318 0101 0B       		.uleb128 0xb
 319 0102 43010000 		.4byte	.LASF35
 320 0106 01       		.byte	0x1
 321 0107 37       		.byte	0x37
 322 0108 73000000 		.4byte	0x73
 323 010c 00000000 		.4byte	.LFB68
 324 0110 12000000 		.4byte	.LFE68-.LFB68
 325 0114 01       		.uleb128 0x1
 326 0115 9C       		.byte	0x9c
 327 0116 0C       		.uleb128 0xc
 328 0117 B9020000 		.4byte	.LASF36
 329 011b 01       		.byte	0x1
 330 011c 52       		.byte	0x52
 331 011d 00000000 		.4byte	.LFB69
 332 0121 34000000 		.4byte	.LFE69-.LFB69
 333 0125 01       		.uleb128 0x1
 334 0126 9C       		.byte	0x9c
 335 0127 4C010000 		.4byte	0x14c
 336 012b 0D       		.uleb128 0xd
 337 012c B7000000 		.4byte	.LASF20
 338 0130 01       		.byte	0x1
 339 0131 55       		.byte	0x55
 340 0132 0D       		.uleb128 0xd
 341 0133 48010000 		.4byte	.LASF21
 342 0137 01       		.byte	0x1
 343 0138 56       		.byte	0x56
 344 0139 0D       		.uleb128 0xd
 345 013a D5010000 		.4byte	.LASF22
 346 013e 01       		.byte	0x1
 347 013f 57       		.byte	0x57
 348 0140 0E       		.uleb128 0xe
 349 0141 8E000000 		.4byte	.LASF27
 350 0145 01       		.byte	0x1
 351 0146 58       		.byte	0x58
 352 0147 4C010000 		.4byte	0x14c
 353 014b 00       		.byte	0
 354 014c 0F       		.uleb128 0xf
 355 014d AC000000 		.4byte	0xac
 356 0151 57010000 		.4byte	0x157
 357 0155 10       		.uleb128 0x10
 358 0156 00       		.byte	0
 359 0157 11       		.uleb128 0x11
 360 0158 9B020000 		.4byte	.LASF25
 361 015c 01       		.byte	0x1
 362 015d 6B       		.byte	0x6b
 363 015e 00000000 		.4byte	.LFB70
 364 0162 1E000000 		.4byte	.LFE70-.LFB70
 365 0166 01       		.uleb128 0x1
 366 0167 9C       		.byte	0x9c
 367 0168 AB010000 		.4byte	0x1ab
 368 016c 12       		.uleb128 0x12
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 13


 369 016d 48020000 		.4byte	.LASF23
 370 0171 01       		.byte	0x1
 371 0172 6B       		.byte	0x6b
 372 0173 D3000000 		.4byte	0xd3
 373 0177 02       		.uleb128 0x2
 374 0178 91       		.byte	0x91
 375 0179 6C       		.sleb128 -20
 376 017a 12       		.uleb128 0x12
 377 017b 59020000 		.4byte	.LASF24
 378 017f 01       		.byte	0x1
 379 0180 6B       		.byte	0x6b
 380 0181 CD000000 		.4byte	0xcd
 381 0185 02       		.uleb128 0x2
 382 0186 91       		.byte	0x91
 383 0187 68       		.sleb128 -24
 384 0188 13       		.uleb128 0x13
 385 0189 E9000000 		.4byte	0xe9
 386 018d 0A000000 		.4byte	.LBB6
 387 0191 12000000 		.4byte	.LBE6-.LBB6
 388 0195 01       		.byte	0x1
 389 0196 6E       		.byte	0x6e
 390 0197 14       		.uleb128 0x14
 391 0198 0A000000 		.4byte	.LBB7
 392 019c 12000000 		.4byte	.LBE7-.LBB7
 393 01a0 15       		.uleb128 0x15
 394 01a1 F5000000 		.4byte	0xf5
 395 01a5 02       		.uleb128 0x2
 396 01a6 91       		.byte	0x91
 397 01a7 74       		.sleb128 -12
 398 01a8 00       		.byte	0
 399 01a9 00       		.byte	0
 400 01aa 00       		.byte	0
 401 01ab 11       		.uleb128 0x11
 402 01ac 8D010000 		.4byte	.LASF26
 403 01b0 01       		.byte	0x1
 404 01b1 73       		.byte	0x73
 405 01b2 00000000 		.4byte	.LFB71
 406 01b6 1A000000 		.4byte	.LFE71-.LFB71
 407 01ba 01       		.uleb128 0x1
 408 01bb 9C       		.byte	0x9c
 409 01bc E3010000 		.4byte	0x1e3
 410 01c0 13       		.uleb128 0x13
 411 01c1 E9000000 		.4byte	0xe9
 412 01c5 06000000 		.4byte	.LBB8
 413 01c9 12000000 		.4byte	.LBE8-.LBB8
 414 01cd 01       		.byte	0x1
 415 01ce 76       		.byte	0x76
 416 01cf 14       		.uleb128 0x14
 417 01d0 06000000 		.4byte	.LBB9
 418 01d4 12000000 		.4byte	.LBE9-.LBB9
 419 01d8 15       		.uleb128 0x15
 420 01d9 F5000000 		.4byte	0xf5
 421 01dd 02       		.uleb128 0x2
 422 01de 91       		.byte	0x91
 423 01df 74       		.sleb128 -12
 424 01e0 00       		.byte	0
 425 01e1 00       		.byte	0
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 14


 426 01e2 00       		.byte	0
 427 01e3 16       		.uleb128 0x16
 428 01e4 0E010000 		.4byte	.LASF28
 429 01e8 07       		.byte	0x7
 430 01e9 1207     		.2byte	0x712
 431 01eb EF010000 		.4byte	0x1ef
 432 01ef 17       		.uleb128 0x17
 433 01f0 81000000 		.4byte	0x81
 434 01f4 0E       		.uleb128 0xe
 435 01f5 8E000000 		.4byte	.LASF27
 436 01f9 01       		.byte	0x1
 437 01fa 58       		.byte	0x58
 438 01fb 4C010000 		.4byte	0x14c
 439 01ff 00       		.byte	0
 440              		.section	.debug_abbrev,"",%progbits
 441              	.Ldebug_abbrev0:
 442 0000 01       		.uleb128 0x1
 443 0001 11       		.uleb128 0x11
 444 0002 01       		.byte	0x1
 445 0003 25       		.uleb128 0x25
 446 0004 0E       		.uleb128 0xe
 447 0005 13       		.uleb128 0x13
 448 0006 0B       		.uleb128 0xb
 449 0007 03       		.uleb128 0x3
 450 0008 0E       		.uleb128 0xe
 451 0009 1B       		.uleb128 0x1b
 452 000a 0E       		.uleb128 0xe
 453 000b 55       		.uleb128 0x55
 454 000c 17       		.uleb128 0x17
 455 000d 11       		.uleb128 0x11
 456 000e 01       		.uleb128 0x1
 457 000f 10       		.uleb128 0x10
 458 0010 17       		.uleb128 0x17
 459 0011 00       		.byte	0
 460 0012 00       		.byte	0
 461 0013 02       		.uleb128 0x2
 462 0014 24       		.uleb128 0x24
 463 0015 00       		.byte	0
 464 0016 0B       		.uleb128 0xb
 465 0017 0B       		.uleb128 0xb
 466 0018 3E       		.uleb128 0x3e
 467 0019 0B       		.uleb128 0xb
 468 001a 03       		.uleb128 0x3
 469 001b 0E       		.uleb128 0xe
 470 001c 00       		.byte	0
 471 001d 00       		.byte	0
 472 001e 03       		.uleb128 0x3
 473 001f 16       		.uleb128 0x16
 474 0020 00       		.byte	0
 475 0021 03       		.uleb128 0x3
 476 0022 0E       		.uleb128 0xe
 477 0023 3A       		.uleb128 0x3a
 478 0024 0B       		.uleb128 0xb
 479 0025 3B       		.uleb128 0x3b
 480 0026 0B       		.uleb128 0xb
 481 0027 49       		.uleb128 0x49
 482 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 15


 483 0029 00       		.byte	0
 484 002a 00       		.byte	0
 485 002b 04       		.uleb128 0x4
 486 002c 24       		.uleb128 0x24
 487 002d 00       		.byte	0
 488 002e 0B       		.uleb128 0xb
 489 002f 0B       		.uleb128 0xb
 490 0030 3E       		.uleb128 0x3e
 491 0031 0B       		.uleb128 0xb
 492 0032 03       		.uleb128 0x3
 493 0033 08       		.uleb128 0x8
 494 0034 00       		.byte	0
 495 0035 00       		.byte	0
 496 0036 05       		.uleb128 0x5
 497 0037 16       		.uleb128 0x16
 498 0038 00       		.byte	0
 499 0039 03       		.uleb128 0x3
 500 003a 0E       		.uleb128 0xe
 501 003b 3A       		.uleb128 0x3a
 502 003c 0B       		.uleb128 0xb
 503 003d 3B       		.uleb128 0x3b
 504 003e 05       		.uleb128 0x5
 505 003f 49       		.uleb128 0x49
 506 0040 13       		.uleb128 0x13
 507 0041 00       		.byte	0
 508 0042 00       		.byte	0
 509 0043 06       		.uleb128 0x6
 510 0044 0F       		.uleb128 0xf
 511 0045 00       		.byte	0
 512 0046 0B       		.uleb128 0xb
 513 0047 0B       		.uleb128 0xb
 514 0048 49       		.uleb128 0x49
 515 0049 13       		.uleb128 0x13
 516 004a 00       		.byte	0
 517 004b 00       		.byte	0
 518 004c 07       		.uleb128 0x7
 519 004d 15       		.uleb128 0x15
 520 004e 00       		.byte	0
 521 004f 27       		.uleb128 0x27
 522 0050 19       		.uleb128 0x19
 523 0051 00       		.byte	0
 524 0052 00       		.byte	0
 525 0053 08       		.uleb128 0x8
 526 0054 13       		.uleb128 0x13
 527 0055 00       		.byte	0
 528 0056 03       		.uleb128 0x3
 529 0057 0E       		.uleb128 0xe
 530 0058 3C       		.uleb128 0x3c
 531 0059 19       		.uleb128 0x19
 532 005a 00       		.byte	0
 533 005b 00       		.byte	0
 534 005c 09       		.uleb128 0x9
 535 005d 2E       		.uleb128 0x2e
 536 005e 01       		.byte	0x1
 537 005f 03       		.uleb128 0x3
 538 0060 0E       		.uleb128 0xe
 539 0061 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 16


 540 0062 0B       		.uleb128 0xb
 541 0063 3B       		.uleb128 0x3b
 542 0064 0B       		.uleb128 0xb
 543 0065 27       		.uleb128 0x27
 544 0066 19       		.uleb128 0x19
 545 0067 20       		.uleb128 0x20
 546 0068 0B       		.uleb128 0xb
 547 0069 01       		.uleb128 0x1
 548 006a 13       		.uleb128 0x13
 549 006b 00       		.byte	0
 550 006c 00       		.byte	0
 551 006d 0A       		.uleb128 0xa
 552 006e 34       		.uleb128 0x34
 553 006f 00       		.byte	0
 554 0070 03       		.uleb128 0x3
 555 0071 0E       		.uleb128 0xe
 556 0072 3A       		.uleb128 0x3a
 557 0073 0B       		.uleb128 0xb
 558 0074 3B       		.uleb128 0x3b
 559 0075 0B       		.uleb128 0xb
 560 0076 49       		.uleb128 0x49
 561 0077 13       		.uleb128 0x13
 562 0078 00       		.byte	0
 563 0079 00       		.byte	0
 564 007a 0B       		.uleb128 0xb
 565 007b 2E       		.uleb128 0x2e
 566 007c 00       		.byte	0
 567 007d 3F       		.uleb128 0x3f
 568 007e 19       		.uleb128 0x19
 569 007f 03       		.uleb128 0x3
 570 0080 0E       		.uleb128 0xe
 571 0081 3A       		.uleb128 0x3a
 572 0082 0B       		.uleb128 0xb
 573 0083 3B       		.uleb128 0x3b
 574 0084 0B       		.uleb128 0xb
 575 0085 27       		.uleb128 0x27
 576 0086 19       		.uleb128 0x19
 577 0087 49       		.uleb128 0x49
 578 0088 13       		.uleb128 0x13
 579 0089 11       		.uleb128 0x11
 580 008a 01       		.uleb128 0x1
 581 008b 12       		.uleb128 0x12
 582 008c 06       		.uleb128 0x6
 583 008d 40       		.uleb128 0x40
 584 008e 18       		.uleb128 0x18
 585 008f 9642     		.uleb128 0x2116
 586 0091 19       		.uleb128 0x19
 587 0092 00       		.byte	0
 588 0093 00       		.byte	0
 589 0094 0C       		.uleb128 0xc
 590 0095 2E       		.uleb128 0x2e
 591 0096 01       		.byte	0x1
 592 0097 03       		.uleb128 0x3
 593 0098 0E       		.uleb128 0xe
 594 0099 3A       		.uleb128 0x3a
 595 009a 0B       		.uleb128 0xb
 596 009b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 17


 597 009c 0B       		.uleb128 0xb
 598 009d 27       		.uleb128 0x27
 599 009e 19       		.uleb128 0x19
 600 009f 11       		.uleb128 0x11
 601 00a0 01       		.uleb128 0x1
 602 00a1 12       		.uleb128 0x12
 603 00a2 06       		.uleb128 0x6
 604 00a3 40       		.uleb128 0x40
 605 00a4 18       		.uleb128 0x18
 606 00a5 9642     		.uleb128 0x2116
 607 00a7 19       		.uleb128 0x19
 608 00a8 01       		.uleb128 0x1
 609 00a9 13       		.uleb128 0x13
 610 00aa 00       		.byte	0
 611 00ab 00       		.byte	0
 612 00ac 0D       		.uleb128 0xd
 613 00ad 2E       		.uleb128 0x2e
 614 00ae 00       		.byte	0
 615 00af 3F       		.uleb128 0x3f
 616 00b0 19       		.uleb128 0x19
 617 00b1 03       		.uleb128 0x3
 618 00b2 0E       		.uleb128 0xe
 619 00b3 3A       		.uleb128 0x3a
 620 00b4 0B       		.uleb128 0xb
 621 00b5 3B       		.uleb128 0x3b
 622 00b6 0B       		.uleb128 0xb
 623 00b7 27       		.uleb128 0x27
 624 00b8 19       		.uleb128 0x19
 625 00b9 3C       		.uleb128 0x3c
 626 00ba 19       		.uleb128 0x19
 627 00bb 00       		.byte	0
 628 00bc 00       		.byte	0
 629 00bd 0E       		.uleb128 0xe
 630 00be 34       		.uleb128 0x34
 631 00bf 00       		.byte	0
 632 00c0 03       		.uleb128 0x3
 633 00c1 0E       		.uleb128 0xe
 634 00c2 3A       		.uleb128 0x3a
 635 00c3 0B       		.uleb128 0xb
 636 00c4 3B       		.uleb128 0x3b
 637 00c5 0B       		.uleb128 0xb
 638 00c6 49       		.uleb128 0x49
 639 00c7 13       		.uleb128 0x13
 640 00c8 3F       		.uleb128 0x3f
 641 00c9 19       		.uleb128 0x19
 642 00ca 3C       		.uleb128 0x3c
 643 00cb 19       		.uleb128 0x19
 644 00cc 00       		.byte	0
 645 00cd 00       		.byte	0
 646 00ce 0F       		.uleb128 0xf
 647 00cf 01       		.uleb128 0x1
 648 00d0 01       		.byte	0x1
 649 00d1 49       		.uleb128 0x49
 650 00d2 13       		.uleb128 0x13
 651 00d3 01       		.uleb128 0x1
 652 00d4 13       		.uleb128 0x13
 653 00d5 00       		.byte	0
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 18


 654 00d6 00       		.byte	0
 655 00d7 10       		.uleb128 0x10
 656 00d8 21       		.uleb128 0x21
 657 00d9 00       		.byte	0
 658 00da 00       		.byte	0
 659 00db 00       		.byte	0
 660 00dc 11       		.uleb128 0x11
 661 00dd 2E       		.uleb128 0x2e
 662 00de 01       		.byte	0x1
 663 00df 3F       		.uleb128 0x3f
 664 00e0 19       		.uleb128 0x19
 665 00e1 03       		.uleb128 0x3
 666 00e2 0E       		.uleb128 0xe
 667 00e3 3A       		.uleb128 0x3a
 668 00e4 0B       		.uleb128 0xb
 669 00e5 3B       		.uleb128 0x3b
 670 00e6 0B       		.uleb128 0xb
 671 00e7 27       		.uleb128 0x27
 672 00e8 19       		.uleb128 0x19
 673 00e9 11       		.uleb128 0x11
 674 00ea 01       		.uleb128 0x1
 675 00eb 12       		.uleb128 0x12
 676 00ec 06       		.uleb128 0x6
 677 00ed 40       		.uleb128 0x40
 678 00ee 18       		.uleb128 0x18
 679 00ef 9742     		.uleb128 0x2117
 680 00f1 19       		.uleb128 0x19
 681 00f2 01       		.uleb128 0x1
 682 00f3 13       		.uleb128 0x13
 683 00f4 00       		.byte	0
 684 00f5 00       		.byte	0
 685 00f6 12       		.uleb128 0x12
 686 00f7 05       		.uleb128 0x5
 687 00f8 00       		.byte	0
 688 00f9 03       		.uleb128 0x3
 689 00fa 0E       		.uleb128 0xe
 690 00fb 3A       		.uleb128 0x3a
 691 00fc 0B       		.uleb128 0xb
 692 00fd 3B       		.uleb128 0x3b
 693 00fe 0B       		.uleb128 0xb
 694 00ff 49       		.uleb128 0x49
 695 0100 13       		.uleb128 0x13
 696 0101 02       		.uleb128 0x2
 697 0102 18       		.uleb128 0x18
 698 0103 00       		.byte	0
 699 0104 00       		.byte	0
 700 0105 13       		.uleb128 0x13
 701 0106 1D       		.uleb128 0x1d
 702 0107 01       		.byte	0x1
 703 0108 31       		.uleb128 0x31
 704 0109 13       		.uleb128 0x13
 705 010a 11       		.uleb128 0x11
 706 010b 01       		.uleb128 0x1
 707 010c 12       		.uleb128 0x12
 708 010d 06       		.uleb128 0x6
 709 010e 58       		.uleb128 0x58
 710 010f 0B       		.uleb128 0xb
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 19


 711 0110 59       		.uleb128 0x59
 712 0111 0B       		.uleb128 0xb
 713 0112 00       		.byte	0
 714 0113 00       		.byte	0
 715 0114 14       		.uleb128 0x14
 716 0115 0B       		.uleb128 0xb
 717 0116 01       		.byte	0x1
 718 0117 11       		.uleb128 0x11
 719 0118 01       		.uleb128 0x1
 720 0119 12       		.uleb128 0x12
 721 011a 06       		.uleb128 0x6
 722 011b 00       		.byte	0
 723 011c 00       		.byte	0
 724 011d 15       		.uleb128 0x15
 725 011e 34       		.uleb128 0x34
 726 011f 00       		.byte	0
 727 0120 31       		.uleb128 0x31
 728 0121 13       		.uleb128 0x13
 729 0122 02       		.uleb128 0x2
 730 0123 18       		.uleb128 0x18
 731 0124 00       		.byte	0
 732 0125 00       		.byte	0
 733 0126 16       		.uleb128 0x16
 734 0127 34       		.uleb128 0x34
 735 0128 00       		.byte	0
 736 0129 03       		.uleb128 0x3
 737 012a 0E       		.uleb128 0xe
 738 012b 3A       		.uleb128 0x3a
 739 012c 0B       		.uleb128 0xb
 740 012d 3B       		.uleb128 0x3b
 741 012e 05       		.uleb128 0x5
 742 012f 49       		.uleb128 0x49
 743 0130 13       		.uleb128 0x13
 744 0131 3F       		.uleb128 0x3f
 745 0132 19       		.uleb128 0x19
 746 0133 3C       		.uleb128 0x3c
 747 0134 19       		.uleb128 0x19
 748 0135 00       		.byte	0
 749 0136 00       		.byte	0
 750 0137 17       		.uleb128 0x17
 751 0138 35       		.uleb128 0x35
 752 0139 00       		.byte	0
 753 013a 49       		.uleb128 0x49
 754 013b 13       		.uleb128 0x13
 755 013c 00       		.byte	0
 756 013d 00       		.byte	0
 757 013e 00       		.byte	0
 758              		.section	.debug_aranges,"",%progbits
 759 0000 34000000 		.4byte	0x34
 760 0004 0200     		.2byte	0x2
 761 0006 00000000 		.4byte	.Ldebug_info0
 762 000a 04       		.byte	0x4
 763 000b 00       		.byte	0
 764 000c 0000     		.2byte	0
 765 000e 0000     		.2byte	0
 766 0010 00000000 		.4byte	.LFB68
 767 0014 12000000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 20


 768 0018 00000000 		.4byte	.LFB69
 769 001c 34000000 		.4byte	.LFE69-.LFB69
 770 0020 00000000 		.4byte	.LFB70
 771 0024 1E000000 		.4byte	.LFE70-.LFB70
 772 0028 00000000 		.4byte	.LFB71
 773 002c 1A000000 		.4byte	.LFE71-.LFB71
 774 0030 00000000 		.4byte	0
 775 0034 00000000 		.4byte	0
 776              		.section	.debug_ranges,"",%progbits
 777              	.Ldebug_ranges0:
 778 0000 00000000 		.4byte	.LFB68
 779 0004 12000000 		.4byte	.LFE68
 780 0008 00000000 		.4byte	.LFB69
 781 000c 34000000 		.4byte	.LFE69
 782 0010 00000000 		.4byte	.LFB70
 783 0014 1E000000 		.4byte	.LFE70
 784 0018 00000000 		.4byte	.LFB71
 785 001c 1A000000 		.4byte	.LFE71
 786 0020 00000000 		.4byte	0
 787 0024 00000000 		.4byte	0
 788              		.section	.debug_line,"",%progbits
 789              	.Ldebug_line0:
 790 0000 09020000 		.section	.debug_str,"MS",%progbits,1
 790      02009401 
 790      00000201 
 790      FB0E0D00 
 790      01010101 
 791              	.LASF29:
 792 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 792      43313120 
 792      352E342E 
 792      31203230 
 792      31363036 
 793 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 793      20726576 
 793      6973696F 
 793      6E203233 
 793      37373135 
 794 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 794      66756E63 
 794      74696F6E 
 794      2D736563 
 794      74696F6E 
 795              	.LASF27:
 796 008e 43795261 		.ascii	"CyRamVectors\000"
 796      6D566563 
 796      746F7273 
 796      00
 797              	.LASF5:
 798 009b 5F5F696E 		.ascii	"__int32_t\000"
 798      7433325F 
 798      7400
 799              	.LASF33:
 800 00a5 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 800      74526169 
 800      73654241 
 800      53455052 
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 21


 800      4900
 801              	.LASF20:
 802 00b7 78506F72 		.ascii	"xPortPendSVHandler\000"
 802      7450656E 
 802      64535648 
 802      616E646C 
 802      657200
 803              	.LASF13:
 804 00ca 666C6F61 		.ascii	"float\000"
 804      7400
 805              	.LASF1:
 806 00d0 756E7369 		.ascii	"unsigned char\000"
 806      676E6564 
 806      20636861 
 806      7200
 807              	.LASF6:
 808 00de 5F5F7569 		.ascii	"__uint32_t\000"
 808      6E743332 
 808      5F7400
 809              	.LASF7:
 810 00e9 6C6F6E67 		.ascii	"long unsigned int\000"
 810      20756E73 
 810      69676E65 
 810      6420696E 
 810      7400
 811              	.LASF3:
 812 00fb 73686F72 		.ascii	"short unsigned int\000"
 812      7420756E 
 812      7369676E 
 812      65642069 
 812      6E7400
 813              	.LASF28:
 814 010e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 814      52784275 
 814      66666572 
 814      00
 815              	.LASF14:
 816 011b 646F7562 		.ascii	"double\000"
 816      6C6500
 817              	.LASF34:
 818 0122 756C4E65 		.ascii	"ulNewBASEPRI\000"
 818      77424153 
 818      45505249 
 818      00
 819              	.LASF32:
 820 012f 74736B54 		.ascii	"tskTaskControlBlock\000"
 820      61736B43 
 820      6F6E7472 
 820      6F6C426C 
 820      6F636B00 
 821              	.LASF35:
 822 0143 6D61696E 		.ascii	"main\000"
 822      00
 823              	.LASF21:
 824 0148 78506F72 		.ascii	"xPortSysTickHandler\000"
 824      74537973 
 824      5469636B 
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 22


 824      48616E64 
 824      6C657200 
 825              	.LASF10:
 826 015c 756E7369 		.ascii	"unsigned int\000"
 826      676E6564 
 826      20696E74 
 826      00
 827              	.LASF9:
 828 0169 6C6F6E67 		.ascii	"long long unsigned int\000"
 828      206C6F6E 
 828      6720756E 
 828      7369676E 
 828      65642069 
 829              	.LASF16:
 830 0180 63796973 		.ascii	"cyisraddress\000"
 830      72616464 
 830      72657373 
 830      00
 831              	.LASF26:
 832 018d 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 832      6C696361 
 832      74696F6E 
 832      4D616C6C 
 832      6F634661 
 833              	.LASF11:
 834 01aa 696E7433 		.ascii	"int32_t\000"
 834      325F7400 
 835              	.LASF18:
 836 01b2 73697A65 		.ascii	"sizetype\000"
 836      74797065 
 836      00
 837              	.LASF8:
 838 01bb 6C6F6E67 		.ascii	"long long int\000"
 838      206C6F6E 
 838      6720696E 
 838      7400
 839              	.LASF30:
 840 01c9 6D61696E 		.ascii	"main.c\000"
 840      2E6300
 841              	.LASF15:
 842 01d0 63686172 		.ascii	"char\000"
 842      00
 843              	.LASF22:
 844 01d5 76506F72 		.ascii	"vPortSVCHandler\000"
 844      74535643 
 844      48616E64 
 844      6C657200 
 845              	.LASF31:
 846 01e5 433A5C55 		.ascii	"C:\\Users\\mabo\\Documents\\AAU_EIT\\4-semester\\P4"
 846      73657273 
 846      5C6D6162 
 846      6F5C446F 
 846      63756D65 
 847 0212 5F566572 		.ascii	"_Vertical_farm\\RTOS_TEMPLATE-master\\PlanteModul.c"
 847      74696361 
 847      6C5F6661 
 847      726D5C52 
ARM GAS  C:\Users\mabo\AppData\Local\Temp\ccGjZ5Ob.s 			page 23


 847      544F535F 
 848 0243 7964736E 		.ascii	"ydsn\000"
 848      00
 849              	.LASF23:
 850 0248 70785461 		.ascii	"pxTask\000"
 850      736B00
 851              	.LASF2:
 852 024f 73686F72 		.ascii	"short int\000"
 852      7420696E 
 852      7400
 853              	.LASF24:
 854 0259 70635461 		.ascii	"pcTaskName\000"
 854      736B4E61 
 854      6D6500
 855              	.LASF19:
 856 0264 5461736B 		.ascii	"TaskHandle_t\000"
 856      48616E64 
 856      6C655F74 
 856      00
 857              	.LASF12:
 858 0271 75696E74 		.ascii	"uint32_t\000"
 858      33325F74 
 858      00
 859              	.LASF4:
 860 027a 6C6F6E67 		.ascii	"long int\000"
 860      20696E74 
 860      00
 861              	.LASF17:
 862 0283 6C6F6E67 		.ascii	"long double\000"
 862      20646F75 
 862      626C6500 
 863              	.LASF0:
 864 028f 7369676E 		.ascii	"signed char\000"
 864      65642063 
 864      68617200 
 865              	.LASF25:
 866 029b 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 866      6C696361 
 866      74696F6E 
 866      53746163 
 866      6B4F7665 
 867              	.LASF36:
 868 02b9 70727648 		.ascii	"prvHardwareSetup\000"
 868      61726477 
 868      61726553 
 868      65747570 
 868      00
 869              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
