ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	DS18x8_Sensor,32,4
  20              		.comm	DS18x8_DataReady,1,1
  21              		.section	.text.main,"ax",%progbits
  22              		.align	2
  23              		.global	main
  24              		.thumb
  25              		.thumb_func
  26              		.type	main, %function
  27              	main:
  28              	.LFB68:
  29              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * FreeRTOS Kernel V10.3.1
   3:main.c        ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:main.c        ****  * this software and associated documentation files (the "Software"), to deal in
   7:main.c        ****  * the Software without restriction, including without limitation the rights to
   8:main.c        ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:main.c        ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:main.c        ****  * subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in all
  13:main.c        ****  * copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:main.c        ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:main.c        ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:main.c        ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:main.c        ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:main.c        ****  *
  22:main.c        ****  * http://www.FreeRTOS.org
  23:main.c        ****  * http://aws.amazon.com/freertos
  24:main.c        ****  *
  25:main.c        ****  * 1 tab == 4 spaces!
  26:main.c        ****  */
  27:main.c        **** 
  28:main.c        **** 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 2


  29:main.c        **** 
  30:main.c        **** #include <device.h>
  31:main.c        **** 
  32:main.c        **** /* RTOS includes. */
  33:main.c        **** #include "FreeRTOS.h"
  34:main.c        **** #include "task.h"
  35:main.c        **** #include "queue.h"
  36:main.c        **** #include "semphr.h"
  37:main.c        **** 
  38:main.c        **** /* Plantemodul includes */
  39:main.c        **** #include "Nutrients.h"
  40:main.c        **** #include "Air.h"
  41:main.c        **** 
  42:main.c        **** 
  43:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  44:main.c        **** tick hook. */
  45:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  46:main.c        **** #define mainCOM_LED							( 3 )
  47:main.c        **** 
  48:main.c        **** /* The number of nano seconds between each processor clock. */
  49:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  50:main.c        **** 
  51:main.c        **** /*
  52:main.c        ****  * Installs the RTOS interrupt handlers and starts the peripherals.
  53:main.c        ****  */
  54:main.c        **** static void prvHardwareSetup( void );
  55:main.c        **** /*---------------------------------------------------------------------------*/
  56:main.c        **** 
  57:main.c        **** 
  58:main.c        **** int main( void )
  59:main.c        **** {
  30              		.loc 1 59 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  60:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  61:main.c        **** 	prvHardwareSetup();
  40              		.loc 1 61 0
  41 0004 FFF7FEFF 		bl	prvHardwareSetup
  62:main.c        ****     
  63:main.c        ****     //vNutrientsInit(); //initialize Nutrients control task and parameteres
  64:main.c        ****     
  65:main.c        ****     vAirInit();
  42              		.loc 1 65 0
  43 0008 FFF7FEFF 		bl	vAirInit
  66:main.c        ****      
  67:main.c        ****     
  68:main.c        ****     
  69:main.c        **** 	/* Will only get here if there was insufficient memory to create the idle
  70:main.c        ****     task.  The idle task is created within vTaskStartScheduler(). */
  71:main.c        **** 	vTaskStartScheduler();
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 3


  44              		.loc 1 71 0
  45 000c FFF7FEFF 		bl	vTaskStartScheduler
  46              	.L2:
  72:main.c        **** 
  73:main.c        ****     
  74:main.c        ****     
  75:main.c        **** 	/* Should never reach here as the kernel will now be running.  If
  76:main.c        **** 	vTaskStartScheduler() does return then it is very likely that there was
  77:main.c        **** 	insufficient (FreeRTOS) heap space available to create all the tasks,
  78:main.c        **** 	including the idle task that is created within vTaskStartScheduler() itself. */
  79:main.c        **** 	for( ;; );
  47              		.loc 1 79 0 discriminator 1
  48 0010 FEE7     		b	.L2
  49              		.cfi_endproc
  50              	.LFE68:
  51              		.size	main, .-main
  52 0012 00BF     		.section	.text.prvHardwareSetup,"ax",%progbits
  53              		.align	2
  54              		.thumb
  55              		.thumb_func
  56              		.type	prvHardwareSetup, %function
  57              	prvHardwareSetup:
  58              	.LFB69:
  80:main.c        **** }
  81:main.c        **** /*---------------------------------------------------------------------------*/
  82:main.c        **** 
  83:main.c        **** 
  84:main.c        **** 
  85:main.c        **** 
  86:main.c        **** 
  87:main.c        **** void prvHardwareSetup( void )
  88:main.c        **** {
  59              		.loc 1 88 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63 0000 80B5     		push	{r7, lr}
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
  89:main.c        **** /* Port layer functions that need to be copied into the vector table. */
  90:main.c        **** extern void xPortPendSVHandler( void );
  91:main.c        **** extern void xPortSysTickHandler( void );
  92:main.c        **** extern void vPortSVCHandler( void );
  93:main.c        **** extern cyisraddress CyRamVectors[];
  94:main.c        **** 
  95:main.c        **** 
  96:main.c        **** 
  97:main.c        **** 	/* Install the OS Interrupt Handlers. */
  98:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
  69              		.loc 1 98 0
  70 0004 0C4B     		ldr	r3, .L4
  71 0006 0D4A     		ldr	r2, .L4+4
  72 0008 DA62     		str	r2, [r3, #44]
  99:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 4


  73              		.loc 1 99 0
  74 000a 0B4B     		ldr	r3, .L4
  75 000c 0C4A     		ldr	r2, .L4+8
  76 000e 9A63     		str	r2, [r3, #56]
 100:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
  77              		.loc 1 100 0
  78 0010 094B     		ldr	r3, .L4
  79 0012 0C4A     		ldr	r2, .L4+12
  80 0014 DA63     		str	r2, [r3, #60]
 101:main.c        ****     
 102:main.c        ****     
 103:main.c        ****     /* Startup One_Wire and I2C_1. */
 104:main.c        ****     SW_UART_TEST_USB_Start();
  81              		.loc 1 104 0
  82 0016 FFF7FEFF 		bl	SW_UART_TEST_USB_Start
 105:main.c        ****     I2C_1_Start();
  83              		.loc 1 105 0
  84 001a FFF7FEFF 		bl	I2C_1_Start
 106:main.c        **** 
 107:main.c        ****     
 108:main.c        **** 	/* Start-up the peripherals. */
 109:main.c        ****         
 110:main.c        ****     PWM_PERISTALTISK_1_Start(); //start PWM module 1
  85              		.loc 1 110 0
  86 001e FFF7FEFF 		bl	PWM_PERISTALTISK_1_Start
 111:main.c        ****     PWM_PERISTALTISK_2_Start(); //start PWM module 2
  87              		.loc 1 111 0
  88 0022 FFF7FEFF 		bl	PWM_PERISTALTISK_2_Start
 112:main.c        ****     ADC_PH_Start(); //start ADC_PH module
  89              		.loc 1 112 0
  90 0026 FFF7FEFF 		bl	ADC_PH_Start
 113:main.c        ****     DS18x8_Start(); // Starting DS18x8 module
  91              		.loc 1 113 0
  92 002a FFF7FEFF 		bl	DS18x8_Start
 114:main.c        ****     vInitSCD30(2); // Starting SCD30 sensor and setting meas interval to every 2nd sec
  93              		.loc 1 114 0
  94 002e 0220     		movs	r0, #2
  95 0030 FFF7FEFF 		bl	vInitSCD30
 115:main.c        ****     
 116:main.c        ****     
 117:main.c        ****     
 118:main.c        **** }
  96              		.loc 1 118 0
  97 0034 00BF     		nop
  98 0036 80BD     		pop	{r7, pc}
  99              	.L5:
 100              		.align	2
 101              	.L4:
 102 0038 00000000 		.word	CyRamVectors
 103 003c 00000000 		.word	vPortSVCHandler
 104 0040 00000000 		.word	xPortPendSVHandler
 105 0044 00000000 		.word	xPortSysTickHandler
 106              		.cfi_endproc
 107              	.LFE69:
 108              		.size	prvHardwareSetup, .-prvHardwareSetup
 109              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 110              		.align	2
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 5


 111              		.global	vApplicationStackOverflowHook
 112              		.thumb
 113              		.thumb_func
 114              		.type	vApplicationStackOverflowHook, %function
 115              	vApplicationStackOverflowHook:
 116              	.LFB70:
 119:main.c        **** /*---------------------------------------------------------------------------*/
 120:main.c        **** 
 121:main.c        **** 
 122:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName )
 123:main.c        **** {
 117              		.loc 1 123 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 16
 120              		@ frame_needed = 1, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122 0000 80B4     		push	{r7}
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 7, -4
 125 0002 85B0     		sub	sp, sp, #20
 126              		.cfi_def_cfa_offset 24
 127 0004 00AF     		add	r7, sp, #0
 128              		.cfi_def_cfa_register 7
 129 0006 7860     		str	r0, [r7, #4]
 130 0008 3960     		str	r1, [r7]
 131              	.LBB6:
 132              	.LBB7:
 133              		.file 2 ".\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 6


  30:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 7


  87:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:.\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:.\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 8


 144:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 170:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 171:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 173:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 174:.\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 175:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 176:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 177:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 178:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 179:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 180:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 181:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 182:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 183:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 184:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 185:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 186:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 187:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 188:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 189:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 190:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 192:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 193:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 195:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 196:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 197:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 134              		.loc 2 197 0
 135              		.syntax unified
 136              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 9


 137 000a 4FF0A003 			mov r3, #160												
 138 000e 83F31188 		msr basepri, r3											
 139 0012 BFF36F8F 		isb														
 140 0016 BFF34F8F 		dsb														
 141              	
 142              	@ 0 "" 2
 143              		.thumb
 144              		.syntax unified
 145 001a FB60     		str	r3, [r7, #12]
 146              	.L7:
 147              	.LBE7:
 148              	.LBE6:
 124:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 125:main.c        **** 	taskDISABLE_INTERRUPTS();
 126:main.c        **** 	for( ;; );
 149              		.loc 1 126 0 discriminator 1
 150 001c FEE7     		b	.L7
 151              		.cfi_endproc
 152              	.LFE70:
 153              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 154 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 155              		.align	2
 156              		.global	vApplicationMallocFailedHook
 157              		.thumb
 158              		.thumb_func
 159              		.type	vApplicationMallocFailedHook, %function
 160              	vApplicationMallocFailedHook:
 161              	.LFB71:
 127:main.c        **** }
 128:main.c        **** /*---------------------------------------------------------------------------*/
 129:main.c        **** 
 130:main.c        **** void vApplicationMallocFailedHook( void )
 131:main.c        **** {
 162              		.loc 1 131 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 8
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167 0000 80B4     		push	{r7}
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 7, -4
 170 0002 83B0     		sub	sp, sp, #12
 171              		.cfi_def_cfa_offset 16
 172 0004 00AF     		add	r7, sp, #0
 173              		.cfi_def_cfa_register 7
 174              	.LBB8:
 175              	.LBB9:
 176              		.loc 2 197 0
 177              		.syntax unified
 178              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 179 0006 4FF0A003 			mov r3, #160												
 180 000a 83F31188 		msr basepri, r3											
 181 000e BFF36F8F 		isb														
 182 0012 BFF34F8F 		dsb														
 183              	
 184              	@ 0 "" 2
 185              		.thumb
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 10


 186              		.syntax unified
 187 0016 7B60     		str	r3, [r7, #4]
 188              	.L9:
 189              	.LBE9:
 190              	.LBE8:
 132:main.c        **** 	/* The heap space has been execeeded. */
 133:main.c        **** 	taskDISABLE_INTERRUPTS();
 134:main.c        **** 	for( ;; );
 191              		.loc 1 134 0 discriminator 1
 192 0018 FEE7     		b	.L9
 193              		.cfi_endproc
 194              	.LFE71:
 195              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 196 001a 00BF     		.text
 197              	.Letext0:
 198              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 199              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 200              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 201              		.file 6 "Generated_Source\\PSoC5/DS18x8.h"
 202              		.file 7 ".\\Source\\include/task.h"
 203              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 204              		.section	.debug_info,"",%progbits
 205              	.Ldebug_info0:
 206 0000 70020000 		.4byte	0x270
 207 0004 0400     		.2byte	0x4
 208 0006 00000000 		.4byte	.Ldebug_abbrev0
 209 000a 04       		.byte	0x4
 210 000b 01       		.uleb128 0x1
 211 000c 08000000 		.4byte	.LASF35
 212 0010 0C       		.byte	0xc
 213 0011 55020000 		.4byte	.LASF36
 214 0015 12010000 		.4byte	.LASF37
 215 0019 00000000 		.4byte	.Ldebug_ranges0+0
 216 001d 00000000 		.4byte	0
 217 0021 00000000 		.4byte	.Ldebug_line0
 218 0025 02       		.uleb128 0x2
 219 0026 01       		.byte	0x1
 220 0027 06       		.byte	0x6
 221 0028 BE020000 		.4byte	.LASF0
 222 002c 02       		.uleb128 0x2
 223 002d 01       		.byte	0x1
 224 002e 08       		.byte	0x8
 225 002f 55010000 		.4byte	.LASF1
 226 0033 02       		.uleb128 0x2
 227 0034 02       		.byte	0x2
 228 0035 05       		.byte	0x5
 229 0036 78020000 		.4byte	.LASF2
 230 003a 02       		.uleb128 0x2
 231 003b 02       		.byte	0x2
 232 003c 07       		.byte	0x7
 233 003d 80010000 		.4byte	.LASF3
 234 0041 03       		.uleb128 0x3
 235 0042 C0000000 		.4byte	.LASF5
 236 0046 03       		.byte	0x3
 237 0047 3F       		.byte	0x3f
 238 0048 4C000000 		.4byte	0x4c
 239 004c 02       		.uleb128 0x2
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 11


 240 004d 04       		.byte	0x4
 241 004e 05       		.byte	0x5
 242 004f A9020000 		.4byte	.LASF4
 243 0053 03       		.uleb128 0x3
 244 0054 63010000 		.4byte	.LASF6
 245 0058 03       		.byte	0x3
 246 0059 41       		.byte	0x41
 247 005a 5E000000 		.4byte	0x5e
 248 005e 02       		.uleb128 0x2
 249 005f 04       		.byte	0x4
 250 0060 07       		.byte	0x7
 251 0061 6E010000 		.4byte	.LASF7
 252 0065 02       		.uleb128 0x2
 253 0066 08       		.byte	0x8
 254 0067 05       		.byte	0x5
 255 0068 47020000 		.4byte	.LASF8
 256 006c 02       		.uleb128 0x2
 257 006d 08       		.byte	0x8
 258 006e 07       		.byte	0x7
 259 006f F5010000 		.4byte	.LASF9
 260 0073 04       		.uleb128 0x4
 261 0074 04       		.byte	0x4
 262 0075 05       		.byte	0x5
 263 0076 696E7400 		.ascii	"int\000"
 264 007a 02       		.uleb128 0x2
 265 007b 04       		.byte	0x4
 266 007c 07       		.byte	0x7
 267 007d E8010000 		.4byte	.LASF10
 268 0081 03       		.uleb128 0x3
 269 0082 36020000 		.4byte	.LASF11
 270 0086 04       		.byte	0x4
 271 0087 2C       		.byte	0x2c
 272 0088 41000000 		.4byte	0x41
 273 008c 03       		.uleb128 0x3
 274 008d A0020000 		.4byte	.LASF12
 275 0091 04       		.byte	0x4
 276 0092 30       		.byte	0x30
 277 0093 53000000 		.4byte	0x53
 278 0097 05       		.uleb128 0x5
 279 0098 8D020000 		.4byte	.LASF13
 280 009c 05       		.byte	0x5
 281 009d E401     		.2byte	0x1e4
 282 009f 2C000000 		.4byte	0x2c
 283 00a3 05       		.uleb128 0x5
 284 00a4 B4010000 		.4byte	.LASF14
 285 00a8 05       		.byte	0x5
 286 00a9 E501     		.2byte	0x1e5
 287 00ab 3A000000 		.4byte	0x3a
 288 00af 02       		.uleb128 0x2
 289 00b0 04       		.byte	0x4
 290 00b1 04       		.byte	0x4
 291 00b2 FE000000 		.4byte	.LASF15
 292 00b6 02       		.uleb128 0x2
 293 00b7 08       		.byte	0x8
 294 00b8 04       		.byte	0x4
 295 00b9 A0010000 		.4byte	.LASF16
 296 00bd 02       		.uleb128 0x2
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 12


 297 00be 01       		.byte	0x1
 298 00bf 08       		.byte	0x8
 299 00c0 5C020000 		.4byte	.LASF17
 300 00c4 06       		.uleb128 0x6
 301 00c5 97000000 		.4byte	0x97
 302 00c9 05       		.uleb128 0x5
 303 00ca 0C020000 		.4byte	.LASF18
 304 00ce 05       		.byte	0x5
 305 00cf A002     		.2byte	0x2a0
 306 00d1 D5000000 		.4byte	0xd5
 307 00d5 07       		.uleb128 0x7
 308 00d6 04       		.byte	0x4
 309 00d7 DB000000 		.4byte	0xdb
 310 00db 08       		.uleb128 0x8
 311 00dc 02       		.uleb128 0x2
 312 00dd 08       		.byte	0x8
 313 00de 04       		.byte	0x4
 314 00df B2020000 		.4byte	.LASF19
 315 00e3 02       		.uleb128 0x2
 316 00e4 04       		.byte	0x4
 317 00e5 07       		.byte	0x7
 318 00e6 3E020000 		.4byte	.LASF20
 319 00ea 07       		.uleb128 0x7
 320 00eb 04       		.byte	0x4
 321 00ec BD000000 		.4byte	0xbd
 322 00f0 09       		.uleb128 0x9
 323 00f1 EF000000 		.4byte	.LASF38
 324 00f5 04       		.byte	0x4
 325 00f6 06       		.byte	0x6
 326 00f7 30       		.byte	0x30
 327 00f8 15010000 		.4byte	0x115
 328 00fc 0A       		.uleb128 0xa
 329 00fd B4000000 		.4byte	.LASF21
 330 0101 06       		.byte	0x6
 331 0102 31       		.byte	0x31
 332 0103 A3000000 		.4byte	0xa3
 333 0107 00       		.byte	0
 334 0108 0A       		.uleb128 0xa
 335 0109 00000000 		.4byte	.LASF22
 336 010d 06       		.byte	0x6
 337 010e 32       		.byte	0x32
 338 010f 97000000 		.4byte	0x97
 339 0113 02       		.byte	0x2
 340 0114 00       		.byte	0
 341 0115 03       		.uleb128 0x3
 342 0116 93020000 		.4byte	.LASF23
 343 011a 07       		.byte	0x7
 344 011b 46       		.byte	0x46
 345 011c 20010000 		.4byte	0x120
 346 0120 07       		.uleb128 0x7
 347 0121 04       		.byte	0x4
 348 0122 26010000 		.4byte	0x126
 349 0126 0B       		.uleb128 0xb
 350 0127 BB010000 		.4byte	.LASF39
 351 012b 0C       		.uleb128 0xc
 352 012c CA000000 		.4byte	.LASF40
 353 0130 02       		.byte	0x2
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 13


 354 0131 C1       		.byte	0xc1
 355 0132 03       		.byte	0x3
 356 0133 43010000 		.4byte	0x143
 357 0137 0D       		.uleb128 0xd
 358 0138 A7010000 		.4byte	.LASF41
 359 013c 02       		.byte	0x2
 360 013d C3       		.byte	0xc3
 361 013e 8C000000 		.4byte	0x8c
 362 0142 00       		.byte	0
 363 0143 0E       		.uleb128 0xe
 364 0144 CF010000 		.4byte	.LASF42
 365 0148 01       		.byte	0x1
 366 0149 3A       		.byte	0x3a
 367 014a 73000000 		.4byte	0x73
 368 014e 00000000 		.4byte	.LFB68
 369 0152 12000000 		.4byte	.LFE68-.LFB68
 370 0156 01       		.uleb128 0x1
 371 0157 9C       		.byte	0x9c
 372 0158 0F       		.uleb128 0xf
 373 0159 E8020000 		.4byte	.LASF43
 374 015d 01       		.byte	0x1
 375 015e 57       		.byte	0x57
 376 015f 00000000 		.4byte	.LFB69
 377 0163 48000000 		.4byte	.LFE69-.LFB69
 378 0167 01       		.uleb128 0x1
 379 0168 9C       		.byte	0x9c
 380 0169 8E010000 		.4byte	0x18e
 381 016d 10       		.uleb128 0x10
 382 016e DC000000 		.4byte	.LASF24
 383 0172 01       		.byte	0x1
 384 0173 5A       		.byte	0x5a
 385 0174 10       		.uleb128 0x10
 386 0175 D4010000 		.4byte	.LASF25
 387 0179 01       		.byte	0x1
 388 017a 5B       		.byte	0x5b
 389 017b 10       		.uleb128 0x10
 390 017c 61020000 		.4byte	.LASF26
 391 0180 01       		.byte	0x1
 392 0181 5C       		.byte	0x5c
 393 0182 11       		.uleb128 0x11
 394 0183 A7000000 		.4byte	.LASF31
 395 0187 01       		.byte	0x1
 396 0188 5D       		.byte	0x5d
 397 0189 8E010000 		.4byte	0x18e
 398 018d 00       		.byte	0
 399 018e 12       		.uleb128 0x12
 400 018f C9000000 		.4byte	0xc9
 401 0193 99010000 		.4byte	0x199
 402 0197 13       		.uleb128 0x13
 403 0198 00       		.byte	0
 404 0199 14       		.uleb128 0x14
 405 019a CA020000 		.4byte	.LASF29
 406 019e 01       		.byte	0x1
 407 019f 7A       		.byte	0x7a
 408 01a0 00000000 		.4byte	.LFB70
 409 01a4 1E000000 		.4byte	.LFE70-.LFB70
 410 01a8 01       		.uleb128 0x1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 14


 411 01a9 9C       		.byte	0x9c
 412 01aa ED010000 		.4byte	0x1ed
 413 01ae 15       		.uleb128 0x15
 414 01af 71020000 		.4byte	.LASF27
 415 01b3 01       		.byte	0x1
 416 01b4 7A       		.byte	0x7a
 417 01b5 15010000 		.4byte	0x115
 418 01b9 02       		.uleb128 0x2
 419 01ba 91       		.byte	0x91
 420 01bb 6C       		.sleb128 -20
 421 01bc 15       		.uleb128 0x15
 422 01bd 82020000 		.4byte	.LASF28
 423 01c1 01       		.byte	0x1
 424 01c2 7A       		.byte	0x7a
 425 01c3 EA000000 		.4byte	0xea
 426 01c7 02       		.uleb128 0x2
 427 01c8 91       		.byte	0x91
 428 01c9 68       		.sleb128 -24
 429 01ca 16       		.uleb128 0x16
 430 01cb 2B010000 		.4byte	0x12b
 431 01cf 0A000000 		.4byte	.LBB6
 432 01d3 12000000 		.4byte	.LBE6-.LBB6
 433 01d7 01       		.byte	0x1
 434 01d8 7D       		.byte	0x7d
 435 01d9 17       		.uleb128 0x17
 436 01da 0A000000 		.4byte	.LBB7
 437 01de 12000000 		.4byte	.LBE7-.LBB7
 438 01e2 18       		.uleb128 0x18
 439 01e3 37010000 		.4byte	0x137
 440 01e7 02       		.uleb128 0x2
 441 01e8 91       		.byte	0x91
 442 01e9 74       		.sleb128 -12
 443 01ea 00       		.byte	0
 444 01eb 00       		.byte	0
 445 01ec 00       		.byte	0
 446 01ed 14       		.uleb128 0x14
 447 01ee 19020000 		.4byte	.LASF30
 448 01f2 01       		.byte	0x1
 449 01f3 82       		.byte	0x82
 450 01f4 00000000 		.4byte	.LFB71
 451 01f8 1A000000 		.4byte	.LFE71-.LFB71
 452 01fc 01       		.uleb128 0x1
 453 01fd 9C       		.byte	0x9c
 454 01fe 25020000 		.4byte	0x225
 455 0202 16       		.uleb128 0x16
 456 0203 2B010000 		.4byte	0x12b
 457 0207 06000000 		.4byte	.LBB8
 458 020b 12000000 		.4byte	.LBE8-.LBB8
 459 020f 01       		.byte	0x1
 460 0210 85       		.byte	0x85
 461 0211 17       		.uleb128 0x17
 462 0212 06000000 		.4byte	.LBB9
 463 0216 12000000 		.4byte	.LBE9-.LBB9
 464 021a 18       		.uleb128 0x18
 465 021b 37010000 		.4byte	0x137
 466 021f 02       		.uleb128 0x2
 467 0220 91       		.byte	0x91
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 15


 468 0221 74       		.sleb128 -12
 469 0222 00       		.byte	0
 470 0223 00       		.byte	0
 471 0224 00       		.byte	0
 472 0225 12       		.uleb128 0x12
 473 0226 F0000000 		.4byte	0xf0
 474 022a 35020000 		.4byte	0x235
 475 022e 19       		.uleb128 0x19
 476 022f E3000000 		.4byte	0xe3
 477 0233 07       		.byte	0x7
 478 0234 00       		.byte	0
 479 0235 1A       		.uleb128 0x1a
 480 0236 04010000 		.4byte	.LASF32
 481 023a 06       		.byte	0x6
 482 023b 34       		.byte	0x34
 483 023c 25020000 		.4byte	0x225
 484 0240 05       		.uleb128 0x5
 485 0241 03       		.byte	0x3
 486 0242 00000000 		.4byte	DS18x8_Sensor
 487 0246 1A       		.uleb128 0x1a
 488 0247 96000000 		.4byte	.LASF33
 489 024b 06       		.byte	0x6
 490 024c 39       		.byte	0x39
 491 024d C4000000 		.4byte	0xc4
 492 0251 05       		.uleb128 0x5
 493 0252 03       		.byte	0x3
 494 0253 00000000 		.4byte	DS18x8_DataReady
 495 0257 1B       		.uleb128 0x1b
 496 0258 93010000 		.4byte	.LASF34
 497 025c 08       		.byte	0x8
 498 025d 1207     		.2byte	0x712
 499 025f 63020000 		.4byte	0x263
 500 0263 06       		.uleb128 0x6
 501 0264 81000000 		.4byte	0x81
 502 0268 11       		.uleb128 0x11
 503 0269 A7000000 		.4byte	.LASF31
 504 026d 01       		.byte	0x1
 505 026e 5D       		.byte	0x5d
 506 026f 8E010000 		.4byte	0x18e
 507 0273 00       		.byte	0
 508              		.section	.debug_abbrev,"",%progbits
 509              	.Ldebug_abbrev0:
 510 0000 01       		.uleb128 0x1
 511 0001 11       		.uleb128 0x11
 512 0002 01       		.byte	0x1
 513 0003 25       		.uleb128 0x25
 514 0004 0E       		.uleb128 0xe
 515 0005 13       		.uleb128 0x13
 516 0006 0B       		.uleb128 0xb
 517 0007 03       		.uleb128 0x3
 518 0008 0E       		.uleb128 0xe
 519 0009 1B       		.uleb128 0x1b
 520 000a 0E       		.uleb128 0xe
 521 000b 55       		.uleb128 0x55
 522 000c 17       		.uleb128 0x17
 523 000d 11       		.uleb128 0x11
 524 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 16


 525 000f 10       		.uleb128 0x10
 526 0010 17       		.uleb128 0x17
 527 0011 00       		.byte	0
 528 0012 00       		.byte	0
 529 0013 02       		.uleb128 0x2
 530 0014 24       		.uleb128 0x24
 531 0015 00       		.byte	0
 532 0016 0B       		.uleb128 0xb
 533 0017 0B       		.uleb128 0xb
 534 0018 3E       		.uleb128 0x3e
 535 0019 0B       		.uleb128 0xb
 536 001a 03       		.uleb128 0x3
 537 001b 0E       		.uleb128 0xe
 538 001c 00       		.byte	0
 539 001d 00       		.byte	0
 540 001e 03       		.uleb128 0x3
 541 001f 16       		.uleb128 0x16
 542 0020 00       		.byte	0
 543 0021 03       		.uleb128 0x3
 544 0022 0E       		.uleb128 0xe
 545 0023 3A       		.uleb128 0x3a
 546 0024 0B       		.uleb128 0xb
 547 0025 3B       		.uleb128 0x3b
 548 0026 0B       		.uleb128 0xb
 549 0027 49       		.uleb128 0x49
 550 0028 13       		.uleb128 0x13
 551 0029 00       		.byte	0
 552 002a 00       		.byte	0
 553 002b 04       		.uleb128 0x4
 554 002c 24       		.uleb128 0x24
 555 002d 00       		.byte	0
 556 002e 0B       		.uleb128 0xb
 557 002f 0B       		.uleb128 0xb
 558 0030 3E       		.uleb128 0x3e
 559 0031 0B       		.uleb128 0xb
 560 0032 03       		.uleb128 0x3
 561 0033 08       		.uleb128 0x8
 562 0034 00       		.byte	0
 563 0035 00       		.byte	0
 564 0036 05       		.uleb128 0x5
 565 0037 16       		.uleb128 0x16
 566 0038 00       		.byte	0
 567 0039 03       		.uleb128 0x3
 568 003a 0E       		.uleb128 0xe
 569 003b 3A       		.uleb128 0x3a
 570 003c 0B       		.uleb128 0xb
 571 003d 3B       		.uleb128 0x3b
 572 003e 05       		.uleb128 0x5
 573 003f 49       		.uleb128 0x49
 574 0040 13       		.uleb128 0x13
 575 0041 00       		.byte	0
 576 0042 00       		.byte	0
 577 0043 06       		.uleb128 0x6
 578 0044 35       		.uleb128 0x35
 579 0045 00       		.byte	0
 580 0046 49       		.uleb128 0x49
 581 0047 13       		.uleb128 0x13
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 17


 582 0048 00       		.byte	0
 583 0049 00       		.byte	0
 584 004a 07       		.uleb128 0x7
 585 004b 0F       		.uleb128 0xf
 586 004c 00       		.byte	0
 587 004d 0B       		.uleb128 0xb
 588 004e 0B       		.uleb128 0xb
 589 004f 49       		.uleb128 0x49
 590 0050 13       		.uleb128 0x13
 591 0051 00       		.byte	0
 592 0052 00       		.byte	0
 593 0053 08       		.uleb128 0x8
 594 0054 15       		.uleb128 0x15
 595 0055 00       		.byte	0
 596 0056 27       		.uleb128 0x27
 597 0057 19       		.uleb128 0x19
 598 0058 00       		.byte	0
 599 0059 00       		.byte	0
 600 005a 09       		.uleb128 0x9
 601 005b 13       		.uleb128 0x13
 602 005c 01       		.byte	0x1
 603 005d 03       		.uleb128 0x3
 604 005e 0E       		.uleb128 0xe
 605 005f 0B       		.uleb128 0xb
 606 0060 0B       		.uleb128 0xb
 607 0061 3A       		.uleb128 0x3a
 608 0062 0B       		.uleb128 0xb
 609 0063 3B       		.uleb128 0x3b
 610 0064 0B       		.uleb128 0xb
 611 0065 01       		.uleb128 0x1
 612 0066 13       		.uleb128 0x13
 613 0067 00       		.byte	0
 614 0068 00       		.byte	0
 615 0069 0A       		.uleb128 0xa
 616 006a 0D       		.uleb128 0xd
 617 006b 00       		.byte	0
 618 006c 03       		.uleb128 0x3
 619 006d 0E       		.uleb128 0xe
 620 006e 3A       		.uleb128 0x3a
 621 006f 0B       		.uleb128 0xb
 622 0070 3B       		.uleb128 0x3b
 623 0071 0B       		.uleb128 0xb
 624 0072 49       		.uleb128 0x49
 625 0073 13       		.uleb128 0x13
 626 0074 38       		.uleb128 0x38
 627 0075 0B       		.uleb128 0xb
 628 0076 00       		.byte	0
 629 0077 00       		.byte	0
 630 0078 0B       		.uleb128 0xb
 631 0079 13       		.uleb128 0x13
 632 007a 00       		.byte	0
 633 007b 03       		.uleb128 0x3
 634 007c 0E       		.uleb128 0xe
 635 007d 3C       		.uleb128 0x3c
 636 007e 19       		.uleb128 0x19
 637 007f 00       		.byte	0
 638 0080 00       		.byte	0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 18


 639 0081 0C       		.uleb128 0xc
 640 0082 2E       		.uleb128 0x2e
 641 0083 01       		.byte	0x1
 642 0084 03       		.uleb128 0x3
 643 0085 0E       		.uleb128 0xe
 644 0086 3A       		.uleb128 0x3a
 645 0087 0B       		.uleb128 0xb
 646 0088 3B       		.uleb128 0x3b
 647 0089 0B       		.uleb128 0xb
 648 008a 27       		.uleb128 0x27
 649 008b 19       		.uleb128 0x19
 650 008c 20       		.uleb128 0x20
 651 008d 0B       		.uleb128 0xb
 652 008e 01       		.uleb128 0x1
 653 008f 13       		.uleb128 0x13
 654 0090 00       		.byte	0
 655 0091 00       		.byte	0
 656 0092 0D       		.uleb128 0xd
 657 0093 34       		.uleb128 0x34
 658 0094 00       		.byte	0
 659 0095 03       		.uleb128 0x3
 660 0096 0E       		.uleb128 0xe
 661 0097 3A       		.uleb128 0x3a
 662 0098 0B       		.uleb128 0xb
 663 0099 3B       		.uleb128 0x3b
 664 009a 0B       		.uleb128 0xb
 665 009b 49       		.uleb128 0x49
 666 009c 13       		.uleb128 0x13
 667 009d 00       		.byte	0
 668 009e 00       		.byte	0
 669 009f 0E       		.uleb128 0xe
 670 00a0 2E       		.uleb128 0x2e
 671 00a1 00       		.byte	0
 672 00a2 3F       		.uleb128 0x3f
 673 00a3 19       		.uleb128 0x19
 674 00a4 03       		.uleb128 0x3
 675 00a5 0E       		.uleb128 0xe
 676 00a6 3A       		.uleb128 0x3a
 677 00a7 0B       		.uleb128 0xb
 678 00a8 3B       		.uleb128 0x3b
 679 00a9 0B       		.uleb128 0xb
 680 00aa 27       		.uleb128 0x27
 681 00ab 19       		.uleb128 0x19
 682 00ac 49       		.uleb128 0x49
 683 00ad 13       		.uleb128 0x13
 684 00ae 11       		.uleb128 0x11
 685 00af 01       		.uleb128 0x1
 686 00b0 12       		.uleb128 0x12
 687 00b1 06       		.uleb128 0x6
 688 00b2 40       		.uleb128 0x40
 689 00b3 18       		.uleb128 0x18
 690 00b4 9642     		.uleb128 0x2116
 691 00b6 19       		.uleb128 0x19
 692 00b7 00       		.byte	0
 693 00b8 00       		.byte	0
 694 00b9 0F       		.uleb128 0xf
 695 00ba 2E       		.uleb128 0x2e
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 19


 696 00bb 01       		.byte	0x1
 697 00bc 03       		.uleb128 0x3
 698 00bd 0E       		.uleb128 0xe
 699 00be 3A       		.uleb128 0x3a
 700 00bf 0B       		.uleb128 0xb
 701 00c0 3B       		.uleb128 0x3b
 702 00c1 0B       		.uleb128 0xb
 703 00c2 27       		.uleb128 0x27
 704 00c3 19       		.uleb128 0x19
 705 00c4 11       		.uleb128 0x11
 706 00c5 01       		.uleb128 0x1
 707 00c6 12       		.uleb128 0x12
 708 00c7 06       		.uleb128 0x6
 709 00c8 40       		.uleb128 0x40
 710 00c9 18       		.uleb128 0x18
 711 00ca 9642     		.uleb128 0x2116
 712 00cc 19       		.uleb128 0x19
 713 00cd 01       		.uleb128 0x1
 714 00ce 13       		.uleb128 0x13
 715 00cf 00       		.byte	0
 716 00d0 00       		.byte	0
 717 00d1 10       		.uleb128 0x10
 718 00d2 2E       		.uleb128 0x2e
 719 00d3 00       		.byte	0
 720 00d4 3F       		.uleb128 0x3f
 721 00d5 19       		.uleb128 0x19
 722 00d6 03       		.uleb128 0x3
 723 00d7 0E       		.uleb128 0xe
 724 00d8 3A       		.uleb128 0x3a
 725 00d9 0B       		.uleb128 0xb
 726 00da 3B       		.uleb128 0x3b
 727 00db 0B       		.uleb128 0xb
 728 00dc 27       		.uleb128 0x27
 729 00dd 19       		.uleb128 0x19
 730 00de 3C       		.uleb128 0x3c
 731 00df 19       		.uleb128 0x19
 732 00e0 00       		.byte	0
 733 00e1 00       		.byte	0
 734 00e2 11       		.uleb128 0x11
 735 00e3 34       		.uleb128 0x34
 736 00e4 00       		.byte	0
 737 00e5 03       		.uleb128 0x3
 738 00e6 0E       		.uleb128 0xe
 739 00e7 3A       		.uleb128 0x3a
 740 00e8 0B       		.uleb128 0xb
 741 00e9 3B       		.uleb128 0x3b
 742 00ea 0B       		.uleb128 0xb
 743 00eb 49       		.uleb128 0x49
 744 00ec 13       		.uleb128 0x13
 745 00ed 3F       		.uleb128 0x3f
 746 00ee 19       		.uleb128 0x19
 747 00ef 3C       		.uleb128 0x3c
 748 00f0 19       		.uleb128 0x19
 749 00f1 00       		.byte	0
 750 00f2 00       		.byte	0
 751 00f3 12       		.uleb128 0x12
 752 00f4 01       		.uleb128 0x1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 20


 753 00f5 01       		.byte	0x1
 754 00f6 49       		.uleb128 0x49
 755 00f7 13       		.uleb128 0x13
 756 00f8 01       		.uleb128 0x1
 757 00f9 13       		.uleb128 0x13
 758 00fa 00       		.byte	0
 759 00fb 00       		.byte	0
 760 00fc 13       		.uleb128 0x13
 761 00fd 21       		.uleb128 0x21
 762 00fe 00       		.byte	0
 763 00ff 00       		.byte	0
 764 0100 00       		.byte	0
 765 0101 14       		.uleb128 0x14
 766 0102 2E       		.uleb128 0x2e
 767 0103 01       		.byte	0x1
 768 0104 3F       		.uleb128 0x3f
 769 0105 19       		.uleb128 0x19
 770 0106 03       		.uleb128 0x3
 771 0107 0E       		.uleb128 0xe
 772 0108 3A       		.uleb128 0x3a
 773 0109 0B       		.uleb128 0xb
 774 010a 3B       		.uleb128 0x3b
 775 010b 0B       		.uleb128 0xb
 776 010c 27       		.uleb128 0x27
 777 010d 19       		.uleb128 0x19
 778 010e 11       		.uleb128 0x11
 779 010f 01       		.uleb128 0x1
 780 0110 12       		.uleb128 0x12
 781 0111 06       		.uleb128 0x6
 782 0112 40       		.uleb128 0x40
 783 0113 18       		.uleb128 0x18
 784 0114 9742     		.uleb128 0x2117
 785 0116 19       		.uleb128 0x19
 786 0117 01       		.uleb128 0x1
 787 0118 13       		.uleb128 0x13
 788 0119 00       		.byte	0
 789 011a 00       		.byte	0
 790 011b 15       		.uleb128 0x15
 791 011c 05       		.uleb128 0x5
 792 011d 00       		.byte	0
 793 011e 03       		.uleb128 0x3
 794 011f 0E       		.uleb128 0xe
 795 0120 3A       		.uleb128 0x3a
 796 0121 0B       		.uleb128 0xb
 797 0122 3B       		.uleb128 0x3b
 798 0123 0B       		.uleb128 0xb
 799 0124 49       		.uleb128 0x49
 800 0125 13       		.uleb128 0x13
 801 0126 02       		.uleb128 0x2
 802 0127 18       		.uleb128 0x18
 803 0128 00       		.byte	0
 804 0129 00       		.byte	0
 805 012a 16       		.uleb128 0x16
 806 012b 1D       		.uleb128 0x1d
 807 012c 01       		.byte	0x1
 808 012d 31       		.uleb128 0x31
 809 012e 13       		.uleb128 0x13
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 21


 810 012f 11       		.uleb128 0x11
 811 0130 01       		.uleb128 0x1
 812 0131 12       		.uleb128 0x12
 813 0132 06       		.uleb128 0x6
 814 0133 58       		.uleb128 0x58
 815 0134 0B       		.uleb128 0xb
 816 0135 59       		.uleb128 0x59
 817 0136 0B       		.uleb128 0xb
 818 0137 00       		.byte	0
 819 0138 00       		.byte	0
 820 0139 17       		.uleb128 0x17
 821 013a 0B       		.uleb128 0xb
 822 013b 01       		.byte	0x1
 823 013c 11       		.uleb128 0x11
 824 013d 01       		.uleb128 0x1
 825 013e 12       		.uleb128 0x12
 826 013f 06       		.uleb128 0x6
 827 0140 00       		.byte	0
 828 0141 00       		.byte	0
 829 0142 18       		.uleb128 0x18
 830 0143 34       		.uleb128 0x34
 831 0144 00       		.byte	0
 832 0145 31       		.uleb128 0x31
 833 0146 13       		.uleb128 0x13
 834 0147 02       		.uleb128 0x2
 835 0148 18       		.uleb128 0x18
 836 0149 00       		.byte	0
 837 014a 00       		.byte	0
 838 014b 19       		.uleb128 0x19
 839 014c 21       		.uleb128 0x21
 840 014d 00       		.byte	0
 841 014e 49       		.uleb128 0x49
 842 014f 13       		.uleb128 0x13
 843 0150 2F       		.uleb128 0x2f
 844 0151 0B       		.uleb128 0xb
 845 0152 00       		.byte	0
 846 0153 00       		.byte	0
 847 0154 1A       		.uleb128 0x1a
 848 0155 34       		.uleb128 0x34
 849 0156 00       		.byte	0
 850 0157 03       		.uleb128 0x3
 851 0158 0E       		.uleb128 0xe
 852 0159 3A       		.uleb128 0x3a
 853 015a 0B       		.uleb128 0xb
 854 015b 3B       		.uleb128 0x3b
 855 015c 0B       		.uleb128 0xb
 856 015d 49       		.uleb128 0x49
 857 015e 13       		.uleb128 0x13
 858 015f 3F       		.uleb128 0x3f
 859 0160 19       		.uleb128 0x19
 860 0161 02       		.uleb128 0x2
 861 0162 18       		.uleb128 0x18
 862 0163 00       		.byte	0
 863 0164 00       		.byte	0
 864 0165 1B       		.uleb128 0x1b
 865 0166 34       		.uleb128 0x34
 866 0167 00       		.byte	0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 22


 867 0168 03       		.uleb128 0x3
 868 0169 0E       		.uleb128 0xe
 869 016a 3A       		.uleb128 0x3a
 870 016b 0B       		.uleb128 0xb
 871 016c 3B       		.uleb128 0x3b
 872 016d 05       		.uleb128 0x5
 873 016e 49       		.uleb128 0x49
 874 016f 13       		.uleb128 0x13
 875 0170 3F       		.uleb128 0x3f
 876 0171 19       		.uleb128 0x19
 877 0172 3C       		.uleb128 0x3c
 878 0173 19       		.uleb128 0x19
 879 0174 00       		.byte	0
 880 0175 00       		.byte	0
 881 0176 00       		.byte	0
 882              		.section	.debug_aranges,"",%progbits
 883 0000 34000000 		.4byte	0x34
 884 0004 0200     		.2byte	0x2
 885 0006 00000000 		.4byte	.Ldebug_info0
 886 000a 04       		.byte	0x4
 887 000b 00       		.byte	0
 888 000c 0000     		.2byte	0
 889 000e 0000     		.2byte	0
 890 0010 00000000 		.4byte	.LFB68
 891 0014 12000000 		.4byte	.LFE68-.LFB68
 892 0018 00000000 		.4byte	.LFB69
 893 001c 48000000 		.4byte	.LFE69-.LFB69
 894 0020 00000000 		.4byte	.LFB70
 895 0024 1E000000 		.4byte	.LFE70-.LFB70
 896 0028 00000000 		.4byte	.LFB71
 897 002c 1A000000 		.4byte	.LFE71-.LFB71
 898 0030 00000000 		.4byte	0
 899 0034 00000000 		.4byte	0
 900              		.section	.debug_ranges,"",%progbits
 901              	.Ldebug_ranges0:
 902 0000 00000000 		.4byte	.LFB68
 903 0004 12000000 		.4byte	.LFE68
 904 0008 00000000 		.4byte	.LFB69
 905 000c 48000000 		.4byte	.LFE69
 906 0010 00000000 		.4byte	.LFB70
 907 0014 1E000000 		.4byte	.LFE70
 908 0018 00000000 		.4byte	.LFB71
 909 001c 1A000000 		.4byte	.LFE71
 910 0020 00000000 		.4byte	0
 911 0024 00000000 		.4byte	0
 912              		.section	.debug_line,"",%progbits
 913              	.Ldebug_line0:
 914 0000 19020000 		.section	.debug_str,"MS",%progbits,1
 914      0200A001 
 914      00000201 
 914      FB0E0D00 
 914      01010101 
 915              	.LASF22:
 916 0000 70726573 		.ascii	"present\000"
 916      656E7400 
 917              	.LASF35:
 918 0008 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 23


 918      43313120 
 918      352E342E 
 918      31203230 
 918      31363036 
 919 003b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 919      20726576 
 919      6973696F 
 919      6E203233 
 919      37373135 
 920 006e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 920      66756E63 
 920      74696F6E 
 920      2D736563 
 920      74696F6E 
 921              	.LASF33:
 922 0096 44533138 		.ascii	"DS18x8_DataReady\000"
 922      78385F44 
 922      61746152 
 922      65616479 
 922      00
 923              	.LASF31:
 924 00a7 43795261 		.ascii	"CyRamVectors\000"
 924      6D566563 
 924      746F7273 
 924      00
 925              	.LASF21:
 926 00b4 54656D70 		.ascii	"Temperature\000"
 926      65726174 
 926      75726500 
 927              	.LASF5:
 928 00c0 5F5F696E 		.ascii	"__int32_t\000"
 928      7433325F 
 928      7400
 929              	.LASF40:
 930 00ca 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 930      74526169 
 930      73654241 
 930      53455052 
 930      4900
 931              	.LASF24:
 932 00dc 78506F72 		.ascii	"xPortPendSVHandler\000"
 932      7450656E 
 932      64535648 
 932      616E646C 
 932      657200
 933              	.LASF38:
 934 00ef 44533138 		.ascii	"DS18x8_TSensor\000"
 934      78385F54 
 934      53656E73 
 934      6F7200
 935              	.LASF15:
 936 00fe 666C6F61 		.ascii	"float\000"
 936      7400
 937              	.LASF32:
 938 0104 44533138 		.ascii	"DS18x8_Sensor\000"
 938      78385F53 
 938      656E736F 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 24


 938      7200
 939              	.LASF37:
 940 0112 433A5C43 		.ascii	"C:\\Code\\P4\\P4_Vertical_farm\\RTOS_TEMPLATE-maste"
 940      6F64655C 
 940      50345C50 
 940      345F5665 
 940      72746963 
 941 0141 725C506C 		.ascii	"r\\PlanteModul.cydsn\000"
 941      616E7465 
 941      4D6F6475 
 941      6C2E6379 
 941      64736E00 
 942              	.LASF1:
 943 0155 756E7369 		.ascii	"unsigned char\000"
 943      676E6564 
 943      20636861 
 943      7200
 944              	.LASF6:
 945 0163 5F5F7569 		.ascii	"__uint32_t\000"
 945      6E743332 
 945      5F7400
 946              	.LASF7:
 947 016e 6C6F6E67 		.ascii	"long unsigned int\000"
 947      20756E73 
 947      69676E65 
 947      6420696E 
 947      7400
 948              	.LASF3:
 949 0180 73686F72 		.ascii	"short unsigned int\000"
 949      7420756E 
 949      7369676E 
 949      65642069 
 949      6E7400
 950              	.LASF34:
 951 0193 49544D5F 		.ascii	"ITM_RxBuffer\000"
 951      52784275 
 951      66666572 
 951      00
 952              	.LASF16:
 953 01a0 646F7562 		.ascii	"double\000"
 953      6C6500
 954              	.LASF41:
 955 01a7 756C4E65 		.ascii	"ulNewBASEPRI\000"
 955      77424153 
 955      45505249 
 955      00
 956              	.LASF14:
 957 01b4 75696E74 		.ascii	"uint16\000"
 957      313600
 958              	.LASF39:
 959 01bb 74736B54 		.ascii	"tskTaskControlBlock\000"
 959      61736B43 
 959      6F6E7472 
 959      6F6C426C 
 959      6F636B00 
 960              	.LASF42:
 961 01cf 6D61696E 		.ascii	"main\000"
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 25


 961      00
 962              	.LASF25:
 963 01d4 78506F72 		.ascii	"xPortSysTickHandler\000"
 963      74537973 
 963      5469636B 
 963      48616E64 
 963      6C657200 
 964              	.LASF10:
 965 01e8 756E7369 		.ascii	"unsigned int\000"
 965      676E6564 
 965      20696E74 
 965      00
 966              	.LASF9:
 967 01f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 967      206C6F6E 
 967      6720756E 
 967      7369676E 
 967      65642069 
 968              	.LASF18:
 969 020c 63796973 		.ascii	"cyisraddress\000"
 969      72616464 
 969      72657373 
 969      00
 970              	.LASF30:
 971 0219 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 971      6C696361 
 971      74696F6E 
 971      4D616C6C 
 971      6F634661 
 972              	.LASF11:
 973 0236 696E7433 		.ascii	"int32_t\000"
 973      325F7400 
 974              	.LASF20:
 975 023e 73697A65 		.ascii	"sizetype\000"
 975      74797065 
 975      00
 976              	.LASF8:
 977 0247 6C6F6E67 		.ascii	"long long int\000"
 977      206C6F6E 
 977      6720696E 
 977      7400
 978              	.LASF36:
 979 0255 6D61696E 		.ascii	"main.c\000"
 979      2E6300
 980              	.LASF17:
 981 025c 63686172 		.ascii	"char\000"
 981      00
 982              	.LASF26:
 983 0261 76506F72 		.ascii	"vPortSVCHandler\000"
 983      74535643 
 983      48616E64 
 983      6C657200 
 984              	.LASF27:
 985 0271 70785461 		.ascii	"pxTask\000"
 985      736B00
 986              	.LASF2:
 987 0278 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccbNgkfL.s 			page 26


 987      7420696E 
 987      7400
 988              	.LASF28:
 989 0282 70635461 		.ascii	"pcTaskName\000"
 989      736B4E61 
 989      6D6500
 990              	.LASF13:
 991 028d 75696E74 		.ascii	"uint8\000"
 991      3800
 992              	.LASF23:
 993 0293 5461736B 		.ascii	"TaskHandle_t\000"
 993      48616E64 
 993      6C655F74 
 993      00
 994              	.LASF12:
 995 02a0 75696E74 		.ascii	"uint32_t\000"
 995      33325F74 
 995      00
 996              	.LASF4:
 997 02a9 6C6F6E67 		.ascii	"long int\000"
 997      20696E74 
 997      00
 998              	.LASF19:
 999 02b2 6C6F6E67 		.ascii	"long double\000"
 999      20646F75 
 999      626C6500 
 1000              	.LASF0:
 1001 02be 7369676E 		.ascii	"signed char\000"
 1001      65642063 
 1001      68617200 
 1002              	.LASF29:
 1003 02ca 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 1003      6C696361 
 1003      74696F6E 
 1003      53746163 
 1003      6B4F7665 
 1004              	.LASF43:
 1005 02e8 70727648 		.ascii	"prvHardwareSetup\000"
 1005      61726477 
 1005      61726553 
 1005      65747570 
 1005      00
 1006              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
