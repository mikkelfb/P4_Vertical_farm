ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.main,"ax",%progbits
  20              		.align	2
  21              		.global	main
  22              		.thumb
  23              		.thumb_func
  24              		.type	main, %function
  25              	main:
  26              	.LFB68:
  27              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * FreeRTOS Kernel V10.3.1
   3:main.c        ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:main.c        ****  * this software and associated documentation files (the "Software"), to deal in
   7:main.c        ****  * the Software without restriction, including without limitation the rights to
   8:main.c        ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:main.c        ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:main.c        ****  * subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in all
  13:main.c        ****  * copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:main.c        ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:main.c        ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:main.c        ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:main.c        ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:main.c        ****  *
  22:main.c        ****  * http://www.FreeRTOS.org
  23:main.c        ****  * http://aws.amazon.com/freertos
  24:main.c        ****  *
  25:main.c        ****  * 1 tab == 4 spaces!
  26:main.c        ****  */
  27:main.c        **** 
  28:main.c        **** #include <device.h>
  29:main.c        **** 
  30:main.c        **** /* RTOS includes. */
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 2


  31:main.c        **** #include "FreeRTOS.h"
  32:main.c        **** #include "task.h"
  33:main.c        **** #include "queue.h"
  34:main.c        **** #include "semphr.h"
  35:main.c        **** 
  36:main.c        **** /* Plantemodul includes */
  37:main.c        **** #include "Nutrients.h"
  38:main.c        **** 
  39:main.c        **** 
  40:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  41:main.c        **** tick hook. */
  42:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  43:main.c        **** #define mainCOM_LED							( 3 )
  44:main.c        **** 
  45:main.c        **** /* The number of nano seconds between each processor clock. */
  46:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  47:main.c        **** 
  48:main.c        **** /*
  49:main.c        ****  * Installs the RTOS interrupt handlers and starts the peripherals.
  50:main.c        ****  */
  51:main.c        **** static void prvHardwareSetup( void );
  52:main.c        **** /*---------------------------------------------------------------------------*/
  53:main.c        **** 
  54:main.c        **** 
  55:main.c        **** int main( void )
  56:main.c        **** {
  28              		.loc 1 56 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  57:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  58:main.c        **** 	prvHardwareSetup();
  38              		.loc 1 58 0
  39 0004 FFF7FEFF 		bl	prvHardwareSetup
  59:main.c        ****     
  60:main.c        ****     vNutrientsInit(); //initialize Nutrients control task and parameteres
  40              		.loc 1 60 0
  41 0008 FFF7FEFF 		bl	vNutrientsInit
  61:main.c        ****      
  62:main.c        ****     
  63:main.c        ****     
  64:main.c        **** 	/* Will only get here if there was insufficient memory to create the idle
  65:main.c        ****     task.  The idle task is created within vTaskStartScheduler(). */
  66:main.c        **** 	vTaskStartScheduler();
  42              		.loc 1 66 0
  43 000c FFF7FEFF 		bl	vTaskStartScheduler
  44              	.L2:
  67:main.c        **** 
  68:main.c        ****     
  69:main.c        ****     
  70:main.c        **** 	/* Should never reach here as the kernel will now be running.  If
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 3


  71:main.c        **** 	vTaskStartScheduler() does return then it is very likely that there was
  72:main.c        **** 	insufficient (FreeRTOS) heap space available to create all the tasks,
  73:main.c        **** 	including the idle task that is created within vTaskStartScheduler() itself. */
  74:main.c        **** 	for( ;; );
  45              		.loc 1 74 0 discriminator 1
  46 0010 FEE7     		b	.L2
  47              		.cfi_endproc
  48              	.LFE68:
  49              		.size	main, .-main
  50 0012 00BF     		.section	.text.prvHardwareSetup,"ax",%progbits
  51              		.align	2
  52              		.thumb
  53              		.thumb_func
  54              		.type	prvHardwareSetup, %function
  55              	prvHardwareSetup:
  56              	.LFB69:
  75:main.c        **** }
  76:main.c        **** /*---------------------------------------------------------------------------*/
  77:main.c        **** 
  78:main.c        **** 
  79:main.c        **** 
  80:main.c        **** 
  81:main.c        **** 
  82:main.c        **** void prvHardwareSetup( void )
  83:main.c        **** {
  57              		.loc 1 83 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 00AF     		add	r7, sp, #0
  66              		.cfi_def_cfa_register 7
  84:main.c        **** /* Port layer functions that need to be copied into the vector table. */
  85:main.c        **** extern void xPortPendSVHandler( void );
  86:main.c        **** extern void xPortSysTickHandler( void );
  87:main.c        **** extern void vPortSVCHandler( void );
  88:main.c        **** extern cyisraddress CyRamVectors[];
  89:main.c        **** 
  90:main.c        **** 
  91:main.c        **** 
  92:main.c        **** 	/* Install the OS Interrupt Handlers. */
  93:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
  67              		.loc 1 93 0
  68 0004 094B     		ldr	r3, .L4
  69 0006 0A4A     		ldr	r2, .L4+4
  70 0008 DA62     		str	r2, [r3, #44]
  94:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
  71              		.loc 1 94 0
  72 000a 084B     		ldr	r3, .L4
  73 000c 094A     		ldr	r2, .L4+8
  74 000e 9A63     		str	r2, [r3, #56]
  95:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
  75              		.loc 1 95 0
  76 0010 064B     		ldr	r3, .L4
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 4


  77 0012 094A     		ldr	r2, .L4+12
  78 0014 DA63     		str	r2, [r3, #60]
  96:main.c        **** 
  97:main.c        ****     
  98:main.c        **** 	/* Start-up the peripherals. */
  99:main.c        ****     
 100:main.c        ****     
 101:main.c        ****     PWM_PERISTALTISK_1_Start(); //start PWM module 1
  79              		.loc 1 101 0
  80 0016 FFF7FEFF 		bl	PWM_PERISTALTISK_1_Start
 102:main.c        ****     PWM_PERISTALTISK_2_Start(); //start PWM module 2
  81              		.loc 1 102 0
  82 001a FFF7FEFF 		bl	PWM_PERISTALTISK_2_Start
 103:main.c        ****     ADC_PH_Start(); //start ADC_PH module
  83              		.loc 1 103 0
  84 001e FFF7FEFF 		bl	ADC_PH_Start
 104:main.c        ****     
 105:main.c        ****     SW_UART_TEST_USB_Start();
  85              		.loc 1 105 0
  86 0022 FFF7FEFF 		bl	SW_UART_TEST_USB_Start
 106:main.c        **** }
  87              		.loc 1 106 0
  88 0026 00BF     		nop
  89 0028 80BD     		pop	{r7, pc}
  90              	.L5:
  91 002a 00BF     		.align	2
  92              	.L4:
  93 002c 00000000 		.word	CyRamVectors
  94 0030 00000000 		.word	vPortSVCHandler
  95 0034 00000000 		.word	xPortPendSVHandler
  96 0038 00000000 		.word	xPortSysTickHandler
  97              		.cfi_endproc
  98              	.LFE69:
  99              		.size	prvHardwareSetup, .-prvHardwareSetup
 100              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 101              		.align	2
 102              		.global	vApplicationStackOverflowHook
 103              		.thumb
 104              		.thumb_func
 105              		.type	vApplicationStackOverflowHook, %function
 106              	vApplicationStackOverflowHook:
 107              	.LFB70:
 107:main.c        **** /*---------------------------------------------------------------------------*/
 108:main.c        **** 
 109:main.c        **** 
 110:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName )
 111:main.c        **** {
 108              		.loc 1 111 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 16
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113 0000 80B4     		push	{r7}
 114              		.cfi_def_cfa_offset 4
 115              		.cfi_offset 7, -4
 116 0002 85B0     		sub	sp, sp, #20
 117              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 5


 118 0004 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 120 0006 7860     		str	r0, [r7, #4]
 121 0008 3960     		str	r1, [r7]
 122              	.LBB6:
 123              	.LBB7:
 124              		.file 2 ".\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  28:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 6


  51:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 7


 108:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:.\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:.\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 142:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 8


 165:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 170:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 171:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 173:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 174:.\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 175:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 176:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 177:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 178:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 179:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 180:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 181:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 182:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 183:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 184:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 185:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 186:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 187:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 188:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 189:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 190:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 192:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 193:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 195:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 196:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 197:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 125              		.loc 2 197 0
 126              		.syntax unified
 127              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 128 000a 4FF0A003 			mov r3, #160												
 129 000e 83F31188 		msr basepri, r3											
 130 0012 BFF36F8F 		isb														
 131 0016 BFF34F8F 		dsb														
 132              	
 133              	@ 0 "" 2
 134              		.thumb
 135              		.syntax unified
 136 001a FB60     		str	r3, [r7, #12]
 137              	.L7:
 138              	.LBE7:
 139              	.LBE6:
 112:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 113:main.c        **** 	taskDISABLE_INTERRUPTS();
 114:main.c        **** 	for( ;; );
 140              		.loc 1 114 0 discriminator 1
 141 001c FEE7     		b	.L7
 142              		.cfi_endproc
 143              	.LFE70:
 144              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 145 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 9


 146              		.align	2
 147              		.global	vApplicationMallocFailedHook
 148              		.thumb
 149              		.thumb_func
 150              		.type	vApplicationMallocFailedHook, %function
 151              	vApplicationMallocFailedHook:
 152              	.LFB71:
 115:main.c        **** }
 116:main.c        **** /*---------------------------------------------------------------------------*/
 117:main.c        **** 
 118:main.c        **** void vApplicationMallocFailedHook( void )
 119:main.c        **** {
 153              		.loc 1 119 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 8
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 80B4     		push	{r7}
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 0002 83B0     		sub	sp, sp, #12
 162              		.cfi_def_cfa_offset 16
 163 0004 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 165              	.LBB8:
 166              	.LBB9:
 167              		.loc 2 197 0
 168              		.syntax unified
 169              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 170 0006 4FF0A003 			mov r3, #160												
 171 000a 83F31188 		msr basepri, r3											
 172 000e BFF36F8F 		isb														
 173 0012 BFF34F8F 		dsb														
 174              	
 175              	@ 0 "" 2
 176              		.thumb
 177              		.syntax unified
 178 0016 7B60     		str	r3, [r7, #4]
 179              	.L9:
 180              	.LBE9:
 181              	.LBE8:
 120:main.c        **** 	/* The heap space has been execeeded. */
 121:main.c        **** 	taskDISABLE_INTERRUPTS();
 122:main.c        **** 	for( ;; );
 182              		.loc 1 122 0 discriminator 1
 183 0018 FEE7     		b	.L9
 184              		.cfi_endproc
 185              	.LFE71:
 186              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 187 001a 00BF     		.text
 188              	.Letext0:
 189              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 190              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 191              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 192              		.file 6 ".\\Source\\include/task.h"
 193              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 194              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 10


 195              	.Ldebug_info0:
 196 0000 FC010000 		.4byte	0x1fc
 197 0004 0400     		.2byte	0x4
 198 0006 00000000 		.4byte	.Ldebug_abbrev0
 199 000a 04       		.byte	0x4
 200 000b 01       		.uleb128 0x1
 201 000c 00000000 		.4byte	.LASF29
 202 0010 0C       		.byte	0xc
 203 0011 0C020000 		.4byte	.LASF30
 204 0015 D0000000 		.4byte	.LASF31
 205 0019 00000000 		.4byte	.Ldebug_ranges0+0
 206 001d 00000000 		.4byte	0
 207 0021 00000000 		.4byte	.Ldebug_line0
 208 0025 02       		.uleb128 0x2
 209 0026 01       		.byte	0x1
 210 0027 06       		.byte	0x6
 211 0028 6F020000 		.4byte	.LASF0
 212 002c 02       		.uleb128 0x2
 213 002d 01       		.byte	0x1
 214 002e 08       		.byte	0x8
 215 002f 13010000 		.4byte	.LASF1
 216 0033 02       		.uleb128 0x2
 217 0034 02       		.byte	0x2
 218 0035 05       		.byte	0x5
 219 0036 2F020000 		.4byte	.LASF2
 220 003a 02       		.uleb128 0x2
 221 003b 02       		.byte	0x2
 222 003c 07       		.byte	0x7
 223 003d 3E010000 		.4byte	.LASF3
 224 0041 03       		.uleb128 0x3
 225 0042 9B000000 		.4byte	.LASF5
 226 0046 03       		.byte	0x3
 227 0047 3F       		.byte	0x3f
 228 0048 4C000000 		.4byte	0x4c
 229 004c 02       		.uleb128 0x2
 230 004d 04       		.byte	0x4
 231 004e 05       		.byte	0x5
 232 004f 5A020000 		.4byte	.LASF4
 233 0053 03       		.uleb128 0x3
 234 0054 21010000 		.4byte	.LASF6
 235 0058 03       		.byte	0x3
 236 0059 41       		.byte	0x41
 237 005a 5E000000 		.4byte	0x5e
 238 005e 02       		.uleb128 0x2
 239 005f 04       		.byte	0x4
 240 0060 07       		.byte	0x7
 241 0061 2C010000 		.4byte	.LASF7
 242 0065 02       		.uleb128 0x2
 243 0066 08       		.byte	0x8
 244 0067 05       		.byte	0x5
 245 0068 FE010000 		.4byte	.LASF8
 246 006c 02       		.uleb128 0x2
 247 006d 08       		.byte	0x8
 248 006e 07       		.byte	0x7
 249 006f AC010000 		.4byte	.LASF9
 250 0073 04       		.uleb128 0x4
 251 0074 04       		.byte	0x4
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 11


 252 0075 05       		.byte	0x5
 253 0076 696E7400 		.ascii	"int\000"
 254 007a 02       		.uleb128 0x2
 255 007b 04       		.byte	0x4
 256 007c 07       		.byte	0x7
 257 007d 9F010000 		.4byte	.LASF10
 258 0081 03       		.uleb128 0x3
 259 0082 ED010000 		.4byte	.LASF11
 260 0086 04       		.byte	0x4
 261 0087 2C       		.byte	0x2c
 262 0088 41000000 		.4byte	0x41
 263 008c 03       		.uleb128 0x3
 264 008d 51020000 		.4byte	.LASF12
 265 0091 04       		.byte	0x4
 266 0092 30       		.byte	0x30
 267 0093 53000000 		.4byte	0x53
 268 0097 02       		.uleb128 0x2
 269 0098 04       		.byte	0x4
 270 0099 04       		.byte	0x4
 271 009a CA000000 		.4byte	.LASF13
 272 009e 02       		.uleb128 0x2
 273 009f 08       		.byte	0x8
 274 00a0 04       		.byte	0x4
 275 00a1 5E010000 		.4byte	.LASF14
 276 00a5 02       		.uleb128 0x2
 277 00a6 01       		.byte	0x1
 278 00a7 08       		.byte	0x8
 279 00a8 13020000 		.4byte	.LASF15
 280 00ac 05       		.uleb128 0x5
 281 00ad C3010000 		.4byte	.LASF16
 282 00b1 05       		.byte	0x5
 283 00b2 A002     		.2byte	0x2a0
 284 00b4 B8000000 		.4byte	0xb8
 285 00b8 06       		.uleb128 0x6
 286 00b9 04       		.byte	0x4
 287 00ba BE000000 		.4byte	0xbe
 288 00be 07       		.uleb128 0x7
 289 00bf 02       		.uleb128 0x2
 290 00c0 08       		.byte	0x8
 291 00c1 04       		.byte	0x4
 292 00c2 63020000 		.4byte	.LASF17
 293 00c6 02       		.uleb128 0x2
 294 00c7 04       		.byte	0x4
 295 00c8 07       		.byte	0x7
 296 00c9 F5010000 		.4byte	.LASF18
 297 00cd 06       		.uleb128 0x6
 298 00ce 04       		.byte	0x4
 299 00cf A5000000 		.4byte	0xa5
 300 00d3 03       		.uleb128 0x3
 301 00d4 44020000 		.4byte	.LASF19
 302 00d8 06       		.byte	0x6
 303 00d9 46       		.byte	0x46
 304 00da DE000000 		.4byte	0xde
 305 00de 06       		.uleb128 0x6
 306 00df 04       		.byte	0x4
 307 00e0 E4000000 		.4byte	0xe4
 308 00e4 08       		.uleb128 0x8
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 12


 309 00e5 72010000 		.4byte	.LASF32
 310 00e9 09       		.uleb128 0x9
 311 00ea A5000000 		.4byte	.LASF33
 312 00ee 02       		.byte	0x2
 313 00ef C1       		.byte	0xc1
 314 00f0 03       		.byte	0x3
 315 00f1 01010000 		.4byte	0x101
 316 00f5 0A       		.uleb128 0xa
 317 00f6 65010000 		.4byte	.LASF34
 318 00fa 02       		.byte	0x2
 319 00fb C3       		.byte	0xc3
 320 00fc 8C000000 		.4byte	0x8c
 321 0100 00       		.byte	0
 322 0101 0B       		.uleb128 0xb
 323 0102 86010000 		.4byte	.LASF35
 324 0106 01       		.byte	0x1
 325 0107 37       		.byte	0x37
 326 0108 73000000 		.4byte	0x73
 327 010c 00000000 		.4byte	.LFB68
 328 0110 12000000 		.4byte	.LFE68-.LFB68
 329 0114 01       		.uleb128 0x1
 330 0115 9C       		.byte	0x9c
 331 0116 0C       		.uleb128 0xc
 332 0117 99020000 		.4byte	.LASF36
 333 011b 01       		.byte	0x1
 334 011c 52       		.byte	0x52
 335 011d 00000000 		.4byte	.LFB69
 336 0121 3C000000 		.4byte	.LFE69-.LFB69
 337 0125 01       		.uleb128 0x1
 338 0126 9C       		.byte	0x9c
 339 0127 4C010000 		.4byte	0x14c
 340 012b 0D       		.uleb128 0xd
 341 012c B7000000 		.4byte	.LASF20
 342 0130 01       		.byte	0x1
 343 0131 55       		.byte	0x55
 344 0132 0D       		.uleb128 0xd
 345 0133 8B010000 		.4byte	.LASF21
 346 0137 01       		.byte	0x1
 347 0138 56       		.byte	0x56
 348 0139 0D       		.uleb128 0xd
 349 013a 18020000 		.4byte	.LASF22
 350 013e 01       		.byte	0x1
 351 013f 57       		.byte	0x57
 352 0140 0E       		.uleb128 0xe
 353 0141 8E000000 		.4byte	.LASF27
 354 0145 01       		.byte	0x1
 355 0146 58       		.byte	0x58
 356 0147 4C010000 		.4byte	0x14c
 357 014b 00       		.byte	0
 358 014c 0F       		.uleb128 0xf
 359 014d AC000000 		.4byte	0xac
 360 0151 57010000 		.4byte	0x157
 361 0155 10       		.uleb128 0x10
 362 0156 00       		.byte	0
 363 0157 11       		.uleb128 0x11
 364 0158 7B020000 		.4byte	.LASF25
 365 015c 01       		.byte	0x1
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 13


 366 015d 6E       		.byte	0x6e
 367 015e 00000000 		.4byte	.LFB70
 368 0162 1E000000 		.4byte	.LFE70-.LFB70
 369 0166 01       		.uleb128 0x1
 370 0167 9C       		.byte	0x9c
 371 0168 AB010000 		.4byte	0x1ab
 372 016c 12       		.uleb128 0x12
 373 016d 28020000 		.4byte	.LASF23
 374 0171 01       		.byte	0x1
 375 0172 6E       		.byte	0x6e
 376 0173 D3000000 		.4byte	0xd3
 377 0177 02       		.uleb128 0x2
 378 0178 91       		.byte	0x91
 379 0179 6C       		.sleb128 -20
 380 017a 12       		.uleb128 0x12
 381 017b 39020000 		.4byte	.LASF24
 382 017f 01       		.byte	0x1
 383 0180 6E       		.byte	0x6e
 384 0181 CD000000 		.4byte	0xcd
 385 0185 02       		.uleb128 0x2
 386 0186 91       		.byte	0x91
 387 0187 68       		.sleb128 -24
 388 0188 13       		.uleb128 0x13
 389 0189 E9000000 		.4byte	0xe9
 390 018d 0A000000 		.4byte	.LBB6
 391 0191 12000000 		.4byte	.LBE6-.LBB6
 392 0195 01       		.byte	0x1
 393 0196 71       		.byte	0x71
 394 0197 14       		.uleb128 0x14
 395 0198 0A000000 		.4byte	.LBB7
 396 019c 12000000 		.4byte	.LBE7-.LBB7
 397 01a0 15       		.uleb128 0x15
 398 01a1 F5000000 		.4byte	0xf5
 399 01a5 02       		.uleb128 0x2
 400 01a6 91       		.byte	0x91
 401 01a7 74       		.sleb128 -12
 402 01a8 00       		.byte	0
 403 01a9 00       		.byte	0
 404 01aa 00       		.byte	0
 405 01ab 11       		.uleb128 0x11
 406 01ac D0010000 		.4byte	.LASF26
 407 01b0 01       		.byte	0x1
 408 01b1 76       		.byte	0x76
 409 01b2 00000000 		.4byte	.LFB71
 410 01b6 1A000000 		.4byte	.LFE71-.LFB71
 411 01ba 01       		.uleb128 0x1
 412 01bb 9C       		.byte	0x9c
 413 01bc E3010000 		.4byte	0x1e3
 414 01c0 13       		.uleb128 0x13
 415 01c1 E9000000 		.4byte	0xe9
 416 01c5 06000000 		.4byte	.LBB8
 417 01c9 12000000 		.4byte	.LBE8-.LBB8
 418 01cd 01       		.byte	0x1
 419 01ce 79       		.byte	0x79
 420 01cf 14       		.uleb128 0x14
 421 01d0 06000000 		.4byte	.LBB9
 422 01d4 12000000 		.4byte	.LBE9-.LBB9
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 14


 423 01d8 15       		.uleb128 0x15
 424 01d9 F5000000 		.4byte	0xf5
 425 01dd 02       		.uleb128 0x2
 426 01de 91       		.byte	0x91
 427 01df 74       		.sleb128 -12
 428 01e0 00       		.byte	0
 429 01e1 00       		.byte	0
 430 01e2 00       		.byte	0
 431 01e3 16       		.uleb128 0x16
 432 01e4 51010000 		.4byte	.LASF28
 433 01e8 07       		.byte	0x7
 434 01e9 1207     		.2byte	0x712
 435 01eb EF010000 		.4byte	0x1ef
 436 01ef 17       		.uleb128 0x17
 437 01f0 81000000 		.4byte	0x81
 438 01f4 0E       		.uleb128 0xe
 439 01f5 8E000000 		.4byte	.LASF27
 440 01f9 01       		.byte	0x1
 441 01fa 58       		.byte	0x58
 442 01fb 4C010000 		.4byte	0x14c
 443 01ff 00       		.byte	0
 444              		.section	.debug_abbrev,"",%progbits
 445              	.Ldebug_abbrev0:
 446 0000 01       		.uleb128 0x1
 447 0001 11       		.uleb128 0x11
 448 0002 01       		.byte	0x1
 449 0003 25       		.uleb128 0x25
 450 0004 0E       		.uleb128 0xe
 451 0005 13       		.uleb128 0x13
 452 0006 0B       		.uleb128 0xb
 453 0007 03       		.uleb128 0x3
 454 0008 0E       		.uleb128 0xe
 455 0009 1B       		.uleb128 0x1b
 456 000a 0E       		.uleb128 0xe
 457 000b 55       		.uleb128 0x55
 458 000c 17       		.uleb128 0x17
 459 000d 11       		.uleb128 0x11
 460 000e 01       		.uleb128 0x1
 461 000f 10       		.uleb128 0x10
 462 0010 17       		.uleb128 0x17
 463 0011 00       		.byte	0
 464 0012 00       		.byte	0
 465 0013 02       		.uleb128 0x2
 466 0014 24       		.uleb128 0x24
 467 0015 00       		.byte	0
 468 0016 0B       		.uleb128 0xb
 469 0017 0B       		.uleb128 0xb
 470 0018 3E       		.uleb128 0x3e
 471 0019 0B       		.uleb128 0xb
 472 001a 03       		.uleb128 0x3
 473 001b 0E       		.uleb128 0xe
 474 001c 00       		.byte	0
 475 001d 00       		.byte	0
 476 001e 03       		.uleb128 0x3
 477 001f 16       		.uleb128 0x16
 478 0020 00       		.byte	0
 479 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 15


 480 0022 0E       		.uleb128 0xe
 481 0023 3A       		.uleb128 0x3a
 482 0024 0B       		.uleb128 0xb
 483 0025 3B       		.uleb128 0x3b
 484 0026 0B       		.uleb128 0xb
 485 0027 49       		.uleb128 0x49
 486 0028 13       		.uleb128 0x13
 487 0029 00       		.byte	0
 488 002a 00       		.byte	0
 489 002b 04       		.uleb128 0x4
 490 002c 24       		.uleb128 0x24
 491 002d 00       		.byte	0
 492 002e 0B       		.uleb128 0xb
 493 002f 0B       		.uleb128 0xb
 494 0030 3E       		.uleb128 0x3e
 495 0031 0B       		.uleb128 0xb
 496 0032 03       		.uleb128 0x3
 497 0033 08       		.uleb128 0x8
 498 0034 00       		.byte	0
 499 0035 00       		.byte	0
 500 0036 05       		.uleb128 0x5
 501 0037 16       		.uleb128 0x16
 502 0038 00       		.byte	0
 503 0039 03       		.uleb128 0x3
 504 003a 0E       		.uleb128 0xe
 505 003b 3A       		.uleb128 0x3a
 506 003c 0B       		.uleb128 0xb
 507 003d 3B       		.uleb128 0x3b
 508 003e 05       		.uleb128 0x5
 509 003f 49       		.uleb128 0x49
 510 0040 13       		.uleb128 0x13
 511 0041 00       		.byte	0
 512 0042 00       		.byte	0
 513 0043 06       		.uleb128 0x6
 514 0044 0F       		.uleb128 0xf
 515 0045 00       		.byte	0
 516 0046 0B       		.uleb128 0xb
 517 0047 0B       		.uleb128 0xb
 518 0048 49       		.uleb128 0x49
 519 0049 13       		.uleb128 0x13
 520 004a 00       		.byte	0
 521 004b 00       		.byte	0
 522 004c 07       		.uleb128 0x7
 523 004d 15       		.uleb128 0x15
 524 004e 00       		.byte	0
 525 004f 27       		.uleb128 0x27
 526 0050 19       		.uleb128 0x19
 527 0051 00       		.byte	0
 528 0052 00       		.byte	0
 529 0053 08       		.uleb128 0x8
 530 0054 13       		.uleb128 0x13
 531 0055 00       		.byte	0
 532 0056 03       		.uleb128 0x3
 533 0057 0E       		.uleb128 0xe
 534 0058 3C       		.uleb128 0x3c
 535 0059 19       		.uleb128 0x19
 536 005a 00       		.byte	0
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 16


 537 005b 00       		.byte	0
 538 005c 09       		.uleb128 0x9
 539 005d 2E       		.uleb128 0x2e
 540 005e 01       		.byte	0x1
 541 005f 03       		.uleb128 0x3
 542 0060 0E       		.uleb128 0xe
 543 0061 3A       		.uleb128 0x3a
 544 0062 0B       		.uleb128 0xb
 545 0063 3B       		.uleb128 0x3b
 546 0064 0B       		.uleb128 0xb
 547 0065 27       		.uleb128 0x27
 548 0066 19       		.uleb128 0x19
 549 0067 20       		.uleb128 0x20
 550 0068 0B       		.uleb128 0xb
 551 0069 01       		.uleb128 0x1
 552 006a 13       		.uleb128 0x13
 553 006b 00       		.byte	0
 554 006c 00       		.byte	0
 555 006d 0A       		.uleb128 0xa
 556 006e 34       		.uleb128 0x34
 557 006f 00       		.byte	0
 558 0070 03       		.uleb128 0x3
 559 0071 0E       		.uleb128 0xe
 560 0072 3A       		.uleb128 0x3a
 561 0073 0B       		.uleb128 0xb
 562 0074 3B       		.uleb128 0x3b
 563 0075 0B       		.uleb128 0xb
 564 0076 49       		.uleb128 0x49
 565 0077 13       		.uleb128 0x13
 566 0078 00       		.byte	0
 567 0079 00       		.byte	0
 568 007a 0B       		.uleb128 0xb
 569 007b 2E       		.uleb128 0x2e
 570 007c 00       		.byte	0
 571 007d 3F       		.uleb128 0x3f
 572 007e 19       		.uleb128 0x19
 573 007f 03       		.uleb128 0x3
 574 0080 0E       		.uleb128 0xe
 575 0081 3A       		.uleb128 0x3a
 576 0082 0B       		.uleb128 0xb
 577 0083 3B       		.uleb128 0x3b
 578 0084 0B       		.uleb128 0xb
 579 0085 27       		.uleb128 0x27
 580 0086 19       		.uleb128 0x19
 581 0087 49       		.uleb128 0x49
 582 0088 13       		.uleb128 0x13
 583 0089 11       		.uleb128 0x11
 584 008a 01       		.uleb128 0x1
 585 008b 12       		.uleb128 0x12
 586 008c 06       		.uleb128 0x6
 587 008d 40       		.uleb128 0x40
 588 008e 18       		.uleb128 0x18
 589 008f 9642     		.uleb128 0x2116
 590 0091 19       		.uleb128 0x19
 591 0092 00       		.byte	0
 592 0093 00       		.byte	0
 593 0094 0C       		.uleb128 0xc
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 17


 594 0095 2E       		.uleb128 0x2e
 595 0096 01       		.byte	0x1
 596 0097 03       		.uleb128 0x3
 597 0098 0E       		.uleb128 0xe
 598 0099 3A       		.uleb128 0x3a
 599 009a 0B       		.uleb128 0xb
 600 009b 3B       		.uleb128 0x3b
 601 009c 0B       		.uleb128 0xb
 602 009d 27       		.uleb128 0x27
 603 009e 19       		.uleb128 0x19
 604 009f 11       		.uleb128 0x11
 605 00a0 01       		.uleb128 0x1
 606 00a1 12       		.uleb128 0x12
 607 00a2 06       		.uleb128 0x6
 608 00a3 40       		.uleb128 0x40
 609 00a4 18       		.uleb128 0x18
 610 00a5 9642     		.uleb128 0x2116
 611 00a7 19       		.uleb128 0x19
 612 00a8 01       		.uleb128 0x1
 613 00a9 13       		.uleb128 0x13
 614 00aa 00       		.byte	0
 615 00ab 00       		.byte	0
 616 00ac 0D       		.uleb128 0xd
 617 00ad 2E       		.uleb128 0x2e
 618 00ae 00       		.byte	0
 619 00af 3F       		.uleb128 0x3f
 620 00b0 19       		.uleb128 0x19
 621 00b1 03       		.uleb128 0x3
 622 00b2 0E       		.uleb128 0xe
 623 00b3 3A       		.uleb128 0x3a
 624 00b4 0B       		.uleb128 0xb
 625 00b5 3B       		.uleb128 0x3b
 626 00b6 0B       		.uleb128 0xb
 627 00b7 27       		.uleb128 0x27
 628 00b8 19       		.uleb128 0x19
 629 00b9 3C       		.uleb128 0x3c
 630 00ba 19       		.uleb128 0x19
 631 00bb 00       		.byte	0
 632 00bc 00       		.byte	0
 633 00bd 0E       		.uleb128 0xe
 634 00be 34       		.uleb128 0x34
 635 00bf 00       		.byte	0
 636 00c0 03       		.uleb128 0x3
 637 00c1 0E       		.uleb128 0xe
 638 00c2 3A       		.uleb128 0x3a
 639 00c3 0B       		.uleb128 0xb
 640 00c4 3B       		.uleb128 0x3b
 641 00c5 0B       		.uleb128 0xb
 642 00c6 49       		.uleb128 0x49
 643 00c7 13       		.uleb128 0x13
 644 00c8 3F       		.uleb128 0x3f
 645 00c9 19       		.uleb128 0x19
 646 00ca 3C       		.uleb128 0x3c
 647 00cb 19       		.uleb128 0x19
 648 00cc 00       		.byte	0
 649 00cd 00       		.byte	0
 650 00ce 0F       		.uleb128 0xf
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 18


 651 00cf 01       		.uleb128 0x1
 652 00d0 01       		.byte	0x1
 653 00d1 49       		.uleb128 0x49
 654 00d2 13       		.uleb128 0x13
 655 00d3 01       		.uleb128 0x1
 656 00d4 13       		.uleb128 0x13
 657 00d5 00       		.byte	0
 658 00d6 00       		.byte	0
 659 00d7 10       		.uleb128 0x10
 660 00d8 21       		.uleb128 0x21
 661 00d9 00       		.byte	0
 662 00da 00       		.byte	0
 663 00db 00       		.byte	0
 664 00dc 11       		.uleb128 0x11
 665 00dd 2E       		.uleb128 0x2e
 666 00de 01       		.byte	0x1
 667 00df 3F       		.uleb128 0x3f
 668 00e0 19       		.uleb128 0x19
 669 00e1 03       		.uleb128 0x3
 670 00e2 0E       		.uleb128 0xe
 671 00e3 3A       		.uleb128 0x3a
 672 00e4 0B       		.uleb128 0xb
 673 00e5 3B       		.uleb128 0x3b
 674 00e6 0B       		.uleb128 0xb
 675 00e7 27       		.uleb128 0x27
 676 00e8 19       		.uleb128 0x19
 677 00e9 11       		.uleb128 0x11
 678 00ea 01       		.uleb128 0x1
 679 00eb 12       		.uleb128 0x12
 680 00ec 06       		.uleb128 0x6
 681 00ed 40       		.uleb128 0x40
 682 00ee 18       		.uleb128 0x18
 683 00ef 9742     		.uleb128 0x2117
 684 00f1 19       		.uleb128 0x19
 685 00f2 01       		.uleb128 0x1
 686 00f3 13       		.uleb128 0x13
 687 00f4 00       		.byte	0
 688 00f5 00       		.byte	0
 689 00f6 12       		.uleb128 0x12
 690 00f7 05       		.uleb128 0x5
 691 00f8 00       		.byte	0
 692 00f9 03       		.uleb128 0x3
 693 00fa 0E       		.uleb128 0xe
 694 00fb 3A       		.uleb128 0x3a
 695 00fc 0B       		.uleb128 0xb
 696 00fd 3B       		.uleb128 0x3b
 697 00fe 0B       		.uleb128 0xb
 698 00ff 49       		.uleb128 0x49
 699 0100 13       		.uleb128 0x13
 700 0101 02       		.uleb128 0x2
 701 0102 18       		.uleb128 0x18
 702 0103 00       		.byte	0
 703 0104 00       		.byte	0
 704 0105 13       		.uleb128 0x13
 705 0106 1D       		.uleb128 0x1d
 706 0107 01       		.byte	0x1
 707 0108 31       		.uleb128 0x31
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 19


 708 0109 13       		.uleb128 0x13
 709 010a 11       		.uleb128 0x11
 710 010b 01       		.uleb128 0x1
 711 010c 12       		.uleb128 0x12
 712 010d 06       		.uleb128 0x6
 713 010e 58       		.uleb128 0x58
 714 010f 0B       		.uleb128 0xb
 715 0110 59       		.uleb128 0x59
 716 0111 0B       		.uleb128 0xb
 717 0112 00       		.byte	0
 718 0113 00       		.byte	0
 719 0114 14       		.uleb128 0x14
 720 0115 0B       		.uleb128 0xb
 721 0116 01       		.byte	0x1
 722 0117 11       		.uleb128 0x11
 723 0118 01       		.uleb128 0x1
 724 0119 12       		.uleb128 0x12
 725 011a 06       		.uleb128 0x6
 726 011b 00       		.byte	0
 727 011c 00       		.byte	0
 728 011d 15       		.uleb128 0x15
 729 011e 34       		.uleb128 0x34
 730 011f 00       		.byte	0
 731 0120 31       		.uleb128 0x31
 732 0121 13       		.uleb128 0x13
 733 0122 02       		.uleb128 0x2
 734 0123 18       		.uleb128 0x18
 735 0124 00       		.byte	0
 736 0125 00       		.byte	0
 737 0126 16       		.uleb128 0x16
 738 0127 34       		.uleb128 0x34
 739 0128 00       		.byte	0
 740 0129 03       		.uleb128 0x3
 741 012a 0E       		.uleb128 0xe
 742 012b 3A       		.uleb128 0x3a
 743 012c 0B       		.uleb128 0xb
 744 012d 3B       		.uleb128 0x3b
 745 012e 05       		.uleb128 0x5
 746 012f 49       		.uleb128 0x49
 747 0130 13       		.uleb128 0x13
 748 0131 3F       		.uleb128 0x3f
 749 0132 19       		.uleb128 0x19
 750 0133 3C       		.uleb128 0x3c
 751 0134 19       		.uleb128 0x19
 752 0135 00       		.byte	0
 753 0136 00       		.byte	0
 754 0137 17       		.uleb128 0x17
 755 0138 35       		.uleb128 0x35
 756 0139 00       		.byte	0
 757 013a 49       		.uleb128 0x49
 758 013b 13       		.uleb128 0x13
 759 013c 00       		.byte	0
 760 013d 00       		.byte	0
 761 013e 00       		.byte	0
 762              		.section	.debug_aranges,"",%progbits
 763 0000 34000000 		.4byte	0x34
 764 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 20


 765 0006 00000000 		.4byte	.Ldebug_info0
 766 000a 04       		.byte	0x4
 767 000b 00       		.byte	0
 768 000c 0000     		.2byte	0
 769 000e 0000     		.2byte	0
 770 0010 00000000 		.4byte	.LFB68
 771 0014 12000000 		.4byte	.LFE68-.LFB68
 772 0018 00000000 		.4byte	.LFB69
 773 001c 3C000000 		.4byte	.LFE69-.LFB69
 774 0020 00000000 		.4byte	.LFB70
 775 0024 1E000000 		.4byte	.LFE70-.LFB70
 776 0028 00000000 		.4byte	.LFB71
 777 002c 1A000000 		.4byte	.LFE71-.LFB71
 778 0030 00000000 		.4byte	0
 779 0034 00000000 		.4byte	0
 780              		.section	.debug_ranges,"",%progbits
 781              	.Ldebug_ranges0:
 782 0000 00000000 		.4byte	.LFB68
 783 0004 12000000 		.4byte	.LFE68
 784 0008 00000000 		.4byte	.LFB69
 785 000c 3C000000 		.4byte	.LFE69
 786 0010 00000000 		.4byte	.LFB70
 787 0014 1E000000 		.4byte	.LFE70
 788 0018 00000000 		.4byte	.LFB71
 789 001c 1A000000 		.4byte	.LFE71
 790 0020 00000000 		.4byte	0
 791 0024 00000000 		.4byte	0
 792              		.section	.debug_line,"",%progbits
 793              	.Ldebug_line0:
 794 0000 0B020000 		.section	.debug_str,"MS",%progbits,1
 794      02009401 
 794      00000201 
 794      FB0E0D00 
 794      01010101 
 795              	.LASF29:
 796 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 796      43313120 
 796      352E342E 
 796      31203230 
 796      31363036 
 797 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 797      20726576 
 797      6973696F 
 797      6E203233 
 797      37373135 
 798 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 798      66756E63 
 798      74696F6E 
 798      2D736563 
 798      74696F6E 
 799              	.LASF27:
 800 008e 43795261 		.ascii	"CyRamVectors\000"
 800      6D566563 
 800      746F7273 
 800      00
 801              	.LASF5:
 802 009b 5F5F696E 		.ascii	"__int32_t\000"
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 21


 802      7433325F 
 802      7400
 803              	.LASF33:
 804 00a5 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 804      74526169 
 804      73654241 
 804      53455052 
 804      4900
 805              	.LASF20:
 806 00b7 78506F72 		.ascii	"xPortPendSVHandler\000"
 806      7450656E 
 806      64535648 
 806      616E646C 
 806      657200
 807              	.LASF13:
 808 00ca 666C6F61 		.ascii	"float\000"
 808      7400
 809              	.LASF31:
 810 00d0 433A5C43 		.ascii	"C:\\Code\\P4\\P4_Vertical_farm\\RTOS_TEMPLATE-maste"
 810      6F64655C 
 810      50345C50 
 810      345F5665 
 810      72746963 
 811 00ff 725C506C 		.ascii	"r\\PlanteModul.cydsn\000"
 811      616E7465 
 811      4D6F6475 
 811      6C2E6379 
 811      64736E00 
 812              	.LASF1:
 813 0113 756E7369 		.ascii	"unsigned char\000"
 813      676E6564 
 813      20636861 
 813      7200
 814              	.LASF6:
 815 0121 5F5F7569 		.ascii	"__uint32_t\000"
 815      6E743332 
 815      5F7400
 816              	.LASF7:
 817 012c 6C6F6E67 		.ascii	"long unsigned int\000"
 817      20756E73 
 817      69676E65 
 817      6420696E 
 817      7400
 818              	.LASF3:
 819 013e 73686F72 		.ascii	"short unsigned int\000"
 819      7420756E 
 819      7369676E 
 819      65642069 
 819      6E7400
 820              	.LASF28:
 821 0151 49544D5F 		.ascii	"ITM_RxBuffer\000"
 821      52784275 
 821      66666572 
 821      00
 822              	.LASF14:
 823 015e 646F7562 		.ascii	"double\000"
 823      6C6500
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 22


 824              	.LASF34:
 825 0165 756C4E65 		.ascii	"ulNewBASEPRI\000"
 825      77424153 
 825      45505249 
 825      00
 826              	.LASF32:
 827 0172 74736B54 		.ascii	"tskTaskControlBlock\000"
 827      61736B43 
 827      6F6E7472 
 827      6F6C426C 
 827      6F636B00 
 828              	.LASF35:
 829 0186 6D61696E 		.ascii	"main\000"
 829      00
 830              	.LASF21:
 831 018b 78506F72 		.ascii	"xPortSysTickHandler\000"
 831      74537973 
 831      5469636B 
 831      48616E64 
 831      6C657200 
 832              	.LASF10:
 833 019f 756E7369 		.ascii	"unsigned int\000"
 833      676E6564 
 833      20696E74 
 833      00
 834              	.LASF9:
 835 01ac 6C6F6E67 		.ascii	"long long unsigned int\000"
 835      206C6F6E 
 835      6720756E 
 835      7369676E 
 835      65642069 
 836              	.LASF16:
 837 01c3 63796973 		.ascii	"cyisraddress\000"
 837      72616464 
 837      72657373 
 837      00
 838              	.LASF26:
 839 01d0 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 839      6C696361 
 839      74696F6E 
 839      4D616C6C 
 839      6F634661 
 840              	.LASF11:
 841 01ed 696E7433 		.ascii	"int32_t\000"
 841      325F7400 
 842              	.LASF18:
 843 01f5 73697A65 		.ascii	"sizetype\000"
 843      74797065 
 843      00
 844              	.LASF8:
 845 01fe 6C6F6E67 		.ascii	"long long int\000"
 845      206C6F6E 
 845      6720696E 
 845      7400
 846              	.LASF30:
 847 020c 6D61696E 		.ascii	"main.c\000"
 847      2E6300
ARM GAS  C:\Users\mikke\AppData\Local\Temp\ccWDr9LS.s 			page 23


 848              	.LASF15:
 849 0213 63686172 		.ascii	"char\000"
 849      00
 850              	.LASF22:
 851 0218 76506F72 		.ascii	"vPortSVCHandler\000"
 851      74535643 
 851      48616E64 
 851      6C657200 
 852              	.LASF23:
 853 0228 70785461 		.ascii	"pxTask\000"
 853      736B00
 854              	.LASF2:
 855 022f 73686F72 		.ascii	"short int\000"
 855      7420696E 
 855      7400
 856              	.LASF24:
 857 0239 70635461 		.ascii	"pcTaskName\000"
 857      736B4E61 
 857      6D6500
 858              	.LASF19:
 859 0244 5461736B 		.ascii	"TaskHandle_t\000"
 859      48616E64 
 859      6C655F74 
 859      00
 860              	.LASF12:
 861 0251 75696E74 		.ascii	"uint32_t\000"
 861      33325F74 
 861      00
 862              	.LASF4:
 863 025a 6C6F6E67 		.ascii	"long int\000"
 863      20696E74 
 863      00
 864              	.LASF17:
 865 0263 6C6F6E67 		.ascii	"long double\000"
 865      20646F75 
 865      626C6500 
 866              	.LASF0:
 867 026f 7369676E 		.ascii	"signed char\000"
 867      65642063 
 867      68617200 
 868              	.LASF25:
 869 027b 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 869      6C696361 
 869      74696F6E 
 869      53746163 
 869      6B4F7665 
 870              	.LASF36:
 871 0299 70727648 		.ascii	"prvHardwareSetup\000"
 871      61726477 
 871      61726553 
 871      65747570 
 871      00
 872              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
