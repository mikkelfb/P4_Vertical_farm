ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	DS18x8_Sensor,32,4
  20              		.comm	DS18x8_DataReady,1,1
  21              		.section	.text.main,"ax",%progbits
  22              		.align	2
  23              		.global	main
  24              		.thumb
  25              		.thumb_func
  26              		.type	main, %function
  27              	main:
  28              	.LFB68:
  29              		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * FreeRTOS Kernel V10.3.1
   3:main.c        ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:main.c        ****  * this software and associated documentation files (the "Software"), to deal in
   7:main.c        ****  * the Software without restriction, including without limitation the rights to
   8:main.c        ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:main.c        ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:main.c        ****  * subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in all
  13:main.c        ****  * copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:main.c        ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:main.c        ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:main.c        ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:main.c        ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:main.c        ****  *
  22:main.c        ****  * http://www.FreeRTOS.org
  23:main.c        ****  * http://aws.amazon.com/freertos
  24:main.c        ****  *
  25:main.c        ****  * 1 tab == 4 spaces!
  26:main.c        ****  */
  27:main.c        **** 
  28:main.c        **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 2


  29:main.c        **** 
  30:main.c        **** #include <device.h>
  31:main.c        **** 
  32:main.c        **** /* RTOS includes. */
  33:main.c        **** #include "FreeRTOS.h"
  34:main.c        **** #include "task.h"
  35:main.c        **** #include "queue.h"
  36:main.c        **** #include "semphr.h"
  37:main.c        **** 
  38:main.c        **** /* Plantemodul includes */
  39:main.c        **** #include "Nutrients.h"
  40:main.c        **** #include "light.h"
  41:main.c        **** 
  42:main.c        **** 
  43:main.c        **** /* The time between cycles of the 'check' functionality (defined within the
  44:main.c        **** tick hook. */
  45:main.c        **** #define mainCHECK_DELAY						( ( TickType_t ) 5000 / portTICK_PERIOD_MS )
  46:main.c        **** #define mainCOM_LED							( 3 )
  47:main.c        **** 
  48:main.c        **** /* The number of nano seconds between each processor clock. */
  49:main.c        **** #define mainNS_PER_CLOCK ( ( unsigned long ) ( ( 1.0 / ( double ) configCPU_CLOCK_HZ ) * 1000000000
  50:main.c        **** 
  51:main.c        **** /*
  52:main.c        ****  * Installs the RTOS interrupt handlers and starts the peripherals.
  53:main.c        ****  */
  54:main.c        **** static void prvHardwareSetup( void );
  55:main.c        **** /*---------------------------------------------------------------------------*/
  56:main.c        **** 
  57:main.c        **** 
  58:main.c        **** int main( void )
  59:main.c        **** {
  30              		.loc 1 59 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  60:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  61:main.c        **** 	prvHardwareSetup();
  40              		.loc 1 61 0
  41 0004 FFF7FEFF 		bl	prvHardwareSetup
  62:main.c        ****     
  63:main.c        ****     //vNutrientsInit(); //initialize Nutrients control task and parameteres
  64:main.c        ****      
  65:main.c        ****     vLightInit(); //initialize Light control task and parameters
  42              		.loc 1 65 0
  43 0008 FFF7FEFF 		bl	vLightInit
  66:main.c        ****     
  67:main.c        **** 	/* Will only get here if there was insufficient memory to create the idle
  68:main.c        ****     task.  The idle task is created within vTaskStartScheduler(). */
  69:main.c        **** 	vTaskStartScheduler();
  44              		.loc 1 69 0
  45 000c FFF7FEFF 		bl	vTaskStartScheduler
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 3


  46              	.L2:
  70:main.c        **** 
  71:main.c        ****     
  72:main.c        ****     
  73:main.c        **** 	/* Should never reach here as the kernel will now be running.  If
  74:main.c        **** 	vTaskStartScheduler() does return then it is very likely that there was
  75:main.c        **** 	insufficient (FreeRTOS) heap space available to create all the tasks,
  76:main.c        **** 	including the idle task that is created within vTaskStartScheduler() itself. */
  77:main.c        **** 	for( ;; );
  47              		.loc 1 77 0 discriminator 1
  48 0010 FEE7     		b	.L2
  49              		.cfi_endproc
  50              	.LFE68:
  51              		.size	main, .-main
  52 0012 00BF     		.section	.text.prvHardwareSetup,"ax",%progbits
  53              		.align	2
  54              		.thumb
  55              		.thumb_func
  56              		.type	prvHardwareSetup, %function
  57              	prvHardwareSetup:
  58              	.LFB69:
  78:main.c        **** }
  79:main.c        **** /*---------------------------------------------------------------------------*/
  80:main.c        **** 
  81:main.c        **** 
  82:main.c        **** 
  83:main.c        **** 
  84:main.c        **** 
  85:main.c        **** void prvHardwareSetup( void )
  86:main.c        **** {
  59              		.loc 1 86 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63 0000 80B5     		push	{r7, lr}
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 00AF     		add	r7, sp, #0
  68              		.cfi_def_cfa_register 7
  87:main.c        **** /* Port layer functions that need to be copied into the vector table. */
  88:main.c        **** extern void xPortPendSVHandler( void );
  89:main.c        **** extern void xPortSysTickHandler( void );
  90:main.c        **** extern void vPortSVCHandler( void );
  91:main.c        **** extern cyisraddress CyRamVectors[];
  92:main.c        **** 
  93:main.c        **** 
  94:main.c        **** 
  95:main.c        **** 	/* Install the OS Interrupt Handlers. */
  96:main.c        **** 	CyRamVectors[ 11 ] = ( cyisraddress ) vPortSVCHandler;
  69              		.loc 1 96 0
  70 0004 0C4B     		ldr	r3, .L4
  71 0006 0D4A     		ldr	r2, .L4+4
  72 0008 DA62     		str	r2, [r3, #44]
  97:main.c        **** 	CyRamVectors[ 14 ] = ( cyisraddress ) xPortPendSVHandler;
  73              		.loc 1 97 0
  74 000a 0B4B     		ldr	r3, .L4
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 4


  75 000c 0C4A     		ldr	r2, .L4+8
  76 000e 9A63     		str	r2, [r3, #56]
  98:main.c        **** 	CyRamVectors[ 15 ] = ( cyisraddress ) xPortSysTickHandler;
  77              		.loc 1 98 0
  78 0010 094B     		ldr	r3, .L4
  79 0012 0C4A     		ldr	r2, .L4+12
  80 0014 DA63     		str	r2, [r3, #60]
  99:main.c        **** 
 100:main.c        ****     
 101:main.c        **** 	/* Start-up the peripherals. */
 102:main.c        ****     
 103:main.c        ****     
 104:main.c        ****     PWM_PERISTALTISK_1_Start(); //start PWM module 1
  81              		.loc 1 104 0
  82 0016 FFF7FEFF 		bl	PWM_PERISTALTISK_1_Start
 105:main.c        ****     PWM_PERISTALTISK_2_Start(); //start PWM module 2
  83              		.loc 1 105 0
  84 001a FFF7FEFF 		bl	PWM_PERISTALTISK_2_Start
 106:main.c        ****     ADC_PH_Start(); //start ADC_PH module
  85              		.loc 1 106 0
  86 001e FFF7FEFF 		bl	ADC_PH_Start
 107:main.c        ****     
 108:main.c        ****     /* Startup One_Wire. */
 109:main.c        **** 
 110:main.c        ****     DS18x8_Start(); // Starting DS18x8 module
  87              		.loc 1 110 0
  88 0022 FFF7FEFF 		bl	DS18x8_Start
 111:main.c        ****    
 112:main.c        ****     
 113:main.c        ****     SW_UART_TEST_USB_Start();
  89              		.loc 1 113 0
  90 0026 FFF7FEFF 		bl	SW_UART_TEST_USB_Start
 114:main.c        ****     
 115:main.c        ****     I2C_Start();
  91              		.loc 1 115 0
  92 002a FFF7FEFF 		bl	I2C_Start
 116:main.c        ****     
 117:main.c        ****        
 118:main.c        ****     RTC_Start();
  93              		.loc 1 118 0
  94 002e FFF7FEFF 		bl	RTC_Start
 119:main.c        **** }
  95              		.loc 1 119 0
  96 0032 00BF     		nop
  97 0034 80BD     		pop	{r7, pc}
  98              	.L5:
  99 0036 00BF     		.align	2
 100              	.L4:
 101 0038 00000000 		.word	CyRamVectors
 102 003c 00000000 		.word	vPortSVCHandler
 103 0040 00000000 		.word	xPortPendSVHandler
 104 0044 00000000 		.word	xPortSysTickHandler
 105              		.cfi_endproc
 106              	.LFE69:
 107              		.size	prvHardwareSetup, .-prvHardwareSetup
 108              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 109              		.align	2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 5


 110              		.global	vApplicationStackOverflowHook
 111              		.thumb
 112              		.thumb_func
 113              		.type	vApplicationStackOverflowHook, %function
 114              	vApplicationStackOverflowHook:
 115              	.LFB70:
 120:main.c        **** /*---------------------------------------------------------------------------*/
 121:main.c        **** 
 122:main.c        **** 
 123:main.c        **** 
 124:main.c        **** 
 125:main.c        **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName )
 126:main.c        **** {
 116              		.loc 1 126 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 16
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121 0000 80B4     		push	{r7}
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 7, -4
 124 0002 85B0     		sub	sp, sp, #20
 125              		.cfi_def_cfa_offset 24
 126 0004 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
 128 0006 7860     		str	r0, [r7, #4]
 129 0008 3960     		str	r1, [r7]
 130              	.LBB6:
 131              	.LBB7:
 132              		.file 2 ".\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
   5:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  12:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  15:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  22:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  25:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  27:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 6


  28:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  29:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  32:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  34:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  35:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  36:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  39:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  42:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:.\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  45:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  46:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  47:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  48:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  51:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  52:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  55:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:.\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
  63:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  66:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  70:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  72:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
  81:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
  84:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 7


  85:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
  89:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  90:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  96:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
  97:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:.\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 106:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:.\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:.\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 115:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 120:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 122:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 126:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 127:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 129:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 132:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 134:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 136:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 137:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 8


 142:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 143:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 147:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 149:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 151:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 153:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 155:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 159:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 160:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 162:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 163:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 165:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:.\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 170:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 171:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 173:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 174:.\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 175:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 176:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 177:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 178:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 179:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 180:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 181:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 182:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 183:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 184:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 185:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 186:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 187:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 188:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 189:.\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 190:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:.\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 192:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 193:.\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:.\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 195:.\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 196:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 197:.\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 133              		.loc 2 197 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 9


 134              		.syntax unified
 135              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 136 000a 4FF0A003 			mov r3, #160												
 137 000e 83F31188 		msr basepri, r3											
 138 0012 BFF36F8F 		isb														
 139 0016 BFF34F8F 		dsb														
 140              	
 141              	@ 0 "" 2
 142              		.thumb
 143              		.syntax unified
 144 001a FB60     		str	r3, [r7, #12]
 145              	.L7:
 146              	.LBE7:
 147              	.LBE6:
 127:main.c        **** 	/* The stack space has been execeeded for a task, considering allocating more. */
 128:main.c        **** 	taskDISABLE_INTERRUPTS();
 129:main.c        **** 	for( ;; );
 148              		.loc 1 129 0 discriminator 1
 149 001c FEE7     		b	.L7
 150              		.cfi_endproc
 151              	.LFE70:
 152              		.size	vApplicationStackOverflowHook, .-vApplicationStackOverflowHook
 153 001e 00BF     		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 154              		.align	2
 155              		.global	vApplicationMallocFailedHook
 156              		.thumb
 157              		.thumb_func
 158              		.type	vApplicationMallocFailedHook, %function
 159              	vApplicationMallocFailedHook:
 160              	.LFB71:
 130:main.c        **** }
 131:main.c        **** /*---------------------------------------------------------------------------*/
 132:main.c        **** 
 133:main.c        **** void vApplicationMallocFailedHook( void )
 134:main.c        **** {
 161              		.loc 1 134 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 8
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 0000 80B4     		push	{r7}
 167              		.cfi_def_cfa_offset 4
 168              		.cfi_offset 7, -4
 169 0002 83B0     		sub	sp, sp, #12
 170              		.cfi_def_cfa_offset 16
 171 0004 00AF     		add	r7, sp, #0
 172              		.cfi_def_cfa_register 7
 173              	.LBB8:
 174              	.LBB9:
 175              		.loc 2 197 0
 176              		.syntax unified
 177              	@ 197 ".\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 178 0006 4FF0A003 			mov r3, #160												
 179 000a 83F31188 		msr basepri, r3											
 180 000e BFF36F8F 		isb														
 181 0012 BFF34F8F 		dsb														
 182              	
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 10


 183              	@ 0 "" 2
 184              		.thumb
 185              		.syntax unified
 186 0016 7B60     		str	r3, [r7, #4]
 187              	.L9:
 188              	.LBE9:
 189              	.LBE8:
 135:main.c        **** 	/* The heap space has been execeeded. */
 136:main.c        **** 	taskDISABLE_INTERRUPTS();
 137:main.c        **** 	for( ;; );
 190              		.loc 1 137 0 discriminator 1
 191 0018 FEE7     		b	.L9
 192              		.cfi_endproc
 193              	.LFE71:
 194              		.size	vApplicationMallocFailedHook, .-vApplicationMallocFailedHook
 195 001a 00BF     		.text
 196              	.Letext0:
 197              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 198              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 199              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 200              		.file 6 "Generated_Source\\PSoC5/DS18x8.h"
 201              		.file 7 ".\\Source\\include/task.h"
 202              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 203              		.section	.debug_info,"",%progbits
 204              	.Ldebug_info0:
 205 0000 70020000 		.4byte	0x270
 206 0004 0400     		.2byte	0x4
 207 0006 00000000 		.4byte	.Ldebug_abbrev0
 208 000a 04       		.byte	0x4
 209 000b 01       		.uleb128 0x1
 210 000c 08000000 		.4byte	.LASF35
 211 0010 0C       		.byte	0xc
 212 0011 6A020000 		.4byte	.LASF36
 213 0015 D6010000 		.4byte	.LASF37
 214 0019 00000000 		.4byte	.Ldebug_ranges0+0
 215 001d 00000000 		.4byte	0
 216 0021 00000000 		.4byte	.Ldebug_line0
 217 0025 02       		.uleb128 0x2
 218 0026 01       		.byte	0x1
 219 0027 06       		.byte	0x6
 220 0028 D3020000 		.4byte	.LASF0
 221 002c 02       		.uleb128 0x2
 222 002d 01       		.byte	0x1
 223 002e 08       		.byte	0x8
 224 002f 12010000 		.4byte	.LASF1
 225 0033 02       		.uleb128 0x2
 226 0034 02       		.byte	0x2
 227 0035 05       		.byte	0x5
 228 0036 8D020000 		.4byte	.LASF2
 229 003a 02       		.uleb128 0x2
 230 003b 02       		.byte	0x2
 231 003c 07       		.byte	0x7
 232 003d 3D010000 		.4byte	.LASF3
 233 0041 03       		.uleb128 0x3
 234 0042 C0000000 		.4byte	.LASF5
 235 0046 03       		.byte	0x3
 236 0047 3F       		.byte	0x3f
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 11


 237 0048 4C000000 		.4byte	0x4c
 238 004c 02       		.uleb128 0x2
 239 004d 04       		.byte	0x4
 240 004e 05       		.byte	0x5
 241 004f BE020000 		.4byte	.LASF4
 242 0053 03       		.uleb128 0x3
 243 0054 20010000 		.4byte	.LASF6
 244 0058 03       		.byte	0x3
 245 0059 41       		.byte	0x41
 246 005a 5E000000 		.4byte	0x5e
 247 005e 02       		.uleb128 0x2
 248 005f 04       		.byte	0x4
 249 0060 07       		.byte	0x7
 250 0061 2B010000 		.4byte	.LASF7
 251 0065 02       		.uleb128 0x2
 252 0066 08       		.byte	0x8
 253 0067 05       		.byte	0x5
 254 0068 5C020000 		.4byte	.LASF8
 255 006c 02       		.uleb128 0x2
 256 006d 08       		.byte	0x8
 257 006e 07       		.byte	0x7
 258 006f B2010000 		.4byte	.LASF9
 259 0073 04       		.uleb128 0x4
 260 0074 04       		.byte	0x4
 261 0075 05       		.byte	0x5
 262 0076 696E7400 		.ascii	"int\000"
 263 007a 02       		.uleb128 0x2
 264 007b 04       		.byte	0x4
 265 007c 07       		.byte	0x7
 266 007d A5010000 		.4byte	.LASF10
 267 0081 03       		.uleb128 0x3
 268 0082 4B020000 		.4byte	.LASF11
 269 0086 04       		.byte	0x4
 270 0087 2C       		.byte	0x2c
 271 0088 41000000 		.4byte	0x41
 272 008c 03       		.uleb128 0x3
 273 008d B5020000 		.4byte	.LASF12
 274 0091 04       		.byte	0x4
 275 0092 30       		.byte	0x30
 276 0093 53000000 		.4byte	0x53
 277 0097 05       		.uleb128 0x5
 278 0098 A2020000 		.4byte	.LASF13
 279 009c 05       		.byte	0x5
 280 009d E401     		.2byte	0x1e4
 281 009f 2C000000 		.4byte	0x2c
 282 00a3 05       		.uleb128 0x5
 283 00a4 71010000 		.4byte	.LASF14
 284 00a8 05       		.byte	0x5
 285 00a9 E501     		.2byte	0x1e5
 286 00ab 3A000000 		.4byte	0x3a
 287 00af 02       		.uleb128 0x2
 288 00b0 04       		.byte	0x4
 289 00b1 04       		.byte	0x4
 290 00b2 FE000000 		.4byte	.LASF15
 291 00b6 02       		.uleb128 0x2
 292 00b7 08       		.byte	0x8
 293 00b8 04       		.byte	0x4
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 12


 294 00b9 5D010000 		.4byte	.LASF16
 295 00bd 02       		.uleb128 0x2
 296 00be 01       		.byte	0x1
 297 00bf 08       		.byte	0x8
 298 00c0 71020000 		.4byte	.LASF17
 299 00c4 06       		.uleb128 0x6
 300 00c5 97000000 		.4byte	0x97
 301 00c9 05       		.uleb128 0x5
 302 00ca C9010000 		.4byte	.LASF18
 303 00ce 05       		.byte	0x5
 304 00cf A002     		.2byte	0x2a0
 305 00d1 D5000000 		.4byte	0xd5
 306 00d5 07       		.uleb128 0x7
 307 00d6 04       		.byte	0x4
 308 00d7 DB000000 		.4byte	0xdb
 309 00db 08       		.uleb128 0x8
 310 00dc 02       		.uleb128 0x2
 311 00dd 08       		.byte	0x8
 312 00de 04       		.byte	0x4
 313 00df C7020000 		.4byte	.LASF19
 314 00e3 02       		.uleb128 0x2
 315 00e4 04       		.byte	0x4
 316 00e5 07       		.byte	0x7
 317 00e6 53020000 		.4byte	.LASF20
 318 00ea 07       		.uleb128 0x7
 319 00eb 04       		.byte	0x4
 320 00ec BD000000 		.4byte	0xbd
 321 00f0 09       		.uleb128 0x9
 322 00f1 EF000000 		.4byte	.LASF38
 323 00f5 04       		.byte	0x4
 324 00f6 06       		.byte	0x6
 325 00f7 30       		.byte	0x30
 326 00f8 15010000 		.4byte	0x115
 327 00fc 0A       		.uleb128 0xa
 328 00fd B4000000 		.4byte	.LASF21
 329 0101 06       		.byte	0x6
 330 0102 31       		.byte	0x31
 331 0103 A3000000 		.4byte	0xa3
 332 0107 00       		.byte	0
 333 0108 0A       		.uleb128 0xa
 334 0109 00000000 		.4byte	.LASF22
 335 010d 06       		.byte	0x6
 336 010e 32       		.byte	0x32
 337 010f 97000000 		.4byte	0x97
 338 0113 02       		.byte	0x2
 339 0114 00       		.byte	0
 340 0115 03       		.uleb128 0x3
 341 0116 A8020000 		.4byte	.LASF23
 342 011a 07       		.byte	0x7
 343 011b 46       		.byte	0x46
 344 011c 20010000 		.4byte	0x120
 345 0120 07       		.uleb128 0x7
 346 0121 04       		.byte	0x4
 347 0122 26010000 		.4byte	0x126
 348 0126 0B       		.uleb128 0xb
 349 0127 78010000 		.4byte	.LASF39
 350 012b 0C       		.uleb128 0xc
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 13


 351 012c CA000000 		.4byte	.LASF40
 352 0130 02       		.byte	0x2
 353 0131 C1       		.byte	0xc1
 354 0132 03       		.byte	0x3
 355 0133 43010000 		.4byte	0x143
 356 0137 0D       		.uleb128 0xd
 357 0138 64010000 		.4byte	.LASF41
 358 013c 02       		.byte	0x2
 359 013d C3       		.byte	0xc3
 360 013e 8C000000 		.4byte	0x8c
 361 0142 00       		.byte	0
 362 0143 0E       		.uleb128 0xe
 363 0144 8C010000 		.4byte	.LASF42
 364 0148 01       		.byte	0x1
 365 0149 3A       		.byte	0x3a
 366 014a 73000000 		.4byte	0x73
 367 014e 00000000 		.4byte	.LFB68
 368 0152 12000000 		.4byte	.LFE68-.LFB68
 369 0156 01       		.uleb128 0x1
 370 0157 9C       		.byte	0x9c
 371 0158 0F       		.uleb128 0xf
 372 0159 FD020000 		.4byte	.LASF43
 373 015d 01       		.byte	0x1
 374 015e 55       		.byte	0x55
 375 015f 00000000 		.4byte	.LFB69
 376 0163 48000000 		.4byte	.LFE69-.LFB69
 377 0167 01       		.uleb128 0x1
 378 0168 9C       		.byte	0x9c
 379 0169 8E010000 		.4byte	0x18e
 380 016d 10       		.uleb128 0x10
 381 016e DC000000 		.4byte	.LASF24
 382 0172 01       		.byte	0x1
 383 0173 58       		.byte	0x58
 384 0174 10       		.uleb128 0x10
 385 0175 91010000 		.4byte	.LASF25
 386 0179 01       		.byte	0x1
 387 017a 59       		.byte	0x59
 388 017b 10       		.uleb128 0x10
 389 017c 76020000 		.4byte	.LASF26
 390 0180 01       		.byte	0x1
 391 0181 5A       		.byte	0x5a
 392 0182 11       		.uleb128 0x11
 393 0183 A7000000 		.4byte	.LASF31
 394 0187 01       		.byte	0x1
 395 0188 5B       		.byte	0x5b
 396 0189 8E010000 		.4byte	0x18e
 397 018d 00       		.byte	0
 398 018e 12       		.uleb128 0x12
 399 018f C9000000 		.4byte	0xc9
 400 0193 99010000 		.4byte	0x199
 401 0197 13       		.uleb128 0x13
 402 0198 00       		.byte	0
 403 0199 14       		.uleb128 0x14
 404 019a DF020000 		.4byte	.LASF29
 405 019e 01       		.byte	0x1
 406 019f 7D       		.byte	0x7d
 407 01a0 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 14


 408 01a4 1E000000 		.4byte	.LFE70-.LFB70
 409 01a8 01       		.uleb128 0x1
 410 01a9 9C       		.byte	0x9c
 411 01aa ED010000 		.4byte	0x1ed
 412 01ae 15       		.uleb128 0x15
 413 01af 86020000 		.4byte	.LASF27
 414 01b3 01       		.byte	0x1
 415 01b4 7D       		.byte	0x7d
 416 01b5 15010000 		.4byte	0x115
 417 01b9 02       		.uleb128 0x2
 418 01ba 91       		.byte	0x91
 419 01bb 6C       		.sleb128 -20
 420 01bc 15       		.uleb128 0x15
 421 01bd 97020000 		.4byte	.LASF28
 422 01c1 01       		.byte	0x1
 423 01c2 7D       		.byte	0x7d
 424 01c3 EA000000 		.4byte	0xea
 425 01c7 02       		.uleb128 0x2
 426 01c8 91       		.byte	0x91
 427 01c9 68       		.sleb128 -24
 428 01ca 16       		.uleb128 0x16
 429 01cb 2B010000 		.4byte	0x12b
 430 01cf 0A000000 		.4byte	.LBB6
 431 01d3 12000000 		.4byte	.LBE6-.LBB6
 432 01d7 01       		.byte	0x1
 433 01d8 80       		.byte	0x80
 434 01d9 17       		.uleb128 0x17
 435 01da 0A000000 		.4byte	.LBB7
 436 01de 12000000 		.4byte	.LBE7-.LBB7
 437 01e2 18       		.uleb128 0x18
 438 01e3 37010000 		.4byte	0x137
 439 01e7 02       		.uleb128 0x2
 440 01e8 91       		.byte	0x91
 441 01e9 74       		.sleb128 -12
 442 01ea 00       		.byte	0
 443 01eb 00       		.byte	0
 444 01ec 00       		.byte	0
 445 01ed 14       		.uleb128 0x14
 446 01ee 2E020000 		.4byte	.LASF30
 447 01f2 01       		.byte	0x1
 448 01f3 85       		.byte	0x85
 449 01f4 00000000 		.4byte	.LFB71
 450 01f8 1A000000 		.4byte	.LFE71-.LFB71
 451 01fc 01       		.uleb128 0x1
 452 01fd 9C       		.byte	0x9c
 453 01fe 25020000 		.4byte	0x225
 454 0202 16       		.uleb128 0x16
 455 0203 2B010000 		.4byte	0x12b
 456 0207 06000000 		.4byte	.LBB8
 457 020b 12000000 		.4byte	.LBE8-.LBB8
 458 020f 01       		.byte	0x1
 459 0210 88       		.byte	0x88
 460 0211 17       		.uleb128 0x17
 461 0212 06000000 		.4byte	.LBB9
 462 0216 12000000 		.4byte	.LBE9-.LBB9
 463 021a 18       		.uleb128 0x18
 464 021b 37010000 		.4byte	0x137
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 15


 465 021f 02       		.uleb128 0x2
 466 0220 91       		.byte	0x91
 467 0221 74       		.sleb128 -12
 468 0222 00       		.byte	0
 469 0223 00       		.byte	0
 470 0224 00       		.byte	0
 471 0225 12       		.uleb128 0x12
 472 0226 F0000000 		.4byte	0xf0
 473 022a 35020000 		.4byte	0x235
 474 022e 19       		.uleb128 0x19
 475 022f E3000000 		.4byte	0xe3
 476 0233 07       		.byte	0x7
 477 0234 00       		.byte	0
 478 0235 1A       		.uleb128 0x1a
 479 0236 04010000 		.4byte	.LASF32
 480 023a 06       		.byte	0x6
 481 023b 34       		.byte	0x34
 482 023c 25020000 		.4byte	0x225
 483 0240 05       		.uleb128 0x5
 484 0241 03       		.byte	0x3
 485 0242 00000000 		.4byte	DS18x8_Sensor
 486 0246 1A       		.uleb128 0x1a
 487 0247 96000000 		.4byte	.LASF33
 488 024b 06       		.byte	0x6
 489 024c 39       		.byte	0x39
 490 024d C4000000 		.4byte	0xc4
 491 0251 05       		.uleb128 0x5
 492 0252 03       		.byte	0x3
 493 0253 00000000 		.4byte	DS18x8_DataReady
 494 0257 1B       		.uleb128 0x1b
 495 0258 50010000 		.4byte	.LASF34
 496 025c 08       		.byte	0x8
 497 025d 1207     		.2byte	0x712
 498 025f 63020000 		.4byte	0x263
 499 0263 06       		.uleb128 0x6
 500 0264 81000000 		.4byte	0x81
 501 0268 11       		.uleb128 0x11
 502 0269 A7000000 		.4byte	.LASF31
 503 026d 01       		.byte	0x1
 504 026e 5B       		.byte	0x5b
 505 026f 8E010000 		.4byte	0x18e
 506 0273 00       		.byte	0
 507              		.section	.debug_abbrev,"",%progbits
 508              	.Ldebug_abbrev0:
 509 0000 01       		.uleb128 0x1
 510 0001 11       		.uleb128 0x11
 511 0002 01       		.byte	0x1
 512 0003 25       		.uleb128 0x25
 513 0004 0E       		.uleb128 0xe
 514 0005 13       		.uleb128 0x13
 515 0006 0B       		.uleb128 0xb
 516 0007 03       		.uleb128 0x3
 517 0008 0E       		.uleb128 0xe
 518 0009 1B       		.uleb128 0x1b
 519 000a 0E       		.uleb128 0xe
 520 000b 55       		.uleb128 0x55
 521 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 16


 522 000d 11       		.uleb128 0x11
 523 000e 01       		.uleb128 0x1
 524 000f 10       		.uleb128 0x10
 525 0010 17       		.uleb128 0x17
 526 0011 00       		.byte	0
 527 0012 00       		.byte	0
 528 0013 02       		.uleb128 0x2
 529 0014 24       		.uleb128 0x24
 530 0015 00       		.byte	0
 531 0016 0B       		.uleb128 0xb
 532 0017 0B       		.uleb128 0xb
 533 0018 3E       		.uleb128 0x3e
 534 0019 0B       		.uleb128 0xb
 535 001a 03       		.uleb128 0x3
 536 001b 0E       		.uleb128 0xe
 537 001c 00       		.byte	0
 538 001d 00       		.byte	0
 539 001e 03       		.uleb128 0x3
 540 001f 16       		.uleb128 0x16
 541 0020 00       		.byte	0
 542 0021 03       		.uleb128 0x3
 543 0022 0E       		.uleb128 0xe
 544 0023 3A       		.uleb128 0x3a
 545 0024 0B       		.uleb128 0xb
 546 0025 3B       		.uleb128 0x3b
 547 0026 0B       		.uleb128 0xb
 548 0027 49       		.uleb128 0x49
 549 0028 13       		.uleb128 0x13
 550 0029 00       		.byte	0
 551 002a 00       		.byte	0
 552 002b 04       		.uleb128 0x4
 553 002c 24       		.uleb128 0x24
 554 002d 00       		.byte	0
 555 002e 0B       		.uleb128 0xb
 556 002f 0B       		.uleb128 0xb
 557 0030 3E       		.uleb128 0x3e
 558 0031 0B       		.uleb128 0xb
 559 0032 03       		.uleb128 0x3
 560 0033 08       		.uleb128 0x8
 561 0034 00       		.byte	0
 562 0035 00       		.byte	0
 563 0036 05       		.uleb128 0x5
 564 0037 16       		.uleb128 0x16
 565 0038 00       		.byte	0
 566 0039 03       		.uleb128 0x3
 567 003a 0E       		.uleb128 0xe
 568 003b 3A       		.uleb128 0x3a
 569 003c 0B       		.uleb128 0xb
 570 003d 3B       		.uleb128 0x3b
 571 003e 05       		.uleb128 0x5
 572 003f 49       		.uleb128 0x49
 573 0040 13       		.uleb128 0x13
 574 0041 00       		.byte	0
 575 0042 00       		.byte	0
 576 0043 06       		.uleb128 0x6
 577 0044 35       		.uleb128 0x35
 578 0045 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 17


 579 0046 49       		.uleb128 0x49
 580 0047 13       		.uleb128 0x13
 581 0048 00       		.byte	0
 582 0049 00       		.byte	0
 583 004a 07       		.uleb128 0x7
 584 004b 0F       		.uleb128 0xf
 585 004c 00       		.byte	0
 586 004d 0B       		.uleb128 0xb
 587 004e 0B       		.uleb128 0xb
 588 004f 49       		.uleb128 0x49
 589 0050 13       		.uleb128 0x13
 590 0051 00       		.byte	0
 591 0052 00       		.byte	0
 592 0053 08       		.uleb128 0x8
 593 0054 15       		.uleb128 0x15
 594 0055 00       		.byte	0
 595 0056 27       		.uleb128 0x27
 596 0057 19       		.uleb128 0x19
 597 0058 00       		.byte	0
 598 0059 00       		.byte	0
 599 005a 09       		.uleb128 0x9
 600 005b 13       		.uleb128 0x13
 601 005c 01       		.byte	0x1
 602 005d 03       		.uleb128 0x3
 603 005e 0E       		.uleb128 0xe
 604 005f 0B       		.uleb128 0xb
 605 0060 0B       		.uleb128 0xb
 606 0061 3A       		.uleb128 0x3a
 607 0062 0B       		.uleb128 0xb
 608 0063 3B       		.uleb128 0x3b
 609 0064 0B       		.uleb128 0xb
 610 0065 01       		.uleb128 0x1
 611 0066 13       		.uleb128 0x13
 612 0067 00       		.byte	0
 613 0068 00       		.byte	0
 614 0069 0A       		.uleb128 0xa
 615 006a 0D       		.uleb128 0xd
 616 006b 00       		.byte	0
 617 006c 03       		.uleb128 0x3
 618 006d 0E       		.uleb128 0xe
 619 006e 3A       		.uleb128 0x3a
 620 006f 0B       		.uleb128 0xb
 621 0070 3B       		.uleb128 0x3b
 622 0071 0B       		.uleb128 0xb
 623 0072 49       		.uleb128 0x49
 624 0073 13       		.uleb128 0x13
 625 0074 38       		.uleb128 0x38
 626 0075 0B       		.uleb128 0xb
 627 0076 00       		.byte	0
 628 0077 00       		.byte	0
 629 0078 0B       		.uleb128 0xb
 630 0079 13       		.uleb128 0x13
 631 007a 00       		.byte	0
 632 007b 03       		.uleb128 0x3
 633 007c 0E       		.uleb128 0xe
 634 007d 3C       		.uleb128 0x3c
 635 007e 19       		.uleb128 0x19
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 18


 636 007f 00       		.byte	0
 637 0080 00       		.byte	0
 638 0081 0C       		.uleb128 0xc
 639 0082 2E       		.uleb128 0x2e
 640 0083 01       		.byte	0x1
 641 0084 03       		.uleb128 0x3
 642 0085 0E       		.uleb128 0xe
 643 0086 3A       		.uleb128 0x3a
 644 0087 0B       		.uleb128 0xb
 645 0088 3B       		.uleb128 0x3b
 646 0089 0B       		.uleb128 0xb
 647 008a 27       		.uleb128 0x27
 648 008b 19       		.uleb128 0x19
 649 008c 20       		.uleb128 0x20
 650 008d 0B       		.uleb128 0xb
 651 008e 01       		.uleb128 0x1
 652 008f 13       		.uleb128 0x13
 653 0090 00       		.byte	0
 654 0091 00       		.byte	0
 655 0092 0D       		.uleb128 0xd
 656 0093 34       		.uleb128 0x34
 657 0094 00       		.byte	0
 658 0095 03       		.uleb128 0x3
 659 0096 0E       		.uleb128 0xe
 660 0097 3A       		.uleb128 0x3a
 661 0098 0B       		.uleb128 0xb
 662 0099 3B       		.uleb128 0x3b
 663 009a 0B       		.uleb128 0xb
 664 009b 49       		.uleb128 0x49
 665 009c 13       		.uleb128 0x13
 666 009d 00       		.byte	0
 667 009e 00       		.byte	0
 668 009f 0E       		.uleb128 0xe
 669 00a0 2E       		.uleb128 0x2e
 670 00a1 00       		.byte	0
 671 00a2 3F       		.uleb128 0x3f
 672 00a3 19       		.uleb128 0x19
 673 00a4 03       		.uleb128 0x3
 674 00a5 0E       		.uleb128 0xe
 675 00a6 3A       		.uleb128 0x3a
 676 00a7 0B       		.uleb128 0xb
 677 00a8 3B       		.uleb128 0x3b
 678 00a9 0B       		.uleb128 0xb
 679 00aa 27       		.uleb128 0x27
 680 00ab 19       		.uleb128 0x19
 681 00ac 49       		.uleb128 0x49
 682 00ad 13       		.uleb128 0x13
 683 00ae 11       		.uleb128 0x11
 684 00af 01       		.uleb128 0x1
 685 00b0 12       		.uleb128 0x12
 686 00b1 06       		.uleb128 0x6
 687 00b2 40       		.uleb128 0x40
 688 00b3 18       		.uleb128 0x18
 689 00b4 9642     		.uleb128 0x2116
 690 00b6 19       		.uleb128 0x19
 691 00b7 00       		.byte	0
 692 00b8 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 19


 693 00b9 0F       		.uleb128 0xf
 694 00ba 2E       		.uleb128 0x2e
 695 00bb 01       		.byte	0x1
 696 00bc 03       		.uleb128 0x3
 697 00bd 0E       		.uleb128 0xe
 698 00be 3A       		.uleb128 0x3a
 699 00bf 0B       		.uleb128 0xb
 700 00c0 3B       		.uleb128 0x3b
 701 00c1 0B       		.uleb128 0xb
 702 00c2 27       		.uleb128 0x27
 703 00c3 19       		.uleb128 0x19
 704 00c4 11       		.uleb128 0x11
 705 00c5 01       		.uleb128 0x1
 706 00c6 12       		.uleb128 0x12
 707 00c7 06       		.uleb128 0x6
 708 00c8 40       		.uleb128 0x40
 709 00c9 18       		.uleb128 0x18
 710 00ca 9642     		.uleb128 0x2116
 711 00cc 19       		.uleb128 0x19
 712 00cd 01       		.uleb128 0x1
 713 00ce 13       		.uleb128 0x13
 714 00cf 00       		.byte	0
 715 00d0 00       		.byte	0
 716 00d1 10       		.uleb128 0x10
 717 00d2 2E       		.uleb128 0x2e
 718 00d3 00       		.byte	0
 719 00d4 3F       		.uleb128 0x3f
 720 00d5 19       		.uleb128 0x19
 721 00d6 03       		.uleb128 0x3
 722 00d7 0E       		.uleb128 0xe
 723 00d8 3A       		.uleb128 0x3a
 724 00d9 0B       		.uleb128 0xb
 725 00da 3B       		.uleb128 0x3b
 726 00db 0B       		.uleb128 0xb
 727 00dc 27       		.uleb128 0x27
 728 00dd 19       		.uleb128 0x19
 729 00de 3C       		.uleb128 0x3c
 730 00df 19       		.uleb128 0x19
 731 00e0 00       		.byte	0
 732 00e1 00       		.byte	0
 733 00e2 11       		.uleb128 0x11
 734 00e3 34       		.uleb128 0x34
 735 00e4 00       		.byte	0
 736 00e5 03       		.uleb128 0x3
 737 00e6 0E       		.uleb128 0xe
 738 00e7 3A       		.uleb128 0x3a
 739 00e8 0B       		.uleb128 0xb
 740 00e9 3B       		.uleb128 0x3b
 741 00ea 0B       		.uleb128 0xb
 742 00eb 49       		.uleb128 0x49
 743 00ec 13       		.uleb128 0x13
 744 00ed 3F       		.uleb128 0x3f
 745 00ee 19       		.uleb128 0x19
 746 00ef 3C       		.uleb128 0x3c
 747 00f0 19       		.uleb128 0x19
 748 00f1 00       		.byte	0
 749 00f2 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 20


 750 00f3 12       		.uleb128 0x12
 751 00f4 01       		.uleb128 0x1
 752 00f5 01       		.byte	0x1
 753 00f6 49       		.uleb128 0x49
 754 00f7 13       		.uleb128 0x13
 755 00f8 01       		.uleb128 0x1
 756 00f9 13       		.uleb128 0x13
 757 00fa 00       		.byte	0
 758 00fb 00       		.byte	0
 759 00fc 13       		.uleb128 0x13
 760 00fd 21       		.uleb128 0x21
 761 00fe 00       		.byte	0
 762 00ff 00       		.byte	0
 763 0100 00       		.byte	0
 764 0101 14       		.uleb128 0x14
 765 0102 2E       		.uleb128 0x2e
 766 0103 01       		.byte	0x1
 767 0104 3F       		.uleb128 0x3f
 768 0105 19       		.uleb128 0x19
 769 0106 03       		.uleb128 0x3
 770 0107 0E       		.uleb128 0xe
 771 0108 3A       		.uleb128 0x3a
 772 0109 0B       		.uleb128 0xb
 773 010a 3B       		.uleb128 0x3b
 774 010b 0B       		.uleb128 0xb
 775 010c 27       		.uleb128 0x27
 776 010d 19       		.uleb128 0x19
 777 010e 11       		.uleb128 0x11
 778 010f 01       		.uleb128 0x1
 779 0110 12       		.uleb128 0x12
 780 0111 06       		.uleb128 0x6
 781 0112 40       		.uleb128 0x40
 782 0113 18       		.uleb128 0x18
 783 0114 9742     		.uleb128 0x2117
 784 0116 19       		.uleb128 0x19
 785 0117 01       		.uleb128 0x1
 786 0118 13       		.uleb128 0x13
 787 0119 00       		.byte	0
 788 011a 00       		.byte	0
 789 011b 15       		.uleb128 0x15
 790 011c 05       		.uleb128 0x5
 791 011d 00       		.byte	0
 792 011e 03       		.uleb128 0x3
 793 011f 0E       		.uleb128 0xe
 794 0120 3A       		.uleb128 0x3a
 795 0121 0B       		.uleb128 0xb
 796 0122 3B       		.uleb128 0x3b
 797 0123 0B       		.uleb128 0xb
 798 0124 49       		.uleb128 0x49
 799 0125 13       		.uleb128 0x13
 800 0126 02       		.uleb128 0x2
 801 0127 18       		.uleb128 0x18
 802 0128 00       		.byte	0
 803 0129 00       		.byte	0
 804 012a 16       		.uleb128 0x16
 805 012b 1D       		.uleb128 0x1d
 806 012c 01       		.byte	0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 21


 807 012d 31       		.uleb128 0x31
 808 012e 13       		.uleb128 0x13
 809 012f 11       		.uleb128 0x11
 810 0130 01       		.uleb128 0x1
 811 0131 12       		.uleb128 0x12
 812 0132 06       		.uleb128 0x6
 813 0133 58       		.uleb128 0x58
 814 0134 0B       		.uleb128 0xb
 815 0135 59       		.uleb128 0x59
 816 0136 0B       		.uleb128 0xb
 817 0137 00       		.byte	0
 818 0138 00       		.byte	0
 819 0139 17       		.uleb128 0x17
 820 013a 0B       		.uleb128 0xb
 821 013b 01       		.byte	0x1
 822 013c 11       		.uleb128 0x11
 823 013d 01       		.uleb128 0x1
 824 013e 12       		.uleb128 0x12
 825 013f 06       		.uleb128 0x6
 826 0140 00       		.byte	0
 827 0141 00       		.byte	0
 828 0142 18       		.uleb128 0x18
 829 0143 34       		.uleb128 0x34
 830 0144 00       		.byte	0
 831 0145 31       		.uleb128 0x31
 832 0146 13       		.uleb128 0x13
 833 0147 02       		.uleb128 0x2
 834 0148 18       		.uleb128 0x18
 835 0149 00       		.byte	0
 836 014a 00       		.byte	0
 837 014b 19       		.uleb128 0x19
 838 014c 21       		.uleb128 0x21
 839 014d 00       		.byte	0
 840 014e 49       		.uleb128 0x49
 841 014f 13       		.uleb128 0x13
 842 0150 2F       		.uleb128 0x2f
 843 0151 0B       		.uleb128 0xb
 844 0152 00       		.byte	0
 845 0153 00       		.byte	0
 846 0154 1A       		.uleb128 0x1a
 847 0155 34       		.uleb128 0x34
 848 0156 00       		.byte	0
 849 0157 03       		.uleb128 0x3
 850 0158 0E       		.uleb128 0xe
 851 0159 3A       		.uleb128 0x3a
 852 015a 0B       		.uleb128 0xb
 853 015b 3B       		.uleb128 0x3b
 854 015c 0B       		.uleb128 0xb
 855 015d 49       		.uleb128 0x49
 856 015e 13       		.uleb128 0x13
 857 015f 3F       		.uleb128 0x3f
 858 0160 19       		.uleb128 0x19
 859 0161 02       		.uleb128 0x2
 860 0162 18       		.uleb128 0x18
 861 0163 00       		.byte	0
 862 0164 00       		.byte	0
 863 0165 1B       		.uleb128 0x1b
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 22


 864 0166 34       		.uleb128 0x34
 865 0167 00       		.byte	0
 866 0168 03       		.uleb128 0x3
 867 0169 0E       		.uleb128 0xe
 868 016a 3A       		.uleb128 0x3a
 869 016b 0B       		.uleb128 0xb
 870 016c 3B       		.uleb128 0x3b
 871 016d 05       		.uleb128 0x5
 872 016e 49       		.uleb128 0x49
 873 016f 13       		.uleb128 0x13
 874 0170 3F       		.uleb128 0x3f
 875 0171 19       		.uleb128 0x19
 876 0172 3C       		.uleb128 0x3c
 877 0173 19       		.uleb128 0x19
 878 0174 00       		.byte	0
 879 0175 00       		.byte	0
 880 0176 00       		.byte	0
 881              		.section	.debug_aranges,"",%progbits
 882 0000 34000000 		.4byte	0x34
 883 0004 0200     		.2byte	0x2
 884 0006 00000000 		.4byte	.Ldebug_info0
 885 000a 04       		.byte	0x4
 886 000b 00       		.byte	0
 887 000c 0000     		.2byte	0
 888 000e 0000     		.2byte	0
 889 0010 00000000 		.4byte	.LFB68
 890 0014 12000000 		.4byte	.LFE68-.LFB68
 891 0018 00000000 		.4byte	.LFB69
 892 001c 48000000 		.4byte	.LFE69-.LFB69
 893 0020 00000000 		.4byte	.LFB70
 894 0024 1E000000 		.4byte	.LFE70-.LFB70
 895 0028 00000000 		.4byte	.LFB71
 896 002c 1A000000 		.4byte	.LFE71-.LFB71
 897 0030 00000000 		.4byte	0
 898 0034 00000000 		.4byte	0
 899              		.section	.debug_ranges,"",%progbits
 900              	.Ldebug_ranges0:
 901 0000 00000000 		.4byte	.LFB68
 902 0004 12000000 		.4byte	.LFE68
 903 0008 00000000 		.4byte	.LFB69
 904 000c 48000000 		.4byte	.LFE69
 905 0010 00000000 		.4byte	.LFB70
 906 0014 1E000000 		.4byte	.LFE70
 907 0018 00000000 		.4byte	.LFB71
 908 001c 1A000000 		.4byte	.LFE71
 909 0020 00000000 		.4byte	0
 910 0024 00000000 		.4byte	0
 911              		.section	.debug_line,"",%progbits
 912              	.Ldebug_line0:
 913 0000 18020000 		.section	.debug_str,"MS",%progbits,1
 913      0200A001 
 913      00000201 
 913      FB0E0D00 
 913      01010101 
 914              	.LASF22:
 915 0000 70726573 		.ascii	"present\000"
 915      656E7400 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 23


 916              	.LASF35:
 917 0008 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 917      43313120 
 917      352E342E 
 917      31203230 
 917      31363036 
 918 003b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 918      20726576 
 918      6973696F 
 918      6E203233 
 918      37373135 
 919 006e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 919      66756E63 
 919      74696F6E 
 919      2D736563 
 919      74696F6E 
 920              	.LASF33:
 921 0096 44533138 		.ascii	"DS18x8_DataReady\000"
 921      78385F44 
 921      61746152 
 921      65616479 
 921      00
 922              	.LASF31:
 923 00a7 43795261 		.ascii	"CyRamVectors\000"
 923      6D566563 
 923      746F7273 
 923      00
 924              	.LASF21:
 925 00b4 54656D70 		.ascii	"Temperature\000"
 925      65726174 
 925      75726500 
 926              	.LASF5:
 927 00c0 5F5F696E 		.ascii	"__int32_t\000"
 927      7433325F 
 927      7400
 928              	.LASF40:
 929 00ca 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 929      74526169 
 929      73654241 
 929      53455052 
 929      4900
 930              	.LASF24:
 931 00dc 78506F72 		.ascii	"xPortPendSVHandler\000"
 931      7450656E 
 931      64535648 
 931      616E646C 
 931      657200
 932              	.LASF38:
 933 00ef 44533138 		.ascii	"DS18x8_TSensor\000"
 933      78385F54 
 933      53656E73 
 933      6F7200
 934              	.LASF15:
 935 00fe 666C6F61 		.ascii	"float\000"
 935      7400
 936              	.LASF32:
 937 0104 44533138 		.ascii	"DS18x8_Sensor\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 24


 937      78385F53 
 937      656E736F 
 937      7200
 938              	.LASF1:
 939 0112 756E7369 		.ascii	"unsigned char\000"
 939      676E6564 
 939      20636861 
 939      7200
 940              	.LASF6:
 941 0120 5F5F7569 		.ascii	"__uint32_t\000"
 941      6E743332 
 941      5F7400
 942              	.LASF7:
 943 012b 6C6F6E67 		.ascii	"long unsigned int\000"
 943      20756E73 
 943      69676E65 
 943      6420696E 
 943      7400
 944              	.LASF3:
 945 013d 73686F72 		.ascii	"short unsigned int\000"
 945      7420756E 
 945      7369676E 
 945      65642069 
 945      6E7400
 946              	.LASF34:
 947 0150 49544D5F 		.ascii	"ITM_RxBuffer\000"
 947      52784275 
 947      66666572 
 947      00
 948              	.LASF16:
 949 015d 646F7562 		.ascii	"double\000"
 949      6C6500
 950              	.LASF41:
 951 0164 756C4E65 		.ascii	"ulNewBASEPRI\000"
 951      77424153 
 951      45505249 
 951      00
 952              	.LASF14:
 953 0171 75696E74 		.ascii	"uint16\000"
 953      313600
 954              	.LASF39:
 955 0178 74736B54 		.ascii	"tskTaskControlBlock\000"
 955      61736B43 
 955      6F6E7472 
 955      6F6C426C 
 955      6F636B00 
 956              	.LASF42:
 957 018c 6D61696E 		.ascii	"main\000"
 957      00
 958              	.LASF25:
 959 0191 78506F72 		.ascii	"xPortSysTickHandler\000"
 959      74537973 
 959      5469636B 
 959      48616E64 
 959      6C657200 
 960              	.LASF10:
 961 01a5 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 25


 961      676E6564 
 961      20696E74 
 961      00
 962              	.LASF9:
 963 01b2 6C6F6E67 		.ascii	"long long unsigned int\000"
 963      206C6F6E 
 963      6720756E 
 963      7369676E 
 963      65642069 
 964              	.LASF18:
 965 01c9 63796973 		.ascii	"cyisraddress\000"
 965      72616464 
 965      72657373 
 965      00
 966              	.LASF37:
 967 01d6 433A5C55 		.ascii	"C:\\Users\\krist\\Documents\\GitHub\\P4_Vertical_fa"
 967      73657273 
 967      5C6B7269 
 967      73745C44 
 967      6F63756D 
 968 0204 726D5C52 		.ascii	"rm\\RTOS_TEMPLATE-master\\PlanteModul.cydsn\000"
 968      544F535F 
 968      54454D50 
 968      4C415445 
 968      2D6D6173 
 969              	.LASF30:
 970 022e 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 970      6C696361 
 970      74696F6E 
 970      4D616C6C 
 970      6F634661 
 971              	.LASF11:
 972 024b 696E7433 		.ascii	"int32_t\000"
 972      325F7400 
 973              	.LASF20:
 974 0253 73697A65 		.ascii	"sizetype\000"
 974      74797065 
 974      00
 975              	.LASF8:
 976 025c 6C6F6E67 		.ascii	"long long int\000"
 976      206C6F6E 
 976      6720696E 
 976      7400
 977              	.LASF36:
 978 026a 6D61696E 		.ascii	"main.c\000"
 978      2E6300
 979              	.LASF17:
 980 0271 63686172 		.ascii	"char\000"
 980      00
 981              	.LASF26:
 982 0276 76506F72 		.ascii	"vPortSVCHandler\000"
 982      74535643 
 982      48616E64 
 982      6C657200 
 983              	.LASF27:
 984 0286 70785461 		.ascii	"pxTask\000"
 984      736B00
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccUspRjc.s 			page 26


 985              	.LASF2:
 986 028d 73686F72 		.ascii	"short int\000"
 986      7420696E 
 986      7400
 987              	.LASF28:
 988 0297 70635461 		.ascii	"pcTaskName\000"
 988      736B4E61 
 988      6D6500
 989              	.LASF13:
 990 02a2 75696E74 		.ascii	"uint8\000"
 990      3800
 991              	.LASF23:
 992 02a8 5461736B 		.ascii	"TaskHandle_t\000"
 992      48616E64 
 992      6C655F74 
 992      00
 993              	.LASF12:
 994 02b5 75696E74 		.ascii	"uint32_t\000"
 994      33325F74 
 994      00
 995              	.LASF4:
 996 02be 6C6F6E67 		.ascii	"long int\000"
 996      20696E74 
 996      00
 997              	.LASF19:
 998 02c7 6C6F6E67 		.ascii	"long double\000"
 998      20646F75 
 998      626C6500 
 999              	.LASF0:
 1000 02d3 7369676E 		.ascii	"signed char\000"
 1000      65642063 
 1000      68617200 
 1001              	.LASF29:
 1002 02df 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 1002      6C696361 
 1002      74696F6E 
 1002      53746163 
 1002      6B4F7665 
 1003              	.LASF43:
 1004 02fd 70727648 		.ascii	"prvHardwareSetup\000"
 1004      61726477 
 1004      61726553 
 1004      65747570 
 1004      00
 1005              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
