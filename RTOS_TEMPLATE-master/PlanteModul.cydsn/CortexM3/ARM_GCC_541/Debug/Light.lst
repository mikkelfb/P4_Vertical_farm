ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Light.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	DS18x8_Sensor,32,4
  20              		.comm	DS18x8_DataReady,1,1
  21              		.comm	Light,1,1
  22              		.comm	Time,1,1
  23              		.comm	bLEDCMD,1,1
  24              		.comm	bLEDstate,1,1
  25              		.global	bAlarmState
  26              		.bss
  27              		.type	bAlarmState, %object
  28              		.size	bAlarmState, 1
  29              	bAlarmState:
  30 0000 00       		.space	1
  31              		.global	ClockAddr
  32              		.data
  33              		.type	ClockAddr, %object
  34              		.size	ClockAddr, 1
  35              	ClockAddr:
  36 0000 09       		.byte	9
  37              		.comm	Start,8,4
  38              		.comm	CurrentTime,8,4
  39              		.comm	xQueueLightValue,4,4
  40              		.comm	xQueueCurrentTime,12,4
  41              		.section	.rodata
  42              		.align	2
  43              	.LC1:
  44 0000 4C696768 		.ascii	"Light\000"
  44      7400
  45 0006 0000     		.align	2
  46              	.LC2:
  47 0008 4C696768 		.ascii	"Light controller\000"
  47      7420636F 
  47      6E74726F 
  47      6C6C6572 
  47      00
  48              		.section	.text.vLightInit,"ax",%progbits
  49              		.align	2
  50              		.global	vLightInit
  51              		.thumb
  52              		.thumb_func
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 2


  53              		.type	vLightInit, %function
  54              	vLightInit:
  55              	.LFB68:
  56              		.file 1 "Light.c"
   1:Light.c       **** /* ========================================
   2:Light.c       ****  *
   3:Light.c       ****  * Copyright YOUR COMPANY, THE YEAR
   4:Light.c       ****  * All Rights Reserved
   5:Light.c       ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:Light.c       ****  *
   7:Light.c       ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:Light.c       ****  * WHICH IS THE PROPERTY OF your company.
   9:Light.c       ****  *
  10:Light.c       ****  * ========================================
  11:Light.c       **** */
  12:Light.c       **** 
  13:Light.c       **** /* [] END OF FILE */
  14:Light.c       **** 
  15:Light.c       **** #include "FreeRTOS.h"
  16:Light.c       **** #include "light.h"
  17:Light.c       **** #include "task.h"
  18:Light.c       **** #include "queue.h"
  19:Light.c       **** 
  20:Light.c       **** uint8 Light; // Variable contains measured light value
  21:Light.c       **** uint8 Time;
  22:Light.c       **** _Bool bLEDCMD;
  23:Light.c       **** _Bool bLEDstate;
  24:Light.c       **** _Bool bAlarmState = 0;
  25:Light.c       **** uint8 ClockAddr = 9; // Address for Arduino clock
  26:Light.c       **** 
  27:Light.c       **** 
  28:Light.c       **** struct Clock
  29:Light.c       ****     {
  30:Light.c       ****         uint8 Sec;
  31:Light.c       ****         uint8 Min;
  32:Light.c       ****         uint8 Hour;
  33:Light.c       ****         uint8 DayOfMonth;
  34:Light.c       ****         uint8 Month;
  35:Light.c       ****         uint16 Year;
  36:Light.c       ****         
  37:Light.c       ****     };
  38:Light.c       **** struct Clock Start;
  39:Light.c       **** struct Clock CurrentTime;
  40:Light.c       **** 
  41:Light.c       **** /* Create a queue for sending the light value through UART */
  42:Light.c       **** QueueHandle_t xQueueLightValue;
  43:Light.c       **** 
  44:Light.c       **** /* Create a queue for checking the light cycle */
  45:Light.c       **** QueueHandle_t xQueueCurrentTime[3];
  46:Light.c       **** 
  47:Light.c       **** void vLightInit(){
  57              		.loc 1 47 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 80B5     		push	{r7, lr}
  62              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 3


  63              		.cfi_offset 7, -8
  64              		.cfi_offset 14, -4
  65 0002 82B0     		sub	sp, sp, #8
  66              		.cfi_def_cfa_offset 16
  67 0004 02AF     		add	r7, sp, #8
  68              		.cfi_def_cfa 7, 8
  48:Light.c       ****        
  49:Light.c       ****     
  50:Light.c       ****     /*  The queue is created to hold a maximum of 1 value, each of which is
  51:Light.c       ****         large enough to hold a variable at the size of uint8. */
  52:Light.c       ****     xQueueLightValue = xQueueCreate(1, sizeof(uint8));
  69              		.loc 1 52 0
  70 0006 0022     		movs	r2, #0
  71 0008 0121     		movs	r1, #1
  72 000a 0120     		movs	r0, #1
  73 000c FFF7FEFF 		bl	xQueueGenericCreate
  74 0010 0246     		mov	r2, r0
  75 0012 1A4B     		ldr	r3, .L2
  76 0014 1A60     		str	r2, [r3]
  53:Light.c       ****     
  54:Light.c       ****     /*  Queue with current time: hour, min, sec */
  55:Light.c       ****     xQueueCurrentTime[0] = xQueueCreate(1, sizeof(uint8));
  77              		.loc 1 55 0
  78 0016 0022     		movs	r2, #0
  79 0018 0121     		movs	r1, #1
  80 001a 0120     		movs	r0, #1
  81 001c FFF7FEFF 		bl	xQueueGenericCreate
  82 0020 0246     		mov	r2, r0
  83 0022 174B     		ldr	r3, .L2+4
  84 0024 1A60     		str	r2, [r3]
  56:Light.c       ****     xQueueCurrentTime[1] = xQueueCreate(1, sizeof(uint8));
  85              		.loc 1 56 0
  86 0026 0022     		movs	r2, #0
  87 0028 0121     		movs	r1, #1
  88 002a 0120     		movs	r0, #1
  89 002c FFF7FEFF 		bl	xQueueGenericCreate
  90 0030 0246     		mov	r2, r0
  91 0032 134B     		ldr	r3, .L2+4
  92 0034 5A60     		str	r2, [r3, #4]
  57:Light.c       ****     xQueueCurrentTime[2] = xQueueCreate(1, sizeof(uint8));
  93              		.loc 1 57 0
  94 0036 0022     		movs	r2, #0
  95 0038 0121     		movs	r1, #1
  96 003a 0120     		movs	r0, #1
  97 003c FFF7FEFF 		bl	xQueueGenericCreate
  98 0040 0246     		mov	r2, r0
  99 0042 0F4B     		ldr	r3, .L2+4
 100 0044 9A60     		str	r2, [r3, #8]
  58:Light.c       ****     
  59:Light.c       ****     /*  Create the task that will control the light sensor. The task is created with
  60:Light.c       ****         priority 2. */
  61:Light.c       ****     xTaskCreate(vTaskLightMeasure, "Light", 1000 , NULL , 2 , NULL);
 101              		.loc 1 61 0
 102 0046 0023     		movs	r3, #0
 103 0048 0193     		str	r3, [sp, #4]
 104 004a 0223     		movs	r3, #2
 105 004c 0093     		str	r3, [sp]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 4


 106 004e 0023     		movs	r3, #0
 107 0050 4FF47A72 		mov	r2, #1000
 108 0054 0B49     		ldr	r1, .L2+8
 109 0056 0C48     		ldr	r0, .L2+12
 110 0058 FFF7FEFF 		bl	xTaskCreate
  62:Light.c       ****     
  63:Light.c       ****     /*  Create the controller task that will recieve external commands 
  64:Light.c       ****         and regulate the LED based on the sensor value. 
  65:Light.c       ****         The task is created with priority 2. */
  66:Light.c       ****     xTaskCreate(vTaskLightController, "Light controller", 100, NULL, 2, NULL);
 111              		.loc 1 66 0
 112 005c 0023     		movs	r3, #0
 113 005e 0193     		str	r3, [sp, #4]
 114 0060 0223     		movs	r3, #2
 115 0062 0093     		str	r3, [sp]
 116 0064 0023     		movs	r3, #0
 117 0066 6422     		movs	r2, #100
 118 0068 0849     		ldr	r1, .L2+16
 119 006a 0948     		ldr	r0, .L2+20
 120 006c FFF7FEFF 		bl	xTaskCreate
  67:Light.c       ****     
  68:Light.c       ****     /*  Create the LED task to turn on and off the LED */
  69:Light.c       ****     //xTaskCreate(vTaskLEDcontrol, "LED controller", 100, NULL, 2, NULL);
  70:Light.c       ****     
  71:Light.c       ****     /*Initialize test tasks*/
  72:Light.c       ****     #if LIGHTTEST == 1
  73:Light.c       ****         vTestLightTaskInit();
 121              		.loc 1 73 0
 122 0070 FFF7FEFF 		bl	vTestLightTaskInit
  74:Light.c       ****     #endif
  75:Light.c       **** }
 123              		.loc 1 75 0
 124 0074 00BF     		nop
 125 0076 BD46     		mov	sp, r7
 126              		.cfi_def_cfa_register 13
 127              		@ sp needed
 128 0078 80BD     		pop	{r7, pc}
 129              	.L3:
 130 007a 00BF     		.align	2
 131              	.L2:
 132 007c 00000000 		.word	xQueueLightValue
 133 0080 00000000 		.word	xQueueCurrentTime
 134 0084 00000000 		.word	.LC1
 135 0088 00000000 		.word	vTaskLightMeasure
 136 008c 08000000 		.word	.LC2
 137 0090 00000000 		.word	vTaskLightController
 138              		.cfi_endproc
 139              	.LFE68:
 140              		.size	vLightInit, .-vLightInit
 141              		.section	.text.vTaskLightMeasure,"ax",%progbits
 142              		.align	2
 143              		.global	vTaskLightMeasure
 144              		.thumb
 145              		.thumb_func
 146              		.type	vTaskLightMeasure, %function
 147              	vTaskLightMeasure:
 148              	.LFB69:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 5


  76:Light.c       **** 
  77:Light.c       **** /*  This function turns on the light sensor, periodically reads the sensor 
  78:Light.c       ****     and sends the measured value to the created queue for UART */
  79:Light.c       **** void vTaskLightMeasure(){
 149              		.loc 1 79 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 82B0     		sub	sp, sp, #8
 158              		.cfi_def_cfa_offset 16
 159 0004 00AF     		add	r7, sp, #0
 160              		.cfi_def_cfa_register 7
  80:Light.c       ****     Pin_5V_out_Write(1u);
 161              		.loc 1 80 0
 162 0006 0120     		movs	r0, #1
 163 0008 FFF7FEFF 		bl	Pin_5V_out_Write
  81:Light.c       ****     const TickType_t xDelayms = pdMS_TO_TICKS( 10000 ); // Sets the measurement resolution.
 164              		.loc 1 81 0
 165 000c 42F21073 		movw	r3, #10000
 166 0010 7B60     		str	r3, [r7, #4]
 167              	.L5:
 168              	.LBB2:
  82:Light.c       ****     
  83:Light.c       ****     for(;;){
  84:Light.c       ****        
  85:Light.c       ****         uint8 LightRead = Pin_LIGHT_in_Read();
 169              		.loc 1 85 0 discriminator 1
 170 0012 FFF7FEFF 		bl	Pin_LIGHT_in_Read
 171 0016 0346     		mov	r3, r0
 172 0018 FB70     		strb	r3, [r7, #3]
  86:Light.c       ****         Light = LightRead;
 173              		.loc 1 86 0 discriminator 1
 174 001a 034A     		ldr	r2, .L6
 175 001c FB78     		ldrb	r3, [r7, #3]
 176 001e 1370     		strb	r3, [r2]
  87:Light.c       ****         //xQueueSendToBack(xQueueLightValue, &Light, portMAX_DELAY);
  88:Light.c       ****         vTaskDelay(xDelayms); 
 177              		.loc 1 88 0 discriminator 1
 178 0020 7868     		ldr	r0, [r7, #4]
 179 0022 FFF7FEFF 		bl	vTaskDelay
 180              	.LBE2:
  89:Light.c       ****     }
 181              		.loc 1 89 0 discriminator 1
 182 0026 F4E7     		b	.L5
 183              	.L7:
 184              		.align	2
 185              	.L6:
 186 0028 00000000 		.word	Light
 187              		.cfi_endproc
 188              	.LFE69:
 189              		.size	vTaskLightMeasure, .-vTaskLightMeasure
 190              		.section	.rodata
 191 0019 000000   		.align	2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 6


 192              	.LC0:
 193 001c 08       		.byte	8
 194 001d 0E       		.byte	14
 195              		.section	.text.vTaskLightController,"ax",%progbits
 196              		.align	2
 197              		.global	vTaskLightController
 198              		.thumb
 199              		.thumb_func
 200              		.type	vTaskLightController, %function
 201              	vTaskLightController:
 202              	.LFB70:
  90:Light.c       **** }
  91:Light.c       **** 
  92:Light.c       **** 
  93:Light.c       **** /*  This function recieves info about which time interval there should be light, 
  94:Light.c       ****     turns on/off LED lights and periodically checks if the lights are on */
  95:Light.c       **** void vTaskLightController(){
 203              		.loc 1 95 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 16
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 80B5     		push	{r7, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 84B0     		sub	sp, sp, #16
 212              		.cfi_def_cfa_offset 24
 213 0004 00AF     		add	r7, sp, #0
 214              		.cfi_def_cfa_register 7
  96:Light.c       ****     uint8 LightCycle[] = {8, 14}; // Input parameters with start and stop time for the light cycle
 215              		.loc 1 96 0
 216 0006 274A     		ldr	r2, .L13
 217 0008 3B1D     		adds	r3, r7, #4
 218 000a 1288     		ldrh	r2, [r2]	@ unaligned
 219 000c 1A80     		strh	r2, [r3]	@ unaligned
  97:Light.c       ****     const TickType_t xDelayms = pdMS_TO_TICKS( 10000 ); // Sets the measurement resolution.
 220              		.loc 1 97 0
 221 000e 42F21073 		movw	r3, #10000
 222 0012 FB60     		str	r3, [r7, #12]
  98:Light.c       ****     const TickType_t xShortDelayms = pdMS_TO_TICKS( 100 );
 223              		.loc 1 98 0
 224 0014 6423     		movs	r3, #100
 225 0016 BB60     		str	r3, [r7, #8]
 226              	.L12:
  99:Light.c       ****     char ArduinoClock[3]; // Array to store clock value from Arduino
 100:Light.c       ****     
 101:Light.c       ****     for(;;){
 102:Light.c       ****               
 103:Light.c       ****         /* Read current time from Arduino clock and store in array */
 104:Light.c       ****         I2C_MasterReadBuf( ClockAddr, (uint8*) ArduinoClock, 3, I2C_MODE_COMPLETE_XFER);
 227              		.loc 1 104 0
 228 0018 234B     		ldr	r3, .L13+4
 229 001a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 230 001c 3946     		mov	r1, r7
 231 001e 0023     		movs	r3, #0
 232 0020 0322     		movs	r2, #3
 233 0022 FFF7FEFF 		bl	I2C_MasterReadBuf
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 7


 105:Light.c       ****         
 106:Light.c       ****         /* Save values from array in CurrentTime struct */
 107:Light.c       ****         CurrentTime.Hour = ArduinoClock[0];
 234              		.loc 1 107 0
 235 0026 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 236 0028 204B     		ldr	r3, .L13+8
 237 002a 9A70     		strb	r2, [r3, #2]
 108:Light.c       ****         CurrentTime.Min = ArduinoClock[1];
 238              		.loc 1 108 0
 239 002c 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
 240 002e 1F4B     		ldr	r3, .L13+8
 241 0030 5A70     		strb	r2, [r3, #1]
 109:Light.c       ****         CurrentTime.Sec = ArduinoClock[2];
 242              		.loc 1 109 0
 243 0032 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 244 0034 1D4B     		ldr	r3, .L13+8
 245 0036 1A70     		strb	r2, [r3]
 110:Light.c       ****         
 111:Light.c       ****         /* Sends CurrentTime values to serial via UART, used for test */
 112:Light.c       ****         xQueueSendToBack(xQueueCurrentTime[0], &CurrentTime.Hour, portMAX_DELAY);
 246              		.loc 1 112 0
 247 0038 1D4B     		ldr	r3, .L13+12
 248 003a 1868     		ldr	r0, [r3]
 249 003c 0023     		movs	r3, #0
 250 003e 4FF0FF32 		mov	r2, #-1
 251 0042 1C49     		ldr	r1, .L13+16
 252 0044 FFF7FEFF 		bl	xQueueGenericSend
 113:Light.c       ****         xQueueSendToBack(xQueueCurrentTime[1], &CurrentTime.Min, portMAX_DELAY);
 253              		.loc 1 113 0
 254 0048 194B     		ldr	r3, .L13+12
 255 004a 5868     		ldr	r0, [r3, #4]
 256 004c 0023     		movs	r3, #0
 257 004e 4FF0FF32 		mov	r2, #-1
 258 0052 1949     		ldr	r1, .L13+20
 259 0054 FFF7FEFF 		bl	xQueueGenericSend
 114:Light.c       ****         xQueueSendToBack(xQueueCurrentTime[2], &CurrentTime.Sec, portMAX_DELAY);
 260              		.loc 1 114 0
 261 0058 154B     		ldr	r3, .L13+12
 262 005a 9868     		ldr	r0, [r3, #8]
 263 005c 0023     		movs	r3, #0
 264 005e 4FF0FF32 		mov	r2, #-1
 265 0062 1249     		ldr	r1, .L13+8
 266 0064 FFF7FEFF 		bl	xQueueGenericSend
 115:Light.c       ****         vTaskDelay(xShortDelayms);
 267              		.loc 1 115 0
 268 0068 B868     		ldr	r0, [r7, #8]
 269 006a FFF7FEFF 		bl	vTaskDelay
 116:Light.c       ****                 
 117:Light.c       ****         /*  This if-statement checks if the current hour is within the on-interval of the light cyc
 118:Light.c       ****             If so, the LED is turned on. 
 119:Light.c       ****             After a short delay, the light sensor is read to make sure that the LED is on */
 120:Light.c       ****         if((CurrentTime.Hour >= LightCycle[0]) && (CurrentTime.Hour < LightCycle[1])){
 270              		.loc 1 120 0
 271 006e 0F4B     		ldr	r3, .L13+8
 272 0070 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 273 0072 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 274 0074 9A42     		cmp	r2, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 8


 275 0076 0ED3     		bcc	.L9
 276              		.loc 1 120 0 is_stmt 0 discriminator 1
 277 0078 0C4B     		ldr	r3, .L13+8
 278 007a 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 279 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 280 007e 9A42     		cmp	r2, r3
 281 0080 09D2     		bcs	.L9
 121:Light.c       ****             
 122:Light.c       ****             // some code that turns on the LED
 123:Light.c       ****             bLEDCMD = 1;
 282              		.loc 1 123 0 is_stmt 1
 283 0082 0E4B     		ldr	r3, .L13+24
 284 0084 0122     		movs	r2, #1
 285 0086 1A70     		strb	r2, [r3]
 124:Light.c       ****             //SW_UART_TEST_USB_PutString("Within active hours of light cycle: TRUE \n");
 125:Light.c       ****             vTaskDelay(xShortDelayms);
 286              		.loc 1 125 0
 287 0088 B868     		ldr	r0, [r7, #8]
 288 008a FFF7FEFF 		bl	vTaskDelay
 126:Light.c       ****             
 127:Light.c       ****             if(Light == 0){
 289              		.loc 1 127 0
 290 008e 0C4B     		ldr	r3, .L13+28
 291 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 292 0092 002B     		cmp	r3, #0
 293 0094 02E0     		b	.L11
 294              	.L9:
 128:Light.c       ****                 // The LED are on, all is good
 129:Light.c       ****                 //SW_UART_TEST_USB_PutString("Enough light: TRUE \n \n");
 130:Light.c       ****             }
 131:Light.c       ****             else if(Light == 1){
 132:Light.c       ****                 // The LED are not on, all is not good
 133:Light.c       ****                 //SW_UART_TEST_USB_PutString("Enough light: FALSE \n \n");
 134:Light.c       ****                 // some code to force turn on LED and send alarm
 135:Light.c       ****             }
 136:Light.c       ****             else{
 137:Light.c       ****                 //panic
 138:Light.c       ****             }    
 139:Light.c       ****         }
 140:Light.c       ****         else{
 141:Light.c       ****             // The LED should not be on
 142:Light.c       ****             bLEDCMD = 0;
 295              		.loc 1 142 0
 296 0096 094B     		ldr	r3, .L13+24
 297 0098 0022     		movs	r2, #0
 298 009a 1A70     		strb	r2, [r3]
 299              	.L11:
 143:Light.c       ****             // some code to turn off LED
 144:Light.c       ****             
 145:Light.c       ****             //SW_UART_TEST_USB_PutString("Within active hours of light cycle: FALSE \n \n");
 146:Light.c       ****         }    
 147:Light.c       ****     vTaskDelay(xDelayms); 
 300              		.loc 1 147 0
 301 009c F868     		ldr	r0, [r7, #12]
 302 009e FFF7FEFF 		bl	vTaskDelay
 148:Light.c       ****     }
 303              		.loc 1 148 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 9


 304 00a2 B9E7     		b	.L12
 305              	.L14:
 306              		.align	2
 307              	.L13:
 308 00a4 1C000000 		.word	.LC0
 309 00a8 00000000 		.word	ClockAddr
 310 00ac 00000000 		.word	CurrentTime
 311 00b0 00000000 		.word	xQueueCurrentTime
 312 00b4 02000000 		.word	CurrentTime+2
 313 00b8 01000000 		.word	CurrentTime+1
 314 00bc 00000000 		.word	bLEDCMD
 315 00c0 00000000 		.word	Light
 316              		.cfi_endproc
 317              	.LFE70:
 318              		.size	vTaskLightController, .-vTaskLightController
 319              		.section	.text.vTaskLEDcontrol,"ax",%progbits
 320              		.align	2
 321              		.global	vTaskLEDcontrol
 322              		.thumb
 323              		.thumb_func
 324              		.type	vTaskLEDcontrol, %function
 325              	vTaskLEDcontrol:
 326              	.LFB71:
 149:Light.c       **** }
 150:Light.c       **** 
 151:Light.c       **** 
 152:Light.c       **** void vTaskLEDcontrol(){
 327              		.loc 1 152 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 332 0000 80B4     		push	{r7}
 333              		.cfi_def_cfa_offset 4
 334              		.cfi_offset 7, -4
 335 0002 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
 153:Light.c       ****     /*
 154:Light.c       ****     for(;;){
 155:Light.c       ****         if ( bLEDCMD == 1 && bLEDstate == 0){
 156:Light.c       ****             //tænd
 157:Light.c       ****             bLEDstate = 1;
 158:Light.c       ****         }
 159:Light.c       ****         
 160:Light.c       ****         else if (bLEDCMD == 0 && bLEDstate == 1){
 161:Light.c       ****             //sluk
 162:Light.c       ****             bLEDstate = 0;
 163:Light.c       ****         }
 164:Light.c       ****         SW_UART_TEST_USB_PutString("bLEDstate: ");
 165:Light.c       ****         SW_UART_TEST_USB_PutHexByte(bLEDstate);
 166:Light.c       ****         SW_UART_TEST_USB_PutString(" \n");
 167:Light.c       ****         
 168:Light.c       ****         
 169:Light.c       ****     } */  
 170:Light.c       **** }
 337              		.loc 1 170 0
 338 0004 00BF     		nop
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 10


 339 0006 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 0008 80BC     		pop	{r7}
 343              		.cfi_restore 7
 344              		.cfi_def_cfa_offset 0
 345 000a 7047     		bx	lr
 346              		.cfi_endproc
 347              	.LFE71:
 348              		.size	vTaskLEDcontrol, .-vTaskLEDcontrol
 349              		.section	.rodata
 350 001e 0000     		.align	2
 351              	.LC3:
 352 0020 54657374 		.ascii	"TestLight\000"
 352      4C696768 
 352      7400
 353              		.section	.text.vTestLightTaskInit,"ax",%progbits
 354              		.align	2
 355              		.global	vTestLightTaskInit
 356              		.thumb
 357              		.thumb_func
 358              		.type	vTestLightTaskInit, %function
 359              	vTestLightTaskInit:
 360              	.LFB72:
 171:Light.c       **** 
 172:Light.c       **** /* --- TEST TASK --- */
 173:Light.c       **** 
 174:Light.c       **** /*
 175:Light.c       ****     Task for testing existing implementations.
 176:Light.c       **** 
 177:Light.c       ****     DO NOT delete this functions/tasks, but comment them out if they arn't nexessary 
 178:Light.c       ****     for your current implementation/testing
 179:Light.c       ****     
 180:Light.c       ****     All test task/functions, must start with (type)Test(Task/Function/Var)(Name)
 181:Light.c       **** 
 182:Light.c       ****     
 183:Light.c       **** */
 184:Light.c       **** 
 185:Light.c       **** /* Initialize test tasks*/
 186:Light.c       **** void vTestLightTaskInit(){
 361              		.loc 1 186 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 1, uses_anonymous_args = 0
 365 0000 80B5     		push	{r7, lr}
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 82B0     		sub	sp, sp, #8
 370              		.cfi_def_cfa_offset 16
 371 0004 02AF     		add	r7, sp, #8
 372              		.cfi_def_cfa 7, 8
 187:Light.c       ****     xTaskCreate(vTestLightTask, "TestLight", 1000, NULL, 2, NULL);
 373              		.loc 1 187 0
 374 0006 0023     		movs	r3, #0
 375 0008 0193     		str	r3, [sp, #4]
 376 000a 0223     		movs	r3, #2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 11


 377 000c 0093     		str	r3, [sp]
 378 000e 0023     		movs	r3, #0
 379 0010 4FF47A72 		mov	r2, #1000
 380 0014 0349     		ldr	r1, .L17
 381 0016 0448     		ldr	r0, .L17+4
 382 0018 FFF7FEFF 		bl	xTaskCreate
 188:Light.c       **** }    
 383              		.loc 1 188 0
 384 001c 00BF     		nop
 385 001e BD46     		mov	sp, r7
 386              		.cfi_def_cfa_register 13
 387              		@ sp needed
 388 0020 80BD     		pop	{r7, pc}
 389              	.L18:
 390 0022 00BF     		.align	2
 391              	.L17:
 392 0024 20000000 		.word	.LC3
 393 0028 00000000 		.word	vTestLightTask
 394              		.cfi_endproc
 395              	.LFE72:
 396              		.size	vTestLightTaskInit, .-vTestLightTaskInit
 397              		.section	.rodata
 398 002a 0000     		.align	2
 399              	.LC4:
 400 002c 43757272 		.ascii	"Current time: \000"
 400      656E7420 
 400      74696D65 
 400      3A2000
 401 003b 00       		.align	2
 402              	.LC5:
 403 003c 3A00     		.ascii	":\000"
 404 003e 0000     		.align	2
 405              	.LC6:
 406 0040 0A00     		.ascii	"\012\000"
 407 0042 0000     		.align	2
 408              	.LC7:
 409 0044 624C4544 		.ascii	"bLEDstate: \000"
 409      73746174 
 409      653A2000 
 410              		.align	2
 411              	.LC8:
 412 0050 200A00   		.ascii	" \012\000"
 413              		.section	.text.vTestLightTask,"ax",%progbits
 414              		.align	2
 415              		.global	vTestLightTask
 416              		.thumb
 417              		.thumb_func
 418              		.type	vTestLightTask, %function
 419              	vTestLightTask:
 420              	.LFB73:
 189:Light.c       **** 
 190:Light.c       **** /* Function tests vTaskLightMeasure() by reading from the queue and sending to serial monitor */
 191:Light.c       **** void vTestLightTask(){
 421              		.loc 1 191 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 8
 424              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 12


 425 0000 80B5     		push	{r7, lr}
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 82B0     		sub	sp, sp, #8
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
 433              	.L22:
 192:Light.c       ****     //uint8 TestLightValue;
 193:Light.c       ****     uint8 TestCurrentHour;
 194:Light.c       ****     uint8 TestCurrentMin;
 195:Light.c       ****     uint8 TestCurrentSec;
 196:Light.c       ****     for(;;){
 197:Light.c       ****         //xQueueReceive(xQueueLightValue, &TestLightValue, portMAX_DELAY);
 198:Light.c       ****         xQueueReceive(xQueueCurrentTime[0], &TestCurrentHour, portMAX_DELAY);
 434              		.loc 1 198 0
 435 0006 2F4B     		ldr	r3, .L23
 436 0008 1B68     		ldr	r3, [r3]
 437 000a F91D     		adds	r1, r7, #7
 438 000c 4FF0FF32 		mov	r2, #-1
 439 0010 1846     		mov	r0, r3
 440 0012 FFF7FEFF 		bl	xQueueReceive
 199:Light.c       ****         xQueueReceive(xQueueCurrentTime[1], &TestCurrentMin, portMAX_DELAY);
 441              		.loc 1 199 0
 442 0016 2B4B     		ldr	r3, .L23
 443 0018 5B68     		ldr	r3, [r3, #4]
 444 001a B91D     		adds	r1, r7, #6
 445 001c 4FF0FF32 		mov	r2, #-1
 446 0020 1846     		mov	r0, r3
 447 0022 FFF7FEFF 		bl	xQueueReceive
 200:Light.c       ****         xQueueReceive(xQueueCurrentTime[2], &TestCurrentSec, portMAX_DELAY);
 448              		.loc 1 200 0
 449 0026 274B     		ldr	r3, .L23
 450 0028 9B68     		ldr	r3, [r3, #8]
 451 002a 791D     		adds	r1, r7, #5
 452 002c 4FF0FF32 		mov	r2, #-1
 453 0030 1846     		mov	r0, r3
 454 0032 FFF7FEFF 		bl	xQueueReceive
 201:Light.c       ****         //SW_UART_TEST_USB_PutString("Light Value: ");
 202:Light.c       ****         //SW_UART_TEST_USB_PutHexInt(TestLightValue);
 203:Light.c       ****         //SW_UART_TEST_USB_PutString("Current Hour: ");
 204:Light.c       ****         //SW_UART_TEST_USB_PutHexByte(TestCurrentHour);
 205:Light.c       ****         //SW_UART_TEST_USB_PutString("\n");
 206:Light.c       ****         
 207:Light.c       ****         if ( bLEDCMD == 1 && bLEDstate == 0){
 455              		.loc 1 207 0
 456 0036 244B     		ldr	r3, .L23+4
 457 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 458 003a 002B     		cmp	r3, #0
 459 003c 0DD0     		beq	.L20
 460              		.loc 1 207 0 is_stmt 0 discriminator 1
 461 003e 234B     		ldr	r3, .L23+8
 462 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 463 0042 83F00103 		eor	r3, r3, #1
 464 0046 DBB2     		uxtb	r3, r3
 465 0048 002B     		cmp	r3, #0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 13


 466 004a 06D0     		beq	.L20
 208:Light.c       ****             //tænd
 209:Light.c       ****             bLEDstate = 1;
 467              		.loc 1 209 0 is_stmt 1
 468 004c 1F4B     		ldr	r3, .L23+8
 469 004e 0122     		movs	r2, #1
 470 0050 1A70     		strb	r2, [r3]
 210:Light.c       ****             Pin_LightTestLED_Write( 1u ); // Turns on test LED
 471              		.loc 1 210 0
 472 0052 0120     		movs	r0, #1
 473 0054 FFF7FEFF 		bl	Pin_LightTestLED_Write
 474 0058 10E0     		b	.L21
 475              	.L20:
 211:Light.c       ****         }
 212:Light.c       ****         
 213:Light.c       ****         else if (bLEDCMD == 0 && bLEDstate == 1){
 476              		.loc 1 213 0
 477 005a 1B4B     		ldr	r3, .L23+4
 478 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 479 005e 83F00103 		eor	r3, r3, #1
 480 0062 DBB2     		uxtb	r3, r3
 481 0064 002B     		cmp	r3, #0
 482 0066 09D0     		beq	.L21
 483              		.loc 1 213 0 is_stmt 0 discriminator 1
 484 0068 184B     		ldr	r3, .L23+8
 485 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 486 006c 002B     		cmp	r3, #0
 487 006e 05D0     		beq	.L21
 214:Light.c       ****             //sluk
 215:Light.c       ****             bLEDstate = 0;
 488              		.loc 1 215 0 is_stmt 1
 489 0070 164B     		ldr	r3, .L23+8
 490 0072 0022     		movs	r2, #0
 491 0074 1A70     		strb	r2, [r3]
 216:Light.c       ****             Pin_LightTestLED_Write( 0u ); // Turns off test LED
 492              		.loc 1 216 0
 493 0076 0020     		movs	r0, #0
 494 0078 FFF7FEFF 		bl	Pin_LightTestLED_Write
 495              	.L21:
 217:Light.c       ****         }
 218:Light.c       ****         
 219:Light.c       ****         SW_UART_TEST_USB_PutString("Current time: ");
 496              		.loc 1 219 0
 497 007c 1448     		ldr	r0, .L23+12
 498 007e FFF7FEFF 		bl	SW_UART_TEST_USB_PutString
 220:Light.c       ****         SW_UART_TEST_USB_PutHexByte(TestCurrentHour);
 499              		.loc 1 220 0
 500 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 501 0084 1846     		mov	r0, r3
 502 0086 FFF7FEFF 		bl	SW_UART_TEST_USB_PutHexByte
 221:Light.c       ****         SW_UART_TEST_USB_PutString(":");
 503              		.loc 1 221 0
 504 008a 1248     		ldr	r0, .L23+16
 505 008c FFF7FEFF 		bl	SW_UART_TEST_USB_PutString
 222:Light.c       ****         SW_UART_TEST_USB_PutHexByte(TestCurrentMin);
 506              		.loc 1 222 0
 507 0090 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 14


 508 0092 1846     		mov	r0, r3
 509 0094 FFF7FEFF 		bl	SW_UART_TEST_USB_PutHexByte
 223:Light.c       ****         SW_UART_TEST_USB_PutString(":");
 510              		.loc 1 223 0
 511 0098 0E48     		ldr	r0, .L23+16
 512 009a FFF7FEFF 		bl	SW_UART_TEST_USB_PutString
 224:Light.c       ****         SW_UART_TEST_USB_PutHexByte(TestCurrentSec);
 513              		.loc 1 224 0
 514 009e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 515 00a0 1846     		mov	r0, r3
 516 00a2 FFF7FEFF 		bl	SW_UART_TEST_USB_PutHexByte
 225:Light.c       ****         SW_UART_TEST_USB_PutString("\n");
 517              		.loc 1 225 0
 518 00a6 0C48     		ldr	r0, .L23+20
 519 00a8 FFF7FEFF 		bl	SW_UART_TEST_USB_PutString
 226:Light.c       ****         SW_UART_TEST_USB_PutString("bLEDstate: ");
 520              		.loc 1 226 0
 521 00ac 0B48     		ldr	r0, .L23+24
 522 00ae FFF7FEFF 		bl	SW_UART_TEST_USB_PutString
 227:Light.c       ****         SW_UART_TEST_USB_PutHexByte(bLEDstate);
 523              		.loc 1 227 0
 524 00b2 064B     		ldr	r3, .L23+8
 525 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 526 00b6 1846     		mov	r0, r3
 527 00b8 FFF7FEFF 		bl	SW_UART_TEST_USB_PutHexByte
 228:Light.c       ****         SW_UART_TEST_USB_PutString(" \n");
 528              		.loc 1 228 0
 529 00bc 0848     		ldr	r0, .L23+28
 530 00be FFF7FEFF 		bl	SW_UART_TEST_USB_PutString
 229:Light.c       ****         
 230:Light.c       ****     }    
 531              		.loc 1 230 0
 532 00c2 A0E7     		b	.L22
 533              	.L24:
 534              		.align	2
 535              	.L23:
 536 00c4 00000000 		.word	xQueueCurrentTime
 537 00c8 00000000 		.word	bLEDCMD
 538 00cc 00000000 		.word	bLEDstate
 539 00d0 2C000000 		.word	.LC4
 540 00d4 3C000000 		.word	.LC5
 541 00d8 40000000 		.word	.LC6
 542 00dc 44000000 		.word	.LC7
 543 00e0 50000000 		.word	.LC8
 544              		.cfi_endproc
 545              	.LFE73:
 546              		.size	vTestLightTask, .-vTestLightTask
 547              		.text
 548              	.Letext0:
 549              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 550              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 551              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 552              		.file 5 "Generated_Source\\PSoC5/DS18x8.h"
 553              		.file 6 ".\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
 554              		.file 7 ".\\Source\\include/queue.h"
 555              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 556              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 15


 557              	.Ldebug_info0:
 558 0000 B6030000 		.4byte	0x3b6
 559 0004 0400     		.2byte	0x4
 560 0006 00000000 		.4byte	.Ldebug_abbrev0
 561 000a 04       		.byte	0x4
 562 000b 01       		.uleb128 0x1
 563 000c 3D000000 		.4byte	.LASF61
 564 0010 0C       		.byte	0xc
 565 0011 6C010000 		.4byte	.LASF62
 566 0015 20030000 		.4byte	.LASF63
 567 0019 00000000 		.4byte	.Ldebug_ranges0+0
 568 001d 00000000 		.4byte	0
 569 0021 00000000 		.4byte	.Ldebug_line0
 570 0025 02       		.uleb128 0x2
 571 0026 04       		.byte	0x4
 572 0027 05       		.byte	0x5
 573 0028 696E7400 		.ascii	"int\000"
 574 002c 03       		.uleb128 0x3
 575 002d 04       		.byte	0x4
 576 002e 07       		.byte	0x7
 577 002f 1F020000 		.4byte	.LASF0
 578 0033 03       		.uleb128 0x3
 579 0034 08       		.byte	0x8
 580 0035 05       		.byte	0x5
 581 0036 53010000 		.4byte	.LASF1
 582 003a 03       		.uleb128 0x3
 583 003b 08       		.byte	0x8
 584 003c 04       		.byte	0x4
 585 003d BD010000 		.4byte	.LASF2
 586 0041 03       		.uleb128 0x3
 587 0042 01       		.byte	0x1
 588 0043 06       		.byte	0x6
 589 0044 F3010000 		.4byte	.LASF3
 590 0048 04       		.uleb128 0x4
 591 0049 8F010000 		.4byte	.LASF7
 592 004d 02       		.byte	0x2
 593 004e 1D       		.byte	0x1d
 594 004f 53000000 		.4byte	0x53
 595 0053 03       		.uleb128 0x3
 596 0054 01       		.byte	0x1
 597 0055 08       		.byte	0x8
 598 0056 E5010000 		.4byte	.LASF4
 599 005a 03       		.uleb128 0x3
 600 005b 02       		.byte	0x2
 601 005c 05       		.byte	0x5
 602 005d 12000000 		.4byte	.LASF5
 603 0061 03       		.uleb128 0x3
 604 0062 02       		.byte	0x2
 605 0063 07       		.byte	0x7
 606 0064 95020000 		.4byte	.LASF6
 607 0068 04       		.uleb128 0x4
 608 0069 E3020000 		.4byte	.LASF8
 609 006d 02       		.byte	0x2
 610 006e 3F       		.byte	0x3f
 611 006f 73000000 		.4byte	0x73
 612 0073 03       		.uleb128 0x3
 613 0074 04       		.byte	0x4
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 16


 614 0075 05       		.byte	0x5
 615 0076 74010000 		.4byte	.LASF9
 616 007a 04       		.uleb128 0x4
 617 007b D8020000 		.4byte	.LASF10
 618 007f 02       		.byte	0x2
 619 0080 41       		.byte	0x41
 620 0081 85000000 		.4byte	0x85
 621 0085 03       		.uleb128 0x3
 622 0086 04       		.byte	0x4
 623 0087 07       		.byte	0x7
 624 0088 3F020000 		.4byte	.LASF11
 625 008c 03       		.uleb128 0x3
 626 008d 08       		.byte	0x8
 627 008e 07       		.byte	0x7
 628 008f FF010000 		.4byte	.LASF12
 629 0093 04       		.uleb128 0x4
 630 0094 25010000 		.4byte	.LASF13
 631 0098 03       		.byte	0x3
 632 0099 18       		.byte	0x18
 633 009a 48000000 		.4byte	0x48
 634 009e 04       		.uleb128 0x4
 635 009f 8D020000 		.4byte	.LASF14
 636 00a3 03       		.byte	0x3
 637 00a4 2C       		.byte	0x2c
 638 00a5 68000000 		.4byte	0x68
 639 00a9 04       		.uleb128 0x4
 640 00aa 16020000 		.4byte	.LASF15
 641 00ae 03       		.byte	0x3
 642 00af 30       		.byte	0x30
 643 00b0 7A000000 		.4byte	0x7a
 644 00b4 05       		.uleb128 0x5
 645 00b5 2D010000 		.4byte	.LASF16
 646 00b9 04       		.byte	0x4
 647 00ba E401     		.2byte	0x1e4
 648 00bc 53000000 		.4byte	0x53
 649 00c0 05       		.uleb128 0x5
 650 00c1 1E010000 		.4byte	.LASF17
 651 00c5 04       		.byte	0x4
 652 00c6 E501     		.2byte	0x1e5
 653 00c8 61000000 		.4byte	0x61
 654 00cc 03       		.uleb128 0x3
 655 00cd 04       		.byte	0x4
 656 00ce 04       		.byte	0x4
 657 00cf 4D010000 		.4byte	.LASF18
 658 00d3 03       		.uleb128 0x3
 659 00d4 08       		.byte	0x8
 660 00d5 04       		.byte	0x4
 661 00d6 CC020000 		.4byte	.LASF19
 662 00da 03       		.uleb128 0x3
 663 00db 01       		.byte	0x1
 664 00dc 08       		.byte	0x8
 665 00dd 82020000 		.4byte	.LASF20
 666 00e1 06       		.uleb128 0x6
 667 00e2 B4000000 		.4byte	0xb4
 668 00e6 03       		.uleb128 0x3
 669 00e7 04       		.byte	0x4
 670 00e8 07       		.byte	0x7
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 17


 671 00e9 1C000000 		.4byte	.LASF21
 672 00ed 07       		.uleb128 0x7
 673 00ee A8020000 		.4byte	.LASF27
 674 00f2 04       		.byte	0x4
 675 00f3 05       		.byte	0x5
 676 00f4 30       		.byte	0x30
 677 00f5 12010000 		.4byte	0x112
 678 00f9 08       		.uleb128 0x8
 679 00fa 14030000 		.4byte	.LASF22
 680 00fe 05       		.byte	0x5
 681 00ff 31       		.byte	0x31
 682 0100 C0000000 		.4byte	0xc0
 683 0104 00       		.byte	0
 684 0105 08       		.uleb128 0x8
 685 0106 ED020000 		.4byte	.LASF23
 686 010a 05       		.byte	0x5
 687 010b 32       		.byte	0x32
 688 010c B4000000 		.4byte	0xb4
 689 0110 02       		.byte	0x2
 690 0111 00       		.byte	0
 691 0112 04       		.uleb128 0x4
 692 0113 34020000 		.4byte	.LASF24
 693 0117 06       		.byte	0x6
 694 0118 38       		.byte	0x38
 695 0119 73000000 		.4byte	0x73
 696 011d 04       		.uleb128 0x4
 697 011e 61010000 		.4byte	.LASF25
 698 0122 06       		.byte	0x6
 699 0123 3F       		.byte	0x3f
 700 0124 A9000000 		.4byte	0xa9
 701 0128 04       		.uleb128 0x4
 702 0129 99010000 		.4byte	.LASF26
 703 012d 07       		.byte	0x7
 704 012e 30       		.byte	0x30
 705 012f 33010000 		.4byte	0x133
 706 0133 09       		.uleb128 0x9
 707 0134 04       		.byte	0x4
 708 0135 39010000 		.4byte	0x139
 709 0139 0A       		.uleb128 0xa
 710 013a 51020000 		.4byte	.LASF64
 711 013e 07       		.uleb128 0x7
 712 013f F5020000 		.4byte	.LASF28
 713 0143 08       		.byte	0x8
 714 0144 01       		.byte	0x1
 715 0145 1C       		.byte	0x1c
 716 0146 93010000 		.4byte	0x193
 717 014a 0B       		.uleb128 0xb
 718 014b 53656300 		.ascii	"Sec\000"
 719 014f 01       		.byte	0x1
 720 0150 1E       		.byte	0x1e
 721 0151 B4000000 		.4byte	0xb4
 722 0155 00       		.byte	0
 723 0156 0B       		.uleb128 0xb
 724 0157 4D696E00 		.ascii	"Min\000"
 725 015b 01       		.byte	0x1
 726 015c 1F       		.byte	0x1f
 727 015d B4000000 		.4byte	0xb4
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 18


 728 0161 01       		.byte	0x1
 729 0162 08       		.uleb128 0x8
 730 0163 FF000000 		.4byte	.LASF29
 731 0167 01       		.byte	0x1
 732 0168 20       		.byte	0x20
 733 0169 B4000000 		.4byte	0xb4
 734 016d 02       		.byte	0x2
 735 016e 08       		.uleb128 0x8
 736 016f B7020000 		.4byte	.LASF30
 737 0173 01       		.byte	0x1
 738 0174 21       		.byte	0x21
 739 0175 B4000000 		.4byte	0xb4
 740 0179 03       		.byte	0x3
 741 017a 08       		.uleb128 0x8
 742 017b B7010000 		.4byte	.LASF31
 743 017f 01       		.byte	0x1
 744 0180 22       		.byte	0x22
 745 0181 B4000000 		.4byte	0xb4
 746 0185 04       		.byte	0x4
 747 0186 08       		.uleb128 0x8
 748 0187 8A010000 		.4byte	.LASF32
 749 018b 01       		.byte	0x1
 750 018c 23       		.byte	0x23
 751 018d C0000000 		.4byte	0xc0
 752 0191 06       		.byte	0x6
 753 0192 00       		.byte	0
 754 0193 0C       		.uleb128 0xc
 755 0194 DA010000 		.4byte	.LASF40
 756 0198 01       		.byte	0x1
 757 0199 2F       		.byte	0x2f
 758 019a 00000000 		.4byte	.LFB68
 759 019e 94000000 		.4byte	.LFE68-.LFB68
 760 01a2 01       		.uleb128 0x1
 761 01a3 9C       		.byte	0x9c
 762 01a4 0D       		.uleb128 0xd
 763 01a5 00000000 		.4byte	.LASF35
 764 01a9 01       		.byte	0x1
 765 01aa 4F       		.byte	0x4f
 766 01ab 00000000 		.4byte	.LFB69
 767 01af 2C000000 		.4byte	.LFE69-.LFB69
 768 01b3 01       		.uleb128 0x1
 769 01b4 9C       		.byte	0x9c
 770 01b5 E0010000 		.4byte	0x1e0
 771 01b9 0E       		.uleb128 0xe
 772 01ba 0F010000 		.4byte	.LASF33
 773 01be 01       		.byte	0x1
 774 01bf 51       		.byte	0x51
 775 01c0 E0010000 		.4byte	0x1e0
 776 01c4 02       		.uleb128 0x2
 777 01c5 91       		.byte	0x91
 778 01c6 74       		.sleb128 -12
 779 01c7 0F       		.uleb128 0xf
 780 01c8 12000000 		.4byte	.LBB2
 781 01cc 14000000 		.4byte	.LBE2-.LBB2
 782 01d0 0E       		.uleb128 0xe
 783 01d1 91030000 		.4byte	.LASF34
 784 01d5 01       		.byte	0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 19


 785 01d6 55       		.byte	0x55
 786 01d7 B4000000 		.4byte	0xb4
 787 01db 02       		.uleb128 0x2
 788 01dc 91       		.byte	0x91
 789 01dd 73       		.sleb128 -13
 790 01de 00       		.byte	0
 791 01df 00       		.byte	0
 792 01e0 10       		.uleb128 0x10
 793 01e1 1D010000 		.4byte	0x11d
 794 01e5 0D       		.uleb128 0xd
 795 01e6 DB000000 		.4byte	.LASF36
 796 01ea 01       		.byte	0x1
 797 01eb 5F       		.byte	0x5f
 798 01ec 00000000 		.4byte	.LFB70
 799 01f0 C4000000 		.4byte	.LFE70-.LFB70
 800 01f4 01       		.uleb128 0x1
 801 01f5 9C       		.byte	0x9c
 802 01f6 33020000 		.4byte	0x233
 803 01fa 0E       		.uleb128 0xe
 804 01fb 04010000 		.4byte	.LASF37
 805 01ff 01       		.byte	0x1
 806 0200 60       		.byte	0x60
 807 0201 33020000 		.4byte	0x233
 808 0205 02       		.uleb128 0x2
 809 0206 91       		.byte	0x91
 810 0207 6C       		.sleb128 -20
 811 0208 0E       		.uleb128 0xe
 812 0209 0F010000 		.4byte	.LASF33
 813 020d 01       		.byte	0x1
 814 020e 61       		.byte	0x61
 815 020f E0010000 		.4byte	0x1e0
 816 0213 02       		.uleb128 0x2
 817 0214 91       		.byte	0x91
 818 0215 74       		.sleb128 -12
 819 0216 0E       		.uleb128 0xe
 820 0217 33010000 		.4byte	.LASF38
 821 021b 01       		.byte	0x1
 822 021c 62       		.byte	0x62
 823 021d E0010000 		.4byte	0x1e0
 824 0221 02       		.uleb128 0x2
 825 0222 91       		.byte	0x91
 826 0223 70       		.sleb128 -16
 827 0224 0E       		.uleb128 0xe
 828 0225 7D010000 		.4byte	.LASF39
 829 0229 01       		.byte	0x1
 830 022a 63       		.byte	0x63
 831 022b 43020000 		.4byte	0x243
 832 022f 02       		.uleb128 0x2
 833 0230 91       		.byte	0x91
 834 0231 68       		.sleb128 -24
 835 0232 00       		.byte	0
 836 0233 11       		.uleb128 0x11
 837 0234 B4000000 		.4byte	0xb4
 838 0238 43020000 		.4byte	0x243
 839 023c 12       		.uleb128 0x12
 840 023d E6000000 		.4byte	0xe6
 841 0241 01       		.byte	0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 20


 842 0242 00       		.byte	0
 843 0243 11       		.uleb128 0x11
 844 0244 DA000000 		.4byte	0xda
 845 0248 53020000 		.4byte	0x253
 846 024c 12       		.uleb128 0x12
 847 024d E6000000 		.4byte	0xe6
 848 0251 02       		.byte	0x2
 849 0252 00       		.byte	0
 850 0253 13       		.uleb128 0x13
 851 0254 A7010000 		.4byte	.LASF41
 852 0258 01       		.byte	0x1
 853 0259 98       		.byte	0x98
 854 025a 00000000 		.4byte	.LFB71
 855 025e 0C000000 		.4byte	.LFE71-.LFB71
 856 0262 01       		.uleb128 0x1
 857 0263 9C       		.byte	0x9c
 858 0264 0C       		.uleb128 0xc
 859 0265 01030000 		.4byte	.LASF42
 860 0269 01       		.byte	0x1
 861 026a BA       		.byte	0xba
 862 026b 00000000 		.4byte	.LFB72
 863 026f 2C000000 		.4byte	.LFE72-.LFB72
 864 0273 01       		.uleb128 0x1
 865 0274 9C       		.byte	0x9c
 866 0275 0D       		.uleb128 0xd
 867 0276 61020000 		.4byte	.LASF43
 868 027a 01       		.byte	0x1
 869 027b BF       		.byte	0xbf
 870 027c 00000000 		.4byte	.LFB73
 871 0280 E4000000 		.4byte	.LFE73-.LFB73
 872 0284 01       		.uleb128 0x1
 873 0285 9C       		.byte	0x9c
 874 0286 B5020000 		.4byte	0x2b5
 875 028a 0E       		.uleb128 0xe
 876 028b CB000000 		.4byte	.LASF44
 877 028f 01       		.byte	0x1
 878 0290 C1       		.byte	0xc1
 879 0291 B4000000 		.4byte	0xb4
 880 0295 02       		.uleb128 0x2
 881 0296 91       		.byte	0x91
 882 0297 77       		.sleb128 -9
 883 0298 0E       		.uleb128 0xe
 884 0299 F0000000 		.4byte	.LASF45
 885 029d 01       		.byte	0x1
 886 029e C2       		.byte	0xc2
 887 029f B4000000 		.4byte	0xb4
 888 02a3 02       		.uleb128 0x2
 889 02a4 91       		.byte	0x91
 890 02a5 76       		.sleb128 -10
 891 02a6 0E       		.uleb128 0xe
 892 02a7 9B030000 		.4byte	.LASF46
 893 02ab 01       		.byte	0x1
 894 02ac C3       		.byte	0xc3
 895 02ad B4000000 		.4byte	0xb4
 896 02b1 02       		.uleb128 0x2
 897 02b2 91       		.byte	0x91
 898 02b3 75       		.sleb128 -11
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 21


 899 02b4 00       		.byte	0
 900 02b5 11       		.uleb128 0x11
 901 02b6 ED000000 		.4byte	0xed
 902 02ba C5020000 		.4byte	0x2c5
 903 02be 12       		.uleb128 0x12
 904 02bf E6000000 		.4byte	0xe6
 905 02c3 07       		.byte	0x7
 906 02c4 00       		.byte	0
 907 02c5 14       		.uleb128 0x14
 908 02c6 25000000 		.4byte	.LASF47
 909 02ca 05       		.byte	0x5
 910 02cb 34       		.byte	0x34
 911 02cc B5020000 		.4byte	0x2b5
 912 02d0 05       		.uleb128 0x5
 913 02d1 03       		.byte	0x3
 914 02d2 00000000 		.4byte	DS18x8_Sensor
 915 02d6 14       		.uleb128 0x14
 916 02d7 AA030000 		.4byte	.LASF48
 917 02db 05       		.byte	0x5
 918 02dc 39       		.byte	0x39
 919 02dd E1000000 		.4byte	0xe1
 920 02e1 05       		.uleb128 0x5
 921 02e2 03       		.byte	0x3
 922 02e3 00000000 		.4byte	DS18x8_DataReady
 923 02e7 15       		.uleb128 0x15
 924 02e8 84030000 		.4byte	.LASF49
 925 02ec 08       		.byte	0x8
 926 02ed 1207     		.2byte	0x712
 927 02ef F3020000 		.4byte	0x2f3
 928 02f3 06       		.uleb128 0x6
 929 02f4 9E000000 		.4byte	0x9e
 930 02f8 14       		.uleb128 0x14
 931 02f9 18010000 		.4byte	.LASF50
 932 02fd 01       		.byte	0x1
 933 02fe 14       		.byte	0x14
 934 02ff B4000000 		.4byte	0xb4
 935 0303 05       		.uleb128 0x5
 936 0304 03       		.byte	0x3
 937 0305 00000000 		.4byte	Light
 938 0309 14       		.uleb128 0x14
 939 030a D3020000 		.4byte	.LASF51
 940 030e 01       		.byte	0x1
 941 030f 15       		.byte	0x15
 942 0310 B4000000 		.4byte	0xb4
 943 0314 05       		.uleb128 0x5
 944 0315 03       		.byte	0x3
 945 0316 00000000 		.4byte	Time
 946 031a 14       		.uleb128 0x14
 947 031b 2C020000 		.4byte	.LASF52
 948 031f 01       		.byte	0x1
 949 0320 16       		.byte	0x16
 950 0321 2B030000 		.4byte	0x32b
 951 0325 05       		.uleb128 0x5
 952 0326 03       		.byte	0x3
 953 0327 00000000 		.4byte	bLEDCMD
 954 032b 03       		.uleb128 0x3
 955 032c 01       		.byte	0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 22


 956 032d 02       		.byte	0x2
 957 032e 87020000 		.4byte	.LASF53
 958 0332 14       		.uleb128 0x14
 959 0333 C2020000 		.4byte	.LASF54
 960 0337 01       		.byte	0x1
 961 0338 17       		.byte	0x17
 962 0339 2B030000 		.4byte	0x32b
 963 033d 05       		.uleb128 0x5
 964 033e 03       		.byte	0x3
 965 033f 00000000 		.4byte	bLEDstate
 966 0343 14       		.uleb128 0x14
 967 0344 78030000 		.4byte	.LASF55
 968 0348 01       		.byte	0x1
 969 0349 18       		.byte	0x18
 970 034a 2B030000 		.4byte	0x32b
 971 034e 05       		.uleb128 0x5
 972 034f 03       		.byte	0x3
 973 0350 00000000 		.4byte	bAlarmState
 974 0354 14       		.uleb128 0x14
 975 0355 33000000 		.4byte	.LASF56
 976 0359 01       		.byte	0x1
 977 035a 19       		.byte	0x19
 978 035b B4000000 		.4byte	0xb4
 979 035f 05       		.uleb128 0x5
 980 0360 03       		.byte	0x3
 981 0361 00000000 		.4byte	ClockAddr
 982 0365 14       		.uleb128 0x14
 983 0366 FB020000 		.4byte	.LASF57
 984 036a 01       		.byte	0x1
 985 036b 26       		.byte	0x26
 986 036c 3E010000 		.4byte	0x13e
 987 0370 05       		.uleb128 0x5
 988 0371 03       		.byte	0x3
 989 0372 00000000 		.4byte	Start
 990 0376 14       		.uleb128 0x14
 991 0377 41010000 		.4byte	.LASF58
 992 037b 01       		.byte	0x1
 993 037c 27       		.byte	0x27
 994 037d 3E010000 		.4byte	0x13e
 995 0381 05       		.uleb128 0x5
 996 0382 03       		.byte	0x3
 997 0383 00000000 		.4byte	CurrentTime
 998 0387 14       		.uleb128 0x14
 999 0388 C9010000 		.4byte	.LASF59
 1000 038c 01       		.byte	0x1
 1001 038d 2A       		.byte	0x2a
 1002 038e 28010000 		.4byte	0x128
 1003 0392 05       		.uleb128 0x5
 1004 0393 03       		.byte	0x3
 1005 0394 00000000 		.4byte	xQueueLightValue
 1006 0398 11       		.uleb128 0x11
 1007 0399 28010000 		.4byte	0x128
 1008 039d A8030000 		.4byte	0x3a8
 1009 03a1 12       		.uleb128 0x12
 1010 03a2 E6000000 		.4byte	0xe6
 1011 03a6 02       		.byte	0x2
 1012 03a7 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 23


 1013 03a8 14       		.uleb128 0x14
 1014 03a9 70020000 		.4byte	.LASF60
 1015 03ad 01       		.byte	0x1
 1016 03ae 2D       		.byte	0x2d
 1017 03af 98030000 		.4byte	0x398
 1018 03b3 05       		.uleb128 0x5
 1019 03b4 03       		.byte	0x3
 1020 03b5 00000000 		.4byte	xQueueCurrentTime
 1021 03b9 00       		.byte	0
 1022              		.section	.debug_abbrev,"",%progbits
 1023              	.Ldebug_abbrev0:
 1024 0000 01       		.uleb128 0x1
 1025 0001 11       		.uleb128 0x11
 1026 0002 01       		.byte	0x1
 1027 0003 25       		.uleb128 0x25
 1028 0004 0E       		.uleb128 0xe
 1029 0005 13       		.uleb128 0x13
 1030 0006 0B       		.uleb128 0xb
 1031 0007 03       		.uleb128 0x3
 1032 0008 0E       		.uleb128 0xe
 1033 0009 1B       		.uleb128 0x1b
 1034 000a 0E       		.uleb128 0xe
 1035 000b 55       		.uleb128 0x55
 1036 000c 17       		.uleb128 0x17
 1037 000d 11       		.uleb128 0x11
 1038 000e 01       		.uleb128 0x1
 1039 000f 10       		.uleb128 0x10
 1040 0010 17       		.uleb128 0x17
 1041 0011 00       		.byte	0
 1042 0012 00       		.byte	0
 1043 0013 02       		.uleb128 0x2
 1044 0014 24       		.uleb128 0x24
 1045 0015 00       		.byte	0
 1046 0016 0B       		.uleb128 0xb
 1047 0017 0B       		.uleb128 0xb
 1048 0018 3E       		.uleb128 0x3e
 1049 0019 0B       		.uleb128 0xb
 1050 001a 03       		.uleb128 0x3
 1051 001b 08       		.uleb128 0x8
 1052 001c 00       		.byte	0
 1053 001d 00       		.byte	0
 1054 001e 03       		.uleb128 0x3
 1055 001f 24       		.uleb128 0x24
 1056 0020 00       		.byte	0
 1057 0021 0B       		.uleb128 0xb
 1058 0022 0B       		.uleb128 0xb
 1059 0023 3E       		.uleb128 0x3e
 1060 0024 0B       		.uleb128 0xb
 1061 0025 03       		.uleb128 0x3
 1062 0026 0E       		.uleb128 0xe
 1063 0027 00       		.byte	0
 1064 0028 00       		.byte	0
 1065 0029 04       		.uleb128 0x4
 1066 002a 16       		.uleb128 0x16
 1067 002b 00       		.byte	0
 1068 002c 03       		.uleb128 0x3
 1069 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 24


 1070 002e 3A       		.uleb128 0x3a
 1071 002f 0B       		.uleb128 0xb
 1072 0030 3B       		.uleb128 0x3b
 1073 0031 0B       		.uleb128 0xb
 1074 0032 49       		.uleb128 0x49
 1075 0033 13       		.uleb128 0x13
 1076 0034 00       		.byte	0
 1077 0035 00       		.byte	0
 1078 0036 05       		.uleb128 0x5
 1079 0037 16       		.uleb128 0x16
 1080 0038 00       		.byte	0
 1081 0039 03       		.uleb128 0x3
 1082 003a 0E       		.uleb128 0xe
 1083 003b 3A       		.uleb128 0x3a
 1084 003c 0B       		.uleb128 0xb
 1085 003d 3B       		.uleb128 0x3b
 1086 003e 05       		.uleb128 0x5
 1087 003f 49       		.uleb128 0x49
 1088 0040 13       		.uleb128 0x13
 1089 0041 00       		.byte	0
 1090 0042 00       		.byte	0
 1091 0043 06       		.uleb128 0x6
 1092 0044 35       		.uleb128 0x35
 1093 0045 00       		.byte	0
 1094 0046 49       		.uleb128 0x49
 1095 0047 13       		.uleb128 0x13
 1096 0048 00       		.byte	0
 1097 0049 00       		.byte	0
 1098 004a 07       		.uleb128 0x7
 1099 004b 13       		.uleb128 0x13
 1100 004c 01       		.byte	0x1
 1101 004d 03       		.uleb128 0x3
 1102 004e 0E       		.uleb128 0xe
 1103 004f 0B       		.uleb128 0xb
 1104 0050 0B       		.uleb128 0xb
 1105 0051 3A       		.uleb128 0x3a
 1106 0052 0B       		.uleb128 0xb
 1107 0053 3B       		.uleb128 0x3b
 1108 0054 0B       		.uleb128 0xb
 1109 0055 01       		.uleb128 0x1
 1110 0056 13       		.uleb128 0x13
 1111 0057 00       		.byte	0
 1112 0058 00       		.byte	0
 1113 0059 08       		.uleb128 0x8
 1114 005a 0D       		.uleb128 0xd
 1115 005b 00       		.byte	0
 1116 005c 03       		.uleb128 0x3
 1117 005d 0E       		.uleb128 0xe
 1118 005e 3A       		.uleb128 0x3a
 1119 005f 0B       		.uleb128 0xb
 1120 0060 3B       		.uleb128 0x3b
 1121 0061 0B       		.uleb128 0xb
 1122 0062 49       		.uleb128 0x49
 1123 0063 13       		.uleb128 0x13
 1124 0064 38       		.uleb128 0x38
 1125 0065 0B       		.uleb128 0xb
 1126 0066 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 25


 1127 0067 00       		.byte	0
 1128 0068 09       		.uleb128 0x9
 1129 0069 0F       		.uleb128 0xf
 1130 006a 00       		.byte	0
 1131 006b 0B       		.uleb128 0xb
 1132 006c 0B       		.uleb128 0xb
 1133 006d 49       		.uleb128 0x49
 1134 006e 13       		.uleb128 0x13
 1135 006f 00       		.byte	0
 1136 0070 00       		.byte	0
 1137 0071 0A       		.uleb128 0xa
 1138 0072 13       		.uleb128 0x13
 1139 0073 00       		.byte	0
 1140 0074 03       		.uleb128 0x3
 1141 0075 0E       		.uleb128 0xe
 1142 0076 3C       		.uleb128 0x3c
 1143 0077 19       		.uleb128 0x19
 1144 0078 00       		.byte	0
 1145 0079 00       		.byte	0
 1146 007a 0B       		.uleb128 0xb
 1147 007b 0D       		.uleb128 0xd
 1148 007c 00       		.byte	0
 1149 007d 03       		.uleb128 0x3
 1150 007e 08       		.uleb128 0x8
 1151 007f 3A       		.uleb128 0x3a
 1152 0080 0B       		.uleb128 0xb
 1153 0081 3B       		.uleb128 0x3b
 1154 0082 0B       		.uleb128 0xb
 1155 0083 49       		.uleb128 0x49
 1156 0084 13       		.uleb128 0x13
 1157 0085 38       		.uleb128 0x38
 1158 0086 0B       		.uleb128 0xb
 1159 0087 00       		.byte	0
 1160 0088 00       		.byte	0
 1161 0089 0C       		.uleb128 0xc
 1162 008a 2E       		.uleb128 0x2e
 1163 008b 00       		.byte	0
 1164 008c 3F       		.uleb128 0x3f
 1165 008d 19       		.uleb128 0x19
 1166 008e 03       		.uleb128 0x3
 1167 008f 0E       		.uleb128 0xe
 1168 0090 3A       		.uleb128 0x3a
 1169 0091 0B       		.uleb128 0xb
 1170 0092 3B       		.uleb128 0x3b
 1171 0093 0B       		.uleb128 0xb
 1172 0094 11       		.uleb128 0x11
 1173 0095 01       		.uleb128 0x1
 1174 0096 12       		.uleb128 0x12
 1175 0097 06       		.uleb128 0x6
 1176 0098 40       		.uleb128 0x40
 1177 0099 18       		.uleb128 0x18
 1178 009a 9642     		.uleb128 0x2116
 1179 009c 19       		.uleb128 0x19
 1180 009d 00       		.byte	0
 1181 009e 00       		.byte	0
 1182 009f 0D       		.uleb128 0xd
 1183 00a0 2E       		.uleb128 0x2e
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 26


 1184 00a1 01       		.byte	0x1
 1185 00a2 3F       		.uleb128 0x3f
 1186 00a3 19       		.uleb128 0x19
 1187 00a4 03       		.uleb128 0x3
 1188 00a5 0E       		.uleb128 0xe
 1189 00a6 3A       		.uleb128 0x3a
 1190 00a7 0B       		.uleb128 0xb
 1191 00a8 3B       		.uleb128 0x3b
 1192 00a9 0B       		.uleb128 0xb
 1193 00aa 11       		.uleb128 0x11
 1194 00ab 01       		.uleb128 0x1
 1195 00ac 12       		.uleb128 0x12
 1196 00ad 06       		.uleb128 0x6
 1197 00ae 40       		.uleb128 0x40
 1198 00af 18       		.uleb128 0x18
 1199 00b0 9642     		.uleb128 0x2116
 1200 00b2 19       		.uleb128 0x19
 1201 00b3 01       		.uleb128 0x1
 1202 00b4 13       		.uleb128 0x13
 1203 00b5 00       		.byte	0
 1204 00b6 00       		.byte	0
 1205 00b7 0E       		.uleb128 0xe
 1206 00b8 34       		.uleb128 0x34
 1207 00b9 00       		.byte	0
 1208 00ba 03       		.uleb128 0x3
 1209 00bb 0E       		.uleb128 0xe
 1210 00bc 3A       		.uleb128 0x3a
 1211 00bd 0B       		.uleb128 0xb
 1212 00be 3B       		.uleb128 0x3b
 1213 00bf 0B       		.uleb128 0xb
 1214 00c0 49       		.uleb128 0x49
 1215 00c1 13       		.uleb128 0x13
 1216 00c2 02       		.uleb128 0x2
 1217 00c3 18       		.uleb128 0x18
 1218 00c4 00       		.byte	0
 1219 00c5 00       		.byte	0
 1220 00c6 0F       		.uleb128 0xf
 1221 00c7 0B       		.uleb128 0xb
 1222 00c8 01       		.byte	0x1
 1223 00c9 11       		.uleb128 0x11
 1224 00ca 01       		.uleb128 0x1
 1225 00cb 12       		.uleb128 0x12
 1226 00cc 06       		.uleb128 0x6
 1227 00cd 00       		.byte	0
 1228 00ce 00       		.byte	0
 1229 00cf 10       		.uleb128 0x10
 1230 00d0 26       		.uleb128 0x26
 1231 00d1 00       		.byte	0
 1232 00d2 49       		.uleb128 0x49
 1233 00d3 13       		.uleb128 0x13
 1234 00d4 00       		.byte	0
 1235 00d5 00       		.byte	0
 1236 00d6 11       		.uleb128 0x11
 1237 00d7 01       		.uleb128 0x1
 1238 00d8 01       		.byte	0x1
 1239 00d9 49       		.uleb128 0x49
 1240 00da 13       		.uleb128 0x13
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 27


 1241 00db 01       		.uleb128 0x1
 1242 00dc 13       		.uleb128 0x13
 1243 00dd 00       		.byte	0
 1244 00de 00       		.byte	0
 1245 00df 12       		.uleb128 0x12
 1246 00e0 21       		.uleb128 0x21
 1247 00e1 00       		.byte	0
 1248 00e2 49       		.uleb128 0x49
 1249 00e3 13       		.uleb128 0x13
 1250 00e4 2F       		.uleb128 0x2f
 1251 00e5 0B       		.uleb128 0xb
 1252 00e6 00       		.byte	0
 1253 00e7 00       		.byte	0
 1254 00e8 13       		.uleb128 0x13
 1255 00e9 2E       		.uleb128 0x2e
 1256 00ea 00       		.byte	0
 1257 00eb 3F       		.uleb128 0x3f
 1258 00ec 19       		.uleb128 0x19
 1259 00ed 03       		.uleb128 0x3
 1260 00ee 0E       		.uleb128 0xe
 1261 00ef 3A       		.uleb128 0x3a
 1262 00f0 0B       		.uleb128 0xb
 1263 00f1 3B       		.uleb128 0x3b
 1264 00f2 0B       		.uleb128 0xb
 1265 00f3 11       		.uleb128 0x11
 1266 00f4 01       		.uleb128 0x1
 1267 00f5 12       		.uleb128 0x12
 1268 00f6 06       		.uleb128 0x6
 1269 00f7 40       		.uleb128 0x40
 1270 00f8 18       		.uleb128 0x18
 1271 00f9 9742     		.uleb128 0x2117
 1272 00fb 19       		.uleb128 0x19
 1273 00fc 00       		.byte	0
 1274 00fd 00       		.byte	0
 1275 00fe 14       		.uleb128 0x14
 1276 00ff 34       		.uleb128 0x34
 1277 0100 00       		.byte	0
 1278 0101 03       		.uleb128 0x3
 1279 0102 0E       		.uleb128 0xe
 1280 0103 3A       		.uleb128 0x3a
 1281 0104 0B       		.uleb128 0xb
 1282 0105 3B       		.uleb128 0x3b
 1283 0106 0B       		.uleb128 0xb
 1284 0107 49       		.uleb128 0x49
 1285 0108 13       		.uleb128 0x13
 1286 0109 3F       		.uleb128 0x3f
 1287 010a 19       		.uleb128 0x19
 1288 010b 02       		.uleb128 0x2
 1289 010c 18       		.uleb128 0x18
 1290 010d 00       		.byte	0
 1291 010e 00       		.byte	0
 1292 010f 15       		.uleb128 0x15
 1293 0110 34       		.uleb128 0x34
 1294 0111 00       		.byte	0
 1295 0112 03       		.uleb128 0x3
 1296 0113 0E       		.uleb128 0xe
 1297 0114 3A       		.uleb128 0x3a
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 28


 1298 0115 0B       		.uleb128 0xb
 1299 0116 3B       		.uleb128 0x3b
 1300 0117 05       		.uleb128 0x5
 1301 0118 49       		.uleb128 0x49
 1302 0119 13       		.uleb128 0x13
 1303 011a 3F       		.uleb128 0x3f
 1304 011b 19       		.uleb128 0x19
 1305 011c 3C       		.uleb128 0x3c
 1306 011d 19       		.uleb128 0x19
 1307 011e 00       		.byte	0
 1308 011f 00       		.byte	0
 1309 0120 00       		.byte	0
 1310              		.section	.debug_aranges,"",%progbits
 1311 0000 44000000 		.4byte	0x44
 1312 0004 0200     		.2byte	0x2
 1313 0006 00000000 		.4byte	.Ldebug_info0
 1314 000a 04       		.byte	0x4
 1315 000b 00       		.byte	0
 1316 000c 0000     		.2byte	0
 1317 000e 0000     		.2byte	0
 1318 0010 00000000 		.4byte	.LFB68
 1319 0014 94000000 		.4byte	.LFE68-.LFB68
 1320 0018 00000000 		.4byte	.LFB69
 1321 001c 2C000000 		.4byte	.LFE69-.LFB69
 1322 0020 00000000 		.4byte	.LFB70
 1323 0024 C4000000 		.4byte	.LFE70-.LFB70
 1324 0028 00000000 		.4byte	.LFB71
 1325 002c 0C000000 		.4byte	.LFE71-.LFB71
 1326 0030 00000000 		.4byte	.LFB72
 1327 0034 2C000000 		.4byte	.LFE72-.LFB72
 1328 0038 00000000 		.4byte	.LFB73
 1329 003c E4000000 		.4byte	.LFE73-.LFB73
 1330 0040 00000000 		.4byte	0
 1331 0044 00000000 		.4byte	0
 1332              		.section	.debug_ranges,"",%progbits
 1333              	.Ldebug_ranges0:
 1334 0000 00000000 		.4byte	.LFB68
 1335 0004 94000000 		.4byte	.LFE68
 1336 0008 00000000 		.4byte	.LFB69
 1337 000c 2C000000 		.4byte	.LFE69
 1338 0010 00000000 		.4byte	.LFB70
 1339 0014 C4000000 		.4byte	.LFE70
 1340 0018 00000000 		.4byte	.LFB71
 1341 001c 0C000000 		.4byte	.LFE71
 1342 0020 00000000 		.4byte	.LFB72
 1343 0024 2C000000 		.4byte	.LFE72
 1344 0028 00000000 		.4byte	.LFB73
 1345 002c E4000000 		.4byte	.LFE73
 1346 0030 00000000 		.4byte	0
 1347 0034 00000000 		.4byte	0
 1348              		.section	.debug_line,"",%progbits
 1349              	.Ldebug_line0:
 1350 0000 65020000 		.section	.debug_str,"MS",%progbits,1
 1350      0200A201 
 1350      00000201 
 1350      FB0E0D00 
 1350      01010101 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 29


 1351              	.LASF35:
 1352 0000 76546173 		.ascii	"vTaskLightMeasure\000"
 1352      6B4C6967 
 1352      68744D65 
 1352      61737572 
 1352      6500
 1353              	.LASF5:
 1354 0012 73686F72 		.ascii	"short int\000"
 1354      7420696E 
 1354      7400
 1355              	.LASF21:
 1356 001c 73697A65 		.ascii	"sizetype\000"
 1356      74797065 
 1356      00
 1357              	.LASF47:
 1358 0025 44533138 		.ascii	"DS18x8_Sensor\000"
 1358      78385F53 
 1358      656E736F 
 1358      7200
 1359              	.LASF56:
 1360 0033 436C6F63 		.ascii	"ClockAddr\000"
 1360      6B416464 
 1360      7200
 1361              	.LASF61:
 1362 003d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1362      43313120 
 1362      352E342E 
 1362      31203230 
 1362      31363036 
 1363 0070 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1363      20726576 
 1363      6973696F 
 1363      6E203233 
 1363      37373135 
 1364 00a3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1364      66756E63 
 1364      74696F6E 
 1364      2D736563 
 1364      74696F6E 
 1365              	.LASF44:
 1366 00cb 54657374 		.ascii	"TestCurrentHour\000"
 1366      43757272 
 1366      656E7448 
 1366      6F757200 
 1367              	.LASF36:
 1368 00db 76546173 		.ascii	"vTaskLightController\000"
 1368      6B4C6967 
 1368      6874436F 
 1368      6E74726F 
 1368      6C6C6572 
 1369              	.LASF45:
 1370 00f0 54657374 		.ascii	"TestCurrentMin\000"
 1370      43757272 
 1370      656E744D 
 1370      696E00
 1371              	.LASF29:
 1372 00ff 486F7572 		.ascii	"Hour\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 30


 1372      00
 1373              	.LASF37:
 1374 0104 4C696768 		.ascii	"LightCycle\000"
 1374      74437963 
 1374      6C6500
 1375              	.LASF33:
 1376 010f 7844656C 		.ascii	"xDelayms\000"
 1376      61796D73 
 1376      00
 1377              	.LASF50:
 1378 0118 4C696768 		.ascii	"Light\000"
 1378      7400
 1379              	.LASF17:
 1380 011e 75696E74 		.ascii	"uint16\000"
 1380      313600
 1381              	.LASF13:
 1382 0125 75696E74 		.ascii	"uint8_t\000"
 1382      385F7400 
 1383              	.LASF16:
 1384 012d 75696E74 		.ascii	"uint8\000"
 1384      3800
 1385              	.LASF38:
 1386 0133 7853686F 		.ascii	"xShortDelayms\000"
 1386      72744465 
 1386      6C61796D 
 1386      7300
 1387              	.LASF58:
 1388 0141 43757272 		.ascii	"CurrentTime\000"
 1388      656E7454 
 1388      696D6500 
 1389              	.LASF18:
 1390 014d 666C6F61 		.ascii	"float\000"
 1390      7400
 1391              	.LASF1:
 1392 0153 6C6F6E67 		.ascii	"long long int\000"
 1392      206C6F6E 
 1392      6720696E 
 1392      7400
 1393              	.LASF25:
 1394 0161 5469636B 		.ascii	"TickType_t\000"
 1394      54797065 
 1394      5F7400
 1395              	.LASF62:
 1396 016c 4C696768 		.ascii	"Light.c\000"
 1396      742E6300 
 1397              	.LASF9:
 1398 0174 6C6F6E67 		.ascii	"long int\000"
 1398      20696E74 
 1398      00
 1399              	.LASF39:
 1400 017d 41726475 		.ascii	"ArduinoClock\000"
 1400      696E6F43 
 1400      6C6F636B 
 1400      00
 1401              	.LASF32:
 1402 018a 59656172 		.ascii	"Year\000"
 1402      00
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 31


 1403              	.LASF7:
 1404 018f 5F5F7569 		.ascii	"__uint8_t\000"
 1404      6E74385F 
 1404      7400
 1405              	.LASF26:
 1406 0199 51756575 		.ascii	"QueueHandle_t\000"
 1406      6548616E 
 1406      646C655F 
 1406      7400
 1407              	.LASF41:
 1408 01a7 76546173 		.ascii	"vTaskLEDcontrol\000"
 1408      6B4C4544 
 1408      636F6E74 
 1408      726F6C00 
 1409              	.LASF31:
 1410 01b7 4D6F6E74 		.ascii	"Month\000"
 1410      6800
 1411              	.LASF2:
 1412 01bd 6C6F6E67 		.ascii	"long double\000"
 1412      20646F75 
 1412      626C6500 
 1413              	.LASF59:
 1414 01c9 78517565 		.ascii	"xQueueLightValue\000"
 1414      75654C69 
 1414      67687456 
 1414      616C7565 
 1414      00
 1415              	.LASF40:
 1416 01da 764C6967 		.ascii	"vLightInit\000"
 1416      6874496E 
 1416      697400
 1417              	.LASF4:
 1418 01e5 756E7369 		.ascii	"unsigned char\000"
 1418      676E6564 
 1418      20636861 
 1418      7200
 1419              	.LASF3:
 1420 01f3 7369676E 		.ascii	"signed char\000"
 1420      65642063 
 1420      68617200 
 1421              	.LASF12:
 1422 01ff 6C6F6E67 		.ascii	"long long unsigned int\000"
 1422      206C6F6E 
 1422      6720756E 
 1422      7369676E 
 1422      65642069 
 1423              	.LASF15:
 1424 0216 75696E74 		.ascii	"uint32_t\000"
 1424      33325F74 
 1424      00
 1425              	.LASF0:
 1426 021f 756E7369 		.ascii	"unsigned int\000"
 1426      676E6564 
 1426      20696E74 
 1426      00
 1427              	.LASF52:
 1428 022c 624C4544 		.ascii	"bLEDCMD\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 32


 1428      434D4400 
 1429              	.LASF24:
 1430 0234 42617365 		.ascii	"BaseType_t\000"
 1430      54797065 
 1430      5F7400
 1431              	.LASF11:
 1432 023f 6C6F6E67 		.ascii	"long unsigned int\000"
 1432      20756E73 
 1432      69676E65 
 1432      6420696E 
 1432      7400
 1433              	.LASF64:
 1434 0251 51756575 		.ascii	"QueueDefinition\000"
 1434      65446566 
 1434      696E6974 
 1434      696F6E00 
 1435              	.LASF43:
 1436 0261 76546573 		.ascii	"vTestLightTask\000"
 1436      744C6967 
 1436      68745461 
 1436      736B00
 1437              	.LASF60:
 1438 0270 78517565 		.ascii	"xQueueCurrentTime\000"
 1438      75654375 
 1438      7272656E 
 1438      7454696D 
 1438      6500
 1439              	.LASF20:
 1440 0282 63686172 		.ascii	"char\000"
 1440      00
 1441              	.LASF53:
 1442 0287 5F426F6F 		.ascii	"_Bool\000"
 1442      6C00
 1443              	.LASF14:
 1444 028d 696E7433 		.ascii	"int32_t\000"
 1444      325F7400 
 1445              	.LASF6:
 1446 0295 73686F72 		.ascii	"short unsigned int\000"
 1446      7420756E 
 1446      7369676E 
 1446      65642069 
 1446      6E7400
 1447              	.LASF27:
 1448 02a8 44533138 		.ascii	"DS18x8_TSensor\000"
 1448      78385F54 
 1448      53656E73 
 1448      6F7200
 1449              	.LASF30:
 1450 02b7 4461794F 		.ascii	"DayOfMonth\000"
 1450      664D6F6E 
 1450      746800
 1451              	.LASF54:
 1452 02c2 624C4544 		.ascii	"bLEDstate\000"
 1452      73746174 
 1452      6500
 1453              	.LASF19:
 1454 02cc 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 33


 1454      6C6500
 1455              	.LASF51:
 1456 02d3 54696D65 		.ascii	"Time\000"
 1456      00
 1457              	.LASF10:
 1458 02d8 5F5F7569 		.ascii	"__uint32_t\000"
 1458      6E743332 
 1458      5F7400
 1459              	.LASF8:
 1460 02e3 5F5F696E 		.ascii	"__int32_t\000"
 1460      7433325F 
 1460      7400
 1461              	.LASF23:
 1462 02ed 70726573 		.ascii	"present\000"
 1462      656E7400 
 1463              	.LASF28:
 1464 02f5 436C6F63 		.ascii	"Clock\000"
 1464      6B00
 1465              	.LASF57:
 1466 02fb 53746172 		.ascii	"Start\000"
 1466      7400
 1467              	.LASF42:
 1468 0301 76546573 		.ascii	"vTestLightTaskInit\000"
 1468      744C6967 
 1468      68745461 
 1468      736B496E 
 1468      697400
 1469              	.LASF22:
 1470 0314 54656D70 		.ascii	"Temperature\000"
 1470      65726174 
 1470      75726500 
 1471              	.LASF63:
 1472 0320 433A5C55 		.ascii	"C:\\Users\\krist\\Documents\\GitHub\\P4_Vertical_fa"
 1472      73657273 
 1472      5C6B7269 
 1472      73745C44 
 1472      6F63756D 
 1473 034e 726D5C52 		.ascii	"rm\\RTOS_TEMPLATE-master\\PlanteModul.cydsn\000"
 1473      544F535F 
 1473      54454D50 
 1473      4C415445 
 1473      2D6D6173 
 1474              	.LASF55:
 1475 0378 62416C61 		.ascii	"bAlarmState\000"
 1475      726D5374 
 1475      61746500 
 1476              	.LASF49:
 1477 0384 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1477      52784275 
 1477      66666572 
 1477      00
 1478              	.LASF34:
 1479 0391 4C696768 		.ascii	"LightRead\000"
 1479      74526561 
 1479      6400
 1480              	.LASF46:
 1481 039b 54657374 		.ascii	"TestCurrentSec\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccjhvhlg.s 			page 34


 1481      43757272 
 1481      656E7453 
 1481      656300
 1482              	.LASF48:
 1483 03aa 44533138 		.ascii	"DS18x8_DataReady\000"
 1483      78385F44 
 1483      61746152 
 1483      65616479 
 1483      00
 1484              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
