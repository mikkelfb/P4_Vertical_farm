ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Light.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	DS18x8_Sensor,32,4
  20              		.comm	DS18x8_DataReady,1,1
  21              		.comm	Light,1,1
  22              		.comm	bLEDcmd,1,1
  23              		.global	bAlarmState
  24              		.bss
  25              		.type	bAlarmState, %object
  26              		.size	bAlarmState, 1
  27              	bAlarmState:
  28 0000 00       		.space	1
  29              		.global	bAlarmACK
  30              		.type	bAlarmACK, %object
  31              		.size	bAlarmACK, 1
  32              	bAlarmACK:
  33 0001 00       		.space	1
  34              		.global	ClockAddr
  35              		.data
  36              		.type	ClockAddr, %object
  37              		.size	ClockAddr, 1
  38              	ClockAddr:
  39 0000 09       		.byte	9
  40              		.comm	LightCycle,2,4
  41              		.comm	CurrentTime,8,4
  42              		.comm	xQueueLightValue,4,4
  43              		.comm	xQueueLEDCmd,4,4
  44              		.comm	xQueueCurrentTime,12,4
  45              		.section	.rodata
  46              		.align	2
  47              	.LC0:
  48 0000 4C696768 		.ascii	"Light\000"
  48      7400
  49 0006 0000     		.align	2
  50              	.LC1:
  51 0008 4C696768 		.ascii	"Light controller\000"
  51      7420636F 
  51      6E74726F 
  51      6C6C6572 
  51      00
  52 0019 000000   		.align	2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 2


  53              	.LC2:
  54 001c 4C454420 		.ascii	"LED controller\000"
  54      636F6E74 
  54      726F6C6C 
  54      657200
  55              		.section	.text.vLightInit,"ax",%progbits
  56              		.align	2
  57              		.global	vLightInit
  58              		.thumb
  59              		.thumb_func
  60              		.type	vLightInit, %function
  61              	vLightInit:
  62              	.LFB68:
  63              		.file 1 "Light.c"
   1:Light.c       **** /* ========================================
   2:Light.c       ****  *
   3:Light.c       ****  * Copyright YOUR COMPANY, THE YEAR
   4:Light.c       ****  * All Rights Reserved
   5:Light.c       ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:Light.c       ****  *
   7:Light.c       ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:Light.c       ****  * WHICH IS THE PROPERTY OF your company.
   9:Light.c       ****  *
  10:Light.c       ****  * ========================================
  11:Light.c       **** */
  12:Light.c       **** 
  13:Light.c       **** /*  The LED and light sensor are controlled like so: 
  14:Light.c       **** 
  15:Light.c       ****         vTaskLightMeasure():
  16:Light.c       ****         - The output value of the light sensor is read periodically every 10 s
  17:Light.c       ****         - The value is sent to the queue xQueueLightValue
  18:Light.c       ****         
  19:Light.c       ****         vTaskLightController();
  20:Light.c       ****         - LightCycle[] contains two hour values, which are the start and stop of the interval
  21:Light.c       ****           where the LED should be on
  22:Light.c       ****         - The current hour, minute, sec is read from I2C and stored in the struct CurrentTime
  23:Light.c       ****         - If CurrentTime.Hour is inbetween the two values in LightCycle[], bLEDcmd is set HIGH 
  24:Light.c       ****           and sent to the queue xQueueLEDCmd
  25:Light.c       ****           Then after a short delay, the light sensor value is read from xQueueLightValue
  26:Light.c       ****           If the light value is 1 (not measuring enough light), bAlarmState is set to HIGH
  27:Light.c       ****         - If CurrentTime.Hour is NOT inbetween the two values in LightCycle[], bLEDcmd is set LOW 
  28:Light.c       ****           and sent to the queue xQueueLEDCmd
  29:Light.c       ****         - Delay of 10 s
  30:Light.c       ****         
  31:Light.c       ****         vTaskLEDcontrol():
  32:Light.c       ****         - Recieve values from the queues xQueueLightValue and xQueueLEDCmd
  33:Light.c       ****         - If bLEDcmd is HIGH and the light value is 1, the LED are turned on
  34:Light.c       ****         - If bLEDcmd is LOW, the LED are turned off
  35:Light.c       **** 
  36:Light.c       **** */
  37:Light.c       **** 
  38:Light.c       **** #include "FreeRTOS.h"
  39:Light.c       **** #include "light.h"
  40:Light.c       **** #include "task.h"
  41:Light.c       **** #include "queue.h"
  42:Light.c       **** 
  43:Light.c       **** uint8 Light;                       // Variable contains measured light value
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 3


  44:Light.c       **** _Bool bLEDcmd;                     // Variable describing if the LED should be on/off
  45:Light.c       **** _Bool bAlarmState = 0;
  46:Light.c       **** _Bool bAlarmACK = 0;
  47:Light.c       **** uint8 ClockAddr = 9;               // Address for Arduino clock
  48:Light.c       **** 
  49:Light.c       **** 
  50:Light.c       **** /* Create a struct for storing the light cycle */
  51:Light.c       **** struct TimeInterval
  52:Light.c       ****     {
  53:Light.c       ****         uint8 Start;
  54:Light.c       ****         uint8 Stop;
  55:Light.c       ****     };
  56:Light.c       **** struct TimeInterval LightCycle;
  57:Light.c       ****     
  58:Light.c       **** /* Create a struct for storing the current time */
  59:Light.c       **** struct Clock
  60:Light.c       ****     {
  61:Light.c       ****         uint8 Sec;
  62:Light.c       ****         uint8 Min;
  63:Light.c       ****         uint8 Hour;
  64:Light.c       ****         uint8 DayOfMonth;
  65:Light.c       ****         uint8 Month;
  66:Light.c       ****         uint16 Year;
  67:Light.c       ****         
  68:Light.c       ****     };
  69:Light.c       **** 
  70:Light.c       **** struct Clock CurrentTime;
  71:Light.c       **** 
  72:Light.c       **** /* Create a queue for sending the light value through UART */
  73:Light.c       **** QueueHandle_t xQueueLightValue;
  74:Light.c       ****     
  75:Light.c       **** /* Create a queue for sending the on/off command to LED */
  76:Light.c       **** QueueHandle_t xQueueLEDCmd;
  77:Light.c       **** 
  78:Light.c       **** /* Create a queue for checking the light cycle */
  79:Light.c       **** QueueHandle_t xQueueCurrentTime[3];
  80:Light.c       **** 
  81:Light.c       **** void vLightInit(){
  64              		.loc 1 81 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 1, uses_anonymous_args = 0
  68 0000 80B5     		push	{r7, lr}
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 7, -8
  71              		.cfi_offset 14, -4
  72 0002 82B0     		sub	sp, sp, #8
  73              		.cfi_def_cfa_offset 16
  74 0004 02AF     		add	r7, sp, #8
  75              		.cfi_def_cfa 7, 8
  82:Light.c       ****            
  83:Light.c       ****     /*  The queue is created to hold a maximum of 1 value, each of which is
  84:Light.c       ****         large enough to hold a variable at the size of uint8. */
  85:Light.c       ****     xQueueLightValue = xQueueCreate(1, sizeof(uint8));
  76              		.loc 1 85 0
  77 0006 0022     		movs	r2, #0
  78 0008 0121     		movs	r1, #1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 4


  79 000a 0120     		movs	r0, #1
  80 000c FFF7FEFF 		bl	xQueueGenericCreate
  81 0010 0246     		mov	r2, r0
  82 0012 224B     		ldr	r3, .L2
  83 0014 1A60     		str	r2, [r3]
  86:Light.c       ****     
  87:Light.c       ****     /*  The queue is created to hold a maximum of 1 value at the size of a Bool. */
  88:Light.c       ****     xQueueLEDCmd = xQueueCreate(1, sizeof(_Bool));
  84              		.loc 1 88 0
  85 0016 0022     		movs	r2, #0
  86 0018 0121     		movs	r1, #1
  87 001a 0120     		movs	r0, #1
  88 001c FFF7FEFF 		bl	xQueueGenericCreate
  89 0020 0246     		mov	r2, r0
  90 0022 1F4B     		ldr	r3, .L2+4
  91 0024 1A60     		str	r2, [r3]
  89:Light.c       ****     
  90:Light.c       ****     /*  Queue with current time: hour, min, sec */
  91:Light.c       ****     xQueueCurrentTime[0] = xQueueCreate(1, sizeof(uint8));
  92              		.loc 1 91 0
  93 0026 0022     		movs	r2, #0
  94 0028 0121     		movs	r1, #1
  95 002a 0120     		movs	r0, #1
  96 002c FFF7FEFF 		bl	xQueueGenericCreate
  97 0030 0246     		mov	r2, r0
  98 0032 1C4B     		ldr	r3, .L2+8
  99 0034 1A60     		str	r2, [r3]
  92:Light.c       ****     xQueueCurrentTime[1] = xQueueCreate(1, sizeof(uint8));
 100              		.loc 1 92 0
 101 0036 0022     		movs	r2, #0
 102 0038 0121     		movs	r1, #1
 103 003a 0120     		movs	r0, #1
 104 003c FFF7FEFF 		bl	xQueueGenericCreate
 105 0040 0246     		mov	r2, r0
 106 0042 184B     		ldr	r3, .L2+8
 107 0044 5A60     		str	r2, [r3, #4]
  93:Light.c       ****     xQueueCurrentTime[2] = xQueueCreate(1, sizeof(uint8));
 108              		.loc 1 93 0
 109 0046 0022     		movs	r2, #0
 110 0048 0121     		movs	r1, #1
 111 004a 0120     		movs	r0, #1
 112 004c FFF7FEFF 		bl	xQueueGenericCreate
 113 0050 0246     		mov	r2, r0
 114 0052 144B     		ldr	r3, .L2+8
 115 0054 9A60     		str	r2, [r3, #8]
  94:Light.c       ****     
  95:Light.c       ****     /*  Create the task that will control the light sensor. The task is created with
  96:Light.c       ****         priority 2. */
  97:Light.c       ****     xTaskCreate(vTaskLightMeasure, "Light", 1000 , NULL , 2 , NULL);
 116              		.loc 1 97 0
 117 0056 0023     		movs	r3, #0
 118 0058 0193     		str	r3, [sp, #4]
 119 005a 0223     		movs	r3, #2
 120 005c 0093     		str	r3, [sp]
 121 005e 0023     		movs	r3, #0
 122 0060 4FF47A72 		mov	r2, #1000
 123 0064 1049     		ldr	r1, .L2+12
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 5


 124 0066 1148     		ldr	r0, .L2+16
 125 0068 FFF7FEFF 		bl	xTaskCreate
  98:Light.c       ****     
  99:Light.c       ****     /*  Create the controller task that will recieve external commands 
 100:Light.c       ****         and regulate the LED based on the sensor value. 
 101:Light.c       ****         The task is created with priority 2. */
 102:Light.c       ****     xTaskCreate(vTaskLightController, "Light controller", 100, NULL, 2, NULL);
 126              		.loc 1 102 0
 127 006c 0023     		movs	r3, #0
 128 006e 0193     		str	r3, [sp, #4]
 129 0070 0223     		movs	r3, #2
 130 0072 0093     		str	r3, [sp]
 131 0074 0023     		movs	r3, #0
 132 0076 6422     		movs	r2, #100
 133 0078 0D49     		ldr	r1, .L2+20
 134 007a 0E48     		ldr	r0, .L2+24
 135 007c FFF7FEFF 		bl	xTaskCreate
 103:Light.c       ****     
 104:Light.c       ****     /*  Create the LED task to turn on and off the LED */
 105:Light.c       ****     xTaskCreate(vTaskLEDcontrol, "LED controller", 100, NULL, 2, NULL);
 136              		.loc 1 105 0
 137 0080 0023     		movs	r3, #0
 138 0082 0193     		str	r3, [sp, #4]
 139 0084 0223     		movs	r3, #2
 140 0086 0093     		str	r3, [sp]
 141 0088 0023     		movs	r3, #0
 142 008a 6422     		movs	r2, #100
 143 008c 0A49     		ldr	r1, .L2+28
 144 008e 0B48     		ldr	r0, .L2+32
 145 0090 FFF7FEFF 		bl	xTaskCreate
 106:Light.c       ****     
 107:Light.c       ****     /*Initialize test tasks*/
 108:Light.c       ****     #if LIGHTTEST == 1
 109:Light.c       ****         //vTestLightTaskInit();
 110:Light.c       ****     #endif
 111:Light.c       **** }
 146              		.loc 1 111 0
 147 0094 00BF     		nop
 148 0096 BD46     		mov	sp, r7
 149              		.cfi_def_cfa_register 13
 150              		@ sp needed
 151 0098 80BD     		pop	{r7, pc}
 152              	.L3:
 153 009a 00BF     		.align	2
 154              	.L2:
 155 009c 00000000 		.word	xQueueLightValue
 156 00a0 00000000 		.word	xQueueLEDCmd
 157 00a4 00000000 		.word	xQueueCurrentTime
 158 00a8 00000000 		.word	.LC0
 159 00ac 00000000 		.word	vTaskLightMeasure
 160 00b0 08000000 		.word	.LC1
 161 00b4 00000000 		.word	vTaskLightController
 162 00b8 1C000000 		.word	.LC2
 163 00bc 00000000 		.word	vTaskLEDcontrol
 164              		.cfi_endproc
 165              	.LFE68:
 166              		.size	vLightInit, .-vLightInit
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 6


 167              		.section	.text.vTaskLightMeasure,"ax",%progbits
 168              		.align	2
 169              		.global	vTaskLightMeasure
 170              		.thumb
 171              		.thumb_func
 172              		.type	vTaskLightMeasure, %function
 173              	vTaskLightMeasure:
 174              	.LFB69:
 112:Light.c       **** 
 113:Light.c       **** /*  This function turns on the light sensor, periodically reads the sensor 
 114:Light.c       ****     and sends the measured value to the created queue for UART */
 115:Light.c       **** void vTaskLightMeasure(){
 175              		.loc 1 115 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 8
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 82B0     		sub	sp, sp, #8
 184              		.cfi_def_cfa_offset 16
 185 0004 00AF     		add	r7, sp, #0
 186              		.cfi_def_cfa_register 7
 116:Light.c       ****     Pin_5V_out_Write(1u);
 187              		.loc 1 116 0
 188 0006 0120     		movs	r0, #1
 189 0008 FFF7FEFF 		bl	Pin_5V_out_Write
 117:Light.c       ****     const TickType_t xDelayms = pdMS_TO_TICKS( 10000 ); // Sets the measurement resolution.
 190              		.loc 1 117 0
 191 000c 42F21073 		movw	r3, #10000
 192 0010 7B60     		str	r3, [r7, #4]
 193              	.L5:
 194              	.LBB2:
 118:Light.c       ****     
 119:Light.c       ****     for(;;){
 120:Light.c       ****        
 121:Light.c       ****         uint8 LightRead = Pin_LIGHT_in_Read();
 195              		.loc 1 121 0 discriminator 1
 196 0012 FFF7FEFF 		bl	Pin_LIGHT_in_Read
 197 0016 0346     		mov	r3, r0
 198 0018 FB70     		strb	r3, [r7, #3]
 122:Light.c       ****         Light = LightRead;
 199              		.loc 1 122 0 discriminator 1
 200 001a 074A     		ldr	r2, .L6
 201 001c FB78     		ldrb	r3, [r7, #3]
 202 001e 1370     		strb	r3, [r2]
 123:Light.c       ****         xQueueSendToBack(xQueueLightValue, &Light, portMAX_DELAY);
 203              		.loc 1 123 0 discriminator 1
 204 0020 064B     		ldr	r3, .L6+4
 205 0022 1868     		ldr	r0, [r3]
 206 0024 0023     		movs	r3, #0
 207 0026 4FF0FF32 		mov	r2, #-1
 208 002a 0349     		ldr	r1, .L6
 209 002c FFF7FEFF 		bl	xQueueGenericSend
 124:Light.c       ****         vTaskDelay(xDelayms); 
 210              		.loc 1 124 0 discriminator 1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 7


 211 0030 7868     		ldr	r0, [r7, #4]
 212 0032 FFF7FEFF 		bl	vTaskDelay
 213              	.LBE2:
 125:Light.c       ****     }
 214              		.loc 1 125 0 discriminator 1
 215 0036 ECE7     		b	.L5
 216              	.L7:
 217              		.align	2
 218              	.L6:
 219 0038 00000000 		.word	Light
 220 003c 00000000 		.word	xQueueLightValue
 221              		.cfi_endproc
 222              	.LFE69:
 223              		.size	vTaskLightMeasure, .-vTaskLightMeasure
 224              		.section	.text.vTaskLightController,"ax",%progbits
 225              		.align	2
 226              		.global	vTaskLightController
 227              		.thumb
 228              		.thumb_func
 229              		.type	vTaskLightController, %function
 230              	vTaskLightController:
 231              	.LFB70:
 126:Light.c       **** }
 127:Light.c       **** 
 128:Light.c       **** 
 129:Light.c       **** /*  This function recieves info about which time interval there should be light, 
 130:Light.c       ****     turns on/off LED lights and periodically checks if the lights are on */
 131:Light.c       **** void vTaskLightController(){
 232              		.loc 1 131 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 16
 235              		@ frame_needed = 1, uses_anonymous_args = 0
 236 0000 80B5     		push	{r7, lr}
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 84B0     		sub	sp, sp, #16
 241              		.cfi_def_cfa_offset 24
 242 0004 00AF     		add	r7, sp, #0
 243              		.cfi_def_cfa_register 7
 132:Light.c       ****     LightCycle.Start = 8;           // temporary values until can recieve from NyParam task
 244              		.loc 1 132 0
 245 0006 2A4B     		ldr	r3, .L14
 246 0008 0822     		movs	r2, #8
 247 000a 1A70     		strb	r2, [r3]
 133:Light.c       ****     LightCycle.Stop = 14;
 248              		.loc 1 133 0
 249 000c 284B     		ldr	r3, .L14
 250 000e 0E22     		movs	r2, #14
 251 0010 5A70     		strb	r2, [r3, #1]
 134:Light.c       ****     
 135:Light.c       ****     const TickType_t xDelayms = pdMS_TO_TICKS( 10000 ); // Sets the measurement resolution.
 252              		.loc 1 135 0
 253 0012 42F21073 		movw	r3, #10000
 254 0016 FB60     		str	r3, [r7, #12]
 136:Light.c       ****     const TickType_t xShortDelayms = pdMS_TO_TICKS( 100 );
 255              		.loc 1 136 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 8


 256 0018 6423     		movs	r3, #100
 257 001a BB60     		str	r3, [r7, #8]
 258              	.L12:
 137:Light.c       ****     char ArduinoClock[3]; // Array to store clock value from Arduino
 138:Light.c       ****     
 139:Light.c       ****     for(;;){
 140:Light.c       ****               
 141:Light.c       ****         /* Read current time from Arduino clock and store in array */
 142:Light.c       ****         I2C_MasterReadBuf( ClockAddr, (uint8*) ArduinoClock, 3, I2C_MODE_COMPLETE_XFER);
 259              		.loc 1 142 0
 260 001c 254B     		ldr	r3, .L14+4
 261 001e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 262 0020 391D     		adds	r1, r7, #4
 263 0022 0023     		movs	r3, #0
 264 0024 0322     		movs	r2, #3
 265 0026 FFF7FEFF 		bl	I2C_MasterReadBuf
 143:Light.c       ****         
 144:Light.c       ****         /* Save values from array in CurrentTime struct */
 145:Light.c       ****         CurrentTime.Hour = ArduinoClock[0];
 266              		.loc 1 145 0
 267 002a 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 268 002c 224B     		ldr	r3, .L14+8
 269 002e 9A70     		strb	r2, [r3, #2]
 146:Light.c       ****         CurrentTime.Min = ArduinoClock[1];
 270              		.loc 1 146 0
 271 0030 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 272 0032 214B     		ldr	r3, .L14+8
 273 0034 5A70     		strb	r2, [r3, #1]
 147:Light.c       ****         CurrentTime.Sec = ArduinoClock[2];
 274              		.loc 1 147 0
 275 0036 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 276 0038 1F4B     		ldr	r3, .L14+8
 277 003a 1A70     		strb	r2, [r3]
 148:Light.c       ****         
 149:Light.c       ****         /* Sends CurrentTime values to serial via UART, used for test 
 150:Light.c       ****         xQueueSendToBack(xQueueCurrentTime[0], &CurrentTime.Hour, portMAX_DELAY);
 151:Light.c       ****         xQueueSendToBack(xQueueCurrentTime[1], &CurrentTime.Min, portMAX_DELAY);
 152:Light.c       ****         xQueueSendToBack(xQueueCurrentTime[2], &CurrentTime.Sec, portMAX_DELAY);*/
 153:Light.c       ****         vTaskDelay(xShortDelayms);
 278              		.loc 1 153 0
 279 003c B868     		ldr	r0, [r7, #8]
 280 003e FFF7FEFF 		bl	vTaskDelay
 154:Light.c       ****                 
 155:Light.c       ****         /*  This if-statement checks if the current hour is within the on-interval of the light cyc
 156:Light.c       ****             If so, bLEDcmd is set to 1, commanding the LED to turned on. 
 157:Light.c       ****             After a short delay, the light sensor is read to make sure that the LED is on */
 158:Light.c       ****         if((CurrentTime.Hour >= LightCycle.Start) && (CurrentTime.Hour < LightCycle.Stop)){
 281              		.loc 1 158 0
 282 0042 1D4B     		ldr	r3, .L14+8
 283 0044 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 284 0046 1A4B     		ldr	r3, .L14
 285 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 286 004a 9A42     		cmp	r2, r3
 287 004c 1FD3     		bcc	.L9
 288              		.loc 1 158 0 is_stmt 0 discriminator 1
 289 004e 1A4B     		ldr	r3, .L14+8
 290 0050 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 9


 291 0052 174B     		ldr	r3, .L14
 292 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 293 0056 9A42     		cmp	r2, r3
 294 0058 19D2     		bcs	.L9
 159:Light.c       ****             
 160:Light.c       ****             bLEDcmd = 1;
 295              		.loc 1 160 0 is_stmt 1
 296 005a 184B     		ldr	r3, .L14+12
 297 005c 0122     		movs	r2, #1
 298 005e 1A70     		strb	r2, [r3]
 161:Light.c       ****             xQueueSendToBack(xQueueLEDCmd, &bLEDcmd, portMAX_DELAY);
 299              		.loc 1 161 0
 300 0060 174B     		ldr	r3, .L14+16
 301 0062 1868     		ldr	r0, [r3]
 302 0064 0023     		movs	r3, #0
 303 0066 4FF0FF32 		mov	r2, #-1
 304 006a 1449     		ldr	r1, .L14+12
 305 006c FFF7FEFF 		bl	xQueueGenericSend
 162:Light.c       ****             //SW_UART_TEST_USB_PutString("Within active hours of light cycle: TRUE \n"); // Used fo
 163:Light.c       ****             vTaskDelay(xShortDelayms);
 306              		.loc 1 163 0
 307 0070 B868     		ldr	r0, [r7, #8]
 308 0072 FFF7FEFF 		bl	vTaskDelay
 164:Light.c       ****             
 165:Light.c       ****             if(Light == 0){
 309              		.loc 1 165 0
 310 0076 134B     		ldr	r3, .L14+20
 311 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 312 007a 002B     		cmp	r3, #0
 313 007c 13D0     		beq	.L13
 166:Light.c       ****                 // The LED are on, all is good
 167:Light.c       ****                 //SW_UART_TEST_USB_PutString("Enough light: TRUE \n \n"); // Used for test
 168:Light.c       ****             }
 169:Light.c       ****             else if(Light == 1){
 314              		.loc 1 169 0
 315 007e 114B     		ldr	r3, .L14+20
 316 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 317 0082 012B     		cmp	r3, #1
 318 0084 0FD1     		bne	.L13
 170:Light.c       ****                 // The LED are not on, all is not good, send an alarm
 171:Light.c       ****                 //SW_UART_TEST_USB_PutString("Enough light: FALSE \n \n"); // Used for test
 172:Light.c       ****                 bAlarmState = 1;
 319              		.loc 1 172 0
 320 0086 104B     		ldr	r3, .L14+24
 321 0088 0122     		movs	r2, #1
 322 008a 1A70     		strb	r2, [r3]
 165:Light.c       ****                 // The LED are on, all is good
 323              		.loc 1 165 0
 324 008c 0BE0     		b	.L13
 325              	.L9:
 173:Light.c       ****             }  
 174:Light.c       ****         }
 175:Light.c       ****         else{
 176:Light.c       ****             /* The LED should not be on, sending command to vTaskLEDcontrol to turn them off */
 177:Light.c       ****             bLEDcmd = 0;
 326              		.loc 1 177 0
 327 008e 0B4B     		ldr	r3, .L14+12
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 10


 328 0090 0022     		movs	r2, #0
 329 0092 1A70     		strb	r2, [r3]
 178:Light.c       ****             xQueueSendToBack(xQueueLEDCmd, &bLEDcmd, portMAX_DELAY);
 330              		.loc 1 178 0
 331 0094 0A4B     		ldr	r3, .L14+16
 332 0096 1868     		ldr	r0, [r3]
 333 0098 0023     		movs	r3, #0
 334 009a 4FF0FF32 		mov	r2, #-1
 335 009e 0749     		ldr	r1, .L14+12
 336 00a0 FFF7FEFF 		bl	xQueueGenericSend
 337 00a4 00E0     		b	.L11
 338              	.L13:
 165:Light.c       ****                 // The LED are on, all is good
 339              		.loc 1 165 0
 340 00a6 00BF     		nop
 341              	.L11:
 179:Light.c       ****                         
 180:Light.c       ****             //SW_UART_TEST_USB_PutString("Within active hours of light cycle: FALSE \n \n"); // Use
 181:Light.c       ****         }    
 182:Light.c       ****     vTaskDelay(xDelayms); 
 342              		.loc 1 182 0
 343 00a8 F868     		ldr	r0, [r7, #12]
 344 00aa FFF7FEFF 		bl	vTaskDelay
 183:Light.c       ****     }
 345              		.loc 1 183 0
 346 00ae B5E7     		b	.L12
 347              	.L15:
 348              		.align	2
 349              	.L14:
 350 00b0 00000000 		.word	LightCycle
 351 00b4 00000000 		.word	ClockAddr
 352 00b8 00000000 		.word	CurrentTime
 353 00bc 00000000 		.word	bLEDcmd
 354 00c0 00000000 		.word	xQueueLEDCmd
 355 00c4 00000000 		.word	Light
 356 00c8 00000000 		.word	bAlarmState
 357              		.cfi_endproc
 358              	.LFE70:
 359              		.size	vTaskLightController, .-vTaskLightController
 360              		.section	.text.vTaskLEDcontrol,"ax",%progbits
 361              		.align	2
 362              		.global	vTaskLEDcontrol
 363              		.thumb
 364              		.thumb_func
 365              		.type	vTaskLEDcontrol, %function
 366              	vTaskLEDcontrol:
 367              	.LFB71:
 184:Light.c       **** }
 185:Light.c       **** 
 186:Light.c       **** 
 187:Light.c       **** void vTaskLEDcontrol(){
 368              		.loc 1 187 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372 0000 80B5     		push	{r7, lr}
 373              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 11


 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 82B0     		sub	sp, sp, #8
 377              		.cfi_def_cfa_offset 16
 378 0004 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
 380              	.L19:
 188:Light.c       ****     _Bool bLEDcontrolcmd;
 189:Light.c       ****     _Bool bLEDcontrolstate;
 190:Light.c       ****     
 191:Light.c       ****     for(;;){
 192:Light.c       ****         /* Recieve on/off command and measured value */
 193:Light.c       ****         xQueueReceive(xQueueLEDCmd, &bLEDcontrolcmd, portMAX_DELAY);
 381              		.loc 1 193 0
 382 0006 124B     		ldr	r3, .L20
 383 0008 1B68     		ldr	r3, [r3]
 384 000a F91D     		adds	r1, r7, #7
 385 000c 4FF0FF32 		mov	r2, #-1
 386 0010 1846     		mov	r0, r3
 387 0012 FFF7FEFF 		bl	xQueueReceive
 194:Light.c       ****         xQueueReceive(xQueueLightValue, &bLEDcontrolstate, portMAX_DELAY);
 388              		.loc 1 194 0
 389 0016 0F4B     		ldr	r3, .L20+4
 390 0018 1B68     		ldr	r3, [r3]
 391 001a B91D     		adds	r1, r7, #6
 392 001c 4FF0FF32 		mov	r2, #-1
 393 0020 1846     		mov	r0, r3
 394 0022 FFF7FEFF 		bl	xQueueReceive
 195:Light.c       ****         
 196:Light.c       ****         /* USED FOR TEST
 197:Light.c       ****         SW_UART_TEST_USB_PutString("LED CMD: ");
 198:Light.c       ****         SW_UART_TEST_USB_PutHexInt(bLEDcontrolcmd);
 199:Light.c       ****         SW_UART_TEST_USB_PutString("\n");*/
 200:Light.c       ****         
 201:Light.c       ****         /* If the LED should be on and aren't on, turn them on. */
 202:Light.c       ****         if ( bLEDcontrolcmd == 1 && bLEDcontrolstate == 1){
 395              		.loc 1 202 0
 396 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 397 0028 002B     		cmp	r3, #0
 398 002a 06D0     		beq	.L17
 399              		.loc 1 202 0 is_stmt 0 discriminator 1
 400 002c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 401 002e 002B     		cmp	r3, #0
 402 0030 03D0     		beq	.L17
 203:Light.c       ****             Pin_LightTestLED_Write( 1u ); // Turns on LED
 403              		.loc 1 203 0 is_stmt 1
 404 0032 0120     		movs	r0, #1
 405 0034 FFF7FEFF 		bl	Pin_LightTestLED_Write
 406 0038 08E0     		b	.L18
 407              	.L17:
 204:Light.c       ****         }
 205:Light.c       ****         
 206:Light.c       ****         /* If the LED shouldn't be on, turn them off. */
 207:Light.c       ****         else if (bLEDcontrolcmd == 0){
 408              		.loc 1 207 0
 409 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 410 003c 83F00103 		eor	r3, r3, #1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 12


 411 0040 DBB2     		uxtb	r3, r3
 412 0042 002B     		cmp	r3, #0
 413 0044 DFD0     		beq	.L19
 208:Light.c       ****             Pin_LightTestLED_Write( 0u ); // Turns off LED
 414              		.loc 1 208 0
 415 0046 0020     		movs	r0, #0
 416 0048 FFF7FEFF 		bl	Pin_LightTestLED_Write
 417              	.L18:
 209:Light.c       ****         }
 210:Light.c       ****         
 211:Light.c       ****     }   
 418              		.loc 1 211 0
 419 004c DBE7     		b	.L19
 420              	.L21:
 421 004e 00BF     		.align	2
 422              	.L20:
 423 0050 00000000 		.word	xQueueLEDCmd
 424 0054 00000000 		.word	xQueueLightValue
 425              		.cfi_endproc
 426              	.LFE71:
 427              		.size	vTaskLEDcontrol, .-vTaskLEDcontrol
 428              		.text
 429              	.Letext0:
 430              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 431              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 432              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 433              		.file 5 "Generated_Source\\PSoC5/DS18x8.h"
 434              		.file 6 ".\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
 435              		.file 7 ".\\Source\\include/queue.h"
 436              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 437              		.section	.debug_info,"",%progbits
 438              	.Ldebug_info0:
 439 0000 8D030000 		.4byte	0x38d
 440 0004 0400     		.2byte	0x4
 441 0006 00000000 		.4byte	.Ldebug_abbrev0
 442 000a 04       		.byte	0x4
 443 000b 01       		.uleb128 0x1
 444 000c 5D000000 		.4byte	.LASF59
 445 0010 0C       		.byte	0xc
 446 0011 82010000 		.4byte	.LASF60
 447 0015 19030000 		.4byte	.LASF61
 448 0019 00000000 		.4byte	.Ldebug_ranges0+0
 449 001d 00000000 		.4byte	0
 450 0021 00000000 		.4byte	.Ldebug_line0
 451 0025 02       		.uleb128 0x2
 452 0026 04       		.byte	0x4
 453 0027 05       		.byte	0x5
 454 0028 696E7400 		.ascii	"int\000"
 455 002c 03       		.uleb128 0x3
 456 002d 04       		.byte	0x4
 457 002e 07       		.byte	0x7
 458 002f 35020000 		.4byte	.LASF0
 459 0033 03       		.uleb128 0x3
 460 0034 08       		.byte	0x8
 461 0035 05       		.byte	0x5
 462 0036 69010000 		.4byte	.LASF1
 463 003a 03       		.uleb128 0x3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 13


 464 003b 08       		.byte	0x8
 465 003c 04       		.byte	0x4
 466 003d D3010000 		.4byte	.LASF2
 467 0041 03       		.uleb128 0x3
 468 0042 01       		.byte	0x1
 469 0043 06       		.byte	0x6
 470 0044 09020000 		.4byte	.LASF3
 471 0048 04       		.uleb128 0x4
 472 0049 A5010000 		.4byte	.LASF7
 473 004d 02       		.byte	0x2
 474 004e 1D       		.byte	0x1d
 475 004f 53000000 		.4byte	0x53
 476 0053 03       		.uleb128 0x3
 477 0054 01       		.byte	0x1
 478 0055 08       		.byte	0x8
 479 0056 FB010000 		.4byte	.LASF4
 480 005a 03       		.uleb128 0x3
 481 005b 02       		.byte	0x2
 482 005c 05       		.byte	0x5
 483 005d 21000000 		.4byte	.LASF5
 484 0061 03       		.uleb128 0x3
 485 0062 02       		.byte	0x2
 486 0063 07       		.byte	0x7
 487 0064 6A020000 		.4byte	.LASF6
 488 0068 04       		.uleb128 0x4
 489 0069 EA020000 		.4byte	.LASF8
 490 006d 02       		.byte	0x2
 491 006e 3F       		.byte	0x3f
 492 006f 73000000 		.4byte	0x73
 493 0073 03       		.uleb128 0x3
 494 0074 04       		.byte	0x4
 495 0075 05       		.byte	0x5
 496 0076 8A010000 		.4byte	.LASF9
 497 007a 04       		.uleb128 0x4
 498 007b DF020000 		.4byte	.LASF10
 499 007f 02       		.byte	0x2
 500 0080 41       		.byte	0x41
 501 0081 85000000 		.4byte	0x85
 502 0085 03       		.uleb128 0x3
 503 0086 04       		.byte	0x4
 504 0087 07       		.byte	0x7
 505 0088 BC020000 		.4byte	.LASF11
 506 008c 03       		.uleb128 0x3
 507 008d 08       		.byte	0x8
 508 008e 07       		.byte	0x7
 509 008f 15020000 		.4byte	.LASF12
 510 0093 04       		.uleb128 0x4
 511 0094 3B010000 		.4byte	.LASF13
 512 0098 03       		.byte	0x3
 513 0099 18       		.byte	0x18
 514 009a 48000000 		.4byte	0x48
 515 009e 04       		.uleb128 0x4
 516 009f 9A020000 		.4byte	.LASF14
 517 00a3 03       		.byte	0x3
 518 00a4 2C       		.byte	0x2c
 519 00a5 68000000 		.4byte	0x68
 520 00a9 04       		.uleb128 0x4
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 14


 521 00aa 2C020000 		.4byte	.LASF15
 522 00ae 03       		.byte	0x3
 523 00af 30       		.byte	0x30
 524 00b0 7A000000 		.4byte	0x7a
 525 00b4 05       		.uleb128 0x5
 526 00b5 43010000 		.4byte	.LASF16
 527 00b9 04       		.byte	0x4
 528 00ba E401     		.2byte	0x1e4
 529 00bc 53000000 		.4byte	0x53
 530 00c0 05       		.uleb128 0x5
 531 00c1 27010000 		.4byte	.LASF17
 532 00c5 04       		.byte	0x4
 533 00c6 E501     		.2byte	0x1e5
 534 00c8 61000000 		.4byte	0x61
 535 00cc 03       		.uleb128 0x3
 536 00cd 04       		.byte	0x4
 537 00ce 04       		.byte	0x4
 538 00cf 63010000 		.4byte	.LASF18
 539 00d3 03       		.uleb128 0x3
 540 00d4 08       		.byte	0x8
 541 00d5 04       		.byte	0x4
 542 00d6 CE020000 		.4byte	.LASF19
 543 00da 03       		.uleb128 0x3
 544 00db 01       		.byte	0x1
 545 00dc 08       		.byte	0x8
 546 00dd 8F020000 		.4byte	.LASF20
 547 00e1 06       		.uleb128 0x6
 548 00e2 B4000000 		.4byte	0xb4
 549 00e6 03       		.uleb128 0x3
 550 00e7 04       		.byte	0x4
 551 00e8 07       		.byte	0x7
 552 00e9 3C000000 		.4byte	.LASF21
 553 00ed 07       		.uleb128 0x7
 554 00ee A2020000 		.4byte	.LASF27
 555 00f2 04       		.byte	0x4
 556 00f3 05       		.byte	0x5
 557 00f4 30       		.byte	0x30
 558 00f5 12010000 		.4byte	0x112
 559 00f9 08       		.uleb128 0x8
 560 00fa 0D030000 		.4byte	.LASF22
 561 00fe 05       		.byte	0x5
 562 00ff 31       		.byte	0x31
 563 0100 C0000000 		.4byte	0xc0
 564 0104 00       		.byte	0
 565 0105 08       		.uleb128 0x8
 566 0106 F9020000 		.4byte	.LASF23
 567 010a 05       		.byte	0x5
 568 010b 32       		.byte	0x32
 569 010c B4000000 		.4byte	0xb4
 570 0110 02       		.byte	0x2
 571 0111 00       		.byte	0
 572 0112 04       		.uleb128 0x4
 573 0113 42020000 		.4byte	.LASF24
 574 0117 06       		.byte	0x6
 575 0118 38       		.byte	0x38
 576 0119 73000000 		.4byte	0x73
 577 011d 04       		.uleb128 0x4
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 15


 578 011e 77010000 		.4byte	.LASF25
 579 0122 06       		.byte	0x6
 580 0123 3F       		.byte	0x3f
 581 0124 A9000000 		.4byte	0xa9
 582 0128 04       		.uleb128 0x4
 583 0129 AF010000 		.4byte	.LASF26
 584 012d 07       		.byte	0x7
 585 012e 30       		.byte	0x30
 586 012f 33010000 		.4byte	0x133
 587 0133 09       		.uleb128 0x9
 588 0134 04       		.byte	0x4
 589 0135 39010000 		.4byte	0x139
 590 0139 0A       		.uleb128 0xa
 591 013a 4D020000 		.4byte	.LASF62
 592 013e 07       		.uleb128 0x7
 593 013f 5D020000 		.4byte	.LASF28
 594 0143 02       		.byte	0x2
 595 0144 01       		.byte	0x1
 596 0145 33       		.byte	0x33
 597 0146 63010000 		.4byte	0x163
 598 014a 08       		.uleb128 0x8
 599 014b 07030000 		.4byte	.LASF29
 600 014f 01       		.byte	0x1
 601 0150 35       		.byte	0x35
 602 0151 B4000000 		.4byte	0xb4
 603 0155 00       		.byte	0
 604 0156 08       		.uleb128 0x8
 605 0157 F4020000 		.4byte	.LASF30
 606 015b 01       		.byte	0x1
 607 015c 36       		.byte	0x36
 608 015d B4000000 		.4byte	0xb4
 609 0161 01       		.byte	0x1
 610 0162 00       		.byte	0
 611 0163 07       		.uleb128 0x7
 612 0164 01030000 		.4byte	.LASF31
 613 0168 08       		.byte	0x8
 614 0169 01       		.byte	0x1
 615 016a 3B       		.byte	0x3b
 616 016b B8010000 		.4byte	0x1b8
 617 016f 0B       		.uleb128 0xb
 618 0170 53656300 		.ascii	"Sec\000"
 619 0174 01       		.byte	0x1
 620 0175 3D       		.byte	0x3d
 621 0176 B4000000 		.4byte	0xb4
 622 017a 00       		.byte	0
 623 017b 0B       		.uleb128 0xb
 624 017c 4D696E00 		.ascii	"Min\000"
 625 0180 01       		.byte	0x1
 626 0181 3E       		.byte	0x3e
 627 0182 B4000000 		.4byte	0xb4
 628 0186 01       		.byte	0x1
 629 0187 08       		.uleb128 0x8
 630 0188 00010000 		.4byte	.LASF32
 631 018c 01       		.byte	0x1
 632 018d 3F       		.byte	0x3f
 633 018e B4000000 		.4byte	0xb4
 634 0192 02       		.byte	0x2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 16


 635 0193 08       		.uleb128 0x8
 636 0194 B1020000 		.4byte	.LASF33
 637 0198 01       		.byte	0x1
 638 0199 40       		.byte	0x40
 639 019a B4000000 		.4byte	0xb4
 640 019e 03       		.byte	0x3
 641 019f 08       		.uleb128 0x8
 642 01a0 CD010000 		.4byte	.LASF34
 643 01a4 01       		.byte	0x1
 644 01a5 41       		.byte	0x41
 645 01a6 B4000000 		.4byte	0xb4
 646 01aa 04       		.byte	0x4
 647 01ab 08       		.uleb128 0x8
 648 01ac A0010000 		.4byte	.LASF35
 649 01b0 01       		.byte	0x1
 650 01b1 42       		.byte	0x42
 651 01b2 C0000000 		.4byte	0xc0
 652 01b6 06       		.byte	0x6
 653 01b7 00       		.byte	0
 654 01b8 0C       		.uleb128 0xc
 655 01b9 F0010000 		.4byte	.LASF63
 656 01bd 01       		.byte	0x1
 657 01be 51       		.byte	0x51
 658 01bf 00000000 		.4byte	.LFB68
 659 01c3 C0000000 		.4byte	.LFE68-.LFB68
 660 01c7 01       		.uleb128 0x1
 661 01c8 9C       		.byte	0x9c
 662 01c9 0D       		.uleb128 0xd
 663 01ca 00000000 		.4byte	.LASF38
 664 01ce 01       		.byte	0x1
 665 01cf 73       		.byte	0x73
 666 01d0 00000000 		.4byte	.LFB69
 667 01d4 40000000 		.4byte	.LFE69-.LFB69
 668 01d8 01       		.uleb128 0x1
 669 01d9 9C       		.byte	0x9c
 670 01da 05020000 		.4byte	0x205
 671 01de 0E       		.uleb128 0xe
 672 01df 18010000 		.4byte	.LASF36
 673 01e3 01       		.byte	0x1
 674 01e4 75       		.byte	0x75
 675 01e5 05020000 		.4byte	0x205
 676 01e9 02       		.uleb128 0x2
 677 01ea 91       		.byte	0x91
 678 01eb 74       		.sleb128 -12
 679 01ec 0F       		.uleb128 0xf
 680 01ed 12000000 		.4byte	.LBB2
 681 01f1 24000000 		.4byte	.LBE2-.LBB2
 682 01f5 0E       		.uleb128 0xe
 683 01f6 8A030000 		.4byte	.LASF37
 684 01fa 01       		.byte	0x1
 685 01fb 79       		.byte	0x79
 686 01fc B4000000 		.4byte	0xb4
 687 0200 02       		.uleb128 0x2
 688 0201 91       		.byte	0x91
 689 0202 73       		.sleb128 -13
 690 0203 00       		.byte	0
 691 0204 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 17


 692 0205 10       		.uleb128 0x10
 693 0206 1D010000 		.4byte	0x11d
 694 020a 0D       		.uleb128 0xd
 695 020b EB000000 		.4byte	.LASF39
 696 020f 01       		.byte	0x1
 697 0210 83       		.byte	0x83
 698 0211 00000000 		.4byte	.LFB70
 699 0215 CC000000 		.4byte	.LFE70-.LFB70
 700 0219 01       		.uleb128 0x1
 701 021a 9C       		.byte	0x9c
 702 021b 4A020000 		.4byte	0x24a
 703 021f 0E       		.uleb128 0xe
 704 0220 18010000 		.4byte	.LASF36
 705 0224 01       		.byte	0x1
 706 0225 87       		.byte	0x87
 707 0226 05020000 		.4byte	0x205
 708 022a 02       		.uleb128 0x2
 709 022b 91       		.byte	0x91
 710 022c 74       		.sleb128 -12
 711 022d 0E       		.uleb128 0xe
 712 022e 49010000 		.4byte	.LASF40
 713 0232 01       		.byte	0x1
 714 0233 88       		.byte	0x88
 715 0234 05020000 		.4byte	0x205
 716 0238 02       		.uleb128 0x2
 717 0239 91       		.byte	0x91
 718 023a 70       		.sleb128 -16
 719 023b 0E       		.uleb128 0xe
 720 023c 93010000 		.4byte	.LASF41
 721 0240 01       		.byte	0x1
 722 0241 89       		.byte	0x89
 723 0242 4A020000 		.4byte	0x24a
 724 0246 02       		.uleb128 0x2
 725 0247 91       		.byte	0x91
 726 0248 6C       		.sleb128 -20
 727 0249 00       		.byte	0
 728 024a 11       		.uleb128 0x11
 729 024b DA000000 		.4byte	0xda
 730 024f 5A020000 		.4byte	0x25a
 731 0253 12       		.uleb128 0x12
 732 0254 E6000000 		.4byte	0xe6
 733 0258 02       		.byte	0x2
 734 0259 00       		.byte	0
 735 025a 0D       		.uleb128 0xd
 736 025b BD010000 		.4byte	.LASF42
 737 025f 01       		.byte	0x1
 738 0260 BB       		.byte	0xbb
 739 0261 00000000 		.4byte	.LFB71
 740 0265 58000000 		.4byte	.LFE71-.LFB71
 741 0269 01       		.uleb128 0x1
 742 026a 9C       		.byte	0x9c
 743 026b 8C020000 		.4byte	0x28c
 744 026f 0E       		.uleb128 0xe
 745 0270 12000000 		.4byte	.LASF43
 746 0274 01       		.byte	0x1
 747 0275 BC       		.byte	0xbc
 748 0276 8C020000 		.4byte	0x28c
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 18


 749 027a 02       		.uleb128 0x2
 750 027b 91       		.byte	0x91
 751 027c 77       		.sleb128 -9
 752 027d 0E       		.uleb128 0xe
 753 027e 2B000000 		.4byte	.LASF44
 754 0282 01       		.byte	0x1
 755 0283 BD       		.byte	0xbd
 756 0284 8C020000 		.4byte	0x28c
 757 0288 02       		.uleb128 0x2
 758 0289 91       		.byte	0x91
 759 028a 76       		.sleb128 -10
 760 028b 00       		.byte	0
 761 028c 03       		.uleb128 0x3
 762 028d 01       		.byte	0x1
 763 028e 02       		.byte	0x2
 764 028f 94020000 		.4byte	.LASF45
 765 0293 11       		.uleb128 0x11
 766 0294 ED000000 		.4byte	0xed
 767 0298 A3020000 		.4byte	0x2a3
 768 029c 12       		.uleb128 0x12
 769 029d E6000000 		.4byte	0xe6
 770 02a1 07       		.byte	0x7
 771 02a2 00       		.byte	0
 772 02a3 13       		.uleb128 0x13
 773 02a4 45000000 		.4byte	.LASF46
 774 02a8 05       		.byte	0x5
 775 02a9 34       		.byte	0x34
 776 02aa 93020000 		.4byte	0x293
 777 02ae 05       		.uleb128 0x5
 778 02af 03       		.byte	0x3
 779 02b0 00000000 		.4byte	DS18x8_Sensor
 780 02b4 13       		.uleb128 0x13
 781 02b5 94030000 		.4byte	.LASF47
 782 02b9 05       		.byte	0x5
 783 02ba 39       		.byte	0x39
 784 02bb E1000000 		.4byte	0xe1
 785 02bf 05       		.uleb128 0x5
 786 02c0 03       		.byte	0x3
 787 02c1 00000000 		.4byte	DS18x8_DataReady
 788 02c5 14       		.uleb128 0x14
 789 02c6 7D030000 		.4byte	.LASF48
 790 02ca 08       		.byte	0x8
 791 02cb 1207     		.2byte	0x712
 792 02cd D1020000 		.4byte	0x2d1
 793 02d1 06       		.uleb128 0x6
 794 02d2 9E000000 		.4byte	0x9e
 795 02d6 13       		.uleb128 0x13
 796 02d7 21010000 		.4byte	.LASF49
 797 02db 01       		.byte	0x1
 798 02dc 2B       		.byte	0x2b
 799 02dd B4000000 		.4byte	0xb4
 800 02e1 05       		.uleb128 0x5
 801 02e2 03       		.byte	0x3
 802 02e3 00000000 		.4byte	Light
 803 02e7 13       		.uleb128 0x13
 804 02e8 05010000 		.4byte	.LASF50
 805 02ec 01       		.byte	0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 19


 806 02ed 2C       		.byte	0x2c
 807 02ee 8C020000 		.4byte	0x28c
 808 02f2 05       		.uleb128 0x5
 809 02f3 03       		.byte	0x3
 810 02f4 00000000 		.4byte	bLEDcmd
 811 02f8 13       		.uleb128 0x13
 812 02f9 71030000 		.4byte	.LASF51
 813 02fd 01       		.byte	0x1
 814 02fe 2D       		.byte	0x2d
 815 02ff 8C020000 		.4byte	0x28c
 816 0303 05       		.uleb128 0x5
 817 0304 03       		.byte	0x3
 818 0305 00000000 		.4byte	bAlarmState
 819 0309 13       		.uleb128 0x13
 820 030a D5020000 		.4byte	.LASF52
 821 030e 01       		.byte	0x1
 822 030f 2E       		.byte	0x2e
 823 0310 8C020000 		.4byte	0x28c
 824 0314 05       		.uleb128 0x5
 825 0315 03       		.byte	0x3
 826 0316 00000000 		.4byte	bAlarmACK
 827 031a 13       		.uleb128 0x13
 828 031b 53000000 		.4byte	.LASF53
 829 031f 01       		.byte	0x1
 830 0320 2F       		.byte	0x2f
 831 0321 B4000000 		.4byte	0xb4
 832 0325 05       		.uleb128 0x5
 833 0326 03       		.byte	0x3
 834 0327 00000000 		.4byte	ClockAddr
 835 032b 13       		.uleb128 0x13
 836 032c 0D010000 		.4byte	.LASF54
 837 0330 01       		.byte	0x1
 838 0331 38       		.byte	0x38
 839 0332 3E010000 		.4byte	0x13e
 840 0336 05       		.uleb128 0x5
 841 0337 03       		.byte	0x3
 842 0338 00000000 		.4byte	LightCycle
 843 033c 13       		.uleb128 0x13
 844 033d 57010000 		.4byte	.LASF55
 845 0341 01       		.byte	0x1
 846 0342 46       		.byte	0x46
 847 0343 63010000 		.4byte	0x163
 848 0347 05       		.uleb128 0x5
 849 0348 03       		.byte	0x3
 850 0349 00000000 		.4byte	CurrentTime
 851 034d 13       		.uleb128 0x13
 852 034e DF010000 		.4byte	.LASF56
 853 0352 01       		.byte	0x1
 854 0353 49       		.byte	0x49
 855 0354 28010000 		.4byte	0x128
 856 0358 05       		.uleb128 0x5
 857 0359 03       		.byte	0x3
 858 035a 00000000 		.4byte	xQueueLightValue
 859 035e 13       		.uleb128 0x13
 860 035f 2E010000 		.4byte	.LASF57
 861 0363 01       		.byte	0x1
 862 0364 4C       		.byte	0x4c
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 20


 863 0365 28010000 		.4byte	0x128
 864 0369 05       		.uleb128 0x5
 865 036a 03       		.byte	0x3
 866 036b 00000000 		.4byte	xQueueLEDCmd
 867 036f 11       		.uleb128 0x11
 868 0370 28010000 		.4byte	0x128
 869 0374 7F030000 		.4byte	0x37f
 870 0378 12       		.uleb128 0x12
 871 0379 E6000000 		.4byte	0xe6
 872 037d 02       		.byte	0x2
 873 037e 00       		.byte	0
 874 037f 13       		.uleb128 0x13
 875 0380 7D020000 		.4byte	.LASF58
 876 0384 01       		.byte	0x1
 877 0385 4F       		.byte	0x4f
 878 0386 6F030000 		.4byte	0x36f
 879 038a 05       		.uleb128 0x5
 880 038b 03       		.byte	0x3
 881 038c 00000000 		.4byte	xQueueCurrentTime
 882 0390 00       		.byte	0
 883              		.section	.debug_abbrev,"",%progbits
 884              	.Ldebug_abbrev0:
 885 0000 01       		.uleb128 0x1
 886 0001 11       		.uleb128 0x11
 887 0002 01       		.byte	0x1
 888 0003 25       		.uleb128 0x25
 889 0004 0E       		.uleb128 0xe
 890 0005 13       		.uleb128 0x13
 891 0006 0B       		.uleb128 0xb
 892 0007 03       		.uleb128 0x3
 893 0008 0E       		.uleb128 0xe
 894 0009 1B       		.uleb128 0x1b
 895 000a 0E       		.uleb128 0xe
 896 000b 55       		.uleb128 0x55
 897 000c 17       		.uleb128 0x17
 898 000d 11       		.uleb128 0x11
 899 000e 01       		.uleb128 0x1
 900 000f 10       		.uleb128 0x10
 901 0010 17       		.uleb128 0x17
 902 0011 00       		.byte	0
 903 0012 00       		.byte	0
 904 0013 02       		.uleb128 0x2
 905 0014 24       		.uleb128 0x24
 906 0015 00       		.byte	0
 907 0016 0B       		.uleb128 0xb
 908 0017 0B       		.uleb128 0xb
 909 0018 3E       		.uleb128 0x3e
 910 0019 0B       		.uleb128 0xb
 911 001a 03       		.uleb128 0x3
 912 001b 08       		.uleb128 0x8
 913 001c 00       		.byte	0
 914 001d 00       		.byte	0
 915 001e 03       		.uleb128 0x3
 916 001f 24       		.uleb128 0x24
 917 0020 00       		.byte	0
 918 0021 0B       		.uleb128 0xb
 919 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 21


 920 0023 3E       		.uleb128 0x3e
 921 0024 0B       		.uleb128 0xb
 922 0025 03       		.uleb128 0x3
 923 0026 0E       		.uleb128 0xe
 924 0027 00       		.byte	0
 925 0028 00       		.byte	0
 926 0029 04       		.uleb128 0x4
 927 002a 16       		.uleb128 0x16
 928 002b 00       		.byte	0
 929 002c 03       		.uleb128 0x3
 930 002d 0E       		.uleb128 0xe
 931 002e 3A       		.uleb128 0x3a
 932 002f 0B       		.uleb128 0xb
 933 0030 3B       		.uleb128 0x3b
 934 0031 0B       		.uleb128 0xb
 935 0032 49       		.uleb128 0x49
 936 0033 13       		.uleb128 0x13
 937 0034 00       		.byte	0
 938 0035 00       		.byte	0
 939 0036 05       		.uleb128 0x5
 940 0037 16       		.uleb128 0x16
 941 0038 00       		.byte	0
 942 0039 03       		.uleb128 0x3
 943 003a 0E       		.uleb128 0xe
 944 003b 3A       		.uleb128 0x3a
 945 003c 0B       		.uleb128 0xb
 946 003d 3B       		.uleb128 0x3b
 947 003e 05       		.uleb128 0x5
 948 003f 49       		.uleb128 0x49
 949 0040 13       		.uleb128 0x13
 950 0041 00       		.byte	0
 951 0042 00       		.byte	0
 952 0043 06       		.uleb128 0x6
 953 0044 35       		.uleb128 0x35
 954 0045 00       		.byte	0
 955 0046 49       		.uleb128 0x49
 956 0047 13       		.uleb128 0x13
 957 0048 00       		.byte	0
 958 0049 00       		.byte	0
 959 004a 07       		.uleb128 0x7
 960 004b 13       		.uleb128 0x13
 961 004c 01       		.byte	0x1
 962 004d 03       		.uleb128 0x3
 963 004e 0E       		.uleb128 0xe
 964 004f 0B       		.uleb128 0xb
 965 0050 0B       		.uleb128 0xb
 966 0051 3A       		.uleb128 0x3a
 967 0052 0B       		.uleb128 0xb
 968 0053 3B       		.uleb128 0x3b
 969 0054 0B       		.uleb128 0xb
 970 0055 01       		.uleb128 0x1
 971 0056 13       		.uleb128 0x13
 972 0057 00       		.byte	0
 973 0058 00       		.byte	0
 974 0059 08       		.uleb128 0x8
 975 005a 0D       		.uleb128 0xd
 976 005b 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 22


 977 005c 03       		.uleb128 0x3
 978 005d 0E       		.uleb128 0xe
 979 005e 3A       		.uleb128 0x3a
 980 005f 0B       		.uleb128 0xb
 981 0060 3B       		.uleb128 0x3b
 982 0061 0B       		.uleb128 0xb
 983 0062 49       		.uleb128 0x49
 984 0063 13       		.uleb128 0x13
 985 0064 38       		.uleb128 0x38
 986 0065 0B       		.uleb128 0xb
 987 0066 00       		.byte	0
 988 0067 00       		.byte	0
 989 0068 09       		.uleb128 0x9
 990 0069 0F       		.uleb128 0xf
 991 006a 00       		.byte	0
 992 006b 0B       		.uleb128 0xb
 993 006c 0B       		.uleb128 0xb
 994 006d 49       		.uleb128 0x49
 995 006e 13       		.uleb128 0x13
 996 006f 00       		.byte	0
 997 0070 00       		.byte	0
 998 0071 0A       		.uleb128 0xa
 999 0072 13       		.uleb128 0x13
 1000 0073 00       		.byte	0
 1001 0074 03       		.uleb128 0x3
 1002 0075 0E       		.uleb128 0xe
 1003 0076 3C       		.uleb128 0x3c
 1004 0077 19       		.uleb128 0x19
 1005 0078 00       		.byte	0
 1006 0079 00       		.byte	0
 1007 007a 0B       		.uleb128 0xb
 1008 007b 0D       		.uleb128 0xd
 1009 007c 00       		.byte	0
 1010 007d 03       		.uleb128 0x3
 1011 007e 08       		.uleb128 0x8
 1012 007f 3A       		.uleb128 0x3a
 1013 0080 0B       		.uleb128 0xb
 1014 0081 3B       		.uleb128 0x3b
 1015 0082 0B       		.uleb128 0xb
 1016 0083 49       		.uleb128 0x49
 1017 0084 13       		.uleb128 0x13
 1018 0085 38       		.uleb128 0x38
 1019 0086 0B       		.uleb128 0xb
 1020 0087 00       		.byte	0
 1021 0088 00       		.byte	0
 1022 0089 0C       		.uleb128 0xc
 1023 008a 2E       		.uleb128 0x2e
 1024 008b 00       		.byte	0
 1025 008c 3F       		.uleb128 0x3f
 1026 008d 19       		.uleb128 0x19
 1027 008e 03       		.uleb128 0x3
 1028 008f 0E       		.uleb128 0xe
 1029 0090 3A       		.uleb128 0x3a
 1030 0091 0B       		.uleb128 0xb
 1031 0092 3B       		.uleb128 0x3b
 1032 0093 0B       		.uleb128 0xb
 1033 0094 11       		.uleb128 0x11
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 23


 1034 0095 01       		.uleb128 0x1
 1035 0096 12       		.uleb128 0x12
 1036 0097 06       		.uleb128 0x6
 1037 0098 40       		.uleb128 0x40
 1038 0099 18       		.uleb128 0x18
 1039 009a 9642     		.uleb128 0x2116
 1040 009c 19       		.uleb128 0x19
 1041 009d 00       		.byte	0
 1042 009e 00       		.byte	0
 1043 009f 0D       		.uleb128 0xd
 1044 00a0 2E       		.uleb128 0x2e
 1045 00a1 01       		.byte	0x1
 1046 00a2 3F       		.uleb128 0x3f
 1047 00a3 19       		.uleb128 0x19
 1048 00a4 03       		.uleb128 0x3
 1049 00a5 0E       		.uleb128 0xe
 1050 00a6 3A       		.uleb128 0x3a
 1051 00a7 0B       		.uleb128 0xb
 1052 00a8 3B       		.uleb128 0x3b
 1053 00a9 0B       		.uleb128 0xb
 1054 00aa 11       		.uleb128 0x11
 1055 00ab 01       		.uleb128 0x1
 1056 00ac 12       		.uleb128 0x12
 1057 00ad 06       		.uleb128 0x6
 1058 00ae 40       		.uleb128 0x40
 1059 00af 18       		.uleb128 0x18
 1060 00b0 9642     		.uleb128 0x2116
 1061 00b2 19       		.uleb128 0x19
 1062 00b3 01       		.uleb128 0x1
 1063 00b4 13       		.uleb128 0x13
 1064 00b5 00       		.byte	0
 1065 00b6 00       		.byte	0
 1066 00b7 0E       		.uleb128 0xe
 1067 00b8 34       		.uleb128 0x34
 1068 00b9 00       		.byte	0
 1069 00ba 03       		.uleb128 0x3
 1070 00bb 0E       		.uleb128 0xe
 1071 00bc 3A       		.uleb128 0x3a
 1072 00bd 0B       		.uleb128 0xb
 1073 00be 3B       		.uleb128 0x3b
 1074 00bf 0B       		.uleb128 0xb
 1075 00c0 49       		.uleb128 0x49
 1076 00c1 13       		.uleb128 0x13
 1077 00c2 02       		.uleb128 0x2
 1078 00c3 18       		.uleb128 0x18
 1079 00c4 00       		.byte	0
 1080 00c5 00       		.byte	0
 1081 00c6 0F       		.uleb128 0xf
 1082 00c7 0B       		.uleb128 0xb
 1083 00c8 01       		.byte	0x1
 1084 00c9 11       		.uleb128 0x11
 1085 00ca 01       		.uleb128 0x1
 1086 00cb 12       		.uleb128 0x12
 1087 00cc 06       		.uleb128 0x6
 1088 00cd 00       		.byte	0
 1089 00ce 00       		.byte	0
 1090 00cf 10       		.uleb128 0x10
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 24


 1091 00d0 26       		.uleb128 0x26
 1092 00d1 00       		.byte	0
 1093 00d2 49       		.uleb128 0x49
 1094 00d3 13       		.uleb128 0x13
 1095 00d4 00       		.byte	0
 1096 00d5 00       		.byte	0
 1097 00d6 11       		.uleb128 0x11
 1098 00d7 01       		.uleb128 0x1
 1099 00d8 01       		.byte	0x1
 1100 00d9 49       		.uleb128 0x49
 1101 00da 13       		.uleb128 0x13
 1102 00db 01       		.uleb128 0x1
 1103 00dc 13       		.uleb128 0x13
 1104 00dd 00       		.byte	0
 1105 00de 00       		.byte	0
 1106 00df 12       		.uleb128 0x12
 1107 00e0 21       		.uleb128 0x21
 1108 00e1 00       		.byte	0
 1109 00e2 49       		.uleb128 0x49
 1110 00e3 13       		.uleb128 0x13
 1111 00e4 2F       		.uleb128 0x2f
 1112 00e5 0B       		.uleb128 0xb
 1113 00e6 00       		.byte	0
 1114 00e7 00       		.byte	0
 1115 00e8 13       		.uleb128 0x13
 1116 00e9 34       		.uleb128 0x34
 1117 00ea 00       		.byte	0
 1118 00eb 03       		.uleb128 0x3
 1119 00ec 0E       		.uleb128 0xe
 1120 00ed 3A       		.uleb128 0x3a
 1121 00ee 0B       		.uleb128 0xb
 1122 00ef 3B       		.uleb128 0x3b
 1123 00f0 0B       		.uleb128 0xb
 1124 00f1 49       		.uleb128 0x49
 1125 00f2 13       		.uleb128 0x13
 1126 00f3 3F       		.uleb128 0x3f
 1127 00f4 19       		.uleb128 0x19
 1128 00f5 02       		.uleb128 0x2
 1129 00f6 18       		.uleb128 0x18
 1130 00f7 00       		.byte	0
 1131 00f8 00       		.byte	0
 1132 00f9 14       		.uleb128 0x14
 1133 00fa 34       		.uleb128 0x34
 1134 00fb 00       		.byte	0
 1135 00fc 03       		.uleb128 0x3
 1136 00fd 0E       		.uleb128 0xe
 1137 00fe 3A       		.uleb128 0x3a
 1138 00ff 0B       		.uleb128 0xb
 1139 0100 3B       		.uleb128 0x3b
 1140 0101 05       		.uleb128 0x5
 1141 0102 49       		.uleb128 0x49
 1142 0103 13       		.uleb128 0x13
 1143 0104 3F       		.uleb128 0x3f
 1144 0105 19       		.uleb128 0x19
 1145 0106 3C       		.uleb128 0x3c
 1146 0107 19       		.uleb128 0x19
 1147 0108 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 25


 1148 0109 00       		.byte	0
 1149 010a 00       		.byte	0
 1150              		.section	.debug_aranges,"",%progbits
 1151 0000 34000000 		.4byte	0x34
 1152 0004 0200     		.2byte	0x2
 1153 0006 00000000 		.4byte	.Ldebug_info0
 1154 000a 04       		.byte	0x4
 1155 000b 00       		.byte	0
 1156 000c 0000     		.2byte	0
 1157 000e 0000     		.2byte	0
 1158 0010 00000000 		.4byte	.LFB68
 1159 0014 C0000000 		.4byte	.LFE68-.LFB68
 1160 0018 00000000 		.4byte	.LFB69
 1161 001c 40000000 		.4byte	.LFE69-.LFB69
 1162 0020 00000000 		.4byte	.LFB70
 1163 0024 CC000000 		.4byte	.LFE70-.LFB70
 1164 0028 00000000 		.4byte	.LFB71
 1165 002c 58000000 		.4byte	.LFE71-.LFB71
 1166 0030 00000000 		.4byte	0
 1167 0034 00000000 		.4byte	0
 1168              		.section	.debug_ranges,"",%progbits
 1169              	.Ldebug_ranges0:
 1170 0000 00000000 		.4byte	.LFB68
 1171 0004 C0000000 		.4byte	.LFE68
 1172 0008 00000000 		.4byte	.LFB69
 1173 000c 40000000 		.4byte	.LFE69
 1174 0010 00000000 		.4byte	.LFB70
 1175 0014 CC000000 		.4byte	.LFE70
 1176 0018 00000000 		.4byte	.LFB71
 1177 001c 58000000 		.4byte	.LFE71
 1178 0020 00000000 		.4byte	0
 1179 0024 00000000 		.4byte	0
 1180              		.section	.debug_line,"",%progbits
 1181              	.Ldebug_line0:
 1182 0000 3F020000 		.section	.debug_str,"MS",%progbits,1
 1182      0200A201 
 1182      00000201 
 1182      FB0E0D00 
 1182      01010101 
 1183              	.LASF38:
 1184 0000 76546173 		.ascii	"vTaskLightMeasure\000"
 1184      6B4C6967 
 1184      68744D65 
 1184      61737572 
 1184      6500
 1185              	.LASF43:
 1186 0012 624C4544 		.ascii	"bLEDcontrolcmd\000"
 1186      636F6E74 
 1186      726F6C63 
 1186      6D6400
 1187              	.LASF5:
 1188 0021 73686F72 		.ascii	"short int\000"
 1188      7420696E 
 1188      7400
 1189              	.LASF44:
 1190 002b 624C4544 		.ascii	"bLEDcontrolstate\000"
 1190      636F6E74 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 26


 1190      726F6C73 
 1190      74617465 
 1190      00
 1191              	.LASF21:
 1192 003c 73697A65 		.ascii	"sizetype\000"
 1192      74797065 
 1192      00
 1193              	.LASF46:
 1194 0045 44533138 		.ascii	"DS18x8_Sensor\000"
 1194      78385F53 
 1194      656E736F 
 1194      7200
 1195              	.LASF53:
 1196 0053 436C6F63 		.ascii	"ClockAddr\000"
 1196      6B416464 
 1196      7200
 1197              	.LASF59:
 1198 005d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1198      43313120 
 1198      352E342E 
 1198      31203230 
 1198      31363036 
 1199 0090 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1199      20726576 
 1199      6973696F 
 1199      6E203233 
 1199      37373135 
 1200 00c3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1200      66756E63 
 1200      74696F6E 
 1200      2D736563 
 1200      74696F6E 
 1201              	.LASF39:
 1202 00eb 76546173 		.ascii	"vTaskLightController\000"
 1202      6B4C6967 
 1202      6874436F 
 1202      6E74726F 
 1202      6C6C6572 
 1203              	.LASF32:
 1204 0100 486F7572 		.ascii	"Hour\000"
 1204      00
 1205              	.LASF50:
 1206 0105 624C4544 		.ascii	"bLEDcmd\000"
 1206      636D6400 
 1207              	.LASF54:
 1208 010d 4C696768 		.ascii	"LightCycle\000"
 1208      74437963 
 1208      6C6500
 1209              	.LASF36:
 1210 0118 7844656C 		.ascii	"xDelayms\000"
 1210      61796D73 
 1210      00
 1211              	.LASF49:
 1212 0121 4C696768 		.ascii	"Light\000"
 1212      7400
 1213              	.LASF17:
 1214 0127 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 27


 1214      313600
 1215              	.LASF57:
 1216 012e 78517565 		.ascii	"xQueueLEDCmd\000"
 1216      75654C45 
 1216      44436D64 
 1216      00
 1217              	.LASF13:
 1218 013b 75696E74 		.ascii	"uint8_t\000"
 1218      385F7400 
 1219              	.LASF16:
 1220 0143 75696E74 		.ascii	"uint8\000"
 1220      3800
 1221              	.LASF40:
 1222 0149 7853686F 		.ascii	"xShortDelayms\000"
 1222      72744465 
 1222      6C61796D 
 1222      7300
 1223              	.LASF55:
 1224 0157 43757272 		.ascii	"CurrentTime\000"
 1224      656E7454 
 1224      696D6500 
 1225              	.LASF18:
 1226 0163 666C6F61 		.ascii	"float\000"
 1226      7400
 1227              	.LASF1:
 1228 0169 6C6F6E67 		.ascii	"long long int\000"
 1228      206C6F6E 
 1228      6720696E 
 1228      7400
 1229              	.LASF25:
 1230 0177 5469636B 		.ascii	"TickType_t\000"
 1230      54797065 
 1230      5F7400
 1231              	.LASF60:
 1232 0182 4C696768 		.ascii	"Light.c\000"
 1232      742E6300 
 1233              	.LASF9:
 1234 018a 6C6F6E67 		.ascii	"long int\000"
 1234      20696E74 
 1234      00
 1235              	.LASF41:
 1236 0193 41726475 		.ascii	"ArduinoClock\000"
 1236      696E6F43 
 1236      6C6F636B 
 1236      00
 1237              	.LASF35:
 1238 01a0 59656172 		.ascii	"Year\000"
 1238      00
 1239              	.LASF7:
 1240 01a5 5F5F7569 		.ascii	"__uint8_t\000"
 1240      6E74385F 
 1240      7400
 1241              	.LASF26:
 1242 01af 51756575 		.ascii	"QueueHandle_t\000"
 1242      6548616E 
 1242      646C655F 
 1242      7400
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 28


 1243              	.LASF42:
 1244 01bd 76546173 		.ascii	"vTaskLEDcontrol\000"
 1244      6B4C4544 
 1244      636F6E74 
 1244      726F6C00 
 1245              	.LASF34:
 1246 01cd 4D6F6E74 		.ascii	"Month\000"
 1246      6800
 1247              	.LASF2:
 1248 01d3 6C6F6E67 		.ascii	"long double\000"
 1248      20646F75 
 1248      626C6500 
 1249              	.LASF56:
 1250 01df 78517565 		.ascii	"xQueueLightValue\000"
 1250      75654C69 
 1250      67687456 
 1250      616C7565 
 1250      00
 1251              	.LASF63:
 1252 01f0 764C6967 		.ascii	"vLightInit\000"
 1252      6874496E 
 1252      697400
 1253              	.LASF4:
 1254 01fb 756E7369 		.ascii	"unsigned char\000"
 1254      676E6564 
 1254      20636861 
 1254      7200
 1255              	.LASF3:
 1256 0209 7369676E 		.ascii	"signed char\000"
 1256      65642063 
 1256      68617200 
 1257              	.LASF12:
 1258 0215 6C6F6E67 		.ascii	"long long unsigned int\000"
 1258      206C6F6E 
 1258      6720756E 
 1258      7369676E 
 1258      65642069 
 1259              	.LASF15:
 1260 022c 75696E74 		.ascii	"uint32_t\000"
 1260      33325F74 
 1260      00
 1261              	.LASF0:
 1262 0235 756E7369 		.ascii	"unsigned int\000"
 1262      676E6564 
 1262      20696E74 
 1262      00
 1263              	.LASF24:
 1264 0242 42617365 		.ascii	"BaseType_t\000"
 1264      54797065 
 1264      5F7400
 1265              	.LASF62:
 1266 024d 51756575 		.ascii	"QueueDefinition\000"
 1266      65446566 
 1266      696E6974 
 1266      696F6E00 
 1267              	.LASF28:
 1268 025d 54696D65 		.ascii	"TimeInterval\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 29


 1268      496E7465 
 1268      7276616C 
 1268      00
 1269              	.LASF6:
 1270 026a 73686F72 		.ascii	"short unsigned int\000"
 1270      7420756E 
 1270      7369676E 
 1270      65642069 
 1270      6E7400
 1271              	.LASF58:
 1272 027d 78517565 		.ascii	"xQueueCurrentTime\000"
 1272      75654375 
 1272      7272656E 
 1272      7454696D 
 1272      6500
 1273              	.LASF20:
 1274 028f 63686172 		.ascii	"char\000"
 1274      00
 1275              	.LASF45:
 1276 0294 5F426F6F 		.ascii	"_Bool\000"
 1276      6C00
 1277              	.LASF14:
 1278 029a 696E7433 		.ascii	"int32_t\000"
 1278      325F7400 
 1279              	.LASF27:
 1280 02a2 44533138 		.ascii	"DS18x8_TSensor\000"
 1280      78385F54 
 1280      53656E73 
 1280      6F7200
 1281              	.LASF33:
 1282 02b1 4461794F 		.ascii	"DayOfMonth\000"
 1282      664D6F6E 
 1282      746800
 1283              	.LASF11:
 1284 02bc 6C6F6E67 		.ascii	"long unsigned int\000"
 1284      20756E73 
 1284      69676E65 
 1284      6420696E 
 1284      7400
 1285              	.LASF19:
 1286 02ce 646F7562 		.ascii	"double\000"
 1286      6C6500
 1287              	.LASF52:
 1288 02d5 62416C61 		.ascii	"bAlarmACK\000"
 1288      726D4143 
 1288      4B00
 1289              	.LASF10:
 1290 02df 5F5F7569 		.ascii	"__uint32_t\000"
 1290      6E743332 
 1290      5F7400
 1291              	.LASF8:
 1292 02ea 5F5F696E 		.ascii	"__int32_t\000"
 1292      7433325F 
 1292      7400
 1293              	.LASF30:
 1294 02f4 53746F70 		.ascii	"Stop\000"
 1294      00
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccYNBd4C.s 			page 30


 1295              	.LASF23:
 1296 02f9 70726573 		.ascii	"present\000"
 1296      656E7400 
 1297              	.LASF31:
 1298 0301 436C6F63 		.ascii	"Clock\000"
 1298      6B00
 1299              	.LASF29:
 1300 0307 53746172 		.ascii	"Start\000"
 1300      7400
 1301              	.LASF22:
 1302 030d 54656D70 		.ascii	"Temperature\000"
 1302      65726174 
 1302      75726500 
 1303              	.LASF61:
 1304 0319 433A5C55 		.ascii	"C:\\Users\\krist\\Documents\\GitHub\\P4_Vertical_fa"
 1304      73657273 
 1304      5C6B7269 
 1304      73745C44 
 1304      6F63756D 
 1305 0347 726D5C52 		.ascii	"rm\\RTOS_TEMPLATE-master\\PlanteModul.cydsn\000"
 1305      544F535F 
 1305      54454D50 
 1305      4C415445 
 1305      2D6D6173 
 1306              	.LASF51:
 1307 0371 62416C61 		.ascii	"bAlarmState\000"
 1307      726D5374 
 1307      61746500 
 1308              	.LASF48:
 1309 037d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1309      52784275 
 1309      66666572 
 1309      00
 1310              	.LASF37:
 1311 038a 4C696768 		.ascii	"LightRead\000"
 1311      74526561 
 1311      6400
 1312              	.LASF47:
 1313 0394 44533138 		.ascii	"DS18x8_DataReady\000"
 1313      78385F44 
 1313      61746152 
 1313      65616479 
 1313      00
 1314              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
