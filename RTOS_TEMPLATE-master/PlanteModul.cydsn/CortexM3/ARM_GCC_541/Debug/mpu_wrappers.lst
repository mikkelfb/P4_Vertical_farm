ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"mpu_wrappers.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	DS18x8_Sensor,32,4
  20              		.comm	DS18x8_DataReady,1,1
  21              		.section	.text.xPortRaisePrivilege,"ax",%progbits
  22              		.align	2
  23              		.global	xPortRaisePrivilege
  24              		.thumb
  25              		.thumb_func
  26              		.type	xPortRaisePrivilege, %function
  27              	xPortRaisePrivilege:
  28              	.LFB68:
  29              		.file 1 "Source\\portable\\Common\\mpu_wrappers.c"
   1:Source\portable\Common/mpu_wrappers.c **** /*
   2:Source\portable\Common/mpu_wrappers.c ****  * FreeRTOS Kernel V10.3.1
   3:Source\portable\Common/mpu_wrappers.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Source\portable\Common/mpu_wrappers.c ****  *
   5:Source\portable\Common/mpu_wrappers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Source\portable\Common/mpu_wrappers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Source\portable\Common/mpu_wrappers.c ****  * the Software without restriction, including without limitation the rights to
   8:Source\portable\Common/mpu_wrappers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Source\portable\Common/mpu_wrappers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Source\portable\Common/mpu_wrappers.c ****  * subject to the following conditions:
  11:Source\portable\Common/mpu_wrappers.c ****  *
  12:Source\portable\Common/mpu_wrappers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Source\portable\Common/mpu_wrappers.c ****  * copies or substantial portions of the Software.
  14:Source\portable\Common/mpu_wrappers.c ****  *
  15:Source\portable\Common/mpu_wrappers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Source\portable\Common/mpu_wrappers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Source\portable\Common/mpu_wrappers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Source\portable\Common/mpu_wrappers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Source\portable\Common/mpu_wrappers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Source\portable\Common/mpu_wrappers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Source\portable\Common/mpu_wrappers.c ****  *
  22:Source\portable\Common/mpu_wrappers.c ****  * http://www.FreeRTOS.org
  23:Source\portable\Common/mpu_wrappers.c ****  * http://aws.amazon.com/freertos
  24:Source\portable\Common/mpu_wrappers.c ****  *
  25:Source\portable\Common/mpu_wrappers.c ****  * 1 tab == 4 spaces!
  26:Source\portable\Common/mpu_wrappers.c ****  */
  27:Source\portable\Common/mpu_wrappers.c **** 
  28:Source\portable\Common/mpu_wrappers.c **** /*
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 2


  29:Source\portable\Common/mpu_wrappers.c ****  * Implementation of the wrapper functions used to raise the processor privilege
  30:Source\portable\Common/mpu_wrappers.c ****  * before calling a standard FreeRTOS API function.
  31:Source\portable\Common/mpu_wrappers.c ****  */
  32:Source\portable\Common/mpu_wrappers.c **** 
  33:Source\portable\Common/mpu_wrappers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  34:Source\portable\Common/mpu_wrappers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  35:Source\portable\Common/mpu_wrappers.c **** task.h is included from an application file. */
  36:Source\portable\Common/mpu_wrappers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  37:Source\portable\Common/mpu_wrappers.c **** 
  38:Source\portable\Common/mpu_wrappers.c **** /* Scheduler includes. */
  39:Source\portable\Common/mpu_wrappers.c **** #include "FreeRTOS.h"
  40:Source\portable\Common/mpu_wrappers.c **** #include "task.h"
  41:Source\portable\Common/mpu_wrappers.c **** #include "queue.h"
  42:Source\portable\Common/mpu_wrappers.c **** #include "timers.h"
  43:Source\portable\Common/mpu_wrappers.c **** #include "event_groups.h"
  44:Source\portable\Common/mpu_wrappers.c **** #include "stream_buffer.h"
  45:Source\portable\Common/mpu_wrappers.c **** #include "mpu_prototypes.h"
  46:Source\portable\Common/mpu_wrappers.c **** 
  47:Source\portable\Common/mpu_wrappers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  48:Source\portable\Common/mpu_wrappers.c **** 
  49:Source\portable\Common/mpu_wrappers.c **** /**
  50:Source\portable\Common/mpu_wrappers.c ****  * @brief Calls the port specific code to raise the privilege.
  51:Source\portable\Common/mpu_wrappers.c ****  *
  52:Source\portable\Common/mpu_wrappers.c ****  * @return pdFALSE if privilege was raised, pdTRUE otherwise.
  53:Source\portable\Common/mpu_wrappers.c ****  */
  54:Source\portable\Common/mpu_wrappers.c **** BaseType_t xPortRaisePrivilege( void ) FREERTOS_SYSTEM_CALL;
  55:Source\portable\Common/mpu_wrappers.c **** 
  56:Source\portable\Common/mpu_wrappers.c **** /**
  57:Source\portable\Common/mpu_wrappers.c ****  * @brief If xRunningPrivileged is not pdTRUE, calls the port specific
  58:Source\portable\Common/mpu_wrappers.c ****  * code to reset the privilege, otherwise does nothing.
  59:Source\portable\Common/mpu_wrappers.c ****  */
  60:Source\portable\Common/mpu_wrappers.c **** void vPortResetPrivilege( BaseType_t xRunningPrivileged );
  61:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
  62:Source\portable\Common/mpu_wrappers.c **** 
  63:Source\portable\Common/mpu_wrappers.c **** BaseType_t xPortRaisePrivilege( void ) /* FREERTOS_SYSTEM_CALL */
  64:Source\portable\Common/mpu_wrappers.c **** {
  30              		.loc 1 64 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  65:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged;
  66:Source\portable\Common/mpu_wrappers.c **** 
  67:Source\portable\Common/mpu_wrappers.c **** 	/* Check whether the processor is already privileged. */
  68:Source\portable\Common/mpu_wrappers.c **** 	xRunningPrivileged = portIS_PRIVILEGED();
  42              		.loc 1 68 0
  43 0006 FFF7FEFF 		bl	portIS_PRIVILEGED
  44 000a 7860     		str	r0, [r7, #4]
  69:Source\portable\Common/mpu_wrappers.c **** 
  70:Source\portable\Common/mpu_wrappers.c **** 	/* If the processor is not already privileged, raise privilege. */
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 3


  71:Source\portable\Common/mpu_wrappers.c **** 	if( xRunningPrivileged != pdTRUE )
  45              		.loc 1 71 0
  46 000c 7B68     		ldr	r3, [r7, #4]
  47 000e 012B     		cmp	r3, #1
  48 0010 01D0     		beq	.L2
  49              	.LBB2:
  72:Source\portable\Common/mpu_wrappers.c **** 	{
  73:Source\portable\Common/mpu_wrappers.c **** 		portRAISE_PRIVILEGE();
  50              		.loc 1 73 0
  51 0012 FFF7FEFF 		bl	portRAISE_PRIVILEGE
  52              	.L2:
  53              	.LBE2:
  74:Source\portable\Common/mpu_wrappers.c **** 	}
  75:Source\portable\Common/mpu_wrappers.c **** 
  76:Source\portable\Common/mpu_wrappers.c **** 	return xRunningPrivileged;
  54              		.loc 1 76 0
  55 0016 7B68     		ldr	r3, [r7, #4]
  77:Source\portable\Common/mpu_wrappers.c **** }
  56              		.loc 1 77 0
  57 0018 1846     		mov	r0, r3
  58 001a 0837     		adds	r7, r7, #8
  59              		.cfi_def_cfa_offset 8
  60 001c BD46     		mov	sp, r7
  61              		.cfi_def_cfa_register 13
  62              		@ sp needed
  63 001e 80BD     		pop	{r7, pc}
  64              		.cfi_endproc
  65              	.LFE68:
  66              		.size	xPortRaisePrivilege, .-xPortRaisePrivilege
  67              		.section	.text.vPortResetPrivilege,"ax",%progbits
  68              		.align	2
  69              		.global	vPortResetPrivilege
  70              		.thumb
  71              		.thumb_func
  72              		.type	vPortResetPrivilege, %function
  73              	vPortResetPrivilege:
  74              	.LFB69:
  78:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
  79:Source\portable\Common/mpu_wrappers.c **** 
  80:Source\portable\Common/mpu_wrappers.c **** void vPortResetPrivilege( BaseType_t xRunningPrivileged )
  81:Source\portable\Common/mpu_wrappers.c **** {
  75              		.loc 1 81 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 8
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79 0000 80B5     		push	{r7, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 82B0     		sub	sp, sp, #8
  84              		.cfi_def_cfa_offset 16
  85 0004 00AF     		add	r7, sp, #0
  86              		.cfi_def_cfa_register 7
  87 0006 7860     		str	r0, [r7, #4]
  82:Source\portable\Common/mpu_wrappers.c **** 	if( xRunningPrivileged != pdTRUE )
  88              		.loc 1 82 0
  89 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 4


  90 000a 012B     		cmp	r3, #1
  91 000c 01D0     		beq	.L6
  92              	.LBB3:
  83:Source\portable\Common/mpu_wrappers.c **** 	{
  84:Source\portable\Common/mpu_wrappers.c **** 		portRESET_PRIVILEGE();
  93              		.loc 1 84 0
  94 000e FFF7FEFF 		bl	portRESET_PRIVILEGE
  95              	.L6:
  96              	.LBE3:
  85:Source\portable\Common/mpu_wrappers.c **** 	}
  86:Source\portable\Common/mpu_wrappers.c **** }
  97              		.loc 1 86 0
  98 0012 00BF     		nop
  99 0014 0837     		adds	r7, r7, #8
 100              		.cfi_def_cfa_offset 8
 101 0016 BD46     		mov	sp, r7
 102              		.cfi_def_cfa_register 13
 103              		@ sp needed
 104 0018 80BD     		pop	{r7, pc}
 105              		.cfi_endproc
 106              	.LFE69:
 107              		.size	vPortResetPrivilege, .-vPortResetPrivilege
 108 001a 00BF     		.section	.text.MPU_xTaskCreateRestricted,"ax",%progbits
 109              		.align	2
 110              		.global	MPU_xTaskCreateRestricted
 111              		.thumb
 112              		.thumb_func
 113              		.type	MPU_xTaskCreateRestricted, %function
 114              	MPU_xTaskCreateRestricted:
 115              	.LFB70:
  87:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
  88:Source\portable\Common/mpu_wrappers.c **** 
  89:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
  90:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_
  91:Source\portable\Common/mpu_wrappers.c **** 	{
 116              		.loc 1 91 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 16
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120 0000 80B5     		push	{r7, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 84B0     		sub	sp, sp, #16
 125              		.cfi_def_cfa_offset 24
 126 0004 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
 128 0006 7860     		str	r0, [r7, #4]
 129 0008 3960     		str	r1, [r7]
  92:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
  93:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 130              		.loc 1 93 0
 131 000a FFF7FEFF 		bl	xPortRaisePrivilege
 132 000e F860     		str	r0, [r7, #12]
  94:Source\portable\Common/mpu_wrappers.c **** 
  95:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskCreateRestricted( pxTaskDefinition, pxCreatedTask );
 133              		.loc 1 95 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 5


 134 0010 3968     		ldr	r1, [r7]
 135 0012 7868     		ldr	r0, [r7, #4]
 136 0014 FFF7FEFF 		bl	xTaskCreateRestricted
 137 0018 B860     		str	r0, [r7, #8]
  96:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 138              		.loc 1 96 0
 139 001a F868     		ldr	r0, [r7, #12]
 140 001c FFF7FEFF 		bl	vPortResetPrivilege
  97:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 141              		.loc 1 97 0
 142 0020 BB68     		ldr	r3, [r7, #8]
  98:Source\portable\Common/mpu_wrappers.c **** 	}
 143              		.loc 1 98 0
 144 0022 1846     		mov	r0, r3
 145 0024 1037     		adds	r7, r7, #16
 146              		.cfi_def_cfa_offset 8
 147 0026 BD46     		mov	sp, r7
 148              		.cfi_def_cfa_register 13
 149              		@ sp needed
 150 0028 80BD     		pop	{r7, pc}
 151              		.cfi_endproc
 152              	.LFE70:
 153              		.size	MPU_xTaskCreateRestricted, .-MPU_xTaskCreateRestricted
 154              		.section	.text.MPU_xTaskCreate,"ax",%progbits
 155              		.align	2
 156              		.global	MPU_xTaskCreate
 157              		.thumb
 158              		.thumb_func
 159              		.type	MPU_xTaskCreate, %function
 160              	MPU_xTaskCreate:
 161              	.LFB71:
  99:Source\portable\Common/mpu_wrappers.c **** #endif /* conifgSUPPORT_DYNAMIC_ALLOCATION */
 100:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 101:Source\portable\Common/mpu_wrappers.c **** 
 102:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 103:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskH
 104:Source\portable\Common/mpu_wrappers.c **** 	{
 105:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 106:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 107:Source\portable\Common/mpu_wrappers.c **** 
 108:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskCreateRestrictedStatic( pxTaskDefinition, pxCreatedTask );
 109:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 110:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 111:Source\portable\Common/mpu_wrappers.c **** 	}
 112:Source\portable\Common/mpu_wrappers.c **** #endif /* conifgSUPPORT_DYNAMIC_ALLOCATION */
 113:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 114:Source\portable\Common/mpu_wrappers.c **** 
 115:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 116:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskCreate( TaskFunction_t pvTaskCode, const char * const pcName, uint16_t usStack
 117:Source\portable\Common/mpu_wrappers.c **** 	{
 162              		.loc 1 117 0
 163              		.cfi_startproc
 164              		@ args = 8, pretend = 0, frame = 24
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166 0000 80B5     		push	{r7, lr}
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 7, -8
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 6


 169              		.cfi_offset 14, -4
 170 0002 88B0     		sub	sp, sp, #32
 171              		.cfi_def_cfa_offset 40
 172 0004 02AF     		add	r7, sp, #8
 173              		.cfi_def_cfa 7, 32
 174 0006 F860     		str	r0, [r7, #12]
 175 0008 B960     		str	r1, [r7, #8]
 176 000a 3B60     		str	r3, [r7]
 177 000c 1346     		mov	r3, r2	@ movhi
 178 000e FB80     		strh	r3, [r7, #6]	@ movhi
 118:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 119:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 179              		.loc 1 119 0
 180 0010 FFF7FEFF 		bl	xPortRaisePrivilege
 181 0014 7861     		str	r0, [r7, #20]
 120:Source\portable\Common/mpu_wrappers.c **** 
 121:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskCreate( pvTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask 
 182              		.loc 1 121 0
 183 0016 FA88     		ldrh	r2, [r7, #6]
 184 0018 7B6A     		ldr	r3, [r7, #36]
 185 001a 0193     		str	r3, [sp, #4]
 186 001c 3B6A     		ldr	r3, [r7, #32]
 187 001e 0093     		str	r3, [sp]
 188 0020 3B68     		ldr	r3, [r7]
 189 0022 B968     		ldr	r1, [r7, #8]
 190 0024 F868     		ldr	r0, [r7, #12]
 191 0026 FFF7FEFF 		bl	xTaskCreate
 192 002a 3861     		str	r0, [r7, #16]
 122:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 193              		.loc 1 122 0
 194 002c 7869     		ldr	r0, [r7, #20]
 195 002e FFF7FEFF 		bl	vPortResetPrivilege
 123:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 196              		.loc 1 123 0
 197 0032 3B69     		ldr	r3, [r7, #16]
 124:Source\portable\Common/mpu_wrappers.c **** 	}
 198              		.loc 1 124 0
 199 0034 1846     		mov	r0, r3
 200 0036 1837     		adds	r7, r7, #24
 201              		.cfi_def_cfa_offset 8
 202 0038 BD46     		mov	sp, r7
 203              		.cfi_def_cfa_register 13
 204              		@ sp needed
 205 003a 80BD     		pop	{r7, pc}
 206              		.cfi_endproc
 207              	.LFE71:
 208              		.size	MPU_xTaskCreate, .-MPU_xTaskCreate
 209              		.section	.text.MPU_vTaskAllocateMPURegions,"ax",%progbits
 210              		.align	2
 211              		.global	MPU_vTaskAllocateMPURegions
 212              		.thumb
 213              		.thumb_func
 214              		.type	MPU_vTaskAllocateMPURegions, %function
 215              	MPU_vTaskAllocateMPURegions:
 216              	.LFB72:
 125:Source\portable\Common/mpu_wrappers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 126:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 7


 127:Source\portable\Common/mpu_wrappers.c **** 
 128:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 129:Source\portable\Common/mpu_wrappers.c **** 	TaskHandle_t MPU_xTaskCreateStatic( TaskFunction_t pxTaskCode, const char * const pcName, const ui
 130:Source\portable\Common/mpu_wrappers.c **** 	{
 131:Source\portable\Common/mpu_wrappers.c **** 	TaskHandle_t xReturn;
 132:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 133:Source\portable\Common/mpu_wrappers.c **** 
 134:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskCreateStatic( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, puxStack
 135:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 136:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 137:Source\portable\Common/mpu_wrappers.c **** 	}
 138:Source\portable\Common/mpu_wrappers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 139:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 140:Source\portable\Common/mpu_wrappers.c **** 
 141:Source\portable\Common/mpu_wrappers.c **** void MPU_vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const xRegions ) /* FR
 142:Source\portable\Common/mpu_wrappers.c **** {
 217              		.loc 1 142 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 16
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221 0000 80B5     		push	{r7, lr}
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225 0002 84B0     		sub	sp, sp, #16
 226              		.cfi_def_cfa_offset 24
 227 0004 00AF     		add	r7, sp, #0
 228              		.cfi_def_cfa_register 7
 229 0006 7860     		str	r0, [r7, #4]
 230 0008 3960     		str	r1, [r7]
 143:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 231              		.loc 1 143 0
 232 000a FFF7FEFF 		bl	xPortRaisePrivilege
 233 000e F860     		str	r0, [r7, #12]
 144:Source\portable\Common/mpu_wrappers.c **** 
 145:Source\portable\Common/mpu_wrappers.c **** 	vTaskAllocateMPURegions( xTask, xRegions );
 234              		.loc 1 145 0
 235 0010 3968     		ldr	r1, [r7]
 236 0012 7868     		ldr	r0, [r7, #4]
 237 0014 FFF7FEFF 		bl	vTaskAllocateMPURegions
 146:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 238              		.loc 1 146 0
 239 0018 F868     		ldr	r0, [r7, #12]
 240 001a FFF7FEFF 		bl	vPortResetPrivilege
 147:Source\portable\Common/mpu_wrappers.c **** }
 241              		.loc 1 147 0
 242 001e 00BF     		nop
 243 0020 1037     		adds	r7, r7, #16
 244              		.cfi_def_cfa_offset 8
 245 0022 BD46     		mov	sp, r7
 246              		.cfi_def_cfa_register 13
 247              		@ sp needed
 248 0024 80BD     		pop	{r7, pc}
 249              		.cfi_endproc
 250              	.LFE72:
 251              		.size	MPU_vTaskAllocateMPURegions, .-MPU_vTaskAllocateMPURegions
 252 0026 00BF     		.section	.text.MPU_vTaskDelete,"ax",%progbits
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 8


 253              		.align	2
 254              		.global	MPU_vTaskDelete
 255              		.thumb
 256              		.thumb_func
 257              		.type	MPU_vTaskDelete, %function
 258              	MPU_vTaskDelete:
 259              	.LFB73:
 148:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 149:Source\portable\Common/mpu_wrappers.c **** 
 150:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskDelete == 1 )
 151:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTaskDelete( TaskHandle_t pxTaskToDelete ) /* FREERTOS_SYSTEM_CALL */
 152:Source\portable\Common/mpu_wrappers.c **** 	{
 260              		.loc 1 152 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 16
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 84B0     		sub	sp, sp, #16
 269              		.cfi_def_cfa_offset 24
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 153:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 273              		.loc 1 153 0
 274 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 275 000c F860     		str	r0, [r7, #12]
 154:Source\portable\Common/mpu_wrappers.c **** 
 155:Source\portable\Common/mpu_wrappers.c **** 		vTaskDelete( pxTaskToDelete );
 276              		.loc 1 155 0
 277 000e 7868     		ldr	r0, [r7, #4]
 278 0010 FFF7FEFF 		bl	vTaskDelete
 156:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 279              		.loc 1 156 0
 280 0014 F868     		ldr	r0, [r7, #12]
 281 0016 FFF7FEFF 		bl	vPortResetPrivilege
 157:Source\portable\Common/mpu_wrappers.c **** 	}
 282              		.loc 1 157 0
 283 001a 00BF     		nop
 284 001c 1037     		adds	r7, r7, #16
 285              		.cfi_def_cfa_offset 8
 286 001e BD46     		mov	sp, r7
 287              		.cfi_def_cfa_register 13
 288              		@ sp needed
 289 0020 80BD     		pop	{r7, pc}
 290              		.cfi_endproc
 291              	.LFE73:
 292              		.size	MPU_vTaskDelete, .-MPU_vTaskDelete
 293 0022 00BF     		.section	.text.MPU_vTaskDelayUntil,"ax",%progbits
 294              		.align	2
 295              		.global	MPU_vTaskDelayUntil
 296              		.thumb
 297              		.thumb_func
 298              		.type	MPU_vTaskDelayUntil, %function
 299              	MPU_vTaskDelayUntil:
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 9


 300              	.LFB74:
 158:Source\portable\Common/mpu_wrappers.c **** #endif
 159:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 160:Source\portable\Common/mpu_wrappers.c **** 
 161:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
 162:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, TickType_t xTimeIncrement ) /* FR
 163:Source\portable\Common/mpu_wrappers.c **** 	{
 301              		.loc 1 163 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 16
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305 0000 80B5     		push	{r7, lr}
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 84B0     		sub	sp, sp, #16
 310              		.cfi_def_cfa_offset 24
 311 0004 00AF     		add	r7, sp, #0
 312              		.cfi_def_cfa_register 7
 313 0006 7860     		str	r0, [r7, #4]
 314 0008 3960     		str	r1, [r7]
 164:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 315              		.loc 1 164 0
 316 000a FFF7FEFF 		bl	xPortRaisePrivilege
 317 000e F860     		str	r0, [r7, #12]
 165:Source\portable\Common/mpu_wrappers.c **** 
 166:Source\portable\Common/mpu_wrappers.c **** 		vTaskDelayUntil( pxPreviousWakeTime, xTimeIncrement );
 318              		.loc 1 166 0
 319 0010 3968     		ldr	r1, [r7]
 320 0012 7868     		ldr	r0, [r7, #4]
 321 0014 FFF7FEFF 		bl	vTaskDelayUntil
 167:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 322              		.loc 1 167 0
 323 0018 F868     		ldr	r0, [r7, #12]
 324 001a FFF7FEFF 		bl	vPortResetPrivilege
 168:Source\portable\Common/mpu_wrappers.c **** 	}
 325              		.loc 1 168 0
 326 001e 00BF     		nop
 327 0020 1037     		adds	r7, r7, #16
 328              		.cfi_def_cfa_offset 8
 329 0022 BD46     		mov	sp, r7
 330              		.cfi_def_cfa_register 13
 331              		@ sp needed
 332 0024 80BD     		pop	{r7, pc}
 333              		.cfi_endproc
 334              	.LFE74:
 335              		.size	MPU_vTaskDelayUntil, .-MPU_vTaskDelayUntil
 336 0026 00BF     		.section	.text.MPU_vTaskDelay,"ax",%progbits
 337              		.align	2
 338              		.global	MPU_vTaskDelay
 339              		.thumb
 340              		.thumb_func
 341              		.type	MPU_vTaskDelay, %function
 342              	MPU_vTaskDelay:
 343              	.LFB75:
 169:Source\portable\Common/mpu_wrappers.c **** #endif
 170:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 10


 171:Source\portable\Common/mpu_wrappers.c **** 
 172:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
 173:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskAbortDelay( TaskHandle_t xTask ) /* FREERTOS_SYSTEM_CALL */
 174:Source\portable\Common/mpu_wrappers.c **** 	{
 175:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 176:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 177:Source\portable\Common/mpu_wrappers.c **** 
 178:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskAbortDelay( xTask );
 179:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 180:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 181:Source\portable\Common/mpu_wrappers.c **** 	}
 182:Source\portable\Common/mpu_wrappers.c **** #endif
 183:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 184:Source\portable\Common/mpu_wrappers.c **** 
 185:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskDelay == 1 )
 186:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTaskDelay( TickType_t xTicksToDelay ) /* FREERTOS_SYSTEM_CALL */
 187:Source\portable\Common/mpu_wrappers.c **** 	{
 344              		.loc 1 187 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 16
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 84B0     		sub	sp, sp, #16
 353              		.cfi_def_cfa_offset 24
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 356 0006 7860     		str	r0, [r7, #4]
 188:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 357              		.loc 1 188 0
 358 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 359 000c F860     		str	r0, [r7, #12]
 189:Source\portable\Common/mpu_wrappers.c **** 
 190:Source\portable\Common/mpu_wrappers.c **** 		vTaskDelay( xTicksToDelay );
 360              		.loc 1 190 0
 361 000e 7868     		ldr	r0, [r7, #4]
 362 0010 FFF7FEFF 		bl	vTaskDelay
 191:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 363              		.loc 1 191 0
 364 0014 F868     		ldr	r0, [r7, #12]
 365 0016 FFF7FEFF 		bl	vPortResetPrivilege
 192:Source\portable\Common/mpu_wrappers.c **** 	}
 366              		.loc 1 192 0
 367 001a 00BF     		nop
 368 001c 1037     		adds	r7, r7, #16
 369              		.cfi_def_cfa_offset 8
 370 001e BD46     		mov	sp, r7
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 0020 80BD     		pop	{r7, pc}
 374              		.cfi_endproc
 375              	.LFE75:
 376              		.size	MPU_vTaskDelay, .-MPU_vTaskDelay
 377 0022 00BF     		.section	.text.MPU_uxTaskPriorityGet,"ax",%progbits
 378              		.align	2
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 11


 379              		.global	MPU_uxTaskPriorityGet
 380              		.thumb
 381              		.thumb_func
 382              		.type	MPU_uxTaskPriorityGet, %function
 383              	MPU_uxTaskPriorityGet:
 384              	.LFB76:
 193:Source\portable\Common/mpu_wrappers.c **** #endif
 194:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 195:Source\portable\Common/mpu_wrappers.c **** 
 196:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
 197:Source\portable\Common/mpu_wrappers.c **** 	UBaseType_t MPU_uxTaskPriorityGet( const TaskHandle_t pxTask ) /* FREERTOS_SYSTEM_CALL */
 198:Source\portable\Common/mpu_wrappers.c **** 	{
 385              		.loc 1 198 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 16
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 80B5     		push	{r7, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 84B0     		sub	sp, sp, #16
 394              		.cfi_def_cfa_offset 24
 395 0004 00AF     		add	r7, sp, #0
 396              		.cfi_def_cfa_register 7
 397 0006 7860     		str	r0, [r7, #4]
 199:Source\portable\Common/mpu_wrappers.c **** 	UBaseType_t uxReturn;
 200:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 398              		.loc 1 200 0
 399 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 400 000c F860     		str	r0, [r7, #12]
 201:Source\portable\Common/mpu_wrappers.c **** 
 202:Source\portable\Common/mpu_wrappers.c **** 		uxReturn = uxTaskPriorityGet( pxTask );
 401              		.loc 1 202 0
 402 000e 7868     		ldr	r0, [r7, #4]
 403 0010 FFF7FEFF 		bl	uxTaskPriorityGet
 404 0014 B860     		str	r0, [r7, #8]
 203:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 405              		.loc 1 203 0
 406 0016 F868     		ldr	r0, [r7, #12]
 407 0018 FFF7FEFF 		bl	vPortResetPrivilege
 204:Source\portable\Common/mpu_wrappers.c **** 		return uxReturn;
 408              		.loc 1 204 0
 409 001c BB68     		ldr	r3, [r7, #8]
 205:Source\portable\Common/mpu_wrappers.c **** 	}
 410              		.loc 1 205 0
 411 001e 1846     		mov	r0, r3
 412 0020 1037     		adds	r7, r7, #16
 413              		.cfi_def_cfa_offset 8
 414 0022 BD46     		mov	sp, r7
 415              		.cfi_def_cfa_register 13
 416              		@ sp needed
 417 0024 80BD     		pop	{r7, pc}
 418              		.cfi_endproc
 419              	.LFE76:
 420              		.size	MPU_uxTaskPriorityGet, .-MPU_uxTaskPriorityGet
 421 0026 00BF     		.section	.text.MPU_vTaskPrioritySet,"ax",%progbits
 422              		.align	2
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 12


 423              		.global	MPU_vTaskPrioritySet
 424              		.thumb
 425              		.thumb_func
 426              		.type	MPU_vTaskPrioritySet, %function
 427              	MPU_vTaskPrioritySet:
 428              	.LFB77:
 206:Source\portable\Common/mpu_wrappers.c **** #endif
 207:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 208:Source\portable\Common/mpu_wrappers.c **** 
 209:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
 210:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTaskPrioritySet( TaskHandle_t pxTask, UBaseType_t uxNewPriority ) /* FREERTOS_SYSTEM_CAL
 211:Source\portable\Common/mpu_wrappers.c **** 	{
 429              		.loc 1 211 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 16
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433 0000 80B5     		push	{r7, lr}
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 7, -8
 436              		.cfi_offset 14, -4
 437 0002 84B0     		sub	sp, sp, #16
 438              		.cfi_def_cfa_offset 24
 439 0004 00AF     		add	r7, sp, #0
 440              		.cfi_def_cfa_register 7
 441 0006 7860     		str	r0, [r7, #4]
 442 0008 3960     		str	r1, [r7]
 212:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 443              		.loc 1 212 0
 444 000a FFF7FEFF 		bl	xPortRaisePrivilege
 445 000e F860     		str	r0, [r7, #12]
 213:Source\portable\Common/mpu_wrappers.c **** 
 214:Source\portable\Common/mpu_wrappers.c **** 		vTaskPrioritySet( pxTask, uxNewPriority );
 446              		.loc 1 214 0
 447 0010 3968     		ldr	r1, [r7]
 448 0012 7868     		ldr	r0, [r7, #4]
 449 0014 FFF7FEFF 		bl	vTaskPrioritySet
 215:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 450              		.loc 1 215 0
 451 0018 F868     		ldr	r0, [r7, #12]
 452 001a FFF7FEFF 		bl	vPortResetPrivilege
 216:Source\portable\Common/mpu_wrappers.c **** 	}
 453              		.loc 1 216 0
 454 001e 00BF     		nop
 455 0020 1037     		adds	r7, r7, #16
 456              		.cfi_def_cfa_offset 8
 457 0022 BD46     		mov	sp, r7
 458              		.cfi_def_cfa_register 13
 459              		@ sp needed
 460 0024 80BD     		pop	{r7, pc}
 461              		.cfi_endproc
 462              	.LFE77:
 463              		.size	MPU_vTaskPrioritySet, .-MPU_vTaskPrioritySet
 464 0026 00BF     		.section	.text.MPU_eTaskGetState,"ax",%progbits
 465              		.align	2
 466              		.global	MPU_eTaskGetState
 467              		.thumb
 468              		.thumb_func
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 13


 469              		.type	MPU_eTaskGetState, %function
 470              	MPU_eTaskGetState:
 471              	.LFB78:
 217:Source\portable\Common/mpu_wrappers.c **** #endif
 218:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 219:Source\portable\Common/mpu_wrappers.c **** 
 220:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_eTaskGetState == 1 )
 221:Source\portable\Common/mpu_wrappers.c **** 	eTaskState MPU_eTaskGetState( TaskHandle_t pxTask ) /* FREERTOS_SYSTEM_CALL */
 222:Source\portable\Common/mpu_wrappers.c **** 	{
 472              		.loc 1 222 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 16
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476 0000 80B5     		push	{r7, lr}
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 7, -8
 479              		.cfi_offset 14, -4
 480 0002 84B0     		sub	sp, sp, #16
 481              		.cfi_def_cfa_offset 24
 482 0004 00AF     		add	r7, sp, #0
 483              		.cfi_def_cfa_register 7
 484 0006 7860     		str	r0, [r7, #4]
 223:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 485              		.loc 1 223 0
 486 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 487 000c F860     		str	r0, [r7, #12]
 224:Source\portable\Common/mpu_wrappers.c **** 	eTaskState eReturn;
 225:Source\portable\Common/mpu_wrappers.c **** 
 226:Source\portable\Common/mpu_wrappers.c **** 		eReturn = eTaskGetState( pxTask );
 488              		.loc 1 226 0
 489 000e 7868     		ldr	r0, [r7, #4]
 490 0010 FFF7FEFF 		bl	eTaskGetState
 491 0014 0346     		mov	r3, r0
 492 0016 FB72     		strb	r3, [r7, #11]
 227:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 493              		.loc 1 227 0
 494 0018 F868     		ldr	r0, [r7, #12]
 495 001a FFF7FEFF 		bl	vPortResetPrivilege
 228:Source\portable\Common/mpu_wrappers.c **** 		return eReturn;
 496              		.loc 1 228 0
 497 001e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 229:Source\portable\Common/mpu_wrappers.c **** 	}
 498              		.loc 1 229 0
 499 0020 1846     		mov	r0, r3
 500 0022 1037     		adds	r7, r7, #16
 501              		.cfi_def_cfa_offset 8
 502 0024 BD46     		mov	sp, r7
 503              		.cfi_def_cfa_register 13
 504              		@ sp needed
 505 0026 80BD     		pop	{r7, pc}
 506              		.cfi_endproc
 507              	.LFE78:
 508              		.size	MPU_eTaskGetState, .-MPU_eTaskGetState
 509              		.section	.text.MPU_vTaskSuspend,"ax",%progbits
 510              		.align	2
 511              		.global	MPU_vTaskSuspend
 512              		.thumb
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 14


 513              		.thumb_func
 514              		.type	MPU_vTaskSuspend, %function
 515              	MPU_vTaskSuspend:
 516              	.LFB79:
 230:Source\portable\Common/mpu_wrappers.c **** #endif
 231:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 232:Source\portable\Common/mpu_wrappers.c **** 
 233:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TRACE_FACILITY == 1 )
 234:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpa
 235:Source\portable\Common/mpu_wrappers.c **** 	{
 236:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 237:Source\portable\Common/mpu_wrappers.c **** 
 238:Source\portable\Common/mpu_wrappers.c **** 		vTaskGetInfo( xTask, pxTaskStatus, xGetFreeStackSpace, eState );
 239:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 240:Source\portable\Common/mpu_wrappers.c **** 	}
 241:Source\portable\Common/mpu_wrappers.c **** #endif
 242:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 243:Source\portable\Common/mpu_wrappers.c **** 
 244:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
 245:Source\portable\Common/mpu_wrappers.c **** 	TaskHandle_t MPU_xTaskGetIdleTaskHandle( void ) /* FREERTOS_SYSTEM_CALL */
 246:Source\portable\Common/mpu_wrappers.c **** 	{
 247:Source\portable\Common/mpu_wrappers.c **** 	TaskHandle_t xReturn;
 248:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 249:Source\portable\Common/mpu_wrappers.c **** 
 250:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskGetIdleTaskHandle();
 251:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 252:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 253:Source\portable\Common/mpu_wrappers.c **** 	}
 254:Source\portable\Common/mpu_wrappers.c **** #endif
 255:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 256:Source\portable\Common/mpu_wrappers.c **** 
 257:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 258:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTaskSuspend( TaskHandle_t pxTaskToSuspend ) /* FREERTOS_SYSTEM_CALL */
 259:Source\portable\Common/mpu_wrappers.c **** 	{
 517              		.loc 1 259 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 16
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521 0000 80B5     		push	{r7, lr}
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 7, -8
 524              		.cfi_offset 14, -4
 525 0002 84B0     		sub	sp, sp, #16
 526              		.cfi_def_cfa_offset 24
 527 0004 00AF     		add	r7, sp, #0
 528              		.cfi_def_cfa_register 7
 529 0006 7860     		str	r0, [r7, #4]
 260:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 530              		.loc 1 260 0
 531 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 532 000c F860     		str	r0, [r7, #12]
 261:Source\portable\Common/mpu_wrappers.c **** 
 262:Source\portable\Common/mpu_wrappers.c **** 		vTaskSuspend( pxTaskToSuspend );
 533              		.loc 1 262 0
 534 000e 7868     		ldr	r0, [r7, #4]
 535 0010 FFF7FEFF 		bl	vTaskSuspend
 263:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 15


 536              		.loc 1 263 0
 537 0014 F868     		ldr	r0, [r7, #12]
 538 0016 FFF7FEFF 		bl	vPortResetPrivilege
 264:Source\portable\Common/mpu_wrappers.c **** 	}
 539              		.loc 1 264 0
 540 001a 00BF     		nop
 541 001c 1037     		adds	r7, r7, #16
 542              		.cfi_def_cfa_offset 8
 543 001e BD46     		mov	sp, r7
 544              		.cfi_def_cfa_register 13
 545              		@ sp needed
 546 0020 80BD     		pop	{r7, pc}
 547              		.cfi_endproc
 548              	.LFE79:
 549              		.size	MPU_vTaskSuspend, .-MPU_vTaskSuspend
 550 0022 00BF     		.section	.text.MPU_vTaskResume,"ax",%progbits
 551              		.align	2
 552              		.global	MPU_vTaskResume
 553              		.thumb
 554              		.thumb_func
 555              		.type	MPU_vTaskResume, %function
 556              	MPU_vTaskResume:
 557              	.LFB80:
 265:Source\portable\Common/mpu_wrappers.c **** #endif
 266:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 267:Source\portable\Common/mpu_wrappers.c **** 
 268:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 269:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTaskResume( TaskHandle_t pxTaskToResume ) /* FREERTOS_SYSTEM_CALL */
 270:Source\portable\Common/mpu_wrappers.c **** 	{
 558              		.loc 1 270 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 16
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562 0000 80B5     		push	{r7, lr}
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 84B0     		sub	sp, sp, #16
 567              		.cfi_def_cfa_offset 24
 568 0004 00AF     		add	r7, sp, #0
 569              		.cfi_def_cfa_register 7
 570 0006 7860     		str	r0, [r7, #4]
 271:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 571              		.loc 1 271 0
 572 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 573 000c F860     		str	r0, [r7, #12]
 272:Source\portable\Common/mpu_wrappers.c **** 
 273:Source\portable\Common/mpu_wrappers.c **** 		vTaskResume( pxTaskToResume );
 574              		.loc 1 273 0
 575 000e 7868     		ldr	r0, [r7, #4]
 576 0010 FFF7FEFF 		bl	vTaskResume
 274:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 577              		.loc 1 274 0
 578 0014 F868     		ldr	r0, [r7, #12]
 579 0016 FFF7FEFF 		bl	vPortResetPrivilege
 275:Source\portable\Common/mpu_wrappers.c **** 	}
 580              		.loc 1 275 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 16


 581 001a 00BF     		nop
 582 001c 1037     		adds	r7, r7, #16
 583              		.cfi_def_cfa_offset 8
 584 001e BD46     		mov	sp, r7
 585              		.cfi_def_cfa_register 13
 586              		@ sp needed
 587 0020 80BD     		pop	{r7, pc}
 588              		.cfi_endproc
 589              	.LFE80:
 590              		.size	MPU_vTaskResume, .-MPU_vTaskResume
 591 0022 00BF     		.section	.text.MPU_vTaskSuspendAll,"ax",%progbits
 592              		.align	2
 593              		.global	MPU_vTaskSuspendAll
 594              		.thumb
 595              		.thumb_func
 596              		.type	MPU_vTaskSuspendAll, %function
 597              	MPU_vTaskSuspendAll:
 598              	.LFB81:
 276:Source\portable\Common/mpu_wrappers.c **** #endif
 277:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 278:Source\portable\Common/mpu_wrappers.c **** 
 279:Source\portable\Common/mpu_wrappers.c **** void MPU_vTaskSuspendAll( void ) /* FREERTOS_SYSTEM_CALL */
 280:Source\portable\Common/mpu_wrappers.c **** {
 599              		.loc 1 280 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 8
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603 0000 80B5     		push	{r7, lr}
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 82B0     		sub	sp, sp, #8
 608              		.cfi_def_cfa_offset 16
 609 0004 00AF     		add	r7, sp, #0
 610              		.cfi_def_cfa_register 7
 281:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 611              		.loc 1 281 0
 612 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 613 000a 7860     		str	r0, [r7, #4]
 282:Source\portable\Common/mpu_wrappers.c **** 
 283:Source\portable\Common/mpu_wrappers.c **** 	vTaskSuspendAll();
 614              		.loc 1 283 0
 615 000c FFF7FEFF 		bl	vTaskSuspendAll
 284:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 616              		.loc 1 284 0
 617 0010 7868     		ldr	r0, [r7, #4]
 618 0012 FFF7FEFF 		bl	vPortResetPrivilege
 285:Source\portable\Common/mpu_wrappers.c **** }
 619              		.loc 1 285 0
 620 0016 00BF     		nop
 621 0018 0837     		adds	r7, r7, #8
 622              		.cfi_def_cfa_offset 8
 623 001a BD46     		mov	sp, r7
 624              		.cfi_def_cfa_register 13
 625              		@ sp needed
 626 001c 80BD     		pop	{r7, pc}
 627              		.cfi_endproc
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 17


 628              	.LFE81:
 629              		.size	MPU_vTaskSuspendAll, .-MPU_vTaskSuspendAll
 630 001e 00BF     		.section	.text.MPU_xTaskResumeAll,"ax",%progbits
 631              		.align	2
 632              		.global	MPU_xTaskResumeAll
 633              		.thumb
 634              		.thumb_func
 635              		.type	MPU_xTaskResumeAll, %function
 636              	MPU_xTaskResumeAll:
 637              	.LFB82:
 286:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 287:Source\portable\Common/mpu_wrappers.c **** 
 288:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xTaskResumeAll( void ) /* FREERTOS_SYSTEM_CALL */
 289:Source\portable\Common/mpu_wrappers.c **** {
 638              		.loc 1 289 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 8
 641              		@ frame_needed = 1, uses_anonymous_args = 0
 642 0000 80B5     		push	{r7, lr}
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 82B0     		sub	sp, sp, #8
 647              		.cfi_def_cfa_offset 16
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 290:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
 291:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 650              		.loc 1 291 0
 651 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 652 000a 7860     		str	r0, [r7, #4]
 292:Source\portable\Common/mpu_wrappers.c **** 
 293:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xTaskResumeAll();
 653              		.loc 1 293 0
 654 000c FFF7FEFF 		bl	xTaskResumeAll
 655 0010 3860     		str	r0, [r7]
 294:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 656              		.loc 1 294 0
 657 0012 7868     		ldr	r0, [r7, #4]
 658 0014 FFF7FEFF 		bl	vPortResetPrivilege
 295:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 659              		.loc 1 295 0
 660 0018 3B68     		ldr	r3, [r7]
 296:Source\portable\Common/mpu_wrappers.c **** }
 661              		.loc 1 296 0
 662 001a 1846     		mov	r0, r3
 663 001c 0837     		adds	r7, r7, #8
 664              		.cfi_def_cfa_offset 8
 665 001e BD46     		mov	sp, r7
 666              		.cfi_def_cfa_register 13
 667              		@ sp needed
 668 0020 80BD     		pop	{r7, pc}
 669              		.cfi_endproc
 670              	.LFE82:
 671              		.size	MPU_xTaskResumeAll, .-MPU_xTaskResumeAll
 672 0022 00BF     		.section	.text.MPU_xTaskGetTickCount,"ax",%progbits
 673              		.align	2
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 18


 674              		.global	MPU_xTaskGetTickCount
 675              		.thumb
 676              		.thumb_func
 677              		.type	MPU_xTaskGetTickCount, %function
 678              	MPU_xTaskGetTickCount:
 679              	.LFB83:
 297:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 298:Source\portable\Common/mpu_wrappers.c **** 
 299:Source\portable\Common/mpu_wrappers.c **** TickType_t MPU_xTaskGetTickCount( void ) /* FREERTOS_SYSTEM_CALL */
 300:Source\portable\Common/mpu_wrappers.c **** {
 680              		.loc 1 300 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 8
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684 0000 80B5     		push	{r7, lr}
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 688 0002 82B0     		sub	sp, sp, #8
 689              		.cfi_def_cfa_offset 16
 690 0004 00AF     		add	r7, sp, #0
 691              		.cfi_def_cfa_register 7
 301:Source\portable\Common/mpu_wrappers.c **** TickType_t xReturn;
 302:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 692              		.loc 1 302 0
 693 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 694 000a 7860     		str	r0, [r7, #4]
 303:Source\portable\Common/mpu_wrappers.c **** 
 304:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xTaskGetTickCount();
 695              		.loc 1 304 0
 696 000c FFF7FEFF 		bl	xTaskGetTickCount
 697 0010 3860     		str	r0, [r7]
 305:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 698              		.loc 1 305 0
 699 0012 7868     		ldr	r0, [r7, #4]
 700 0014 FFF7FEFF 		bl	vPortResetPrivilege
 306:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 701              		.loc 1 306 0
 702 0018 3B68     		ldr	r3, [r7]
 307:Source\portable\Common/mpu_wrappers.c **** }
 703              		.loc 1 307 0
 704 001a 1846     		mov	r0, r3
 705 001c 0837     		adds	r7, r7, #8
 706              		.cfi_def_cfa_offset 8
 707 001e BD46     		mov	sp, r7
 708              		.cfi_def_cfa_register 13
 709              		@ sp needed
 710 0020 80BD     		pop	{r7, pc}
 711              		.cfi_endproc
 712              	.LFE83:
 713              		.size	MPU_xTaskGetTickCount, .-MPU_xTaskGetTickCount
 714 0022 00BF     		.section	.text.MPU_uxTaskGetNumberOfTasks,"ax",%progbits
 715              		.align	2
 716              		.global	MPU_uxTaskGetNumberOfTasks
 717              		.thumb
 718              		.thumb_func
 719              		.type	MPU_uxTaskGetNumberOfTasks, %function
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 19


 720              	MPU_uxTaskGetNumberOfTasks:
 721              	.LFB84:
 308:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 309:Source\portable\Common/mpu_wrappers.c **** 
 310:Source\portable\Common/mpu_wrappers.c **** UBaseType_t MPU_uxTaskGetNumberOfTasks( void ) /* FREERTOS_SYSTEM_CALL */
 311:Source\portable\Common/mpu_wrappers.c **** {
 722              		.loc 1 311 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 8
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726 0000 80B5     		push	{r7, lr}
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 7, -8
 729              		.cfi_offset 14, -4
 730 0002 82B0     		sub	sp, sp, #8
 731              		.cfi_def_cfa_offset 16
 732 0004 00AF     		add	r7, sp, #0
 733              		.cfi_def_cfa_register 7
 312:Source\portable\Common/mpu_wrappers.c **** UBaseType_t uxReturn;
 313:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 734              		.loc 1 313 0
 735 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 736 000a 7860     		str	r0, [r7, #4]
 314:Source\portable\Common/mpu_wrappers.c **** 
 315:Source\portable\Common/mpu_wrappers.c **** 	uxReturn = uxTaskGetNumberOfTasks();
 737              		.loc 1 315 0
 738 000c FFF7FEFF 		bl	uxTaskGetNumberOfTasks
 739 0010 3860     		str	r0, [r7]
 316:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 740              		.loc 1 316 0
 741 0012 7868     		ldr	r0, [r7, #4]
 742 0014 FFF7FEFF 		bl	vPortResetPrivilege
 317:Source\portable\Common/mpu_wrappers.c **** 	return uxReturn;
 743              		.loc 1 317 0
 744 0018 3B68     		ldr	r3, [r7]
 318:Source\portable\Common/mpu_wrappers.c **** }
 745              		.loc 1 318 0
 746 001a 1846     		mov	r0, r3
 747 001c 0837     		adds	r7, r7, #8
 748              		.cfi_def_cfa_offset 8
 749 001e BD46     		mov	sp, r7
 750              		.cfi_def_cfa_register 13
 751              		@ sp needed
 752 0020 80BD     		pop	{r7, pc}
 753              		.cfi_endproc
 754              	.LFE84:
 755              		.size	MPU_uxTaskGetNumberOfTasks, .-MPU_uxTaskGetNumberOfTasks
 756 0022 00BF     		.section	.text.MPU_pcTaskGetName,"ax",%progbits
 757              		.align	2
 758              		.global	MPU_pcTaskGetName
 759              		.thumb
 760              		.thumb_func
 761              		.type	MPU_pcTaskGetName, %function
 762              	MPU_pcTaskGetName:
 763              	.LFB85:
 319:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 320:Source\portable\Common/mpu_wrappers.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 20


 321:Source\portable\Common/mpu_wrappers.c **** char * MPU_pcTaskGetName( TaskHandle_t xTaskToQuery ) /* FREERTOS_SYSTEM_CALL */
 322:Source\portable\Common/mpu_wrappers.c **** {
 764              		.loc 1 322 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 16
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 80B5     		push	{r7, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 84B0     		sub	sp, sp, #16
 773              		.cfi_def_cfa_offset 24
 774 0004 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 776 0006 7860     		str	r0, [r7, #4]
 323:Source\portable\Common/mpu_wrappers.c **** char *pcReturn;
 324:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 777              		.loc 1 324 0
 778 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 779 000c F860     		str	r0, [r7, #12]
 325:Source\portable\Common/mpu_wrappers.c **** 
 326:Source\portable\Common/mpu_wrappers.c **** 	pcReturn = pcTaskGetName( xTaskToQuery );
 780              		.loc 1 326 0
 781 000e 7868     		ldr	r0, [r7, #4]
 782 0010 FFF7FEFF 		bl	pcTaskGetName
 783 0014 B860     		str	r0, [r7, #8]
 327:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 784              		.loc 1 327 0
 785 0016 F868     		ldr	r0, [r7, #12]
 786 0018 FFF7FEFF 		bl	vPortResetPrivilege
 328:Source\portable\Common/mpu_wrappers.c **** 	return pcReturn;
 787              		.loc 1 328 0
 788 001c BB68     		ldr	r3, [r7, #8]
 329:Source\portable\Common/mpu_wrappers.c **** }
 789              		.loc 1 329 0
 790 001e 1846     		mov	r0, r3
 791 0020 1037     		adds	r7, r7, #16
 792              		.cfi_def_cfa_offset 8
 793 0022 BD46     		mov	sp, r7
 794              		.cfi_def_cfa_register 13
 795              		@ sp needed
 796 0024 80BD     		pop	{r7, pc}
 797              		.cfi_endproc
 798              	.LFE85:
 799              		.size	MPU_pcTaskGetName, .-MPU_pcTaskGetName
 800 0026 00BF     		.section	.text.MPU_xTaskCatchUpTicks,"ax",%progbits
 801              		.align	2
 802              		.global	MPU_xTaskCatchUpTicks
 803              		.thumb
 804              		.thumb_func
 805              		.type	MPU_xTaskCatchUpTicks, %function
 806              	MPU_xTaskCatchUpTicks:
 807              	.LFB86:
 330:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 331:Source\portable\Common/mpu_wrappers.c **** 
 332:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 333:Source\portable\Common/mpu_wrappers.c **** 	TaskHandle_t MPU_xTaskGetHandle( const char *pcNameToQuery ) /* FREERTOS_SYSTEM_CALL */
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 21


 334:Source\portable\Common/mpu_wrappers.c **** 	{
 335:Source\portable\Common/mpu_wrappers.c **** 	TaskHandle_t xReturn;
 336:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 337:Source\portable\Common/mpu_wrappers.c **** 
 338:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskGetHandle( pcNameToQuery );
 339:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 340:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 341:Source\portable\Common/mpu_wrappers.c **** 	}
 342:Source\portable\Common/mpu_wrappers.c **** #endif
 343:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 344:Source\portable\Common/mpu_wrappers.c **** 
 345:Source\portable\Common/mpu_wrappers.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
 346:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTaskList( char *pcWriteBuffer ) /* FREERTOS_SYSTEM_CALL */
 347:Source\portable\Common/mpu_wrappers.c **** 	{
 348:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 349:Source\portable\Common/mpu_wrappers.c **** 
 350:Source\portable\Common/mpu_wrappers.c **** 		vTaskList( pcWriteBuffer );
 351:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 352:Source\portable\Common/mpu_wrappers.c **** 	}
 353:Source\portable\Common/mpu_wrappers.c **** #endif
 354:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 355:Source\portable\Common/mpu_wrappers.c **** 
 356:Source\portable\Common/mpu_wrappers.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
 357:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTaskGetRunTimeStats( char *pcWriteBuffer ) /* FREERTOS_SYSTEM_CALL */
 358:Source\portable\Common/mpu_wrappers.c **** 	{
 359:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 360:Source\portable\Common/mpu_wrappers.c **** 
 361:Source\portable\Common/mpu_wrappers.c **** 		vTaskGetRunTimeStats( pcWriteBuffer );
 362:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 363:Source\portable\Common/mpu_wrappers.c **** 	}
 364:Source\portable\Common/mpu_wrappers.c **** #endif
 365:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 366:Source\portable\Common/mpu_wrappers.c **** 
 367:Source\portable\Common/mpu_wrappers.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
 368:Source\portable\Common/mpu_wrappers.c **** 	uint32_t MPU_ulTaskGetIdleRunTimeCounter( void ) /* FREERTOS_SYSTEM_CALL */
 369:Source\portable\Common/mpu_wrappers.c **** 	{
 370:Source\portable\Common/mpu_wrappers.c **** 	uint32_t xReturn;
 371:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 372:Source\portable\Common/mpu_wrappers.c **** 
 373:Source\portable\Common/mpu_wrappers.c **** 		xReturn = ulTaskGetIdleRunTimeCounter();
 374:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 375:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 376:Source\portable\Common/mpu_wrappers.c **** 	}
 377:Source\portable\Common/mpu_wrappers.c **** #endif
 378:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 379:Source\portable\Common/mpu_wrappers.c **** 
 380:Source\portable\Common/mpu_wrappers.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 381:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxTagValue ) /* FREERT
 382:Source\portable\Common/mpu_wrappers.c **** 	{
 383:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 384:Source\portable\Common/mpu_wrappers.c **** 
 385:Source\portable\Common/mpu_wrappers.c **** 		vTaskSetApplicationTaskTag( xTask, pxTagValue );
 386:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 387:Source\portable\Common/mpu_wrappers.c **** 	}
 388:Source\portable\Common/mpu_wrappers.c **** #endif
 389:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 390:Source\portable\Common/mpu_wrappers.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 22


 391:Source\portable\Common/mpu_wrappers.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 392:Source\portable\Common/mpu_wrappers.c **** 	TaskHookFunction_t MPU_xTaskGetApplicationTaskTag( TaskHandle_t xTask ) /* FREERTOS_SYSTEM_CALL */
 393:Source\portable\Common/mpu_wrappers.c **** 	{
 394:Source\portable\Common/mpu_wrappers.c **** 	TaskHookFunction_t xReturn;
 395:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 396:Source\portable\Common/mpu_wrappers.c **** 
 397:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskGetApplicationTaskTag( xTask );
 398:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 399:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 400:Source\portable\Common/mpu_wrappers.c **** 	}
 401:Source\portable\Common/mpu_wrappers.c **** #endif
 402:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 403:Source\portable\Common/mpu_wrappers.c **** 
 404:Source\portable\Common/mpu_wrappers.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 405:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvVa
 406:Source\portable\Common/mpu_wrappers.c **** 	{
 407:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 408:Source\portable\Common/mpu_wrappers.c **** 
 409:Source\portable\Common/mpu_wrappers.c **** 		vTaskSetThreadLocalStoragePointer( xTaskToSet, xIndex, pvValue );
 410:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 411:Source\portable\Common/mpu_wrappers.c **** 	}
 412:Source\portable\Common/mpu_wrappers.c **** #endif
 413:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 414:Source\portable\Common/mpu_wrappers.c **** 
 415:Source\portable\Common/mpu_wrappers.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 416:Source\portable\Common/mpu_wrappers.c **** 	void *MPU_pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex ) /* FR
 417:Source\portable\Common/mpu_wrappers.c **** 	{
 418:Source\portable\Common/mpu_wrappers.c **** 	void *pvReturn;
 419:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 420:Source\portable\Common/mpu_wrappers.c **** 
 421:Source\portable\Common/mpu_wrappers.c **** 		pvReturn = pvTaskGetThreadLocalStoragePointer( xTaskToQuery, xIndex );
 422:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 423:Source\portable\Common/mpu_wrappers.c **** 		return pvReturn;
 424:Source\portable\Common/mpu_wrappers.c **** 	}
 425:Source\portable\Common/mpu_wrappers.c **** #endif
 426:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 427:Source\portable\Common/mpu_wrappers.c **** 
 428:Source\portable\Common/mpu_wrappers.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 429:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter ) /* FREERTOS_S
 430:Source\portable\Common/mpu_wrappers.c **** 	{
 431:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 432:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 433:Source\portable\Common/mpu_wrappers.c **** 
 434:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskCallApplicationTaskHook( xTask, pvParameter );
 435:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 436:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 437:Source\portable\Common/mpu_wrappers.c **** 	}
 438:Source\portable\Common/mpu_wrappers.c **** #endif
 439:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 440:Source\portable\Common/mpu_wrappers.c **** 
 441:Source\portable\Common/mpu_wrappers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 442:Source\portable\Common/mpu_wrappers.c **** 	UBaseType_t MPU_uxTaskGetSystemState( TaskStatus_t *pxTaskStatusArray, UBaseType_t uxArraySize, ui
 443:Source\portable\Common/mpu_wrappers.c **** 	{
 444:Source\portable\Common/mpu_wrappers.c **** 	UBaseType_t uxReturn;
 445:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 446:Source\portable\Common/mpu_wrappers.c **** 
 447:Source\portable\Common/mpu_wrappers.c **** 		uxReturn = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, pulTotalRunTime );
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 23


 448:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 449:Source\portable\Common/mpu_wrappers.c **** 		return uxReturn;
 450:Source\portable\Common/mpu_wrappers.c **** 	}
 451:Source\portable\Common/mpu_wrappers.c **** #endif
 452:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 453:Source\portable\Common/mpu_wrappers.c **** 
 454:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xTaskCatchUpTicks( TickType_t xTicksToCatchUp ) /* FREERTOS_SYSTEM_CALL */
 455:Source\portable\Common/mpu_wrappers.c **** {
 808              		.loc 1 455 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 16
 811              		@ frame_needed = 1, uses_anonymous_args = 0
 812 0000 80B5     		push	{r7, lr}
 813              		.cfi_def_cfa_offset 8
 814              		.cfi_offset 7, -8
 815              		.cfi_offset 14, -4
 816 0002 84B0     		sub	sp, sp, #16
 817              		.cfi_def_cfa_offset 24
 818 0004 00AF     		add	r7, sp, #0
 819              		.cfi_def_cfa_register 7
 820 0006 7860     		str	r0, [r7, #4]
 456:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
 457:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 821              		.loc 1 457 0
 822 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 823 000c F860     		str	r0, [r7, #12]
 458:Source\portable\Common/mpu_wrappers.c **** 
 459:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xTaskCatchUpTicks( xTicksToCatchUp );
 824              		.loc 1 459 0
 825 000e 7868     		ldr	r0, [r7, #4]
 826 0010 FFF7FEFF 		bl	xTaskCatchUpTicks
 827 0014 B860     		str	r0, [r7, #8]
 460:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 828              		.loc 1 460 0
 829 0016 F868     		ldr	r0, [r7, #12]
 830 0018 FFF7FEFF 		bl	vPortResetPrivilege
 461:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 831              		.loc 1 461 0
 832 001c BB68     		ldr	r3, [r7, #8]
 462:Source\portable\Common/mpu_wrappers.c **** }
 833              		.loc 1 462 0
 834 001e 1846     		mov	r0, r3
 835 0020 1037     		adds	r7, r7, #16
 836              		.cfi_def_cfa_offset 8
 837 0022 BD46     		mov	sp, r7
 838              		.cfi_def_cfa_register 13
 839              		@ sp needed
 840 0024 80BD     		pop	{r7, pc}
 841              		.cfi_endproc
 842              	.LFE86:
 843              		.size	MPU_xTaskCatchUpTicks, .-MPU_xTaskCatchUpTicks
 844 0026 00BF     		.section	.text.MPU_uxTaskGetStackHighWaterMark,"ax",%progbits
 845              		.align	2
 846              		.global	MPU_uxTaskGetStackHighWaterMark
 847              		.thumb
 848              		.thumb_func
 849              		.type	MPU_uxTaskGetStackHighWaterMark, %function
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 24


 850              	MPU_uxTaskGetStackHighWaterMark:
 851              	.LFB87:
 463:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 464:Source\portable\Common/mpu_wrappers.c **** 
 465:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
 466:Source\portable\Common/mpu_wrappers.c **** 	UBaseType_t MPU_uxTaskGetStackHighWaterMark( TaskHandle_t xTask ) /* FREERTOS_SYSTEM_CALL */
 467:Source\portable\Common/mpu_wrappers.c **** 	{
 852              		.loc 1 467 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 16
 855              		@ frame_needed = 1, uses_anonymous_args = 0
 856 0000 80B5     		push	{r7, lr}
 857              		.cfi_def_cfa_offset 8
 858              		.cfi_offset 7, -8
 859              		.cfi_offset 14, -4
 860 0002 84B0     		sub	sp, sp, #16
 861              		.cfi_def_cfa_offset 24
 862 0004 00AF     		add	r7, sp, #0
 863              		.cfi_def_cfa_register 7
 864 0006 7860     		str	r0, [r7, #4]
 468:Source\portable\Common/mpu_wrappers.c **** 	UBaseType_t uxReturn;
 469:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 865              		.loc 1 469 0
 866 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 867 000c F860     		str	r0, [r7, #12]
 470:Source\portable\Common/mpu_wrappers.c **** 
 471:Source\portable\Common/mpu_wrappers.c **** 		uxReturn = uxTaskGetStackHighWaterMark( xTask );
 868              		.loc 1 471 0
 869 000e 7868     		ldr	r0, [r7, #4]
 870 0010 FFF7FEFF 		bl	uxTaskGetStackHighWaterMark
 871 0014 B860     		str	r0, [r7, #8]
 472:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 872              		.loc 1 472 0
 873 0016 F868     		ldr	r0, [r7, #12]
 874 0018 FFF7FEFF 		bl	vPortResetPrivilege
 473:Source\portable\Common/mpu_wrappers.c **** 		return uxReturn;
 875              		.loc 1 473 0
 876 001c BB68     		ldr	r3, [r7, #8]
 474:Source\portable\Common/mpu_wrappers.c **** 	}
 877              		.loc 1 474 0
 878 001e 1846     		mov	r0, r3
 879 0020 1037     		adds	r7, r7, #16
 880              		.cfi_def_cfa_offset 8
 881 0022 BD46     		mov	sp, r7
 882              		.cfi_def_cfa_register 13
 883              		@ sp needed
 884 0024 80BD     		pop	{r7, pc}
 885              		.cfi_endproc
 886              	.LFE87:
 887              		.size	MPU_uxTaskGetStackHighWaterMark, .-MPU_uxTaskGetStackHighWaterMark
 888 0026 00BF     		.section	.text.MPU_vTaskSetTimeOutState,"ax",%progbits
 889              		.align	2
 890              		.global	MPU_vTaskSetTimeOutState
 891              		.thumb
 892              		.thumb_func
 893              		.type	MPU_vTaskSetTimeOutState, %function
 894              	MPU_vTaskSetTimeOutState:
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 25


 895              	.LFB88:
 475:Source\portable\Common/mpu_wrappers.c **** #endif
 476:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 477:Source\portable\Common/mpu_wrappers.c **** 
 478:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
 479:Source\portable\Common/mpu_wrappers.c **** 	configSTACK_DEPTH_TYPE MPU_uxTaskGetStackHighWaterMark2( TaskHandle_t xTask ) /* FREERTOS_SYSTEM_C
 480:Source\portable\Common/mpu_wrappers.c **** 	{
 481:Source\portable\Common/mpu_wrappers.c **** 	configSTACK_DEPTH_TYPE uxReturn;
 482:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 483:Source\portable\Common/mpu_wrappers.c **** 
 484:Source\portable\Common/mpu_wrappers.c **** 		uxReturn = uxTaskGetStackHighWaterMark2( xTask );
 485:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 486:Source\portable\Common/mpu_wrappers.c **** 		return uxReturn;
 487:Source\portable\Common/mpu_wrappers.c **** 	}
 488:Source\portable\Common/mpu_wrappers.c **** #endif
 489:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 490:Source\portable\Common/mpu_wrappers.c **** 
 491:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetCurrentTaskHandle == 1 )
 492:Source\portable\Common/mpu_wrappers.c **** 	TaskHandle_t MPU_xTaskGetCurrentTaskHandle( void ) /* FREERTOS_SYSTEM_CALL */
 493:Source\portable\Common/mpu_wrappers.c **** 	{
 494:Source\portable\Common/mpu_wrappers.c **** 	TaskHandle_t xReturn;
 495:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 496:Source\portable\Common/mpu_wrappers.c **** 
 497:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskGetCurrentTaskHandle();
 498:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 499:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 500:Source\portable\Common/mpu_wrappers.c **** 	}
 501:Source\portable\Common/mpu_wrappers.c **** #endif
 502:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 503:Source\portable\Common/mpu_wrappers.c **** 
 504:Source\portable\Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetSchedulerState == 1 )
 505:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskGetSchedulerState( void ) /* FREERTOS_SYSTEM_CALL */
 506:Source\portable\Common/mpu_wrappers.c **** 	{
 507:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 508:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 509:Source\portable\Common/mpu_wrappers.c **** 
 510:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskGetSchedulerState();
 511:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 512:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 513:Source\portable\Common/mpu_wrappers.c **** 	}
 514:Source\portable\Common/mpu_wrappers.c **** #endif
 515:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 516:Source\portable\Common/mpu_wrappers.c **** 
 517:Source\portable\Common/mpu_wrappers.c **** void MPU_vTaskSetTimeOutState( TimeOut_t * const pxTimeOut ) /* FREERTOS_SYSTEM_CALL */
 518:Source\portable\Common/mpu_wrappers.c **** {
 896              		.loc 1 518 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 16
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900 0000 80B5     		push	{r7, lr}
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 7, -8
 903              		.cfi_offset 14, -4
 904 0002 84B0     		sub	sp, sp, #16
 905              		.cfi_def_cfa_offset 24
 906 0004 00AF     		add	r7, sp, #0
 907              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 26


 908 0006 7860     		str	r0, [r7, #4]
 519:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 909              		.loc 1 519 0
 910 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 911 000c F860     		str	r0, [r7, #12]
 520:Source\portable\Common/mpu_wrappers.c **** 
 521:Source\portable\Common/mpu_wrappers.c **** 	vTaskSetTimeOutState( pxTimeOut );
 912              		.loc 1 521 0
 913 000e 7868     		ldr	r0, [r7, #4]
 914 0010 FFF7FEFF 		bl	vTaskSetTimeOutState
 522:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 915              		.loc 1 522 0
 916 0014 F868     		ldr	r0, [r7, #12]
 917 0016 FFF7FEFF 		bl	vPortResetPrivilege
 523:Source\portable\Common/mpu_wrappers.c **** }
 918              		.loc 1 523 0
 919 001a 00BF     		nop
 920 001c 1037     		adds	r7, r7, #16
 921              		.cfi_def_cfa_offset 8
 922 001e BD46     		mov	sp, r7
 923              		.cfi_def_cfa_register 13
 924              		@ sp needed
 925 0020 80BD     		pop	{r7, pc}
 926              		.cfi_endproc
 927              	.LFE88:
 928              		.size	MPU_vTaskSetTimeOutState, .-MPU_vTaskSetTimeOutState
 929 0022 00BF     		.section	.text.MPU_xTaskCheckForTimeOut,"ax",%progbits
 930              		.align	2
 931              		.global	MPU_xTaskCheckForTimeOut
 932              		.thumb
 933              		.thumb_func
 934              		.type	MPU_xTaskCheckForTimeOut, %function
 935              	MPU_xTaskCheckForTimeOut:
 936              	.LFB89:
 524:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 525:Source\portable\Common/mpu_wrappers.c **** 
 526:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait 
 527:Source\portable\Common/mpu_wrappers.c **** {
 937              		.loc 1 527 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 16
 940              		@ frame_needed = 1, uses_anonymous_args = 0
 941 0000 80B5     		push	{r7, lr}
 942              		.cfi_def_cfa_offset 8
 943              		.cfi_offset 7, -8
 944              		.cfi_offset 14, -4
 945 0002 84B0     		sub	sp, sp, #16
 946              		.cfi_def_cfa_offset 24
 947 0004 00AF     		add	r7, sp, #0
 948              		.cfi_def_cfa_register 7
 949 0006 7860     		str	r0, [r7, #4]
 950 0008 3960     		str	r1, [r7]
 528:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
 529:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 951              		.loc 1 529 0
 952 000a FFF7FEFF 		bl	xPortRaisePrivilege
 953 000e F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 27


 530:Source\portable\Common/mpu_wrappers.c **** 
 531:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xTaskCheckForTimeOut( pxTimeOut, pxTicksToWait );
 954              		.loc 1 531 0
 955 0010 3968     		ldr	r1, [r7]
 956 0012 7868     		ldr	r0, [r7, #4]
 957 0014 FFF7FEFF 		bl	xTaskCheckForTimeOut
 958 0018 B860     		str	r0, [r7, #8]
 532:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 959              		.loc 1 532 0
 960 001a F868     		ldr	r0, [r7, #12]
 961 001c FFF7FEFF 		bl	vPortResetPrivilege
 533:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 962              		.loc 1 533 0
 963 0020 BB68     		ldr	r3, [r7, #8]
 534:Source\portable\Common/mpu_wrappers.c **** }
 964              		.loc 1 534 0
 965 0022 1846     		mov	r0, r3
 966 0024 1037     		adds	r7, r7, #16
 967              		.cfi_def_cfa_offset 8
 968 0026 BD46     		mov	sp, r7
 969              		.cfi_def_cfa_register 13
 970              		@ sp needed
 971 0028 80BD     		pop	{r7, pc}
 972              		.cfi_endproc
 973              	.LFE89:
 974              		.size	MPU_xTaskCheckForTimeOut, .-MPU_xTaskCheckForTimeOut
 975              		.section	.text.MPU_xTaskGenericNotify,"ax",%progbits
 976              		.align	2
 977              		.global	MPU_xTaskGenericNotify
 978              		.thumb
 979              		.thumb_func
 980              		.type	MPU_xTaskGenericNotify, %function
 981              	MPU_xTaskGenericNotify:
 982              	.LFB90:
 535:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 536:Source\portable\Common/mpu_wrappers.c **** 
 537:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 538:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAc
 539:Source\portable\Common/mpu_wrappers.c **** 	{
 983              		.loc 1 539 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 24
 986              		@ frame_needed = 1, uses_anonymous_args = 0
 987 0000 80B5     		push	{r7, lr}
 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 7, -8
 990              		.cfi_offset 14, -4
 991 0002 86B0     		sub	sp, sp, #24
 992              		.cfi_def_cfa_offset 32
 993 0004 00AF     		add	r7, sp, #0
 994              		.cfi_def_cfa_register 7
 995 0006 F860     		str	r0, [r7, #12]
 996 0008 B960     		str	r1, [r7, #8]
 997 000a 3B60     		str	r3, [r7]
 998 000c 1346     		mov	r3, r2
 999 000e FB71     		strb	r3, [r7, #7]
 540:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 28


 541:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1000              		.loc 1 541 0
 1001 0010 FFF7FEFF 		bl	xPortRaisePrivilege
 1002 0014 7861     		str	r0, [r7, #20]
 542:Source\portable\Common/mpu_wrappers.c **** 
 543:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskGenericNotify( xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue );
 1003              		.loc 1 543 0
 1004 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1005 0018 3B68     		ldr	r3, [r7]
 1006 001a B968     		ldr	r1, [r7, #8]
 1007 001c F868     		ldr	r0, [r7, #12]
 1008 001e FFF7FEFF 		bl	xTaskGenericNotify
 1009 0022 3861     		str	r0, [r7, #16]
 544:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1010              		.loc 1 544 0
 1011 0024 7869     		ldr	r0, [r7, #20]
 1012 0026 FFF7FEFF 		bl	vPortResetPrivilege
 545:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 1013              		.loc 1 545 0
 1014 002a 3B69     		ldr	r3, [r7, #16]
 546:Source\portable\Common/mpu_wrappers.c **** 	}
 1015              		.loc 1 546 0
 1016 002c 1846     		mov	r0, r3
 1017 002e 1837     		adds	r7, r7, #24
 1018              		.cfi_def_cfa_offset 8
 1019 0030 BD46     		mov	sp, r7
 1020              		.cfi_def_cfa_register 13
 1021              		@ sp needed
 1022 0032 80BD     		pop	{r7, pc}
 1023              		.cfi_endproc
 1024              	.LFE90:
 1025              		.size	MPU_xTaskGenericNotify, .-MPU_xTaskGenericNotify
 1026              		.section	.text.MPU_xTaskNotifyWait,"ax",%progbits
 1027              		.align	2
 1028              		.global	MPU_xTaskNotifyWait
 1029              		.thumb
 1030              		.thumb_func
 1031              		.type	MPU_xTaskNotifyWait, %function
 1032              	MPU_xTaskNotifyWait:
 1033              	.LFB91:
 547:Source\portable\Common/mpu_wrappers.c **** #endif
 548:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 549:Source\portable\Common/mpu_wrappers.c **** 
 550:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 551:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint3
 552:Source\portable\Common/mpu_wrappers.c **** 	{
 1034              		.loc 1 552 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 24
 1037              		@ frame_needed = 1, uses_anonymous_args = 0
 1038 0000 80B5     		push	{r7, lr}
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 7, -8
 1041              		.cfi_offset 14, -4
 1042 0002 86B0     		sub	sp, sp, #24
 1043              		.cfi_def_cfa_offset 32
 1044 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 29


 1045              		.cfi_def_cfa_register 7
 1046 0006 F860     		str	r0, [r7, #12]
 1047 0008 B960     		str	r1, [r7, #8]
 1048 000a 7A60     		str	r2, [r7, #4]
 1049 000c 3B60     		str	r3, [r7]
 553:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 554:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1050              		.loc 1 554 0
 1051 000e FFF7FEFF 		bl	xPortRaisePrivilege
 1052 0012 7861     		str	r0, [r7, #20]
 555:Source\portable\Common/mpu_wrappers.c **** 
 556:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskNotifyWait( ulBitsToClearOnEntry, ulBitsToClearOnExit, pulNotificationValue, xTick
 1053              		.loc 1 556 0
 1054 0014 3B68     		ldr	r3, [r7]
 1055 0016 7A68     		ldr	r2, [r7, #4]
 1056 0018 B968     		ldr	r1, [r7, #8]
 1057 001a F868     		ldr	r0, [r7, #12]
 1058 001c FFF7FEFF 		bl	xTaskNotifyWait
 1059 0020 3861     		str	r0, [r7, #16]
 557:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1060              		.loc 1 557 0
 1061 0022 7869     		ldr	r0, [r7, #20]
 1062 0024 FFF7FEFF 		bl	vPortResetPrivilege
 558:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 1063              		.loc 1 558 0
 1064 0028 3B69     		ldr	r3, [r7, #16]
 559:Source\portable\Common/mpu_wrappers.c **** 	}
 1065              		.loc 1 559 0
 1066 002a 1846     		mov	r0, r3
 1067 002c 1837     		adds	r7, r7, #24
 1068              		.cfi_def_cfa_offset 8
 1069 002e BD46     		mov	sp, r7
 1070              		.cfi_def_cfa_register 13
 1071              		@ sp needed
 1072 0030 80BD     		pop	{r7, pc}
 1073              		.cfi_endproc
 1074              	.LFE91:
 1075              		.size	MPU_xTaskNotifyWait, .-MPU_xTaskNotifyWait
 1076 0032 00BF     		.section	.text.MPU_ulTaskNotifyTake,"ax",%progbits
 1077              		.align	2
 1078              		.global	MPU_ulTaskNotifyTake
 1079              		.thumb
 1080              		.thumb_func
 1081              		.type	MPU_ulTaskNotifyTake, %function
 1082              	MPU_ulTaskNotifyTake:
 1083              	.LFB92:
 560:Source\portable\Common/mpu_wrappers.c **** #endif
 561:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 562:Source\portable\Common/mpu_wrappers.c **** 
 563:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 564:Source\portable\Common/mpu_wrappers.c **** 	uint32_t MPU_ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait ) /* FREERTOS
 565:Source\portable\Common/mpu_wrappers.c **** 	{
 1084              		.loc 1 565 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 16
 1087              		@ frame_needed = 1, uses_anonymous_args = 0
 1088 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 30


 1089              		.cfi_def_cfa_offset 8
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 1092 0002 84B0     		sub	sp, sp, #16
 1093              		.cfi_def_cfa_offset 24
 1094 0004 00AF     		add	r7, sp, #0
 1095              		.cfi_def_cfa_register 7
 1096 0006 7860     		str	r0, [r7, #4]
 1097 0008 3960     		str	r1, [r7]
 566:Source\portable\Common/mpu_wrappers.c **** 	uint32_t ulReturn;
 567:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1098              		.loc 1 567 0
 1099 000a FFF7FEFF 		bl	xPortRaisePrivilege
 1100 000e F860     		str	r0, [r7, #12]
 568:Source\portable\Common/mpu_wrappers.c **** 
 569:Source\portable\Common/mpu_wrappers.c **** 		ulReturn = ulTaskNotifyTake( xClearCountOnExit, xTicksToWait );
 1101              		.loc 1 569 0
 1102 0010 3968     		ldr	r1, [r7]
 1103 0012 7868     		ldr	r0, [r7, #4]
 1104 0014 FFF7FEFF 		bl	ulTaskNotifyTake
 1105 0018 B860     		str	r0, [r7, #8]
 570:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1106              		.loc 1 570 0
 1107 001a F868     		ldr	r0, [r7, #12]
 1108 001c FFF7FEFF 		bl	vPortResetPrivilege
 571:Source\portable\Common/mpu_wrappers.c **** 		return ulReturn;
 1109              		.loc 1 571 0
 1110 0020 BB68     		ldr	r3, [r7, #8]
 572:Source\portable\Common/mpu_wrappers.c **** 	}
 1111              		.loc 1 572 0
 1112 0022 1846     		mov	r0, r3
 1113 0024 1037     		adds	r7, r7, #16
 1114              		.cfi_def_cfa_offset 8
 1115 0026 BD46     		mov	sp, r7
 1116              		.cfi_def_cfa_register 13
 1117              		@ sp needed
 1118 0028 80BD     		pop	{r7, pc}
 1119              		.cfi_endproc
 1120              	.LFE92:
 1121              		.size	MPU_ulTaskNotifyTake, .-MPU_ulTaskNotifyTake
 1122              		.section	.text.MPU_xTaskNotifyStateClear,"ax",%progbits
 1123              		.align	2
 1124              		.global	MPU_xTaskNotifyStateClear
 1125              		.thumb
 1126              		.thumb_func
 1127              		.type	MPU_xTaskNotifyStateClear, %function
 1128              	MPU_xTaskNotifyStateClear:
 1129              	.LFB93:
 573:Source\portable\Common/mpu_wrappers.c **** #endif
 574:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 575:Source\portable\Common/mpu_wrappers.c **** 
 576:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 577:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskNotifyStateClear( TaskHandle_t xTask ) /* FREERTOS_SYSTEM_CALL */
 578:Source\portable\Common/mpu_wrappers.c **** 	{
 1130              		.loc 1 578 0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 31


 1133              		@ frame_needed = 1, uses_anonymous_args = 0
 1134 0000 80B5     		push	{r7, lr}
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 84B0     		sub	sp, sp, #16
 1139              		.cfi_def_cfa_offset 24
 1140 0004 00AF     		add	r7, sp, #0
 1141              		.cfi_def_cfa_register 7
 1142 0006 7860     		str	r0, [r7, #4]
 579:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 580:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1143              		.loc 1 580 0
 1144 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 1145 000c F860     		str	r0, [r7, #12]
 581:Source\portable\Common/mpu_wrappers.c **** 
 582:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTaskNotifyStateClear( xTask );
 1146              		.loc 1 582 0
 1147 000e 7868     		ldr	r0, [r7, #4]
 1148 0010 FFF7FEFF 		bl	xTaskNotifyStateClear
 1149 0014 B860     		str	r0, [r7, #8]
 583:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1150              		.loc 1 583 0
 1151 0016 F868     		ldr	r0, [r7, #12]
 1152 0018 FFF7FEFF 		bl	vPortResetPrivilege
 584:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 1153              		.loc 1 584 0
 1154 001c BB68     		ldr	r3, [r7, #8]
 585:Source\portable\Common/mpu_wrappers.c **** 	}
 1155              		.loc 1 585 0
 1156 001e 1846     		mov	r0, r3
 1157 0020 1037     		adds	r7, r7, #16
 1158              		.cfi_def_cfa_offset 8
 1159 0022 BD46     		mov	sp, r7
 1160              		.cfi_def_cfa_register 13
 1161              		@ sp needed
 1162 0024 80BD     		pop	{r7, pc}
 1163              		.cfi_endproc
 1164              	.LFE93:
 1165              		.size	MPU_xTaskNotifyStateClear, .-MPU_xTaskNotifyStateClear
 1166 0026 00BF     		.section	.text.MPU_ulTaskNotifyValueClear,"ax",%progbits
 1167              		.align	2
 1168              		.global	MPU_ulTaskNotifyValueClear
 1169              		.thumb
 1170              		.thumb_func
 1171              		.type	MPU_ulTaskNotifyValueClear, %function
 1172              	MPU_ulTaskNotifyValueClear:
 1173              	.LFB94:
 586:Source\portable\Common/mpu_wrappers.c **** #endif
 587:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 588:Source\portable\Common/mpu_wrappers.c **** 
 589:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 590:Source\portable\Common/mpu_wrappers.c **** 	uint32_t MPU_ulTaskNotifyValueClear( TaskHandle_t xTask, uint32_t ulBitsToClear ) /* FREERTOS_SYST
 591:Source\portable\Common/mpu_wrappers.c **** 	{
 1174              		.loc 1 591 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 32


 1177              		@ frame_needed = 1, uses_anonymous_args = 0
 1178 0000 80B5     		push	{r7, lr}
 1179              		.cfi_def_cfa_offset 8
 1180              		.cfi_offset 7, -8
 1181              		.cfi_offset 14, -4
 1182 0002 84B0     		sub	sp, sp, #16
 1183              		.cfi_def_cfa_offset 24
 1184 0004 00AF     		add	r7, sp, #0
 1185              		.cfi_def_cfa_register 7
 1186 0006 7860     		str	r0, [r7, #4]
 1187 0008 3960     		str	r1, [r7]
 592:Source\portable\Common/mpu_wrappers.c **** 	uint32_t ulReturn;
 593:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1188              		.loc 1 593 0
 1189 000a FFF7FEFF 		bl	xPortRaisePrivilege
 1190 000e F860     		str	r0, [r7, #12]
 594:Source\portable\Common/mpu_wrappers.c **** 
 595:Source\portable\Common/mpu_wrappers.c **** 		ulReturn = ulTaskNotifyValueClear( xTask, ulBitsToClear );
 1191              		.loc 1 595 0
 1192 0010 3968     		ldr	r1, [r7]
 1193 0012 7868     		ldr	r0, [r7, #4]
 1194 0014 FFF7FEFF 		bl	ulTaskNotifyValueClear
 1195 0018 B860     		str	r0, [r7, #8]
 596:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1196              		.loc 1 596 0
 1197 001a F868     		ldr	r0, [r7, #12]
 1198 001c FFF7FEFF 		bl	vPortResetPrivilege
 597:Source\portable\Common/mpu_wrappers.c **** 		return ulReturn;
 1199              		.loc 1 597 0
 1200 0020 BB68     		ldr	r3, [r7, #8]
 598:Source\portable\Common/mpu_wrappers.c **** 	}
 1201              		.loc 1 598 0
 1202 0022 1846     		mov	r0, r3
 1203 0024 1037     		adds	r7, r7, #16
 1204              		.cfi_def_cfa_offset 8
 1205 0026 BD46     		mov	sp, r7
 1206              		.cfi_def_cfa_register 13
 1207              		@ sp needed
 1208 0028 80BD     		pop	{r7, pc}
 1209              		.cfi_endproc
 1210              	.LFE94:
 1211              		.size	MPU_ulTaskNotifyValueClear, .-MPU_ulTaskNotifyValueClear
 1212              		.section	.text.MPU_xQueueGenericCreate,"ax",%progbits
 1213              		.align	2
 1214              		.global	MPU_xQueueGenericCreate
 1215              		.thumb
 1216              		.thumb_func
 1217              		.type	MPU_xQueueGenericCreate, %function
 1218              	MPU_xQueueGenericCreate:
 1219              	.LFB95:
 599:Source\portable\Common/mpu_wrappers.c **** #endif
 600:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 601:Source\portable\Common/mpu_wrappers.c **** 
 602:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 603:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueGenericCreate( UBaseType_t uxQueueLength, UBaseType_t uxItemSize, uint8_t 
 604:Source\portable\Common/mpu_wrappers.c **** 	{
 1220              		.loc 1 604 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 33


 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 24
 1223              		@ frame_needed = 1, uses_anonymous_args = 0
 1224 0000 80B5     		push	{r7, lr}
 1225              		.cfi_def_cfa_offset 8
 1226              		.cfi_offset 7, -8
 1227              		.cfi_offset 14, -4
 1228 0002 86B0     		sub	sp, sp, #24
 1229              		.cfi_def_cfa_offset 32
 1230 0004 00AF     		add	r7, sp, #0
 1231              		.cfi_def_cfa_register 7
 1232 0006 F860     		str	r0, [r7, #12]
 1233 0008 B960     		str	r1, [r7, #8]
 1234 000a 1346     		mov	r3, r2
 1235 000c FB71     		strb	r3, [r7, #7]
 605:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 606:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1236              		.loc 1 606 0
 1237 000e FFF7FEFF 		bl	xPortRaisePrivilege
 1238 0012 7861     		str	r0, [r7, #20]
 607:Source\portable\Common/mpu_wrappers.c **** 
 608:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueGenericCreate( uxQueueLength, uxItemSize, ucQueueType );
 1239              		.loc 1 608 0
 1240 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1241 0016 1A46     		mov	r2, r3
 1242 0018 B968     		ldr	r1, [r7, #8]
 1243 001a F868     		ldr	r0, [r7, #12]
 1244 001c FFF7FEFF 		bl	xQueueGenericCreate
 1245 0020 3861     		str	r0, [r7, #16]
 609:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1246              		.loc 1 609 0
 1247 0022 7869     		ldr	r0, [r7, #20]
 1248 0024 FFF7FEFF 		bl	vPortResetPrivilege
 610:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 1249              		.loc 1 610 0
 1250 0028 3B69     		ldr	r3, [r7, #16]
 611:Source\portable\Common/mpu_wrappers.c **** 	}
 1251              		.loc 1 611 0
 1252 002a 1846     		mov	r0, r3
 1253 002c 1837     		adds	r7, r7, #24
 1254              		.cfi_def_cfa_offset 8
 1255 002e BD46     		mov	sp, r7
 1256              		.cfi_def_cfa_register 13
 1257              		@ sp needed
 1258 0030 80BD     		pop	{r7, pc}
 1259              		.cfi_endproc
 1260              	.LFE95:
 1261              		.size	MPU_xQueueGenericCreate, .-MPU_xQueueGenericCreate
 1262 0032 00BF     		.section	.text.MPU_xQueueGenericReset,"ax",%progbits
 1263              		.align	2
 1264              		.global	MPU_xQueueGenericReset
 1265              		.thumb
 1266              		.thumb_func
 1267              		.type	MPU_xQueueGenericReset, %function
 1268              	MPU_xQueueGenericReset:
 1269              	.LFB96:
 612:Source\portable\Common/mpu_wrappers.c **** #endif
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 34


 613:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 614:Source\portable\Common/mpu_wrappers.c **** 
 615:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 616:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t ux
 617:Source\portable\Common/mpu_wrappers.c **** 	{
 618:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 619:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 620:Source\portable\Common/mpu_wrappers.c **** 
 621:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueGenericCreateStatic( uxQueueLength, uxItemSize, pucQueueStorage, pxStaticQueue, u
 622:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 623:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 624:Source\portable\Common/mpu_wrappers.c **** 	}
 625:Source\portable\Common/mpu_wrappers.c **** #endif
 626:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 627:Source\portable\Common/mpu_wrappers.c **** 
 628:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xQueueGenericReset( QueueHandle_t pxQueue, BaseType_t xNewQueue ) /* FREERTOS_SYSTEM
 629:Source\portable\Common/mpu_wrappers.c **** {
 1270              		.loc 1 629 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 16
 1273              		@ frame_needed = 1, uses_anonymous_args = 0
 1274 0000 80B5     		push	{r7, lr}
 1275              		.cfi_def_cfa_offset 8
 1276              		.cfi_offset 7, -8
 1277              		.cfi_offset 14, -4
 1278 0002 84B0     		sub	sp, sp, #16
 1279              		.cfi_def_cfa_offset 24
 1280 0004 00AF     		add	r7, sp, #0
 1281              		.cfi_def_cfa_register 7
 1282 0006 7860     		str	r0, [r7, #4]
 1283 0008 3960     		str	r1, [r7]
 630:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
 631:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1284              		.loc 1 631 0
 1285 000a FFF7FEFF 		bl	xPortRaisePrivilege
 1286 000e F860     		str	r0, [r7, #12]
 632:Source\portable\Common/mpu_wrappers.c **** 
 633:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xQueueGenericReset( pxQueue, xNewQueue );
 1287              		.loc 1 633 0
 1288 0010 3968     		ldr	r1, [r7]
 1289 0012 7868     		ldr	r0, [r7, #4]
 1290 0014 FFF7FEFF 		bl	xQueueGenericReset
 1291 0018 B860     		str	r0, [r7, #8]
 634:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1292              		.loc 1 634 0
 1293 001a F868     		ldr	r0, [r7, #12]
 1294 001c FFF7FEFF 		bl	vPortResetPrivilege
 635:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 1295              		.loc 1 635 0
 1296 0020 BB68     		ldr	r3, [r7, #8]
 636:Source\portable\Common/mpu_wrappers.c **** }
 1297              		.loc 1 636 0
 1298 0022 1846     		mov	r0, r3
 1299 0024 1037     		adds	r7, r7, #16
 1300              		.cfi_def_cfa_offset 8
 1301 0026 BD46     		mov	sp, r7
 1302              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 35


 1303              		@ sp needed
 1304 0028 80BD     		pop	{r7, pc}
 1305              		.cfi_endproc
 1306              	.LFE96:
 1307              		.size	MPU_xQueueGenericReset, .-MPU_xQueueGenericReset
 1308              		.section	.text.MPU_xQueueGenericSend,"ax",%progbits
 1309              		.align	2
 1310              		.global	MPU_xQueueGenericSend
 1311              		.thumb
 1312              		.thumb_func
 1313              		.type	MPU_xQueueGenericSend, %function
 1314              	MPU_xQueueGenericSend:
 1315              	.LFB97:
 637:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 638:Source\portable\Common/mpu_wrappers.c **** 
 639:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_
 640:Source\portable\Common/mpu_wrappers.c **** {
 1316              		.loc 1 640 0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 24
 1319              		@ frame_needed = 1, uses_anonymous_args = 0
 1320 0000 80B5     		push	{r7, lr}
 1321              		.cfi_def_cfa_offset 8
 1322              		.cfi_offset 7, -8
 1323              		.cfi_offset 14, -4
 1324 0002 86B0     		sub	sp, sp, #24
 1325              		.cfi_def_cfa_offset 32
 1326 0004 00AF     		add	r7, sp, #0
 1327              		.cfi_def_cfa_register 7
 1328 0006 F860     		str	r0, [r7, #12]
 1329 0008 B960     		str	r1, [r7, #8]
 1330 000a 7A60     		str	r2, [r7, #4]
 1331 000c 3B60     		str	r3, [r7]
 641:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
 642:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1332              		.loc 1 642 0
 1333 000e FFF7FEFF 		bl	xPortRaisePrivilege
 1334 0012 7861     		str	r0, [r7, #20]
 643:Source\portable\Common/mpu_wrappers.c **** 
 644:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xQueueGenericSend( xQueue, pvItemToQueue, xTicksToWait, xCopyPosition );
 1335              		.loc 1 644 0
 1336 0014 3B68     		ldr	r3, [r7]
 1337 0016 7A68     		ldr	r2, [r7, #4]
 1338 0018 B968     		ldr	r1, [r7, #8]
 1339 001a F868     		ldr	r0, [r7, #12]
 1340 001c FFF7FEFF 		bl	xQueueGenericSend
 1341 0020 3861     		str	r0, [r7, #16]
 645:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1342              		.loc 1 645 0
 1343 0022 7869     		ldr	r0, [r7, #20]
 1344 0024 FFF7FEFF 		bl	vPortResetPrivilege
 646:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 1345              		.loc 1 646 0
 1346 0028 3B69     		ldr	r3, [r7, #16]
 647:Source\portable\Common/mpu_wrappers.c **** }
 1347              		.loc 1 647 0
 1348 002a 1846     		mov	r0, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 36


 1349 002c 1837     		adds	r7, r7, #24
 1350              		.cfi_def_cfa_offset 8
 1351 002e BD46     		mov	sp, r7
 1352              		.cfi_def_cfa_register 13
 1353              		@ sp needed
 1354 0030 80BD     		pop	{r7, pc}
 1355              		.cfi_endproc
 1356              	.LFE97:
 1357              		.size	MPU_xQueueGenericSend, .-MPU_xQueueGenericSend
 1358 0032 00BF     		.section	.text.MPU_uxQueueMessagesWaiting,"ax",%progbits
 1359              		.align	2
 1360              		.global	MPU_uxQueueMessagesWaiting
 1361              		.thumb
 1362              		.thumb_func
 1363              		.type	MPU_uxQueueMessagesWaiting, %function
 1364              	MPU_uxQueueMessagesWaiting:
 1365              	.LFB98:
 648:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 649:Source\portable\Common/mpu_wrappers.c **** 
 650:Source\portable\Common/mpu_wrappers.c **** UBaseType_t MPU_uxQueueMessagesWaiting( const QueueHandle_t pxQueue ) /* FREERTOS_SYSTEM_CALL */
 651:Source\portable\Common/mpu_wrappers.c **** {
 1366              		.loc 1 651 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 16
 1369              		@ frame_needed = 1, uses_anonymous_args = 0
 1370 0000 80B5     		push	{r7, lr}
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 7, -8
 1373              		.cfi_offset 14, -4
 1374 0002 84B0     		sub	sp, sp, #16
 1375              		.cfi_def_cfa_offset 24
 1376 0004 00AF     		add	r7, sp, #0
 1377              		.cfi_def_cfa_register 7
 1378 0006 7860     		str	r0, [r7, #4]
 652:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1379              		.loc 1 652 0
 1380 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 1381 000c F860     		str	r0, [r7, #12]
 653:Source\portable\Common/mpu_wrappers.c **** UBaseType_t uxReturn;
 654:Source\portable\Common/mpu_wrappers.c **** 
 655:Source\portable\Common/mpu_wrappers.c **** 	uxReturn = uxQueueMessagesWaiting( pxQueue );
 1382              		.loc 1 655 0
 1383 000e 7868     		ldr	r0, [r7, #4]
 1384 0010 FFF7FEFF 		bl	uxQueueMessagesWaiting
 1385 0014 B860     		str	r0, [r7, #8]
 656:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1386              		.loc 1 656 0
 1387 0016 F868     		ldr	r0, [r7, #12]
 1388 0018 FFF7FEFF 		bl	vPortResetPrivilege
 657:Source\portable\Common/mpu_wrappers.c **** 	return uxReturn;
 1389              		.loc 1 657 0
 1390 001c BB68     		ldr	r3, [r7, #8]
 658:Source\portable\Common/mpu_wrappers.c **** }
 1391              		.loc 1 658 0
 1392 001e 1846     		mov	r0, r3
 1393 0020 1037     		adds	r7, r7, #16
 1394              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 37


 1395 0022 BD46     		mov	sp, r7
 1396              		.cfi_def_cfa_register 13
 1397              		@ sp needed
 1398 0024 80BD     		pop	{r7, pc}
 1399              		.cfi_endproc
 1400              	.LFE98:
 1401              		.size	MPU_uxQueueMessagesWaiting, .-MPU_uxQueueMessagesWaiting
 1402 0026 00BF     		.section	.text.MPU_uxQueueSpacesAvailable,"ax",%progbits
 1403              		.align	2
 1404              		.global	MPU_uxQueueSpacesAvailable
 1405              		.thumb
 1406              		.thumb_func
 1407              		.type	MPU_uxQueueSpacesAvailable, %function
 1408              	MPU_uxQueueSpacesAvailable:
 1409              	.LFB99:
 659:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 660:Source\portable\Common/mpu_wrappers.c **** 
 661:Source\portable\Common/mpu_wrappers.c **** UBaseType_t MPU_uxQueueSpacesAvailable( const QueueHandle_t xQueue ) /* FREERTOS_SYSTEM_CALL */
 662:Source\portable\Common/mpu_wrappers.c **** {
 1410              		.loc 1 662 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 16
 1413              		@ frame_needed = 1, uses_anonymous_args = 0
 1414 0000 80B5     		push	{r7, lr}
 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 7, -8
 1417              		.cfi_offset 14, -4
 1418 0002 84B0     		sub	sp, sp, #16
 1419              		.cfi_def_cfa_offset 24
 1420 0004 00AF     		add	r7, sp, #0
 1421              		.cfi_def_cfa_register 7
 1422 0006 7860     		str	r0, [r7, #4]
 663:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1423              		.loc 1 663 0
 1424 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 1425 000c F860     		str	r0, [r7, #12]
 664:Source\portable\Common/mpu_wrappers.c **** UBaseType_t uxReturn;
 665:Source\portable\Common/mpu_wrappers.c **** 
 666:Source\portable\Common/mpu_wrappers.c **** 	uxReturn = uxQueueSpacesAvailable( xQueue );
 1426              		.loc 1 666 0
 1427 000e 7868     		ldr	r0, [r7, #4]
 1428 0010 FFF7FEFF 		bl	uxQueueSpacesAvailable
 1429 0014 B860     		str	r0, [r7, #8]
 667:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1430              		.loc 1 667 0
 1431 0016 F868     		ldr	r0, [r7, #12]
 1432 0018 FFF7FEFF 		bl	vPortResetPrivilege
 668:Source\portable\Common/mpu_wrappers.c **** 	return uxReturn;
 1433              		.loc 1 668 0
 1434 001c BB68     		ldr	r3, [r7, #8]
 669:Source\portable\Common/mpu_wrappers.c **** }
 1435              		.loc 1 669 0
 1436 001e 1846     		mov	r0, r3
 1437 0020 1037     		adds	r7, r7, #16
 1438              		.cfi_def_cfa_offset 8
 1439 0022 BD46     		mov	sp, r7
 1440              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 38


 1441              		@ sp needed
 1442 0024 80BD     		pop	{r7, pc}
 1443              		.cfi_endproc
 1444              	.LFE99:
 1445              		.size	MPU_uxQueueSpacesAvailable, .-MPU_uxQueueSpacesAvailable
 1446 0026 00BF     		.section	.text.MPU_xQueueReceive,"ax",%progbits
 1447              		.align	2
 1448              		.global	MPU_xQueueReceive
 1449              		.thumb
 1450              		.thumb_func
 1451              		.type	MPU_xQueueReceive, %function
 1452              	MPU_xQueueReceive:
 1453              	.LFB100:
 670:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 671:Source\portable\Common/mpu_wrappers.c **** 
 672:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xQueueReceive( QueueHandle_t pxQueue, void * const pvBuffer, TickType_t xTicksToWait
 673:Source\portable\Common/mpu_wrappers.c **** {
 1454              		.loc 1 673 0
 1455              		.cfi_startproc
 1456              		@ args = 0, pretend = 0, frame = 24
 1457              		@ frame_needed = 1, uses_anonymous_args = 0
 1458 0000 80B5     		push	{r7, lr}
 1459              		.cfi_def_cfa_offset 8
 1460              		.cfi_offset 7, -8
 1461              		.cfi_offset 14, -4
 1462 0002 86B0     		sub	sp, sp, #24
 1463              		.cfi_def_cfa_offset 32
 1464 0004 00AF     		add	r7, sp, #0
 1465              		.cfi_def_cfa_register 7
 1466 0006 F860     		str	r0, [r7, #12]
 1467 0008 B960     		str	r1, [r7, #8]
 1468 000a 7A60     		str	r2, [r7, #4]
 674:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1469              		.loc 1 674 0
 1470 000c FFF7FEFF 		bl	xPortRaisePrivilege
 1471 0010 7861     		str	r0, [r7, #20]
 675:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
 676:Source\portable\Common/mpu_wrappers.c **** 
 677:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xQueueReceive( pxQueue, pvBuffer, xTicksToWait );
 1472              		.loc 1 677 0
 1473 0012 7A68     		ldr	r2, [r7, #4]
 1474 0014 B968     		ldr	r1, [r7, #8]
 1475 0016 F868     		ldr	r0, [r7, #12]
 1476 0018 FFF7FEFF 		bl	xQueueReceive
 1477 001c 3861     		str	r0, [r7, #16]
 678:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1478              		.loc 1 678 0
 1479 001e 7869     		ldr	r0, [r7, #20]
 1480 0020 FFF7FEFF 		bl	vPortResetPrivilege
 679:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 1481              		.loc 1 679 0
 1482 0024 3B69     		ldr	r3, [r7, #16]
 680:Source\portable\Common/mpu_wrappers.c **** }
 1483              		.loc 1 680 0
 1484 0026 1846     		mov	r0, r3
 1485 0028 1837     		adds	r7, r7, #24
 1486              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 39


 1487 002a BD46     		mov	sp, r7
 1488              		.cfi_def_cfa_register 13
 1489              		@ sp needed
 1490 002c 80BD     		pop	{r7, pc}
 1491              		.cfi_endproc
 1492              	.LFE100:
 1493              		.size	MPU_xQueueReceive, .-MPU_xQueueReceive
 1494 002e 00BF     		.section	.text.MPU_xQueuePeek,"ax",%progbits
 1495              		.align	2
 1496              		.global	MPU_xQueuePeek
 1497              		.thumb
 1498              		.thumb_func
 1499              		.type	MPU_xQueuePeek, %function
 1500              	MPU_xQueuePeek:
 1501              	.LFB101:
 681:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 682:Source\portable\Common/mpu_wrappers.c **** 
 683:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait ) /
 684:Source\portable\Common/mpu_wrappers.c **** {
 1502              		.loc 1 684 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 24
 1505              		@ frame_needed = 1, uses_anonymous_args = 0
 1506 0000 80B5     		push	{r7, lr}
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 7, -8
 1509              		.cfi_offset 14, -4
 1510 0002 86B0     		sub	sp, sp, #24
 1511              		.cfi_def_cfa_offset 32
 1512 0004 00AF     		add	r7, sp, #0
 1513              		.cfi_def_cfa_register 7
 1514 0006 F860     		str	r0, [r7, #12]
 1515 0008 B960     		str	r1, [r7, #8]
 1516 000a 7A60     		str	r2, [r7, #4]
 685:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1517              		.loc 1 685 0
 1518 000c FFF7FEFF 		bl	xPortRaisePrivilege
 1519 0010 7861     		str	r0, [r7, #20]
 686:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
 687:Source\portable\Common/mpu_wrappers.c **** 
 688:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xQueuePeek( xQueue, pvBuffer, xTicksToWait );
 1520              		.loc 1 688 0
 1521 0012 7A68     		ldr	r2, [r7, #4]
 1522 0014 B968     		ldr	r1, [r7, #8]
 1523 0016 F868     		ldr	r0, [r7, #12]
 1524 0018 FFF7FEFF 		bl	xQueuePeek
 1525 001c 3861     		str	r0, [r7, #16]
 689:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1526              		.loc 1 689 0
 1527 001e 7869     		ldr	r0, [r7, #20]
 1528 0020 FFF7FEFF 		bl	vPortResetPrivilege
 690:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 1529              		.loc 1 690 0
 1530 0024 3B69     		ldr	r3, [r7, #16]
 691:Source\portable\Common/mpu_wrappers.c **** }
 1531              		.loc 1 691 0
 1532 0026 1846     		mov	r0, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 40


 1533 0028 1837     		adds	r7, r7, #24
 1534              		.cfi_def_cfa_offset 8
 1535 002a BD46     		mov	sp, r7
 1536              		.cfi_def_cfa_register 13
 1537              		@ sp needed
 1538 002c 80BD     		pop	{r7, pc}
 1539              		.cfi_endproc
 1540              	.LFE101:
 1541              		.size	MPU_xQueuePeek, .-MPU_xQueuePeek
 1542 002e 00BF     		.section	.text.MPU_xQueueSemaphoreTake,"ax",%progbits
 1543              		.align	2
 1544              		.global	MPU_xQueueSemaphoreTake
 1545              		.thumb
 1546              		.thumb_func
 1547              		.type	MPU_xQueueSemaphoreTake, %function
 1548              	MPU_xQueueSemaphoreTake:
 1549              	.LFB102:
 692:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 693:Source\portable\Common/mpu_wrappers.c **** 
 694:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait ) /* FREERTOS_SYS
 695:Source\portable\Common/mpu_wrappers.c **** {
 1550              		.loc 1 695 0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 16
 1553              		@ frame_needed = 1, uses_anonymous_args = 0
 1554 0000 80B5     		push	{r7, lr}
 1555              		.cfi_def_cfa_offset 8
 1556              		.cfi_offset 7, -8
 1557              		.cfi_offset 14, -4
 1558 0002 84B0     		sub	sp, sp, #16
 1559              		.cfi_def_cfa_offset 24
 1560 0004 00AF     		add	r7, sp, #0
 1561              		.cfi_def_cfa_register 7
 1562 0006 7860     		str	r0, [r7, #4]
 1563 0008 3960     		str	r1, [r7]
 696:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1564              		.loc 1 696 0
 1565 000a FFF7FEFF 		bl	xPortRaisePrivilege
 1566 000e F860     		str	r0, [r7, #12]
 697:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
 698:Source\portable\Common/mpu_wrappers.c **** 
 699:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xQueueSemaphoreTake( xQueue, xTicksToWait );
 1567              		.loc 1 699 0
 1568 0010 3968     		ldr	r1, [r7]
 1569 0012 7868     		ldr	r0, [r7, #4]
 1570 0014 FFF7FEFF 		bl	xQueueSemaphoreTake
 1571 0018 B860     		str	r0, [r7, #8]
 700:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1572              		.loc 1 700 0
 1573 001a F868     		ldr	r0, [r7, #12]
 1574 001c FFF7FEFF 		bl	vPortResetPrivilege
 701:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 1575              		.loc 1 701 0
 1576 0020 BB68     		ldr	r3, [r7, #8]
 702:Source\portable\Common/mpu_wrappers.c **** }
 1577              		.loc 1 702 0
 1578 0022 1846     		mov	r0, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 41


 1579 0024 1037     		adds	r7, r7, #16
 1580              		.cfi_def_cfa_offset 8
 1581 0026 BD46     		mov	sp, r7
 1582              		.cfi_def_cfa_register 13
 1583              		@ sp needed
 1584 0028 80BD     		pop	{r7, pc}
 1585              		.cfi_endproc
 1586              	.LFE102:
 1587              		.size	MPU_xQueueSemaphoreTake, .-MPU_xQueueSemaphoreTake
 1588              		.section	.text.MPU_xQueueCreateMutex,"ax",%progbits
 1589              		.align	2
 1590              		.global	MPU_xQueueCreateMutex
 1591              		.thumb
 1592              		.thumb_func
 1593              		.type	MPU_xQueueCreateMutex, %function
 1594              	MPU_xQueueCreateMutex:
 1595              	.LFB103:
 703:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 704:Source\portable\Common/mpu_wrappers.c **** 
 705:Source\portable\Common/mpu_wrappers.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 706:Source\portable\Common/mpu_wrappers.c **** 	TaskHandle_t MPU_xQueueGetMutexHolder( QueueHandle_t xSemaphore ) /* FREERTOS_SYSTEM_CALL */
 707:Source\portable\Common/mpu_wrappers.c **** 	{
 708:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 709:Source\portable\Common/mpu_wrappers.c **** 	void * xReturn;
 710:Source\portable\Common/mpu_wrappers.c **** 
 711:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueGetMutexHolder( xSemaphore );
 712:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 713:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 714:Source\portable\Common/mpu_wrappers.c **** 	}
 715:Source\portable\Common/mpu_wrappers.c **** #endif
 716:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 717:Source\portable\Common/mpu_wrappers.c **** 
 718:Source\portable\Common/mpu_wrappers.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 719:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueCreateMutex( const uint8_t ucQueueType ) /* FREERTOS_SYSTEM_CALL */
 720:Source\portable\Common/mpu_wrappers.c **** 	{
 1596              		.loc 1 720 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 16
 1599              		@ frame_needed = 1, uses_anonymous_args = 0
 1600 0000 80B5     		push	{r7, lr}
 1601              		.cfi_def_cfa_offset 8
 1602              		.cfi_offset 7, -8
 1603              		.cfi_offset 14, -4
 1604 0002 84B0     		sub	sp, sp, #16
 1605              		.cfi_def_cfa_offset 24
 1606 0004 00AF     		add	r7, sp, #0
 1607              		.cfi_def_cfa_register 7
 1608 0006 0346     		mov	r3, r0
 1609 0008 FB71     		strb	r3, [r7, #7]
 721:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 722:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1610              		.loc 1 722 0
 1611 000a FFF7FEFF 		bl	xPortRaisePrivilege
 1612 000e F860     		str	r0, [r7, #12]
 723:Source\portable\Common/mpu_wrappers.c **** 
 724:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueCreateMutex( ucQueueType );
 1613              		.loc 1 724 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 42


 1614 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1615 0012 1846     		mov	r0, r3
 1616 0014 FFF7FEFF 		bl	xQueueCreateMutex
 1617 0018 B860     		str	r0, [r7, #8]
 725:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1618              		.loc 1 725 0
 1619 001a F868     		ldr	r0, [r7, #12]
 1620 001c FFF7FEFF 		bl	vPortResetPrivilege
 726:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 1621              		.loc 1 726 0
 1622 0020 BB68     		ldr	r3, [r7, #8]
 727:Source\portable\Common/mpu_wrappers.c **** 	}
 1623              		.loc 1 727 0
 1624 0022 1846     		mov	r0, r3
 1625 0024 1037     		adds	r7, r7, #16
 1626              		.cfi_def_cfa_offset 8
 1627 0026 BD46     		mov	sp, r7
 1628              		.cfi_def_cfa_register 13
 1629              		@ sp needed
 1630 0028 80BD     		pop	{r7, pc}
 1631              		.cfi_endproc
 1632              	.LFE103:
 1633              		.size	MPU_xQueueCreateMutex, .-MPU_xQueueCreateMutex
 1634 002a 00BF     		.section	.text.MPU_xQueueCreateCountingSemaphore,"ax",%progbits
 1635              		.align	2
 1636              		.global	MPU_xQueueCreateCountingSemaphore
 1637              		.thumb
 1638              		.thumb_func
 1639              		.type	MPU_xQueueCreateCountingSemaphore, %function
 1640              	MPU_xQueueCreateCountingSemaphore:
 1641              	.LFB104:
 728:Source\portable\Common/mpu_wrappers.c **** #endif
 729:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 730:Source\portable\Common/mpu_wrappers.c **** 
 731:Source\portable\Common/mpu_wrappers.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 732:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue
 733:Source\portable\Common/mpu_wrappers.c **** 	{
 734:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 735:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 736:Source\portable\Common/mpu_wrappers.c **** 
 737:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueCreateMutexStatic( ucQueueType, pxStaticQueue );
 738:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 739:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 740:Source\portable\Common/mpu_wrappers.c **** 	}
 741:Source\portable\Common/mpu_wrappers.c **** #endif
 742:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 743:Source\portable\Common/mpu_wrappers.c **** 
 744:Source\portable\Common/mpu_wrappers.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 745:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueCreateCountingSemaphore( UBaseType_t uxCountValue, UBaseType_t uxInitialCo
 746:Source\portable\Common/mpu_wrappers.c **** 	{
 1642              		.loc 1 746 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 16
 1645              		@ frame_needed = 1, uses_anonymous_args = 0
 1646 0000 80B5     		push	{r7, lr}
 1647              		.cfi_def_cfa_offset 8
 1648              		.cfi_offset 7, -8
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 43


 1649              		.cfi_offset 14, -4
 1650 0002 84B0     		sub	sp, sp, #16
 1651              		.cfi_def_cfa_offset 24
 1652 0004 00AF     		add	r7, sp, #0
 1653              		.cfi_def_cfa_register 7
 1654 0006 7860     		str	r0, [r7, #4]
 1655 0008 3960     		str	r1, [r7]
 747:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 748:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1656              		.loc 1 748 0
 1657 000a FFF7FEFF 		bl	xPortRaisePrivilege
 1658 000e F860     		str	r0, [r7, #12]
 749:Source\portable\Common/mpu_wrappers.c **** 
 750:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueCreateCountingSemaphore( uxCountValue, uxInitialCount );
 1659              		.loc 1 750 0
 1660 0010 3968     		ldr	r1, [r7]
 1661 0012 7868     		ldr	r0, [r7, #4]
 1662 0014 FFF7FEFF 		bl	xQueueCreateCountingSemaphore
 1663 0018 B860     		str	r0, [r7, #8]
 751:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1664              		.loc 1 751 0
 1665 001a F868     		ldr	r0, [r7, #12]
 1666 001c FFF7FEFF 		bl	vPortResetPrivilege
 752:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 1667              		.loc 1 752 0
 1668 0020 BB68     		ldr	r3, [r7, #8]
 753:Source\portable\Common/mpu_wrappers.c **** 	}
 1669              		.loc 1 753 0
 1670 0022 1846     		mov	r0, r3
 1671 0024 1037     		adds	r7, r7, #16
 1672              		.cfi_def_cfa_offset 8
 1673 0026 BD46     		mov	sp, r7
 1674              		.cfi_def_cfa_register 13
 1675              		@ sp needed
 1676 0028 80BD     		pop	{r7, pc}
 1677              		.cfi_endproc
 1678              	.LFE104:
 1679              		.size	MPU_xQueueCreateCountingSemaphore, .-MPU_xQueueCreateCountingSemaphore
 1680              		.section	.text.MPU_xQueueTakeMutexRecursive,"ax",%progbits
 1681              		.align	2
 1682              		.global	MPU_xQueueTakeMutexRecursive
 1683              		.thumb
 1684              		.thumb_func
 1685              		.type	MPU_xQueueTakeMutexRecursive, %function
 1686              	MPU_xQueueTakeMutexRecursive:
 1687              	.LFB105:
 754:Source\portable\Common/mpu_wrappers.c **** #endif
 755:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 756:Source\portable\Common/mpu_wrappers.c **** 
 757:Source\portable\Common/mpu_wrappers.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 758:Source\portable\Common/mpu_wrappers.c **** 
 759:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseTy
 760:Source\portable\Common/mpu_wrappers.c **** 	{
 761:Source\portable\Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 762:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 763:Source\portable\Common/mpu_wrappers.c **** 
 764:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueCreateCountingSemaphoreStatic( uxMaxCount, uxInitialCount, pxStaticQueue );
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 44


 765:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 766:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 767:Source\portable\Common/mpu_wrappers.c **** 	}
 768:Source\portable\Common/mpu_wrappers.c **** #endif
 769:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 770:Source\portable\Common/mpu_wrappers.c **** 
 771:Source\portable\Common/mpu_wrappers.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 772:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xBlockTime ) /* FREERTOS
 773:Source\portable\Common/mpu_wrappers.c **** 	{
 1688              		.loc 1 773 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 16
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692 0000 80B5     		push	{r7, lr}
 1693              		.cfi_def_cfa_offset 8
 1694              		.cfi_offset 7, -8
 1695              		.cfi_offset 14, -4
 1696 0002 84B0     		sub	sp, sp, #16
 1697              		.cfi_def_cfa_offset 24
 1698 0004 00AF     		add	r7, sp, #0
 1699              		.cfi_def_cfa_register 7
 1700 0006 7860     		str	r0, [r7, #4]
 1701 0008 3960     		str	r1, [r7]
 774:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 775:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1702              		.loc 1 775 0
 1703 000a FFF7FEFF 		bl	xPortRaisePrivilege
 1704 000e F860     		str	r0, [r7, #12]
 776:Source\portable\Common/mpu_wrappers.c **** 
 777:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueTakeMutexRecursive( xMutex, xBlockTime );
 1705              		.loc 1 777 0
 1706 0010 3968     		ldr	r1, [r7]
 1707 0012 7868     		ldr	r0, [r7, #4]
 1708 0014 FFF7FEFF 		bl	xQueueTakeMutexRecursive
 1709 0018 B860     		str	r0, [r7, #8]
 778:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1710              		.loc 1 778 0
 1711 001a F868     		ldr	r0, [r7, #12]
 1712 001c FFF7FEFF 		bl	vPortResetPrivilege
 779:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 1713              		.loc 1 779 0
 1714 0020 BB68     		ldr	r3, [r7, #8]
 780:Source\portable\Common/mpu_wrappers.c **** 	}
 1715              		.loc 1 780 0
 1716 0022 1846     		mov	r0, r3
 1717 0024 1037     		adds	r7, r7, #16
 1718              		.cfi_def_cfa_offset 8
 1719 0026 BD46     		mov	sp, r7
 1720              		.cfi_def_cfa_register 13
 1721              		@ sp needed
 1722 0028 80BD     		pop	{r7, pc}
 1723              		.cfi_endproc
 1724              	.LFE105:
 1725              		.size	MPU_xQueueTakeMutexRecursive, .-MPU_xQueueTakeMutexRecursive
 1726              		.section	.text.MPU_xQueueGiveMutexRecursive,"ax",%progbits
 1727              		.align	2
 1728              		.global	MPU_xQueueGiveMutexRecursive
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 45


 1729              		.thumb
 1730              		.thumb_func
 1731              		.type	MPU_xQueueGiveMutexRecursive, %function
 1732              	MPU_xQueueGiveMutexRecursive:
 1733              	.LFB106:
 781:Source\portable\Common/mpu_wrappers.c **** #endif
 782:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 783:Source\portable\Common/mpu_wrappers.c **** 
 784:Source\portable\Common/mpu_wrappers.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 785:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xQueueGiveMutexRecursive( QueueHandle_t xMutex ) /* FREERTOS_SYSTEM_CALL */
 786:Source\portable\Common/mpu_wrappers.c **** 	{
 1734              		.loc 1 786 0
 1735              		.cfi_startproc
 1736              		@ args = 0, pretend = 0, frame = 16
 1737              		@ frame_needed = 1, uses_anonymous_args = 0
 1738 0000 80B5     		push	{r7, lr}
 1739              		.cfi_def_cfa_offset 8
 1740              		.cfi_offset 7, -8
 1741              		.cfi_offset 14, -4
 1742 0002 84B0     		sub	sp, sp, #16
 1743              		.cfi_def_cfa_offset 24
 1744 0004 00AF     		add	r7, sp, #0
 1745              		.cfi_def_cfa_register 7
 1746 0006 7860     		str	r0, [r7, #4]
 787:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 788:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1747              		.loc 1 788 0
 1748 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 1749 000c F860     		str	r0, [r7, #12]
 789:Source\portable\Common/mpu_wrappers.c **** 
 790:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueGiveMutexRecursive( xMutex );
 1750              		.loc 1 790 0
 1751 000e 7868     		ldr	r0, [r7, #4]
 1752 0010 FFF7FEFF 		bl	xQueueGiveMutexRecursive
 1753 0014 B860     		str	r0, [r7, #8]
 791:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1754              		.loc 1 791 0
 1755 0016 F868     		ldr	r0, [r7, #12]
 1756 0018 FFF7FEFF 		bl	vPortResetPrivilege
 792:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 1757              		.loc 1 792 0
 1758 001c BB68     		ldr	r3, [r7, #8]
 793:Source\portable\Common/mpu_wrappers.c **** 	}
 1759              		.loc 1 793 0
 1760 001e 1846     		mov	r0, r3
 1761 0020 1037     		adds	r7, r7, #16
 1762              		.cfi_def_cfa_offset 8
 1763 0022 BD46     		mov	sp, r7
 1764              		.cfi_def_cfa_register 13
 1765              		@ sp needed
 1766 0024 80BD     		pop	{r7, pc}
 1767              		.cfi_endproc
 1768              	.LFE106:
 1769              		.size	MPU_xQueueGiveMutexRecursive, .-MPU_xQueueGiveMutexRecursive
 1770 0026 00BF     		.section	.text.MPU_vQueueAddToRegistry,"ax",%progbits
 1771              		.align	2
 1772              		.global	MPU_vQueueAddToRegistry
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 46


 1773              		.thumb
 1774              		.thumb_func
 1775              		.type	MPU_vQueueAddToRegistry, %function
 1776              	MPU_vQueueAddToRegistry:
 1777              	.LFB107:
 794:Source\portable\Common/mpu_wrappers.c **** #endif
 795:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 796:Source\portable\Common/mpu_wrappers.c **** 
 797:Source\portable\Common/mpu_wrappers.c **** #if( ( configUSE_QUEUE_SETS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 798:Source\portable\Common/mpu_wrappers.c **** 	QueueSetHandle_t MPU_xQueueCreateSet( UBaseType_t uxEventQueueLength ) /* FREERTOS_SYSTEM_CALL */
 799:Source\portable\Common/mpu_wrappers.c **** 	{
 800:Source\portable\Common/mpu_wrappers.c **** 	QueueSetHandle_t xReturn;
 801:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 802:Source\portable\Common/mpu_wrappers.c **** 
 803:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueCreateSet( uxEventQueueLength );
 804:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 805:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 806:Source\portable\Common/mpu_wrappers.c **** 	}
 807:Source\portable\Common/mpu_wrappers.c **** #endif
 808:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 809:Source\portable\Common/mpu_wrappers.c **** 
 810:Source\portable\Common/mpu_wrappers.c **** #if ( configUSE_QUEUE_SETS == 1 )
 811:Source\portable\Common/mpu_wrappers.c **** 	QueueSetMemberHandle_t MPU_xQueueSelectFromSet( QueueSetHandle_t xQueueSet, TickType_t xBlockTimeT
 812:Source\portable\Common/mpu_wrappers.c **** 	{
 813:Source\portable\Common/mpu_wrappers.c **** 	QueueSetMemberHandle_t xReturn;
 814:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 815:Source\portable\Common/mpu_wrappers.c **** 
 816:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueSelectFromSet( xQueueSet, xBlockTimeTicks );
 817:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 818:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 819:Source\portable\Common/mpu_wrappers.c **** 	}
 820:Source\portable\Common/mpu_wrappers.c **** #endif
 821:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 822:Source\portable\Common/mpu_wrappers.c **** 
 823:Source\portable\Common/mpu_wrappers.c **** #if ( configUSE_QUEUE_SETS == 1 )
 824:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSe
 825:Source\portable\Common/mpu_wrappers.c **** 	{
 826:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 827:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 828:Source\portable\Common/mpu_wrappers.c **** 
 829:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueAddToSet( xQueueOrSemaphore, xQueueSet );
 830:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 831:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 832:Source\portable\Common/mpu_wrappers.c **** 	}
 833:Source\portable\Common/mpu_wrappers.c **** #endif
 834:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 835:Source\portable\Common/mpu_wrappers.c **** 
 836:Source\portable\Common/mpu_wrappers.c **** #if ( configUSE_QUEUE_SETS == 1 )
 837:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQu
 838:Source\portable\Common/mpu_wrappers.c **** 	{
 839:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 840:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 841:Source\portable\Common/mpu_wrappers.c **** 
 842:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xQueueRemoveFromSet( xQueueOrSemaphore, xQueueSet );
 843:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 844:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 845:Source\portable\Common/mpu_wrappers.c **** 	}
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 47


 846:Source\portable\Common/mpu_wrappers.c **** #endif
 847:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 848:Source\portable\Common/mpu_wrappers.c **** 
 849:Source\portable\Common/mpu_wrappers.c **** #if configQUEUE_REGISTRY_SIZE > 0
 850:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcName ) /* FREERTOS_SYSTEM_CALL *
 851:Source\portable\Common/mpu_wrappers.c **** 	{
 1778              		.loc 1 851 0
 1779              		.cfi_startproc
 1780              		@ args = 0, pretend = 0, frame = 16
 1781              		@ frame_needed = 1, uses_anonymous_args = 0
 1782 0000 80B5     		push	{r7, lr}
 1783              		.cfi_def_cfa_offset 8
 1784              		.cfi_offset 7, -8
 1785              		.cfi_offset 14, -4
 1786 0002 84B0     		sub	sp, sp, #16
 1787              		.cfi_def_cfa_offset 24
 1788 0004 00AF     		add	r7, sp, #0
 1789              		.cfi_def_cfa_register 7
 1790 0006 7860     		str	r0, [r7, #4]
 1791 0008 3960     		str	r1, [r7]
 852:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1792              		.loc 1 852 0
 1793 000a FFF7FEFF 		bl	xPortRaisePrivilege
 1794 000e F860     		str	r0, [r7, #12]
 853:Source\portable\Common/mpu_wrappers.c **** 
 854:Source\portable\Common/mpu_wrappers.c **** 		vQueueAddToRegistry( xQueue, pcName );
 1795              		.loc 1 854 0
 1796 0010 3968     		ldr	r1, [r7]
 1797 0012 7868     		ldr	r0, [r7, #4]
 1798 0014 FFF7FEFF 		bl	vQueueAddToRegistry
 855:Source\portable\Common/mpu_wrappers.c **** 
 856:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1799              		.loc 1 856 0
 1800 0018 F868     		ldr	r0, [r7, #12]
 1801 001a FFF7FEFF 		bl	vPortResetPrivilege
 857:Source\portable\Common/mpu_wrappers.c **** 	}
 1802              		.loc 1 857 0
 1803 001e 00BF     		nop
 1804 0020 1037     		adds	r7, r7, #16
 1805              		.cfi_def_cfa_offset 8
 1806 0022 BD46     		mov	sp, r7
 1807              		.cfi_def_cfa_register 13
 1808              		@ sp needed
 1809 0024 80BD     		pop	{r7, pc}
 1810              		.cfi_endproc
 1811              	.LFE107:
 1812              		.size	MPU_vQueueAddToRegistry, .-MPU_vQueueAddToRegistry
 1813 0026 00BF     		.section	.text.MPU_vQueueUnregisterQueue,"ax",%progbits
 1814              		.align	2
 1815              		.global	MPU_vQueueUnregisterQueue
 1816              		.thumb
 1817              		.thumb_func
 1818              		.type	MPU_vQueueUnregisterQueue, %function
 1819              	MPU_vQueueUnregisterQueue:
 1820              	.LFB108:
 858:Source\portable\Common/mpu_wrappers.c **** #endif
 859:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 48


 860:Source\portable\Common/mpu_wrappers.c **** 
 861:Source\portable\Common/mpu_wrappers.c **** #if configQUEUE_REGISTRY_SIZE > 0
 862:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vQueueUnregisterQueue( QueueHandle_t xQueue ) /* FREERTOS_SYSTEM_CALL */
 863:Source\portable\Common/mpu_wrappers.c **** 	{
 1821              		.loc 1 863 0
 1822              		.cfi_startproc
 1823              		@ args = 0, pretend = 0, frame = 16
 1824              		@ frame_needed = 1, uses_anonymous_args = 0
 1825 0000 80B5     		push	{r7, lr}
 1826              		.cfi_def_cfa_offset 8
 1827              		.cfi_offset 7, -8
 1828              		.cfi_offset 14, -4
 1829 0002 84B0     		sub	sp, sp, #16
 1830              		.cfi_def_cfa_offset 24
 1831 0004 00AF     		add	r7, sp, #0
 1832              		.cfi_def_cfa_register 7
 1833 0006 7860     		str	r0, [r7, #4]
 864:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1834              		.loc 1 864 0
 1835 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 1836 000c F860     		str	r0, [r7, #12]
 865:Source\portable\Common/mpu_wrappers.c **** 
 866:Source\portable\Common/mpu_wrappers.c **** 		vQueueUnregisterQueue( xQueue );
 1837              		.loc 1 866 0
 1838 000e 7868     		ldr	r0, [r7, #4]
 1839 0010 FFF7FEFF 		bl	vQueueUnregisterQueue
 867:Source\portable\Common/mpu_wrappers.c **** 
 868:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1840              		.loc 1 868 0
 1841 0014 F868     		ldr	r0, [r7, #12]
 1842 0016 FFF7FEFF 		bl	vPortResetPrivilege
 869:Source\portable\Common/mpu_wrappers.c **** 	}
 1843              		.loc 1 869 0
 1844 001a 00BF     		nop
 1845 001c 1037     		adds	r7, r7, #16
 1846              		.cfi_def_cfa_offset 8
 1847 001e BD46     		mov	sp, r7
 1848              		.cfi_def_cfa_register 13
 1849              		@ sp needed
 1850 0020 80BD     		pop	{r7, pc}
 1851              		.cfi_endproc
 1852              	.LFE108:
 1853              		.size	MPU_vQueueUnregisterQueue, .-MPU_vQueueUnregisterQueue
 1854 0022 00BF     		.section	.text.MPU_pcQueueGetName,"ax",%progbits
 1855              		.align	2
 1856              		.global	MPU_pcQueueGetName
 1857              		.thumb
 1858              		.thumb_func
 1859              		.type	MPU_pcQueueGetName, %function
 1860              	MPU_pcQueueGetName:
 1861              	.LFB109:
 870:Source\portable\Common/mpu_wrappers.c **** #endif
 871:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 872:Source\portable\Common/mpu_wrappers.c **** 
 873:Source\portable\Common/mpu_wrappers.c **** #if configQUEUE_REGISTRY_SIZE > 0
 874:Source\portable\Common/mpu_wrappers.c **** 	const char *MPU_pcQueueGetName( QueueHandle_t xQueue ) /* FREERTOS_SYSTEM_CALL */
 875:Source\portable\Common/mpu_wrappers.c **** 	{
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 49


 1862              		.loc 1 875 0
 1863              		.cfi_startproc
 1864              		@ args = 0, pretend = 0, frame = 16
 1865              		@ frame_needed = 1, uses_anonymous_args = 0
 1866 0000 80B5     		push	{r7, lr}
 1867              		.cfi_def_cfa_offset 8
 1868              		.cfi_offset 7, -8
 1869              		.cfi_offset 14, -4
 1870 0002 84B0     		sub	sp, sp, #16
 1871              		.cfi_def_cfa_offset 24
 1872 0004 00AF     		add	r7, sp, #0
 1873              		.cfi_def_cfa_register 7
 1874 0006 7860     		str	r0, [r7, #4]
 876:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1875              		.loc 1 876 0
 1876 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 1877 000c F860     		str	r0, [r7, #12]
 877:Source\portable\Common/mpu_wrappers.c **** 	const char *pcReturn;
 878:Source\portable\Common/mpu_wrappers.c **** 
 879:Source\portable\Common/mpu_wrappers.c **** 		pcReturn = pcQueueGetName( xQueue );
 1878              		.loc 1 879 0
 1879 000e 7868     		ldr	r0, [r7, #4]
 1880 0010 FFF7FEFF 		bl	pcQueueGetName
 1881 0014 B860     		str	r0, [r7, #8]
 880:Source\portable\Common/mpu_wrappers.c **** 
 881:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1882              		.loc 1 881 0
 1883 0016 F868     		ldr	r0, [r7, #12]
 1884 0018 FFF7FEFF 		bl	vPortResetPrivilege
 882:Source\portable\Common/mpu_wrappers.c **** 		return pcReturn;
 1885              		.loc 1 882 0
 1886 001c BB68     		ldr	r3, [r7, #8]
 883:Source\portable\Common/mpu_wrappers.c **** 	}
 1887              		.loc 1 883 0
 1888 001e 1846     		mov	r0, r3
 1889 0020 1037     		adds	r7, r7, #16
 1890              		.cfi_def_cfa_offset 8
 1891 0022 BD46     		mov	sp, r7
 1892              		.cfi_def_cfa_register 13
 1893              		@ sp needed
 1894 0024 80BD     		pop	{r7, pc}
 1895              		.cfi_endproc
 1896              	.LFE109:
 1897              		.size	MPU_pcQueueGetName, .-MPU_pcQueueGetName
 1898 0026 00BF     		.section	.text.MPU_vQueueDelete,"ax",%progbits
 1899              		.align	2
 1900              		.global	MPU_vQueueDelete
 1901              		.thumb
 1902              		.thumb_func
 1903              		.type	MPU_vQueueDelete, %function
 1904              	MPU_vQueueDelete:
 1905              	.LFB110:
 884:Source\portable\Common/mpu_wrappers.c **** #endif
 885:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 886:Source\portable\Common/mpu_wrappers.c **** 
 887:Source\portable\Common/mpu_wrappers.c **** void MPU_vQueueDelete( QueueHandle_t xQueue ) /* FREERTOS_SYSTEM_CALL */
 888:Source\portable\Common/mpu_wrappers.c **** {
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 50


 1906              		.loc 1 888 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 16
 1909              		@ frame_needed = 1, uses_anonymous_args = 0
 1910 0000 80B5     		push	{r7, lr}
 1911              		.cfi_def_cfa_offset 8
 1912              		.cfi_offset 7, -8
 1913              		.cfi_offset 14, -4
 1914 0002 84B0     		sub	sp, sp, #16
 1915              		.cfi_def_cfa_offset 24
 1916 0004 00AF     		add	r7, sp, #0
 1917              		.cfi_def_cfa_register 7
 1918 0006 7860     		str	r0, [r7, #4]
 889:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1919              		.loc 1 889 0
 1920 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 1921 000c F860     		str	r0, [r7, #12]
 890:Source\portable\Common/mpu_wrappers.c **** 
 891:Source\portable\Common/mpu_wrappers.c **** 	vQueueDelete( xQueue );
 1922              		.loc 1 891 0
 1923 000e 7868     		ldr	r0, [r7, #4]
 1924 0010 FFF7FEFF 		bl	vQueueDelete
 892:Source\portable\Common/mpu_wrappers.c **** 
 893:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1925              		.loc 1 893 0
 1926 0014 F868     		ldr	r0, [r7, #12]
 1927 0016 FFF7FEFF 		bl	vPortResetPrivilege
 894:Source\portable\Common/mpu_wrappers.c **** }
 1928              		.loc 1 894 0
 1929 001a 00BF     		nop
 1930 001c 1037     		adds	r7, r7, #16
 1931              		.cfi_def_cfa_offset 8
 1932 001e BD46     		mov	sp, r7
 1933              		.cfi_def_cfa_register 13
 1934              		@ sp needed
 1935 0020 80BD     		pop	{r7, pc}
 1936              		.cfi_endproc
 1937              	.LFE110:
 1938              		.size	MPU_vQueueDelete, .-MPU_vQueueDelete
 1939 0022 00BF     		.section	.text.MPU_pvPortMalloc,"ax",%progbits
 1940              		.align	2
 1941              		.global	MPU_pvPortMalloc
 1942              		.thumb
 1943              		.thumb_func
 1944              		.type	MPU_pvPortMalloc, %function
 1945              	MPU_pvPortMalloc:
 1946              	.LFB111:
 895:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 896:Source\portable\Common/mpu_wrappers.c **** 
 897:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 898:Source\portable\Common/mpu_wrappers.c **** 	void *MPU_pvPortMalloc( size_t xSize ) /* FREERTOS_SYSTEM_CALL */
 899:Source\portable\Common/mpu_wrappers.c **** 	{
 1947              		.loc 1 899 0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 16
 1950              		@ frame_needed = 1, uses_anonymous_args = 0
 1951 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 51


 1952              		.cfi_def_cfa_offset 8
 1953              		.cfi_offset 7, -8
 1954              		.cfi_offset 14, -4
 1955 0002 84B0     		sub	sp, sp, #16
 1956              		.cfi_def_cfa_offset 24
 1957 0004 00AF     		add	r7, sp, #0
 1958              		.cfi_def_cfa_register 7
 1959 0006 7860     		str	r0, [r7, #4]
 900:Source\portable\Common/mpu_wrappers.c **** 	void *pvReturn;
 901:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1960              		.loc 1 901 0
 1961 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 1962 000c F860     		str	r0, [r7, #12]
 902:Source\portable\Common/mpu_wrappers.c **** 
 903:Source\portable\Common/mpu_wrappers.c **** 		pvReturn = pvPortMalloc( xSize );
 1963              		.loc 1 903 0
 1964 000e 7868     		ldr	r0, [r7, #4]
 1965 0010 FFF7FEFF 		bl	pvPortMalloc
 1966 0014 B860     		str	r0, [r7, #8]
 904:Source\portable\Common/mpu_wrappers.c **** 
 905:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1967              		.loc 1 905 0
 1968 0016 F868     		ldr	r0, [r7, #12]
 1969 0018 FFF7FEFF 		bl	vPortResetPrivilege
 906:Source\portable\Common/mpu_wrappers.c **** 
 907:Source\portable\Common/mpu_wrappers.c **** 		return pvReturn;
 1970              		.loc 1 907 0
 1971 001c BB68     		ldr	r3, [r7, #8]
 908:Source\portable\Common/mpu_wrappers.c **** 	}
 1972              		.loc 1 908 0
 1973 001e 1846     		mov	r0, r3
 1974 0020 1037     		adds	r7, r7, #16
 1975              		.cfi_def_cfa_offset 8
 1976 0022 BD46     		mov	sp, r7
 1977              		.cfi_def_cfa_register 13
 1978              		@ sp needed
 1979 0024 80BD     		pop	{r7, pc}
 1980              		.cfi_endproc
 1981              	.LFE111:
 1982              		.size	MPU_pvPortMalloc, .-MPU_pvPortMalloc
 1983 0026 00BF     		.section	.text.MPU_vPortFree,"ax",%progbits
 1984              		.align	2
 1985              		.global	MPU_vPortFree
 1986              		.thumb
 1987              		.thumb_func
 1988              		.type	MPU_vPortFree, %function
 1989              	MPU_vPortFree:
 1990              	.LFB112:
 909:Source\portable\Common/mpu_wrappers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 910:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 911:Source\portable\Common/mpu_wrappers.c **** 
 912:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 913:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vPortFree( void *pv ) /* FREERTOS_SYSTEM_CALL */
 914:Source\portable\Common/mpu_wrappers.c **** 	{
 1991              		.loc 1 914 0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 52


 1994              		@ frame_needed = 1, uses_anonymous_args = 0
 1995 0000 80B5     		push	{r7, lr}
 1996              		.cfi_def_cfa_offset 8
 1997              		.cfi_offset 7, -8
 1998              		.cfi_offset 14, -4
 1999 0002 84B0     		sub	sp, sp, #16
 2000              		.cfi_def_cfa_offset 24
 2001 0004 00AF     		add	r7, sp, #0
 2002              		.cfi_def_cfa_register 7
 2003 0006 7860     		str	r0, [r7, #4]
 915:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2004              		.loc 1 915 0
 2005 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 2006 000c F860     		str	r0, [r7, #12]
 916:Source\portable\Common/mpu_wrappers.c **** 
 917:Source\portable\Common/mpu_wrappers.c **** 		vPortFree( pv );
 2007              		.loc 1 917 0
 2008 000e 7868     		ldr	r0, [r7, #4]
 2009 0010 FFF7FEFF 		bl	vPortFree
 918:Source\portable\Common/mpu_wrappers.c **** 
 919:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 2010              		.loc 1 919 0
 2011 0014 F868     		ldr	r0, [r7, #12]
 2012 0016 FFF7FEFF 		bl	vPortResetPrivilege
 920:Source\portable\Common/mpu_wrappers.c **** 	}
 2013              		.loc 1 920 0
 2014 001a 00BF     		nop
 2015 001c 1037     		adds	r7, r7, #16
 2016              		.cfi_def_cfa_offset 8
 2017 001e BD46     		mov	sp, r7
 2018              		.cfi_def_cfa_register 13
 2019              		@ sp needed
 2020 0020 80BD     		pop	{r7, pc}
 2021              		.cfi_endproc
 2022              	.LFE112:
 2023              		.size	MPU_vPortFree, .-MPU_vPortFree
 2024 0022 00BF     		.section	.text.MPU_vPortInitialiseBlocks,"ax",%progbits
 2025              		.align	2
 2026              		.global	MPU_vPortInitialiseBlocks
 2027              		.thumb
 2028              		.thumb_func
 2029              		.type	MPU_vPortInitialiseBlocks, %function
 2030              	MPU_vPortInitialiseBlocks:
 2031              	.LFB113:
 921:Source\portable\Common/mpu_wrappers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 922:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 923:Source\portable\Common/mpu_wrappers.c **** 
 924:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 925:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vPortInitialiseBlocks( void ) /* FREERTOS_SYSTEM_CALL */
 926:Source\portable\Common/mpu_wrappers.c **** 	{
 2032              		.loc 1 926 0
 2033              		.cfi_startproc
 2034              		@ args = 0, pretend = 0, frame = 8
 2035              		@ frame_needed = 1, uses_anonymous_args = 0
 2036 0000 80B5     		push	{r7, lr}
 2037              		.cfi_def_cfa_offset 8
 2038              		.cfi_offset 7, -8
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 53


 2039              		.cfi_offset 14, -4
 2040 0002 82B0     		sub	sp, sp, #8
 2041              		.cfi_def_cfa_offset 16
 2042 0004 00AF     		add	r7, sp, #0
 2043              		.cfi_def_cfa_register 7
 927:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2044              		.loc 1 927 0
 2045 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 2046 000a 7860     		str	r0, [r7, #4]
 928:Source\portable\Common/mpu_wrappers.c **** 
 929:Source\portable\Common/mpu_wrappers.c **** 		vPortInitialiseBlocks();
 2047              		.loc 1 929 0
 2048 000c FFF7FEFF 		bl	vPortInitialiseBlocks
 930:Source\portable\Common/mpu_wrappers.c **** 
 931:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 2049              		.loc 1 931 0
 2050 0010 7868     		ldr	r0, [r7, #4]
 2051 0012 FFF7FEFF 		bl	vPortResetPrivilege
 932:Source\portable\Common/mpu_wrappers.c **** 	}
 2052              		.loc 1 932 0
 2053 0016 00BF     		nop
 2054 0018 0837     		adds	r7, r7, #8
 2055              		.cfi_def_cfa_offset 8
 2056 001a BD46     		mov	sp, r7
 2057              		.cfi_def_cfa_register 13
 2058              		@ sp needed
 2059 001c 80BD     		pop	{r7, pc}
 2060              		.cfi_endproc
 2061              	.LFE113:
 2062              		.size	MPU_vPortInitialiseBlocks, .-MPU_vPortInitialiseBlocks
 2063 001e 00BF     		.section	.text.MPU_xPortGetFreeHeapSize,"ax",%progbits
 2064              		.align	2
 2065              		.global	MPU_xPortGetFreeHeapSize
 2066              		.thumb
 2067              		.thumb_func
 2068              		.type	MPU_xPortGetFreeHeapSize, %function
 2069              	MPU_xPortGetFreeHeapSize:
 2070              	.LFB114:
 933:Source\portable\Common/mpu_wrappers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 934:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 935:Source\portable\Common/mpu_wrappers.c **** 
 936:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 937:Source\portable\Common/mpu_wrappers.c **** 	size_t MPU_xPortGetFreeHeapSize( void ) /* FREERTOS_SYSTEM_CALL */
 938:Source\portable\Common/mpu_wrappers.c **** 	{
 2071              		.loc 1 938 0
 2072              		.cfi_startproc
 2073              		@ args = 0, pretend = 0, frame = 8
 2074              		@ frame_needed = 1, uses_anonymous_args = 0
 2075 0000 80B5     		push	{r7, lr}
 2076              		.cfi_def_cfa_offset 8
 2077              		.cfi_offset 7, -8
 2078              		.cfi_offset 14, -4
 2079 0002 82B0     		sub	sp, sp, #8
 2080              		.cfi_def_cfa_offset 16
 2081 0004 00AF     		add	r7, sp, #0
 2082              		.cfi_def_cfa_register 7
 939:Source\portable\Common/mpu_wrappers.c **** 	size_t xReturn;
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 54


 940:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2083              		.loc 1 940 0
 2084 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 2085 000a 7860     		str	r0, [r7, #4]
 941:Source\portable\Common/mpu_wrappers.c **** 
 942:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xPortGetFreeHeapSize();
 2086              		.loc 1 942 0
 2087 000c FFF7FEFF 		bl	xPortGetFreeHeapSize
 2088 0010 3860     		str	r0, [r7]
 943:Source\portable\Common/mpu_wrappers.c **** 
 944:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 2089              		.loc 1 944 0
 2090 0012 7868     		ldr	r0, [r7, #4]
 2091 0014 FFF7FEFF 		bl	vPortResetPrivilege
 945:Source\portable\Common/mpu_wrappers.c **** 
 946:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 2092              		.loc 1 946 0
 2093 0018 3B68     		ldr	r3, [r7]
 947:Source\portable\Common/mpu_wrappers.c **** 	}
 2094              		.loc 1 947 0
 2095 001a 1846     		mov	r0, r3
 2096 001c 0837     		adds	r7, r7, #8
 2097              		.cfi_def_cfa_offset 8
 2098 001e BD46     		mov	sp, r7
 2099              		.cfi_def_cfa_register 13
 2100              		@ sp needed
 2101 0020 80BD     		pop	{r7, pc}
 2102              		.cfi_endproc
 2103              	.LFE114:
 2104              		.size	MPU_xPortGetFreeHeapSize, .-MPU_xPortGetFreeHeapSize
 2105 0022 00BF     		.section	.text.MPU_xEventGroupCreate,"ax",%progbits
 2106              		.align	2
 2107              		.global	MPU_xEventGroupCreate
 2108              		.thumb
 2109              		.thumb_func
 2110              		.type	MPU_xEventGroupCreate, %function
 2111              	MPU_xEventGroupCreate:
 2112              	.LFB115:
 948:Source\portable\Common/mpu_wrappers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 949:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 950:Source\portable\Common/mpu_wrappers.c **** 
 951:Source\portable\Common/mpu_wrappers.c **** #if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configUSE_TIMERS == 1 ) )
 952:Source\portable\Common/mpu_wrappers.c **** 	TimerHandle_t MPU_xTimerCreate( const char * const pcTimerName, const TickType_t xTimerPeriodInTic
 953:Source\portable\Common/mpu_wrappers.c **** 	{
 954:Source\portable\Common/mpu_wrappers.c **** 	TimerHandle_t xReturn;
 955:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 956:Source\portable\Common/mpu_wrappers.c **** 
 957:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTimerCreate( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 958:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 959:Source\portable\Common/mpu_wrappers.c **** 
 960:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 961:Source\portable\Common/mpu_wrappers.c **** 	}
 962:Source\portable\Common/mpu_wrappers.c **** #endif
 963:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 964:Source\portable\Common/mpu_wrappers.c **** 
 965:Source\portable\Common/mpu_wrappers.c **** #if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configUSE_TIMERS == 1 ) )
 966:Source\portable\Common/mpu_wrappers.c **** 	TimerHandle_t MPU_xTimerCreateStatic( const char * const pcTimerName, const TickType_t xTimerPerio
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 55


 967:Source\portable\Common/mpu_wrappers.c **** 	{
 968:Source\portable\Common/mpu_wrappers.c **** 	TimerHandle_t xReturn;
 969:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 970:Source\portable\Common/mpu_wrappers.c **** 
 971:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTimerCreateStatic( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallba
 972:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 973:Source\portable\Common/mpu_wrappers.c **** 
 974:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 975:Source\portable\Common/mpu_wrappers.c **** 	}
 976:Source\portable\Common/mpu_wrappers.c **** #endif
 977:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 978:Source\portable\Common/mpu_wrappers.c **** 
 979:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
 980:Source\portable\Common/mpu_wrappers.c **** 	void *MPU_pvTimerGetTimerID( const TimerHandle_t xTimer ) /* FREERTOS_SYSTEM_CALL */
 981:Source\portable\Common/mpu_wrappers.c **** 	{
 982:Source\portable\Common/mpu_wrappers.c **** 	void * pvReturn;
 983:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 984:Source\portable\Common/mpu_wrappers.c **** 
 985:Source\portable\Common/mpu_wrappers.c **** 		pvReturn = pvTimerGetTimerID( xTimer );
 986:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 987:Source\portable\Common/mpu_wrappers.c **** 
 988:Source\portable\Common/mpu_wrappers.c **** 		return pvReturn;
 989:Source\portable\Common/mpu_wrappers.c **** 	}
 990:Source\portable\Common/mpu_wrappers.c **** #endif
 991:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 992:Source\portable\Common/mpu_wrappers.c **** 
 993:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
 994:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID ) /* FREERTOS_SYSTEM_CALL */
 995:Source\portable\Common/mpu_wrappers.c **** 	{
 996:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 997:Source\portable\Common/mpu_wrappers.c **** 
 998:Source\portable\Common/mpu_wrappers.c **** 		vTimerSetTimerID( xTimer, pvNewID );
 999:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1000:Source\portable\Common/mpu_wrappers.c **** 	}
1001:Source\portable\Common/mpu_wrappers.c **** #endif
1002:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1003:Source\portable\Common/mpu_wrappers.c **** 
1004:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
1005:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTimerIsTimerActive( TimerHandle_t xTimer ) /* FREERTOS_SYSTEM_CALL */
1006:Source\portable\Common/mpu_wrappers.c **** 	{
1007:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
1008:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1009:Source\portable\Common/mpu_wrappers.c **** 
1010:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTimerIsTimerActive( xTimer );
1011:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1012:Source\portable\Common/mpu_wrappers.c **** 
1013:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
1014:Source\portable\Common/mpu_wrappers.c **** 	}
1015:Source\portable\Common/mpu_wrappers.c **** #endif
1016:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1017:Source\portable\Common/mpu_wrappers.c **** 
1018:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
1019:Source\portable\Common/mpu_wrappers.c **** 	TaskHandle_t MPU_xTimerGetTimerDaemonTaskHandle( void ) /* FREERTOS_SYSTEM_CALL */
1020:Source\portable\Common/mpu_wrappers.c **** 	{
1021:Source\portable\Common/mpu_wrappers.c **** 	TaskHandle_t xReturn;
1022:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1023:Source\portable\Common/mpu_wrappers.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 56


1024:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTimerGetTimerDaemonTaskHandle();
1025:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1026:Source\portable\Common/mpu_wrappers.c **** 
1027:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
1028:Source\portable\Common/mpu_wrappers.c **** 	}
1029:Source\portable\Common/mpu_wrappers.c **** #endif
1030:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1031:Source\portable\Common/mpu_wrappers.c **** 
1032:Source\portable\Common/mpu_wrappers.c **** #if( ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 1 ) )
1033:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint3
1034:Source\portable\Common/mpu_wrappers.c **** 	{
1035:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
1036:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1037:Source\portable\Common/mpu_wrappers.c **** 
1038:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTimerPendFunctionCall( xFunctionToPend, pvParameter1, ulParameter2, xTicksToWait );
1039:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1040:Source\portable\Common/mpu_wrappers.c **** 
1041:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
1042:Source\portable\Common/mpu_wrappers.c **** 	}
1043:Source\portable\Common/mpu_wrappers.c **** #endif
1044:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1045:Source\portable\Common/mpu_wrappers.c **** 
1046:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
1047:Source\portable\Common/mpu_wrappers.c **** 	void MPU_vTimerSetReloadMode( TimerHandle_t xTimer, const UBaseType_t uxAutoReload ) /* FREERTOS_S
1048:Source\portable\Common/mpu_wrappers.c **** 	{
1049:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1050:Source\portable\Common/mpu_wrappers.c **** 
1051:Source\portable\Common/mpu_wrappers.c **** 		vTimerSetReloadMode( xTimer, uxAutoReload );
1052:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1053:Source\portable\Common/mpu_wrappers.c **** 	}
1054:Source\portable\Common/mpu_wrappers.c **** #endif
1055:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1056:Source\portable\Common/mpu_wrappers.c **** 
1057:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
1058:Source\portable\Common/mpu_wrappers.c **** 	UBaseType_t MPU_uxTimerGetReloadMode( TimerHandle_t xTimer )
1059:Source\portable\Common/mpu_wrappers.c **** 	{
1060:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1061:Source\portable\Common/mpu_wrappers.c **** 	UBaseType_t uxReturn;
1062:Source\portable\Common/mpu_wrappers.c **** 
1063:Source\portable\Common/mpu_wrappers.c **** 		uxReturn = uxTimerGetReloadMode( xTimer );
1064:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1065:Source\portable\Common/mpu_wrappers.c **** 		return uxReturn;
1066:Source\portable\Common/mpu_wrappers.c **** 	}
1067:Source\portable\Common/mpu_wrappers.c **** #endif
1068:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1069:Source\portable\Common/mpu_wrappers.c **** 
1070:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
1071:Source\portable\Common/mpu_wrappers.c **** 	const char * MPU_pcTimerGetName( TimerHandle_t xTimer ) /* FREERTOS_SYSTEM_CALL */
1072:Source\portable\Common/mpu_wrappers.c **** 	{
1073:Source\portable\Common/mpu_wrappers.c **** 	const char * pcReturn;
1074:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1075:Source\portable\Common/mpu_wrappers.c **** 
1076:Source\portable\Common/mpu_wrappers.c **** 		pcReturn = pcTimerGetName( xTimer );
1077:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1078:Source\portable\Common/mpu_wrappers.c **** 
1079:Source\portable\Common/mpu_wrappers.c **** 		return pcReturn;
1080:Source\portable\Common/mpu_wrappers.c **** 	}
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 57


1081:Source\portable\Common/mpu_wrappers.c **** #endif
1082:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1083:Source\portable\Common/mpu_wrappers.c **** 
1084:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
1085:Source\portable\Common/mpu_wrappers.c **** 	TickType_t MPU_xTimerGetPeriod( TimerHandle_t xTimer ) /* FREERTOS_SYSTEM_CALL */
1086:Source\portable\Common/mpu_wrappers.c **** 	{
1087:Source\portable\Common/mpu_wrappers.c **** 	TickType_t xReturn;
1088:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1089:Source\portable\Common/mpu_wrappers.c **** 
1090:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTimerGetPeriod( xTimer );
1091:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1092:Source\portable\Common/mpu_wrappers.c **** 
1093:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
1094:Source\portable\Common/mpu_wrappers.c **** 	}
1095:Source\portable\Common/mpu_wrappers.c **** #endif
1096:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1097:Source\portable\Common/mpu_wrappers.c **** 
1098:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
1099:Source\portable\Common/mpu_wrappers.c **** 	TickType_t MPU_xTimerGetExpiryTime( TimerHandle_t xTimer ) /* FREERTOS_SYSTEM_CALL */
1100:Source\portable\Common/mpu_wrappers.c **** 	{
1101:Source\portable\Common/mpu_wrappers.c **** 	TickType_t xReturn;
1102:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1103:Source\portable\Common/mpu_wrappers.c **** 
1104:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTimerGetExpiryTime( xTimer );
1105:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1106:Source\portable\Common/mpu_wrappers.c **** 
1107:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
1108:Source\portable\Common/mpu_wrappers.c **** 	}
1109:Source\portable\Common/mpu_wrappers.c **** #endif
1110:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1111:Source\portable\Common/mpu_wrappers.c **** 
1112:Source\portable\Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
1113:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t MPU_xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const Tick
1114:Source\portable\Common/mpu_wrappers.c **** 	{
1115:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xReturn;
1116:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1117:Source\portable\Common/mpu_wrappers.c **** 
1118:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xTimerGenericCommand( xTimer, xCommandID, xOptionalValue, pxHigherPriorityTaskWoken, xT
1119:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1120:Source\portable\Common/mpu_wrappers.c **** 
1121:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
1122:Source\portable\Common/mpu_wrappers.c **** 	}
1123:Source\portable\Common/mpu_wrappers.c **** #endif
1124:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1125:Source\portable\Common/mpu_wrappers.c **** 
1126:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
1127:Source\portable\Common/mpu_wrappers.c **** 	EventGroupHandle_t MPU_xEventGroupCreate( void ) /* FREERTOS_SYSTEM_CALL */
1128:Source\portable\Common/mpu_wrappers.c **** 	{
 2113              		.loc 1 1128 0
 2114              		.cfi_startproc
 2115              		@ args = 0, pretend = 0, frame = 8
 2116              		@ frame_needed = 1, uses_anonymous_args = 0
 2117 0000 80B5     		push	{r7, lr}
 2118              		.cfi_def_cfa_offset 8
 2119              		.cfi_offset 7, -8
 2120              		.cfi_offset 14, -4
 2121 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 58


 2122              		.cfi_def_cfa_offset 16
 2123 0004 00AF     		add	r7, sp, #0
 2124              		.cfi_def_cfa_register 7
1129:Source\portable\Common/mpu_wrappers.c **** 	EventGroupHandle_t xReturn;
1130:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2125              		.loc 1 1130 0
 2126 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 2127 000a 7860     		str	r0, [r7, #4]
1131:Source\portable\Common/mpu_wrappers.c **** 
1132:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xEventGroupCreate();
 2128              		.loc 1 1132 0
 2129 000c FFF7FEFF 		bl	xEventGroupCreate
 2130 0010 3860     		str	r0, [r7]
1133:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 2131              		.loc 1 1133 0
 2132 0012 7868     		ldr	r0, [r7, #4]
 2133 0014 FFF7FEFF 		bl	vPortResetPrivilege
1134:Source\portable\Common/mpu_wrappers.c **** 
1135:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 2134              		.loc 1 1135 0
 2135 0018 3B68     		ldr	r3, [r7]
1136:Source\portable\Common/mpu_wrappers.c **** 	}
 2136              		.loc 1 1136 0
 2137 001a 1846     		mov	r0, r3
 2138 001c 0837     		adds	r7, r7, #8
 2139              		.cfi_def_cfa_offset 8
 2140 001e BD46     		mov	sp, r7
 2141              		.cfi_def_cfa_register 13
 2142              		@ sp needed
 2143 0020 80BD     		pop	{r7, pc}
 2144              		.cfi_endproc
 2145              	.LFE115:
 2146              		.size	MPU_xEventGroupCreate, .-MPU_xEventGroupCreate
 2147 0022 00BF     		.section	.text.MPU_xEventGroupWaitBits,"ax",%progbits
 2148              		.align	2
 2149              		.global	MPU_xEventGroupWaitBits
 2150              		.thumb
 2151              		.thumb_func
 2152              		.type	MPU_xEventGroupWaitBits, %function
 2153              	MPU_xEventGroupWaitBits:
 2154              	.LFB116:
1137:Source\portable\Common/mpu_wrappers.c **** #endif
1138:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1139:Source\portable\Common/mpu_wrappers.c **** 
1140:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
1141:Source\portable\Common/mpu_wrappers.c **** 	EventGroupHandle_t MPU_xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer ) /* FREERT
1142:Source\portable\Common/mpu_wrappers.c **** 	{
1143:Source\portable\Common/mpu_wrappers.c **** 	EventGroupHandle_t xReturn;
1144:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1145:Source\portable\Common/mpu_wrappers.c **** 
1146:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xEventGroupCreateStatic( pxEventGroupBuffer );
1147:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1148:Source\portable\Common/mpu_wrappers.c **** 
1149:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
1150:Source\portable\Common/mpu_wrappers.c **** 	}
1151:Source\portable\Common/mpu_wrappers.c **** #endif
1152:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 59


1153:Source\portable\Common/mpu_wrappers.c **** 
1154:Source\portable\Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWait
1155:Source\portable\Common/mpu_wrappers.c **** {
 2155              		.loc 1 1155 0
 2156              		.cfi_startproc
 2157              		@ args = 4, pretend = 0, frame = 24
 2158              		@ frame_needed = 1, uses_anonymous_args = 0
 2159 0000 80B5     		push	{r7, lr}
 2160              		.cfi_def_cfa_offset 8
 2161              		.cfi_offset 7, -8
 2162              		.cfi_offset 14, -4
 2163 0002 88B0     		sub	sp, sp, #32
 2164              		.cfi_def_cfa_offset 40
 2165 0004 02AF     		add	r7, sp, #8
 2166              		.cfi_def_cfa 7, 32
 2167 0006 F860     		str	r0, [r7, #12]
 2168 0008 B960     		str	r1, [r7, #8]
 2169 000a 7A60     		str	r2, [r7, #4]
 2170 000c 3B60     		str	r3, [r7]
1156:Source\portable\Common/mpu_wrappers.c **** EventBits_t xReturn;
1157:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2171              		.loc 1 1157 0
 2172 000e FFF7FEFF 		bl	xPortRaisePrivilege
 2173 0012 7861     		str	r0, [r7, #20]
1158:Source\portable\Common/mpu_wrappers.c **** 
1159:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xEventGroupWaitBits( xEventGroup, uxBitsToWaitFor, xClearOnExit, xWaitForAllBits, xTicks
 2174              		.loc 1 1159 0
 2175 0014 3B6A     		ldr	r3, [r7, #32]
 2176 0016 0093     		str	r3, [sp]
 2177 0018 3B68     		ldr	r3, [r7]
 2178 001a 7A68     		ldr	r2, [r7, #4]
 2179 001c B968     		ldr	r1, [r7, #8]
 2180 001e F868     		ldr	r0, [r7, #12]
 2181 0020 FFF7FEFF 		bl	xEventGroupWaitBits
 2182 0024 3861     		str	r0, [r7, #16]
1160:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2183              		.loc 1 1160 0
 2184 0026 7869     		ldr	r0, [r7, #20]
 2185 0028 FFF7FEFF 		bl	vPortResetPrivilege
1161:Source\portable\Common/mpu_wrappers.c **** 
1162:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2186              		.loc 1 1162 0
 2187 002c 3B69     		ldr	r3, [r7, #16]
1163:Source\portable\Common/mpu_wrappers.c **** }
 2188              		.loc 1 1163 0
 2189 002e 1846     		mov	r0, r3
 2190 0030 1837     		adds	r7, r7, #24
 2191              		.cfi_def_cfa_offset 8
 2192 0032 BD46     		mov	sp, r7
 2193              		.cfi_def_cfa_register 13
 2194              		@ sp needed
 2195 0034 80BD     		pop	{r7, pc}
 2196              		.cfi_endproc
 2197              	.LFE116:
 2198              		.size	MPU_xEventGroupWaitBits, .-MPU_xEventGroupWaitBits
 2199 0036 00BF     		.section	.text.MPU_xEventGroupClearBits,"ax",%progbits
 2200              		.align	2
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 60


 2201              		.global	MPU_xEventGroupClearBits
 2202              		.thumb
 2203              		.thumb_func
 2204              		.type	MPU_xEventGroupClearBits, %function
 2205              	MPU_xEventGroupClearBits:
 2206              	.LFB117:
1164:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1165:Source\portable\Common/mpu_wrappers.c **** 
1166:Source\portable\Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToCle
1167:Source\portable\Common/mpu_wrappers.c **** {
 2207              		.loc 1 1167 0
 2208              		.cfi_startproc
 2209              		@ args = 0, pretend = 0, frame = 16
 2210              		@ frame_needed = 1, uses_anonymous_args = 0
 2211 0000 80B5     		push	{r7, lr}
 2212              		.cfi_def_cfa_offset 8
 2213              		.cfi_offset 7, -8
 2214              		.cfi_offset 14, -4
 2215 0002 84B0     		sub	sp, sp, #16
 2216              		.cfi_def_cfa_offset 24
 2217 0004 00AF     		add	r7, sp, #0
 2218              		.cfi_def_cfa_register 7
 2219 0006 7860     		str	r0, [r7, #4]
 2220 0008 3960     		str	r1, [r7]
1168:Source\portable\Common/mpu_wrappers.c **** EventBits_t xReturn;
1169:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2221              		.loc 1 1169 0
 2222 000a FFF7FEFF 		bl	xPortRaisePrivilege
 2223 000e F860     		str	r0, [r7, #12]
1170:Source\portable\Common/mpu_wrappers.c **** 
1171:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xEventGroupClearBits( xEventGroup, uxBitsToClear );
 2224              		.loc 1 1171 0
 2225 0010 3968     		ldr	r1, [r7]
 2226 0012 7868     		ldr	r0, [r7, #4]
 2227 0014 FFF7FEFF 		bl	xEventGroupClearBits
 2228 0018 B860     		str	r0, [r7, #8]
1172:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2229              		.loc 1 1172 0
 2230 001a F868     		ldr	r0, [r7, #12]
 2231 001c FFF7FEFF 		bl	vPortResetPrivilege
1173:Source\portable\Common/mpu_wrappers.c **** 
1174:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2232              		.loc 1 1174 0
 2233 0020 BB68     		ldr	r3, [r7, #8]
1175:Source\portable\Common/mpu_wrappers.c **** }
 2234              		.loc 1 1175 0
 2235 0022 1846     		mov	r0, r3
 2236 0024 1037     		adds	r7, r7, #16
 2237              		.cfi_def_cfa_offset 8
 2238 0026 BD46     		mov	sp, r7
 2239              		.cfi_def_cfa_register 13
 2240              		@ sp needed
 2241 0028 80BD     		pop	{r7, pc}
 2242              		.cfi_endproc
 2243              	.LFE117:
 2244              		.size	MPU_xEventGroupClearBits, .-MPU_xEventGroupClearBits
 2245              		.section	.text.MPU_xEventGroupSetBits,"ax",%progbits
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 61


 2246              		.align	2
 2247              		.global	MPU_xEventGroupSetBits
 2248              		.thumb
 2249              		.thumb_func
 2250              		.type	MPU_xEventGroupSetBits, %function
 2251              	MPU_xEventGroupSetBits:
 2252              	.LFB118:
1176:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1177:Source\portable\Common/mpu_wrappers.c **** 
1178:Source\portable\Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
1179:Source\portable\Common/mpu_wrappers.c **** {
 2253              		.loc 1 1179 0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 16
 2256              		@ frame_needed = 1, uses_anonymous_args = 0
 2257 0000 80B5     		push	{r7, lr}
 2258              		.cfi_def_cfa_offset 8
 2259              		.cfi_offset 7, -8
 2260              		.cfi_offset 14, -4
 2261 0002 84B0     		sub	sp, sp, #16
 2262              		.cfi_def_cfa_offset 24
 2263 0004 00AF     		add	r7, sp, #0
 2264              		.cfi_def_cfa_register 7
 2265 0006 7860     		str	r0, [r7, #4]
 2266 0008 3960     		str	r1, [r7]
1180:Source\portable\Common/mpu_wrappers.c **** EventBits_t xReturn;
1181:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2267              		.loc 1 1181 0
 2268 000a FFF7FEFF 		bl	xPortRaisePrivilege
 2269 000e F860     		str	r0, [r7, #12]
1182:Source\portable\Common/mpu_wrappers.c **** 
1183:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xEventGroupSetBits( xEventGroup, uxBitsToSet );
 2270              		.loc 1 1183 0
 2271 0010 3968     		ldr	r1, [r7]
 2272 0012 7868     		ldr	r0, [r7, #4]
 2273 0014 FFF7FEFF 		bl	xEventGroupSetBits
 2274 0018 B860     		str	r0, [r7, #8]
1184:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2275              		.loc 1 1184 0
 2276 001a F868     		ldr	r0, [r7, #12]
 2277 001c FFF7FEFF 		bl	vPortResetPrivilege
1185:Source\portable\Common/mpu_wrappers.c **** 
1186:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2278              		.loc 1 1186 0
 2279 0020 BB68     		ldr	r3, [r7, #8]
1187:Source\portable\Common/mpu_wrappers.c **** }
 2280              		.loc 1 1187 0
 2281 0022 1846     		mov	r0, r3
 2282 0024 1037     		adds	r7, r7, #16
 2283              		.cfi_def_cfa_offset 8
 2284 0026 BD46     		mov	sp, r7
 2285              		.cfi_def_cfa_register 13
 2286              		@ sp needed
 2287 0028 80BD     		pop	{r7, pc}
 2288              		.cfi_endproc
 2289              	.LFE118:
 2290              		.size	MPU_xEventGroupSetBits, .-MPU_xEventGroupSetBits
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 62


 2291              		.section	.text.MPU_xEventGroupSync,"ax",%progbits
 2292              		.align	2
 2293              		.global	MPU_xEventGroupSync
 2294              		.thumb
 2295              		.thumb_func
 2296              		.type	MPU_xEventGroupSync, %function
 2297              	MPU_xEventGroupSync:
 2298              	.LFB119:
1188:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1189:Source\portable\Common/mpu_wrappers.c **** 
1190:Source\portable\Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, con
1191:Source\portable\Common/mpu_wrappers.c **** {
 2299              		.loc 1 1191 0
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 24
 2302              		@ frame_needed = 1, uses_anonymous_args = 0
 2303 0000 80B5     		push	{r7, lr}
 2304              		.cfi_def_cfa_offset 8
 2305              		.cfi_offset 7, -8
 2306              		.cfi_offset 14, -4
 2307 0002 86B0     		sub	sp, sp, #24
 2308              		.cfi_def_cfa_offset 32
 2309 0004 00AF     		add	r7, sp, #0
 2310              		.cfi_def_cfa_register 7
 2311 0006 F860     		str	r0, [r7, #12]
 2312 0008 B960     		str	r1, [r7, #8]
 2313 000a 7A60     		str	r2, [r7, #4]
 2314 000c 3B60     		str	r3, [r7]
1192:Source\portable\Common/mpu_wrappers.c **** EventBits_t xReturn;
1193:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2315              		.loc 1 1193 0
 2316 000e FFF7FEFF 		bl	xPortRaisePrivilege
 2317 0012 7861     		str	r0, [r7, #20]
1194:Source\portable\Common/mpu_wrappers.c **** 
1195:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xEventGroupSync( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTicksToWait );
 2318              		.loc 1 1195 0
 2319 0014 3B68     		ldr	r3, [r7]
 2320 0016 7A68     		ldr	r2, [r7, #4]
 2321 0018 B968     		ldr	r1, [r7, #8]
 2322 001a F868     		ldr	r0, [r7, #12]
 2323 001c FFF7FEFF 		bl	xEventGroupSync
 2324 0020 3861     		str	r0, [r7, #16]
1196:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2325              		.loc 1 1196 0
 2326 0022 7869     		ldr	r0, [r7, #20]
 2327 0024 FFF7FEFF 		bl	vPortResetPrivilege
1197:Source\portable\Common/mpu_wrappers.c **** 
1198:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2328              		.loc 1 1198 0
 2329 0028 3B69     		ldr	r3, [r7, #16]
1199:Source\portable\Common/mpu_wrappers.c **** }
 2330              		.loc 1 1199 0
 2331 002a 1846     		mov	r0, r3
 2332 002c 1837     		adds	r7, r7, #24
 2333              		.cfi_def_cfa_offset 8
 2334 002e BD46     		mov	sp, r7
 2335              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 63


 2336              		@ sp needed
 2337 0030 80BD     		pop	{r7, pc}
 2338              		.cfi_endproc
 2339              	.LFE119:
 2340              		.size	MPU_xEventGroupSync, .-MPU_xEventGroupSync
 2341 0032 00BF     		.section	.text.MPU_vEventGroupDelete,"ax",%progbits
 2342              		.align	2
 2343              		.global	MPU_vEventGroupDelete
 2344              		.thumb
 2345              		.thumb_func
 2346              		.type	MPU_vEventGroupDelete, %function
 2347              	MPU_vEventGroupDelete:
 2348              	.LFB120:
1200:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1201:Source\portable\Common/mpu_wrappers.c **** 
1202:Source\portable\Common/mpu_wrappers.c **** void MPU_vEventGroupDelete( EventGroupHandle_t xEventGroup ) /* FREERTOS_SYSTEM_CALL */
1203:Source\portable\Common/mpu_wrappers.c **** {
 2349              		.loc 1 1203 0
 2350              		.cfi_startproc
 2351              		@ args = 0, pretend = 0, frame = 16
 2352              		@ frame_needed = 1, uses_anonymous_args = 0
 2353 0000 80B5     		push	{r7, lr}
 2354              		.cfi_def_cfa_offset 8
 2355              		.cfi_offset 7, -8
 2356              		.cfi_offset 14, -4
 2357 0002 84B0     		sub	sp, sp, #16
 2358              		.cfi_def_cfa_offset 24
 2359 0004 00AF     		add	r7, sp, #0
 2360              		.cfi_def_cfa_register 7
 2361 0006 7860     		str	r0, [r7, #4]
1204:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2362              		.loc 1 1204 0
 2363 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 2364 000c F860     		str	r0, [r7, #12]
1205:Source\portable\Common/mpu_wrappers.c **** 
1206:Source\portable\Common/mpu_wrappers.c **** 	vEventGroupDelete( xEventGroup );
 2365              		.loc 1 1206 0
 2366 000e 7868     		ldr	r0, [r7, #4]
 2367 0010 FFF7FEFF 		bl	vEventGroupDelete
1207:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2368              		.loc 1 1207 0
 2369 0014 F868     		ldr	r0, [r7, #12]
 2370 0016 FFF7FEFF 		bl	vPortResetPrivilege
1208:Source\portable\Common/mpu_wrappers.c **** }
 2371              		.loc 1 1208 0
 2372 001a 00BF     		nop
 2373 001c 1037     		adds	r7, r7, #16
 2374              		.cfi_def_cfa_offset 8
 2375 001e BD46     		mov	sp, r7
 2376              		.cfi_def_cfa_register 13
 2377              		@ sp needed
 2378 0020 80BD     		pop	{r7, pc}
 2379              		.cfi_endproc
 2380              	.LFE120:
 2381              		.size	MPU_vEventGroupDelete, .-MPU_vEventGroupDelete
 2382 0022 00BF     		.section	.text.MPU_xStreamBufferSend,"ax",%progbits
 2383              		.align	2
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 64


 2384              		.global	MPU_xStreamBufferSend
 2385              		.thumb
 2386              		.thumb_func
 2387              		.type	MPU_xStreamBufferSend, %function
 2388              	MPU_xStreamBufferSend:
 2389              	.LFB121:
1209:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1210:Source\portable\Common/mpu_wrappers.c **** 
1211:Source\portable\Common/mpu_wrappers.c **** size_t MPU_xStreamBufferSend( StreamBufferHandle_t xStreamBuffer, const void *pvTxData, size_t xDat
1212:Source\portable\Common/mpu_wrappers.c **** {
 2390              		.loc 1 1212 0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 24
 2393              		@ frame_needed = 1, uses_anonymous_args = 0
 2394 0000 80B5     		push	{r7, lr}
 2395              		.cfi_def_cfa_offset 8
 2396              		.cfi_offset 7, -8
 2397              		.cfi_offset 14, -4
 2398 0002 86B0     		sub	sp, sp, #24
 2399              		.cfi_def_cfa_offset 32
 2400 0004 00AF     		add	r7, sp, #0
 2401              		.cfi_def_cfa_register 7
 2402 0006 F860     		str	r0, [r7, #12]
 2403 0008 B960     		str	r1, [r7, #8]
 2404 000a 7A60     		str	r2, [r7, #4]
 2405 000c 3B60     		str	r3, [r7]
1213:Source\portable\Common/mpu_wrappers.c **** size_t xReturn;
1214:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2406              		.loc 1 1214 0
 2407 000e FFF7FEFF 		bl	xPortRaisePrivilege
 2408 0012 7861     		str	r0, [r7, #20]
1215:Source\portable\Common/mpu_wrappers.c **** 
1216:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xStreamBufferSend( xStreamBuffer, pvTxData, xDataLengthBytes, xTicksToWait );
 2409              		.loc 1 1216 0
 2410 0014 3B68     		ldr	r3, [r7]
 2411 0016 7A68     		ldr	r2, [r7, #4]
 2412 0018 B968     		ldr	r1, [r7, #8]
 2413 001a F868     		ldr	r0, [r7, #12]
 2414 001c FFF7FEFF 		bl	xStreamBufferSend
 2415 0020 3861     		str	r0, [r7, #16]
1217:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2416              		.loc 1 1217 0
 2417 0022 7869     		ldr	r0, [r7, #20]
 2418 0024 FFF7FEFF 		bl	vPortResetPrivilege
1218:Source\portable\Common/mpu_wrappers.c **** 
1219:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2419              		.loc 1 1219 0
 2420 0028 3B69     		ldr	r3, [r7, #16]
1220:Source\portable\Common/mpu_wrappers.c **** }
 2421              		.loc 1 1220 0
 2422 002a 1846     		mov	r0, r3
 2423 002c 1837     		adds	r7, r7, #24
 2424              		.cfi_def_cfa_offset 8
 2425 002e BD46     		mov	sp, r7
 2426              		.cfi_def_cfa_register 13
 2427              		@ sp needed
 2428 0030 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 65


 2429              		.cfi_endproc
 2430              	.LFE121:
 2431              		.size	MPU_xStreamBufferSend, .-MPU_xStreamBufferSend
 2432 0032 00BF     		.section	.text.MPU_xStreamBufferNextMessageLengthBytes,"ax",%progbits
 2433              		.align	2
 2434              		.global	MPU_xStreamBufferNextMessageLengthBytes
 2435              		.thumb
 2436              		.thumb_func
 2437              		.type	MPU_xStreamBufferNextMessageLengthBytes, %function
 2438              	MPU_xStreamBufferNextMessageLengthBytes:
 2439              	.LFB122:
1221:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1222:Source\portable\Common/mpu_wrappers.c **** 
1223:Source\portable\Common/mpu_wrappers.c **** size_t MPU_xStreamBufferNextMessageLengthBytes( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SY
1224:Source\portable\Common/mpu_wrappers.c **** {
 2440              		.loc 1 1224 0
 2441              		.cfi_startproc
 2442              		@ args = 0, pretend = 0, frame = 16
 2443              		@ frame_needed = 1, uses_anonymous_args = 0
 2444 0000 80B5     		push	{r7, lr}
 2445              		.cfi_def_cfa_offset 8
 2446              		.cfi_offset 7, -8
 2447              		.cfi_offset 14, -4
 2448 0002 84B0     		sub	sp, sp, #16
 2449              		.cfi_def_cfa_offset 24
 2450 0004 00AF     		add	r7, sp, #0
 2451              		.cfi_def_cfa_register 7
 2452 0006 7860     		str	r0, [r7, #4]
1225:Source\portable\Common/mpu_wrappers.c **** size_t xReturn;
1226:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2453              		.loc 1 1226 0
 2454 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 2455 000c F860     		str	r0, [r7, #12]
1227:Source\portable\Common/mpu_wrappers.c **** 
1228:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xStreamBufferNextMessageLengthBytes( xStreamBuffer );
 2456              		.loc 1 1228 0
 2457 000e 7868     		ldr	r0, [r7, #4]
 2458 0010 FFF7FEFF 		bl	xStreamBufferNextMessageLengthBytes
 2459 0014 B860     		str	r0, [r7, #8]
1229:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2460              		.loc 1 1229 0
 2461 0016 F868     		ldr	r0, [r7, #12]
 2462 0018 FFF7FEFF 		bl	vPortResetPrivilege
1230:Source\portable\Common/mpu_wrappers.c **** 
1231:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2463              		.loc 1 1231 0
 2464 001c BB68     		ldr	r3, [r7, #8]
1232:Source\portable\Common/mpu_wrappers.c **** }
 2465              		.loc 1 1232 0
 2466 001e 1846     		mov	r0, r3
 2467 0020 1037     		adds	r7, r7, #16
 2468              		.cfi_def_cfa_offset 8
 2469 0022 BD46     		mov	sp, r7
 2470              		.cfi_def_cfa_register 13
 2471              		@ sp needed
 2472 0024 80BD     		pop	{r7, pc}
 2473              		.cfi_endproc
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 66


 2474              	.LFE122:
 2475              		.size	MPU_xStreamBufferNextMessageLengthBytes, .-MPU_xStreamBufferNextMessageLengthBytes
 2476 0026 00BF     		.section	.text.MPU_xStreamBufferReceive,"ax",%progbits
 2477              		.align	2
 2478              		.global	MPU_xStreamBufferReceive
 2479              		.thumb
 2480              		.thumb_func
 2481              		.type	MPU_xStreamBufferReceive, %function
 2482              	MPU_xStreamBufferReceive:
 2483              	.LFB123:
1233:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1234:Source\portable\Common/mpu_wrappers.c **** 
1235:Source\portable\Common/mpu_wrappers.c **** size_t MPU_xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer, void *pvRxData, size_t xBuffer
1236:Source\portable\Common/mpu_wrappers.c **** {
 2484              		.loc 1 1236 0
 2485              		.cfi_startproc
 2486              		@ args = 0, pretend = 0, frame = 24
 2487              		@ frame_needed = 1, uses_anonymous_args = 0
 2488 0000 80B5     		push	{r7, lr}
 2489              		.cfi_def_cfa_offset 8
 2490              		.cfi_offset 7, -8
 2491              		.cfi_offset 14, -4
 2492 0002 86B0     		sub	sp, sp, #24
 2493              		.cfi_def_cfa_offset 32
 2494 0004 00AF     		add	r7, sp, #0
 2495              		.cfi_def_cfa_register 7
 2496 0006 F860     		str	r0, [r7, #12]
 2497 0008 B960     		str	r1, [r7, #8]
 2498 000a 7A60     		str	r2, [r7, #4]
 2499 000c 3B60     		str	r3, [r7]
1237:Source\portable\Common/mpu_wrappers.c **** size_t xReturn;
1238:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2500              		.loc 1 1238 0
 2501 000e FFF7FEFF 		bl	xPortRaisePrivilege
 2502 0012 7861     		str	r0, [r7, #20]
1239:Source\portable\Common/mpu_wrappers.c **** 
1240:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xStreamBufferReceive( xStreamBuffer, pvRxData, xBufferLengthBytes, xTicksToWait );
 2503              		.loc 1 1240 0
 2504 0014 3B68     		ldr	r3, [r7]
 2505 0016 7A68     		ldr	r2, [r7, #4]
 2506 0018 B968     		ldr	r1, [r7, #8]
 2507 001a F868     		ldr	r0, [r7, #12]
 2508 001c FFF7FEFF 		bl	xStreamBufferReceive
 2509 0020 3861     		str	r0, [r7, #16]
1241:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2510              		.loc 1 1241 0
 2511 0022 7869     		ldr	r0, [r7, #20]
 2512 0024 FFF7FEFF 		bl	vPortResetPrivilege
1242:Source\portable\Common/mpu_wrappers.c **** 
1243:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2513              		.loc 1 1243 0
 2514 0028 3B69     		ldr	r3, [r7, #16]
1244:Source\portable\Common/mpu_wrappers.c **** }
 2515              		.loc 1 1244 0
 2516 002a 1846     		mov	r0, r3
 2517 002c 1837     		adds	r7, r7, #24
 2518              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 67


 2519 002e BD46     		mov	sp, r7
 2520              		.cfi_def_cfa_register 13
 2521              		@ sp needed
 2522 0030 80BD     		pop	{r7, pc}
 2523              		.cfi_endproc
 2524              	.LFE123:
 2525              		.size	MPU_xStreamBufferReceive, .-MPU_xStreamBufferReceive
 2526 0032 00BF     		.section	.text.MPU_vStreamBufferDelete,"ax",%progbits
 2527              		.align	2
 2528              		.global	MPU_vStreamBufferDelete
 2529              		.thumb
 2530              		.thumb_func
 2531              		.type	MPU_vStreamBufferDelete, %function
 2532              	MPU_vStreamBufferDelete:
 2533              	.LFB124:
1245:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1246:Source\portable\Common/mpu_wrappers.c **** 
1247:Source\portable\Common/mpu_wrappers.c **** void MPU_vStreamBufferDelete( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CALL */
1248:Source\portable\Common/mpu_wrappers.c **** {
 2534              		.loc 1 1248 0
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 16
 2537              		@ frame_needed = 1, uses_anonymous_args = 0
 2538 0000 80B5     		push	{r7, lr}
 2539              		.cfi_def_cfa_offset 8
 2540              		.cfi_offset 7, -8
 2541              		.cfi_offset 14, -4
 2542 0002 84B0     		sub	sp, sp, #16
 2543              		.cfi_def_cfa_offset 24
 2544 0004 00AF     		add	r7, sp, #0
 2545              		.cfi_def_cfa_register 7
 2546 0006 7860     		str	r0, [r7, #4]
1249:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2547              		.loc 1 1249 0
 2548 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 2549 000c F860     		str	r0, [r7, #12]
1250:Source\portable\Common/mpu_wrappers.c **** 
1251:Source\portable\Common/mpu_wrappers.c **** 	vStreamBufferDelete( xStreamBuffer );
 2550              		.loc 1 1251 0
 2551 000e 7868     		ldr	r0, [r7, #4]
 2552 0010 FFF7FEFF 		bl	vStreamBufferDelete
1252:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2553              		.loc 1 1252 0
 2554 0014 F868     		ldr	r0, [r7, #12]
 2555 0016 FFF7FEFF 		bl	vPortResetPrivilege
1253:Source\portable\Common/mpu_wrappers.c **** }
 2556              		.loc 1 1253 0
 2557 001a 00BF     		nop
 2558 001c 1037     		adds	r7, r7, #16
 2559              		.cfi_def_cfa_offset 8
 2560 001e BD46     		mov	sp, r7
 2561              		.cfi_def_cfa_register 13
 2562              		@ sp needed
 2563 0020 80BD     		pop	{r7, pc}
 2564              		.cfi_endproc
 2565              	.LFE124:
 2566              		.size	MPU_vStreamBufferDelete, .-MPU_vStreamBufferDelete
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 68


 2567 0022 00BF     		.section	.text.MPU_xStreamBufferIsFull,"ax",%progbits
 2568              		.align	2
 2569              		.global	MPU_xStreamBufferIsFull
 2570              		.thumb
 2571              		.thumb_func
 2572              		.type	MPU_xStreamBufferIsFull, %function
 2573              	MPU_xStreamBufferIsFull:
 2574              	.LFB125:
1254:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1255:Source\portable\Common/mpu_wrappers.c **** 
1256:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xStreamBufferIsFull( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CALL */
1257:Source\portable\Common/mpu_wrappers.c **** {
 2575              		.loc 1 1257 0
 2576              		.cfi_startproc
 2577              		@ args = 0, pretend = 0, frame = 16
 2578              		@ frame_needed = 1, uses_anonymous_args = 0
 2579 0000 80B5     		push	{r7, lr}
 2580              		.cfi_def_cfa_offset 8
 2581              		.cfi_offset 7, -8
 2582              		.cfi_offset 14, -4
 2583 0002 84B0     		sub	sp, sp, #16
 2584              		.cfi_def_cfa_offset 24
 2585 0004 00AF     		add	r7, sp, #0
 2586              		.cfi_def_cfa_register 7
 2587 0006 7860     		str	r0, [r7, #4]
1258:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
1259:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2588              		.loc 1 1259 0
 2589 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 2590 000c F860     		str	r0, [r7, #12]
1260:Source\portable\Common/mpu_wrappers.c **** 
1261:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xStreamBufferIsFull( xStreamBuffer );
 2591              		.loc 1 1261 0
 2592 000e 7868     		ldr	r0, [r7, #4]
 2593 0010 FFF7FEFF 		bl	xStreamBufferIsFull
 2594 0014 B860     		str	r0, [r7, #8]
1262:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2595              		.loc 1 1262 0
 2596 0016 F868     		ldr	r0, [r7, #12]
 2597 0018 FFF7FEFF 		bl	vPortResetPrivilege
1263:Source\portable\Common/mpu_wrappers.c **** 
1264:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2598              		.loc 1 1264 0
 2599 001c BB68     		ldr	r3, [r7, #8]
1265:Source\portable\Common/mpu_wrappers.c **** }
 2600              		.loc 1 1265 0
 2601 001e 1846     		mov	r0, r3
 2602 0020 1037     		adds	r7, r7, #16
 2603              		.cfi_def_cfa_offset 8
 2604 0022 BD46     		mov	sp, r7
 2605              		.cfi_def_cfa_register 13
 2606              		@ sp needed
 2607 0024 80BD     		pop	{r7, pc}
 2608              		.cfi_endproc
 2609              	.LFE125:
 2610              		.size	MPU_xStreamBufferIsFull, .-MPU_xStreamBufferIsFull
 2611 0026 00BF     		.section	.text.MPU_xStreamBufferIsEmpty,"ax",%progbits
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 69


 2612              		.align	2
 2613              		.global	MPU_xStreamBufferIsEmpty
 2614              		.thumb
 2615              		.thumb_func
 2616              		.type	MPU_xStreamBufferIsEmpty, %function
 2617              	MPU_xStreamBufferIsEmpty:
 2618              	.LFB126:
1266:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1267:Source\portable\Common/mpu_wrappers.c **** 
1268:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xStreamBufferIsEmpty( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CALL *
1269:Source\portable\Common/mpu_wrappers.c **** {
 2619              		.loc 1 1269 0
 2620              		.cfi_startproc
 2621              		@ args = 0, pretend = 0, frame = 16
 2622              		@ frame_needed = 1, uses_anonymous_args = 0
 2623 0000 80B5     		push	{r7, lr}
 2624              		.cfi_def_cfa_offset 8
 2625              		.cfi_offset 7, -8
 2626              		.cfi_offset 14, -4
 2627 0002 84B0     		sub	sp, sp, #16
 2628              		.cfi_def_cfa_offset 24
 2629 0004 00AF     		add	r7, sp, #0
 2630              		.cfi_def_cfa_register 7
 2631 0006 7860     		str	r0, [r7, #4]
1270:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
1271:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2632              		.loc 1 1271 0
 2633 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 2634 000c F860     		str	r0, [r7, #12]
1272:Source\portable\Common/mpu_wrappers.c **** 
1273:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xStreamBufferIsEmpty( xStreamBuffer );
 2635              		.loc 1 1273 0
 2636 000e 7868     		ldr	r0, [r7, #4]
 2637 0010 FFF7FEFF 		bl	xStreamBufferIsEmpty
 2638 0014 B860     		str	r0, [r7, #8]
1274:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2639              		.loc 1 1274 0
 2640 0016 F868     		ldr	r0, [r7, #12]
 2641 0018 FFF7FEFF 		bl	vPortResetPrivilege
1275:Source\portable\Common/mpu_wrappers.c **** 
1276:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2642              		.loc 1 1276 0
 2643 001c BB68     		ldr	r3, [r7, #8]
1277:Source\portable\Common/mpu_wrappers.c **** }
 2644              		.loc 1 1277 0
 2645 001e 1846     		mov	r0, r3
 2646 0020 1037     		adds	r7, r7, #16
 2647              		.cfi_def_cfa_offset 8
 2648 0022 BD46     		mov	sp, r7
 2649              		.cfi_def_cfa_register 13
 2650              		@ sp needed
 2651 0024 80BD     		pop	{r7, pc}
 2652              		.cfi_endproc
 2653              	.LFE126:
 2654              		.size	MPU_xStreamBufferIsEmpty, .-MPU_xStreamBufferIsEmpty
 2655 0026 00BF     		.section	.text.MPU_xStreamBufferReset,"ax",%progbits
 2656              		.align	2
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 70


 2657              		.global	MPU_xStreamBufferReset
 2658              		.thumb
 2659              		.thumb_func
 2660              		.type	MPU_xStreamBufferReset, %function
 2661              	MPU_xStreamBufferReset:
 2662              	.LFB127:
1278:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1279:Source\portable\Common/mpu_wrappers.c **** 
1280:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xStreamBufferReset( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CALL */
1281:Source\portable\Common/mpu_wrappers.c **** {
 2663              		.loc 1 1281 0
 2664              		.cfi_startproc
 2665              		@ args = 0, pretend = 0, frame = 16
 2666              		@ frame_needed = 1, uses_anonymous_args = 0
 2667 0000 80B5     		push	{r7, lr}
 2668              		.cfi_def_cfa_offset 8
 2669              		.cfi_offset 7, -8
 2670              		.cfi_offset 14, -4
 2671 0002 84B0     		sub	sp, sp, #16
 2672              		.cfi_def_cfa_offset 24
 2673 0004 00AF     		add	r7, sp, #0
 2674              		.cfi_def_cfa_register 7
 2675 0006 7860     		str	r0, [r7, #4]
1282:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
1283:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2676              		.loc 1 1283 0
 2677 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 2678 000c F860     		str	r0, [r7, #12]
1284:Source\portable\Common/mpu_wrappers.c **** 
1285:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xStreamBufferReset( xStreamBuffer );
 2679              		.loc 1 1285 0
 2680 000e 7868     		ldr	r0, [r7, #4]
 2681 0010 FFF7FEFF 		bl	xStreamBufferReset
 2682 0014 B860     		str	r0, [r7, #8]
1286:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2683              		.loc 1 1286 0
 2684 0016 F868     		ldr	r0, [r7, #12]
 2685 0018 FFF7FEFF 		bl	vPortResetPrivilege
1287:Source\portable\Common/mpu_wrappers.c **** 
1288:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2686              		.loc 1 1288 0
 2687 001c BB68     		ldr	r3, [r7, #8]
1289:Source\portable\Common/mpu_wrappers.c **** }
 2688              		.loc 1 1289 0
 2689 001e 1846     		mov	r0, r3
 2690 0020 1037     		adds	r7, r7, #16
 2691              		.cfi_def_cfa_offset 8
 2692 0022 BD46     		mov	sp, r7
 2693              		.cfi_def_cfa_register 13
 2694              		@ sp needed
 2695 0024 80BD     		pop	{r7, pc}
 2696              		.cfi_endproc
 2697              	.LFE127:
 2698              		.size	MPU_xStreamBufferReset, .-MPU_xStreamBufferReset
 2699 0026 00BF     		.section	.text.MPU_xStreamBufferSpacesAvailable,"ax",%progbits
 2700              		.align	2
 2701              		.global	MPU_xStreamBufferSpacesAvailable
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 71


 2702              		.thumb
 2703              		.thumb_func
 2704              		.type	MPU_xStreamBufferSpacesAvailable, %function
 2705              	MPU_xStreamBufferSpacesAvailable:
 2706              	.LFB128:
1290:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1291:Source\portable\Common/mpu_wrappers.c **** 
1292:Source\portable\Common/mpu_wrappers.c **** size_t MPU_xStreamBufferSpacesAvailable( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CA
1293:Source\portable\Common/mpu_wrappers.c **** {
 2707              		.loc 1 1293 0
 2708              		.cfi_startproc
 2709              		@ args = 0, pretend = 0, frame = 16
 2710              		@ frame_needed = 1, uses_anonymous_args = 0
 2711 0000 80B5     		push	{r7, lr}
 2712              		.cfi_def_cfa_offset 8
 2713              		.cfi_offset 7, -8
 2714              		.cfi_offset 14, -4
 2715 0002 84B0     		sub	sp, sp, #16
 2716              		.cfi_def_cfa_offset 24
 2717 0004 00AF     		add	r7, sp, #0
 2718              		.cfi_def_cfa_register 7
 2719 0006 7860     		str	r0, [r7, #4]
1294:Source\portable\Common/mpu_wrappers.c **** size_t xReturn;
1295:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2720              		.loc 1 1295 0
 2721 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 2722 000c F860     		str	r0, [r7, #12]
1296:Source\portable\Common/mpu_wrappers.c **** 
1297:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xStreamBufferSpacesAvailable( xStreamBuffer );
 2723              		.loc 1 1297 0
 2724 000e 7868     		ldr	r0, [r7, #4]
 2725 0010 FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 2726 0014 B860     		str	r0, [r7, #8]
1298:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2727              		.loc 1 1298 0
 2728 0016 F868     		ldr	r0, [r7, #12]
 2729 0018 FFF7FEFF 		bl	vPortResetPrivilege
1299:Source\portable\Common/mpu_wrappers.c **** 
1300:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2730              		.loc 1 1300 0
 2731 001c BB68     		ldr	r3, [r7, #8]
1301:Source\portable\Common/mpu_wrappers.c **** }
 2732              		.loc 1 1301 0
 2733 001e 1846     		mov	r0, r3
 2734 0020 1037     		adds	r7, r7, #16
 2735              		.cfi_def_cfa_offset 8
 2736 0022 BD46     		mov	sp, r7
 2737              		.cfi_def_cfa_register 13
 2738              		@ sp needed
 2739 0024 80BD     		pop	{r7, pc}
 2740              		.cfi_endproc
 2741              	.LFE128:
 2742              		.size	MPU_xStreamBufferSpacesAvailable, .-MPU_xStreamBufferSpacesAvailable
 2743 0026 00BF     		.section	.text.MPU_xStreamBufferBytesAvailable,"ax",%progbits
 2744              		.align	2
 2745              		.global	MPU_xStreamBufferBytesAvailable
 2746              		.thumb
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 72


 2747              		.thumb_func
 2748              		.type	MPU_xStreamBufferBytesAvailable, %function
 2749              	MPU_xStreamBufferBytesAvailable:
 2750              	.LFB129:
1302:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1303:Source\portable\Common/mpu_wrappers.c **** 
1304:Source\portable\Common/mpu_wrappers.c **** size_t MPU_xStreamBufferBytesAvailable( StreamBufferHandle_t xStreamBuffer ) /* FREERTOS_SYSTEM_CAL
1305:Source\portable\Common/mpu_wrappers.c **** {
 2751              		.loc 1 1305 0
 2752              		.cfi_startproc
 2753              		@ args = 0, pretend = 0, frame = 16
 2754              		@ frame_needed = 1, uses_anonymous_args = 0
 2755 0000 80B5     		push	{r7, lr}
 2756              		.cfi_def_cfa_offset 8
 2757              		.cfi_offset 7, -8
 2758              		.cfi_offset 14, -4
 2759 0002 84B0     		sub	sp, sp, #16
 2760              		.cfi_def_cfa_offset 24
 2761 0004 00AF     		add	r7, sp, #0
 2762              		.cfi_def_cfa_register 7
 2763 0006 7860     		str	r0, [r7, #4]
1306:Source\portable\Common/mpu_wrappers.c **** size_t xReturn;
1307:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2764              		.loc 1 1307 0
 2765 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 2766 000c F860     		str	r0, [r7, #12]
1308:Source\portable\Common/mpu_wrappers.c **** 
1309:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xStreamBufferBytesAvailable( xStreamBuffer );
 2767              		.loc 1 1309 0
 2768 000e 7868     		ldr	r0, [r7, #4]
 2769 0010 FFF7FEFF 		bl	xStreamBufferBytesAvailable
 2770 0014 B860     		str	r0, [r7, #8]
1310:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2771              		.loc 1 1310 0
 2772 0016 F868     		ldr	r0, [r7, #12]
 2773 0018 FFF7FEFF 		bl	vPortResetPrivilege
1311:Source\portable\Common/mpu_wrappers.c **** 
1312:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2774              		.loc 1 1312 0
 2775 001c BB68     		ldr	r3, [r7, #8]
1313:Source\portable\Common/mpu_wrappers.c **** }
 2776              		.loc 1 1313 0
 2777 001e 1846     		mov	r0, r3
 2778 0020 1037     		adds	r7, r7, #16
 2779              		.cfi_def_cfa_offset 8
 2780 0022 BD46     		mov	sp, r7
 2781              		.cfi_def_cfa_register 13
 2782              		@ sp needed
 2783 0024 80BD     		pop	{r7, pc}
 2784              		.cfi_endproc
 2785              	.LFE129:
 2786              		.size	MPU_xStreamBufferBytesAvailable, .-MPU_xStreamBufferBytesAvailable
 2787 0026 00BF     		.section	.text.MPU_xStreamBufferSetTriggerLevel,"ax",%progbits
 2788              		.align	2
 2789              		.global	MPU_xStreamBufferSetTriggerLevel
 2790              		.thumb
 2791              		.thumb_func
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 73


 2792              		.type	MPU_xStreamBufferSetTriggerLevel, %function
 2793              	MPU_xStreamBufferSetTriggerLevel:
 2794              	.LFB130:
1314:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1315:Source\portable\Common/mpu_wrappers.c **** 
1316:Source\portable\Common/mpu_wrappers.c **** BaseType_t MPU_xStreamBufferSetTriggerLevel( StreamBufferHandle_t xStreamBuffer, size_t xTriggerLev
1317:Source\portable\Common/mpu_wrappers.c **** {
 2795              		.loc 1 1317 0
 2796              		.cfi_startproc
 2797              		@ args = 0, pretend = 0, frame = 16
 2798              		@ frame_needed = 1, uses_anonymous_args = 0
 2799 0000 80B5     		push	{r7, lr}
 2800              		.cfi_def_cfa_offset 8
 2801              		.cfi_offset 7, -8
 2802              		.cfi_offset 14, -4
 2803 0002 84B0     		sub	sp, sp, #16
 2804              		.cfi_def_cfa_offset 24
 2805 0004 00AF     		add	r7, sp, #0
 2806              		.cfi_def_cfa_register 7
 2807 0006 7860     		str	r0, [r7, #4]
 2808 0008 3960     		str	r1, [r7]
1318:Source\portable\Common/mpu_wrappers.c **** BaseType_t xReturn;
1319:Source\portable\Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2809              		.loc 1 1319 0
 2810 000a FFF7FEFF 		bl	xPortRaisePrivilege
 2811 000e F860     		str	r0, [r7, #12]
1320:Source\portable\Common/mpu_wrappers.c **** 
1321:Source\portable\Common/mpu_wrappers.c **** 	xReturn = xStreamBufferSetTriggerLevel( xStreamBuffer, xTriggerLevel );
 2812              		.loc 1 1321 0
 2813 0010 3968     		ldr	r1, [r7]
 2814 0012 7868     		ldr	r0, [r7, #4]
 2815 0014 FFF7FEFF 		bl	xStreamBufferSetTriggerLevel
 2816 0018 B860     		str	r0, [r7, #8]
1322:Source\portable\Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2817              		.loc 1 1322 0
 2818 001a F868     		ldr	r0, [r7, #12]
 2819 001c FFF7FEFF 		bl	vPortResetPrivilege
1323:Source\portable\Common/mpu_wrappers.c **** 
1324:Source\portable\Common/mpu_wrappers.c **** 	return xReturn;
 2820              		.loc 1 1324 0
 2821 0020 BB68     		ldr	r3, [r7, #8]
1325:Source\portable\Common/mpu_wrappers.c **** }
 2822              		.loc 1 1325 0
 2823 0022 1846     		mov	r0, r3
 2824 0024 1037     		adds	r7, r7, #16
 2825              		.cfi_def_cfa_offset 8
 2826 0026 BD46     		mov	sp, r7
 2827              		.cfi_def_cfa_register 13
 2828              		@ sp needed
 2829 0028 80BD     		pop	{r7, pc}
 2830              		.cfi_endproc
 2831              	.LFE130:
 2832              		.size	MPU_xStreamBufferSetTriggerLevel, .-MPU_xStreamBufferSetTriggerLevel
 2833              		.section	.text.MPU_xStreamBufferGenericCreate,"ax",%progbits
 2834              		.align	2
 2835              		.global	MPU_xStreamBufferGenericCreate
 2836              		.thumb
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 74


 2837              		.thumb_func
 2838              		.type	MPU_xStreamBufferGenericCreate, %function
 2839              	MPU_xStreamBufferGenericCreate:
 2840              	.LFB131:
1326:Source\portable\Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1327:Source\portable\Common/mpu_wrappers.c **** 
1328:Source\portable\Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
1329:Source\portable\Common/mpu_wrappers.c **** 	StreamBufferHandle_t MPU_xStreamBufferGenericCreate( size_t xBufferSizeBytes, size_t xTriggerLevel
1330:Source\portable\Common/mpu_wrappers.c **** 	{
 2841              		.loc 1 1330 0
 2842              		.cfi_startproc
 2843              		@ args = 0, pretend = 0, frame = 24
 2844              		@ frame_needed = 1, uses_anonymous_args = 0
 2845 0000 80B5     		push	{r7, lr}
 2846              		.cfi_def_cfa_offset 8
 2847              		.cfi_offset 7, -8
 2848              		.cfi_offset 14, -4
 2849 0002 86B0     		sub	sp, sp, #24
 2850              		.cfi_def_cfa_offset 32
 2851 0004 00AF     		add	r7, sp, #0
 2852              		.cfi_def_cfa_register 7
 2853 0006 F860     		str	r0, [r7, #12]
 2854 0008 B960     		str	r1, [r7, #8]
 2855 000a 7A60     		str	r2, [r7, #4]
1331:Source\portable\Common/mpu_wrappers.c **** 	StreamBufferHandle_t xReturn;
1332:Source\portable\Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2856              		.loc 1 1332 0
 2857 000c FFF7FEFF 		bl	xPortRaisePrivilege
 2858 0010 7861     		str	r0, [r7, #20]
1333:Source\portable\Common/mpu_wrappers.c **** 
1334:Source\portable\Common/mpu_wrappers.c **** 		xReturn = xStreamBufferGenericCreate( xBufferSizeBytes, xTriggerLevelBytes, xIsMessageBuffer );
 2859              		.loc 1 1334 0
 2860 0012 7A68     		ldr	r2, [r7, #4]
 2861 0014 B968     		ldr	r1, [r7, #8]
 2862 0016 F868     		ldr	r0, [r7, #12]
 2863 0018 FFF7FEFF 		bl	xStreamBufferGenericCreate
 2864 001c 3861     		str	r0, [r7, #16]
1335:Source\portable\Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 2865              		.loc 1 1335 0
 2866 001e 7869     		ldr	r0, [r7, #20]
 2867 0020 FFF7FEFF 		bl	vPortResetPrivilege
1336:Source\portable\Common/mpu_wrappers.c **** 
1337:Source\portable\Common/mpu_wrappers.c **** 		return xReturn;
 2868              		.loc 1 1337 0
 2869 0024 3B69     		ldr	r3, [r7, #16]
1338:Source\portable\Common/mpu_wrappers.c **** 	}
 2870              		.loc 1 1338 0
 2871 0026 1846     		mov	r0, r3
 2872 0028 1837     		adds	r7, r7, #24
 2873              		.cfi_def_cfa_offset 8
 2874 002a BD46     		mov	sp, r7
 2875              		.cfi_def_cfa_register 13
 2876              		@ sp needed
 2877 002c 80BD     		pop	{r7, pc}
 2878              		.cfi_endproc
 2879              	.LFE131:
 2880              		.size	MPU_xStreamBufferGenericCreate, .-MPU_xStreamBufferGenericCreate
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 75


 2881 002e 00BF     		.text
 2882              	.Letext0:
 2883              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2884              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2885              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 2886              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 2887              		.file 6 "Generated_Source\\PSoC5/DS18x8.h"
 2888              		.file 7 ".\\Source\\include/projdefs.h"
 2889              		.file 8 ".\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
 2890              		.file 9 ".\\Source\\include/task.h"
 2891              		.file 10 ".\\Source\\include/queue.h"
 2892              		.file 11 ".\\Source\\include/event_groups.h"
 2893              		.file 12 ".\\Source\\include/stream_buffer.h"
 2894              		.file 13 "Generated_Source\\PSoC5/core_cm3.h"
 2895              		.section	.debug_info,"",%progbits
 2896              	.Ldebug_info0:
 2897 0000 36170000 		.4byte	0x1736
 2898 0004 0400     		.2byte	0x4
 2899 0006 00000000 		.4byte	.Ldebug_abbrev0
 2900 000a 04       		.byte	0x4
 2901 000b 01       		.uleb128 0x1
 2902 000c AB010000 		.4byte	.LASF204
 2903 0010 0C       		.byte	0xc
 2904 0011 9B0C0000 		.4byte	.LASF205
 2905 0015 B3080000 		.4byte	.LASF206
 2906 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2907 001d 00000000 		.4byte	0
 2908 0021 00000000 		.4byte	.Ldebug_line0
 2909 0025 02       		.uleb128 0x2
 2910 0026 04       		.byte	0x4
 2911 0027 05       		.byte	0x5
 2912 0028 696E7400 		.ascii	"int\000"
 2913 002c 03       		.uleb128 0x3
 2914 002d B4040000 		.4byte	.LASF4
 2915 0031 02       		.byte	0x2
 2916 0032 D8       		.byte	0xd8
 2917 0033 37000000 		.4byte	0x37
 2918 0037 04       		.uleb128 0x4
 2919 0038 04       		.byte	0x4
 2920 0039 07       		.byte	0x7
 2921 003a 2D010000 		.4byte	.LASF0
 2922 003e 04       		.uleb128 0x4
 2923 003f 08       		.byte	0x8
 2924 0040 05       		.byte	0x5
 2925 0041 73060000 		.4byte	.LASF1
 2926 0045 04       		.uleb128 0x4
 2927 0046 08       		.byte	0x8
 2928 0047 04       		.byte	0x4
 2929 0048 8F080000 		.4byte	.LASF2
 2930 004c 04       		.uleb128 0x4
 2931 004d 01       		.byte	0x1
 2932 004e 06       		.byte	0x6
 2933 004f CA020000 		.4byte	.LASF3
 2934 0053 03       		.uleb128 0x3
 2935 0054 250A0000 		.4byte	.LASF5
 2936 0058 03       		.byte	0x3
 2937 0059 1D       		.byte	0x1d
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 76


 2938 005a 5E000000 		.4byte	0x5e
 2939 005e 04       		.uleb128 0x4
 2940 005f 01       		.byte	0x1
 2941 0060 08       		.byte	0x8
 2942 0061 360B0000 		.4byte	.LASF6
 2943 0065 04       		.uleb128 0x4
 2944 0066 02       		.byte	0x2
 2945 0067 05       		.byte	0x5
 2946 0068 54090000 		.4byte	.LASF7
 2947 006c 03       		.uleb128 0x3
 2948 006d 4A040000 		.4byte	.LASF8
 2949 0071 03       		.byte	0x3
 2950 0072 2B       		.byte	0x2b
 2951 0073 77000000 		.4byte	0x77
 2952 0077 04       		.uleb128 0x4
 2953 0078 02       		.byte	0x2
 2954 0079 07       		.byte	0x7
 2955 007a C10C0000 		.4byte	.LASF9
 2956 007e 03       		.uleb128 0x3
 2957 007f 7E010000 		.4byte	.LASF10
 2958 0083 03       		.byte	0x3
 2959 0084 3F       		.byte	0x3f
 2960 0085 89000000 		.4byte	0x89
 2961 0089 04       		.uleb128 0x4
 2962 008a 04       		.byte	0x4
 2963 008b 05       		.byte	0x5
 2964 008c A2090000 		.4byte	.LASF11
 2965 0090 03       		.uleb128 0x3
 2966 0091 5B0B0000 		.4byte	.LASF12
 2967 0095 03       		.byte	0x3
 2968 0096 41       		.byte	0x41
 2969 0097 9B000000 		.4byte	0x9b
 2970 009b 04       		.uleb128 0x4
 2971 009c 04       		.byte	0x4
 2972 009d 07       		.byte	0x7
 2973 009e AC0A0000 		.4byte	.LASF13
 2974 00a2 04       		.uleb128 0x4
 2975 00a3 08       		.byte	0x8
 2976 00a4 07       		.byte	0x7
 2977 00a5 D9030000 		.4byte	.LASF14
 2978 00a9 03       		.uleb128 0x3
 2979 00aa 0A060000 		.4byte	.LASF15
 2980 00ae 04       		.byte	0x4
 2981 00af 18       		.byte	0x18
 2982 00b0 53000000 		.4byte	0x53
 2983 00b4 03       		.uleb128 0x3
 2984 00b5 AA080000 		.4byte	.LASF16
 2985 00b9 04       		.byte	0x4
 2986 00ba 24       		.byte	0x24
 2987 00bb 6C000000 		.4byte	0x6c
 2988 00bf 03       		.uleb128 0x3
 2989 00c0 CF0A0000 		.4byte	.LASF17
 2990 00c4 04       		.byte	0x4
 2991 00c5 2C       		.byte	0x2c
 2992 00c6 7E000000 		.4byte	0x7e
 2993 00ca 03       		.uleb128 0x3
 2994 00cb F6020000 		.4byte	.LASF18
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 77


 2995 00cf 04       		.byte	0x4
 2996 00d0 30       		.byte	0x30
 2997 00d1 90000000 		.4byte	0x90
 2998 00d5 05       		.uleb128 0x5
 2999 00d6 050D0000 		.4byte	.LASF19
 3000 00da 05       		.byte	0x5
 3001 00db E401     		.2byte	0x1e4
 3002 00dd 5E000000 		.4byte	0x5e
 3003 00e1 05       		.uleb128 0x5
 3004 00e2 E5050000 		.4byte	.LASF20
 3005 00e6 05       		.byte	0x5
 3006 00e7 E501     		.2byte	0x1e5
 3007 00e9 77000000 		.4byte	0x77
 3008 00ed 04       		.uleb128 0x4
 3009 00ee 04       		.byte	0x4
 3010 00ef 04       		.byte	0x4
 3011 00f0 51030000 		.4byte	.LASF21
 3012 00f4 04       		.uleb128 0x4
 3013 00f5 08       		.byte	0x8
 3014 00f6 04       		.byte	0x4
 3015 00f7 0B0D0000 		.4byte	.LASF22
 3016 00fb 04       		.uleb128 0x4
 3017 00fc 01       		.byte	0x1
 3018 00fd 08       		.byte	0x8
 3019 00fe A6050000 		.4byte	.LASF23
 3020 0102 06       		.uleb128 0x6
 3021 0103 D5000000 		.4byte	0xd5
 3022 0107 04       		.uleb128 0x4
 3023 0108 04       		.byte	0x4
 3024 0109 07       		.byte	0x7
 3025 010a A30A0000 		.4byte	.LASF24
 3026 010e 07       		.uleb128 0x7
 3027 010f 04       		.byte	0x4
 3028 0110 08       		.uleb128 0x8
 3029 0111 04       		.byte	0x4
 3030 0112 FB000000 		.4byte	0xfb
 3031 0116 08       		.uleb128 0x8
 3032 0117 04       		.byte	0x4
 3033 0118 1C010000 		.4byte	0x11c
 3034 011c 09       		.uleb128 0x9
 3035 011d FB000000 		.4byte	0xfb
 3036 0121 0A       		.uleb128 0xa
 3037 0122 E7000000 		.4byte	.LASF46
 3038 0126 04       		.byte	0x4
 3039 0127 06       		.byte	0x6
 3040 0128 30       		.byte	0x30
 3041 0129 46010000 		.4byte	0x146
 3042 012d 0B       		.uleb128 0xb
 3043 012e 20080000 		.4byte	.LASF25
 3044 0132 06       		.byte	0x6
 3045 0133 31       		.byte	0x31
 3046 0134 E1000000 		.4byte	0xe1
 3047 0138 00       		.byte	0
 3048 0139 0B       		.uleb128 0xb
 3049 013a 19060000 		.4byte	.LASF26
 3050 013e 06       		.byte	0x6
 3051 013f 32       		.byte	0x32
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 78


 3052 0140 D5000000 		.4byte	0xd5
 3053 0144 02       		.byte	0x2
 3054 0145 00       		.byte	0
 3055 0146 03       		.uleb128 0x3
 3056 0147 0D070000 		.4byte	.LASF27
 3057 014b 07       		.byte	0x7
 3058 014c 23       		.byte	0x23
 3059 014d 51010000 		.4byte	0x151
 3060 0151 08       		.uleb128 0x8
 3061 0152 04       		.byte	0x4
 3062 0153 57010000 		.4byte	0x157
 3063 0157 0C       		.uleb128 0xc
 3064 0158 62010000 		.4byte	0x162
 3065 015c 0D       		.uleb128 0xd
 3066 015d 0E010000 		.4byte	0x10e
 3067 0161 00       		.byte	0
 3068 0162 03       		.uleb128 0x3
 3069 0163 3A010000 		.4byte	.LASF28
 3070 0167 08       		.byte	0x8
 3071 0168 37       		.byte	0x37
 3072 0169 CA000000 		.4byte	0xca
 3073 016d 03       		.uleb128 0x3
 3074 016e C6060000 		.4byte	.LASF29
 3075 0172 08       		.byte	0x8
 3076 0173 38       		.byte	0x38
 3077 0174 89000000 		.4byte	0x89
 3078 0178 03       		.uleb128 0x3
 3079 0179 D9050000 		.4byte	.LASF30
 3080 017d 08       		.byte	0x8
 3081 017e 39       		.byte	0x39
 3082 017f 9B000000 		.4byte	0x9b
 3083 0183 03       		.uleb128 0x3
 3084 0184 F6070000 		.4byte	.LASF31
 3085 0188 08       		.byte	0x8
 3086 0189 3F       		.byte	0x3f
 3087 018a CA000000 		.4byte	0xca
 3088 018e 03       		.uleb128 0x3
 3089 018f 6B070000 		.4byte	.LASF32
 3090 0193 09       		.byte	0x9
 3091 0194 46       		.byte	0x46
 3092 0195 99010000 		.4byte	0x199
 3093 0199 08       		.uleb128 0x8
 3094 019a 04       		.byte	0x4
 3095 019b 9F010000 		.4byte	0x19f
 3096 019f 0E       		.uleb128 0xe
 3097 01a0 D3000000 		.4byte	.LASF66
 3098 01a4 0F       		.uleb128 0xf
 3099 01a5 01       		.byte	0x1
 3100 01a6 5E000000 		.4byte	0x5e
 3101 01aa 09       		.byte	0x9
 3102 01ab 50       		.byte	0x50
 3103 01ac D5010000 		.4byte	0x1d5
 3104 01b0 10       		.uleb128 0x10
 3105 01b1 ED0A0000 		.4byte	.LASF33
 3106 01b5 00       		.byte	0
 3107 01b6 10       		.uleb128 0x10
 3108 01b7 12060000 		.4byte	.LASF34
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 79


 3109 01bb 01       		.byte	0x1
 3110 01bc 10       		.uleb128 0x10
 3111 01bd 2C0C0000 		.4byte	.LASF35
 3112 01c1 02       		.byte	0x2
 3113 01c2 10       		.uleb128 0x10
 3114 01c3 B2000000 		.4byte	.LASF36
 3115 01c7 03       		.byte	0x3
 3116 01c8 10       		.uleb128 0x10
 3117 01c9 81060000 		.4byte	.LASF37
 3118 01cd 04       		.byte	0x4
 3119 01ce 10       		.uleb128 0x10
 3120 01cf AC0B0000 		.4byte	.LASF38
 3121 01d3 05       		.byte	0x5
 3122 01d4 00       		.byte	0
 3123 01d5 03       		.uleb128 0x3
 3124 01d6 B2070000 		.4byte	.LASF39
 3125 01da 09       		.byte	0x9
 3126 01db 57       		.byte	0x57
 3127 01dc A4010000 		.4byte	0x1a4
 3128 01e0 0F       		.uleb128 0xf
 3129 01e1 01       		.byte	0x1
 3130 01e2 5E000000 		.4byte	0x5e
 3131 01e6 09       		.byte	0x9
 3132 01e7 5B       		.byte	0x5b
 3133 01e8 0B020000 		.4byte	0x20b
 3134 01ec 10       		.uleb128 0x10
 3135 01ed 23010000 		.4byte	.LASF40
 3136 01f1 00       		.byte	0
 3137 01f2 10       		.uleb128 0x10
 3138 01f3 86080000 		.4byte	.LASF41
 3139 01f7 01       		.byte	0x1
 3140 01f8 10       		.uleb128 0x10
 3141 01f9 D3040000 		.4byte	.LASF42
 3142 01fd 02       		.byte	0x2
 3143 01fe 10       		.uleb128 0x10
 3144 01ff C2030000 		.4byte	.LASF43
 3145 0203 03       		.byte	0x3
 3146 0204 10       		.uleb128 0x10
 3147 0205 BF050000 		.4byte	.LASF44
 3148 0209 04       		.byte	0x4
 3149 020a 00       		.byte	0
 3150 020b 03       		.uleb128 0x3
 3151 020c 83040000 		.4byte	.LASF45
 3152 0210 09       		.byte	0x9
 3153 0211 61       		.byte	0x61
 3154 0212 E0010000 		.4byte	0x1e0
 3155 0216 0A       		.uleb128 0xa
 3156 0217 66010000 		.4byte	.LASF47
 3157 021b 08       		.byte	0x8
 3158 021c 09       		.byte	0x9
 3159 021d 66       		.byte	0x66
 3160 021e 3B020000 		.4byte	0x23b
 3161 0222 0B       		.uleb128 0xb
 3162 0223 4B020000 		.4byte	.LASF48
 3163 0227 09       		.byte	0x9
 3164 0228 68       		.byte	0x68
 3165 0229 6D010000 		.4byte	0x16d
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 80


 3166 022d 00       		.byte	0
 3167 022e 0B       		.uleb128 0xb
 3168 022f EF060000 		.4byte	.LASF49
 3169 0233 09       		.byte	0x9
 3170 0234 69       		.byte	0x69
 3171 0235 83010000 		.4byte	0x183
 3172 0239 04       		.byte	0x4
 3173 023a 00       		.byte	0
 3174 023b 03       		.uleb128 0x3
 3175 023c 61070000 		.4byte	.LASF50
 3176 0240 09       		.byte	0x9
 3177 0241 6A       		.byte	0x6a
 3178 0242 16020000 		.4byte	0x216
 3179 0246 0A       		.uleb128 0xa
 3180 0247 9B080000 		.4byte	.LASF51
 3181 024b 0C       		.byte	0xc
 3182 024c 09       		.byte	0x9
 3183 024d 6F       		.byte	0x6f
 3184 024e 77020000 		.4byte	0x277
 3185 0252 0B       		.uleb128 0xb
 3186 0253 090B0000 		.4byte	.LASF52
 3187 0257 09       		.byte	0x9
 3188 0258 71       		.byte	0x71
 3189 0259 0E010000 		.4byte	0x10e
 3190 025d 00       		.byte	0
 3191 025e 0B       		.uleb128 0xb
 3192 025f 9F060000 		.4byte	.LASF53
 3193 0263 09       		.byte	0x9
 3194 0264 72       		.byte	0x72
 3195 0265 CA000000 		.4byte	0xca
 3196 0269 04       		.byte	0x4
 3197 026a 0B       		.uleb128 0xb
 3198 026b 9E020000 		.4byte	.LASF54
 3199 026f 09       		.byte	0x9
 3200 0270 73       		.byte	0x73
 3201 0271 CA000000 		.4byte	0xca
 3202 0275 08       		.byte	0x8
 3203 0276 00       		.byte	0
 3204 0277 03       		.uleb128 0x3
 3205 0278 64060000 		.4byte	.LASF55
 3206 027c 09       		.byte	0x9
 3207 027d 74       		.byte	0x74
 3208 027e 46020000 		.4byte	0x246
 3209 0282 0A       		.uleb128 0xa
 3210 0283 610C0000 		.4byte	.LASF56
 3211 0287 24       		.byte	0x24
 3212 0288 09       		.byte	0x9
 3213 0289 79       		.byte	0x79
 3214 028a E3020000 		.4byte	0x2e3
 3215 028e 0B       		.uleb128 0xb
 3216 028f 810C0000 		.4byte	.LASF57
 3217 0293 09       		.byte	0x9
 3218 0294 7B       		.byte	0x7b
 3219 0295 46010000 		.4byte	0x146
 3220 0299 00       		.byte	0
 3221 029a 0B       		.uleb128 0xb
 3222 029b 39050000 		.4byte	.LASF58
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 81


 3223 029f 09       		.byte	0x9
 3224 02a0 7C       		.byte	0x7c
 3225 02a1 E3020000 		.4byte	0x2e3
 3226 02a5 04       		.byte	0x4
 3227 02a6 0B       		.uleb128 0xb
 3228 02a7 57030000 		.4byte	.LASF59
 3229 02ab 09       		.byte	0x9
 3230 02ac 7D       		.byte	0x7d
 3231 02ad B4000000 		.4byte	0xb4
 3232 02b1 08       		.byte	0x8
 3233 02b2 0B       		.uleb128 0xb
 3234 02b3 81090000 		.4byte	.LASF60
 3235 02b7 09       		.byte	0x9
 3236 02b8 7E       		.byte	0x7e
 3237 02b9 0E010000 		.4byte	0x10e
 3238 02bd 0C       		.byte	0xc
 3239 02be 0B       		.uleb128 0xb
 3240 02bf A7000000 		.4byte	.LASF61
 3241 02c3 09       		.byte	0x9
 3242 02c4 7F       		.byte	0x7f
 3243 02c5 78010000 		.4byte	0x178
 3244 02c9 10       		.byte	0x10
 3245 02ca 0B       		.uleb128 0xb
 3246 02cb 88010000 		.4byte	.LASF62
 3247 02cf 09       		.byte	0x9
 3248 02d0 80       		.byte	0x80
 3249 02d1 E8020000 		.4byte	0x2e8
 3250 02d5 14       		.byte	0x14
 3251 02d6 0B       		.uleb128 0xb
 3252 02d7 39020000 		.4byte	.LASF63
 3253 02db 09       		.byte	0x9
 3254 02dc 81       		.byte	0x81
 3255 02dd EE020000 		.4byte	0x2ee
 3256 02e1 18       		.byte	0x18
 3257 02e2 00       		.byte	0
 3258 02e3 09       		.uleb128 0x9
 3259 02e4 16010000 		.4byte	0x116
 3260 02e8 08       		.uleb128 0x8
 3261 02e9 04       		.byte	0x4
 3262 02ea 62010000 		.4byte	0x162
 3263 02ee 11       		.uleb128 0x11
 3264 02ef 77020000 		.4byte	0x277
 3265 02f3 FE020000 		.4byte	0x2fe
 3266 02f7 12       		.uleb128 0x12
 3267 02f8 07010000 		.4byte	0x107
 3268 02fc 00       		.byte	0
 3269 02fd 00       		.byte	0
 3270 02fe 03       		.uleb128 0x3
 3271 02ff BE0A0000 		.4byte	.LASF64
 3272 0303 09       		.byte	0x9
 3273 0304 85       		.byte	0x85
 3274 0305 82020000 		.4byte	0x282
 3275 0309 03       		.uleb128 0x3
 3276 030a EC050000 		.4byte	.LASF65
 3277 030e 0A       		.byte	0xa
 3278 030f 30       		.byte	0x30
 3279 0310 14030000 		.4byte	0x314
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 82


 3280 0314 08       		.uleb128 0x8
 3281 0315 04       		.byte	0x4
 3282 0316 1A030000 		.4byte	0x31a
 3283 031a 0E       		.uleb128 0xe
 3284 031b 64030000 		.4byte	.LASF67
 3285 031f 03       		.uleb128 0x3
 3286 0320 C20D0000 		.4byte	.LASF68
 3287 0324 0B       		.byte	0xb
 3288 0325 52       		.byte	0x52
 3289 0326 2A030000 		.4byte	0x32a
 3290 032a 08       		.uleb128 0x8
 3291 032b 04       		.byte	0x4
 3292 032c 30030000 		.4byte	0x330
 3293 0330 0E       		.uleb128 0xe
 3294 0331 FA050000 		.4byte	.LASF69
 3295 0335 03       		.uleb128 0x3
 3296 0336 370A0000 		.4byte	.LASF70
 3297 033a 0B       		.byte	0xb
 3298 033b 5C       		.byte	0x5c
 3299 033c 83010000 		.4byte	0x183
 3300 0340 03       		.uleb128 0x3
 3301 0341 8A060000 		.4byte	.LASF71
 3302 0345 0C       		.byte	0xc
 3303 0346 45       		.byte	0x45
 3304 0347 4B030000 		.4byte	0x34b
 3305 034b 08       		.uleb128 0x8
 3306 034c 04       		.byte	0x4
 3307 034d 51030000 		.4byte	0x351
 3308 0351 0E       		.uleb128 0xe
 3309 0352 71040000 		.4byte	.LASF72
 3310 0356 13       		.uleb128 0x13
 3311 0357 8E090000 		.4byte	.LASF75
 3312 035b 01       		.byte	0x1
 3313 035c 3F       		.byte	0x3f
 3314 035d 6D010000 		.4byte	0x16d
 3315 0361 00000000 		.4byte	.LFB68
 3316 0365 20000000 		.4byte	.LFE68-.LFB68
 3317 0369 01       		.uleb128 0x1
 3318 036a 9C       		.byte	0x9c
 3319 036b A6030000 		.4byte	0x3a6
 3320 036f 14       		.uleb128 0x14
 3321 0370 2D060000 		.4byte	.LASF77
 3322 0374 01       		.byte	0x1
 3323 0375 41       		.byte	0x41
 3324 0376 6D010000 		.4byte	0x16d
 3325 037a 02       		.uleb128 0x2
 3326 037b 91       		.byte	0x91
 3327 037c 74       		.sleb128 -12
 3328 037d 15       		.uleb128 0x15
 3329 037e 94070000 		.4byte	.LASF207
 3330 0382 01       		.byte	0x1
 3331 0383 44       		.byte	0x44
 3332 0384 25000000 		.4byte	0x25
 3333 0388 8E030000 		.4byte	0x38e
 3334 038c 16       		.uleb128 0x16
 3335 038d 00       		.byte	0
 3336 038e 17       		.uleb128 0x17
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 83


 3337 038f 12000000 		.4byte	.LBB2
 3338 0393 04000000 		.4byte	.LBE2-.LBB2
 3339 0397 18       		.uleb128 0x18
 3340 0398 27030000 		.4byte	.LASF73
 3341 039c 01       		.byte	0x1
 3342 039d 49       		.byte	0x49
 3343 039e 25000000 		.4byte	0x25
 3344 03a2 16       		.uleb128 0x16
 3345 03a3 00       		.byte	0
 3346 03a4 00       		.byte	0
 3347 03a5 00       		.byte	0
 3348 03a6 19       		.uleb128 0x19
 3349 03a7 AB050000 		.4byte	.LASF83
 3350 03ab 01       		.byte	0x1
 3351 03ac 50       		.byte	0x50
 3352 03ad 00000000 		.4byte	.LFB69
 3353 03b1 1A000000 		.4byte	.LFE69-.LFB69
 3354 03b5 01       		.uleb128 0x1
 3355 03b6 9C       		.byte	0x9c
 3356 03b7 E1030000 		.4byte	0x3e1
 3357 03bb 1A       		.uleb128 0x1a
 3358 03bc 2D060000 		.4byte	.LASF77
 3359 03c0 01       		.byte	0x1
 3360 03c1 50       		.byte	0x50
 3361 03c2 6D010000 		.4byte	0x16d
 3362 03c6 02       		.uleb128 0x2
 3363 03c7 91       		.byte	0x91
 3364 03c8 74       		.sleb128 -12
 3365 03c9 17       		.uleb128 0x17
 3366 03ca 0E000000 		.4byte	.LBB3
 3367 03ce 04000000 		.4byte	.LBE3-.LBB3
 3368 03d2 18       		.uleb128 0x18
 3369 03d3 80070000 		.4byte	.LASF74
 3370 03d7 01       		.byte	0x1
 3371 03d8 54       		.byte	0x54
 3372 03d9 25000000 		.4byte	0x25
 3373 03dd 16       		.uleb128 0x16
 3374 03de 00       		.byte	0
 3375 03df 00       		.byte	0
 3376 03e0 00       		.byte	0
 3377 03e1 13       		.uleb128 0x13
 3378 03e2 5F050000 		.4byte	.LASF76
 3379 03e6 01       		.byte	0x1
 3380 03e7 5A       		.byte	0x5a
 3381 03e8 6D010000 		.4byte	0x16d
 3382 03ec 00000000 		.4byte	.LFB70
 3383 03f0 2A000000 		.4byte	.LFE70-.LFB70
 3384 03f4 01       		.uleb128 0x1
 3385 03f5 9C       		.byte	0x9c
 3386 03f6 40040000 		.4byte	0x440
 3387 03fa 1A       		.uleb128 0x1a
 3388 03fb 0F080000 		.4byte	.LASF78
 3389 03ff 01       		.byte	0x1
 3390 0400 5A       		.byte	0x5a
 3391 0401 4B040000 		.4byte	0x44b
 3392 0405 02       		.uleb128 0x2
 3393 0406 91       		.byte	0x91
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 84


 3394 0407 6C       		.sleb128 -20
 3395 0408 1A       		.uleb128 0x1a
 3396 0409 9D0D0000 		.4byte	.LASF79
 3397 040d 01       		.byte	0x1
 3398 040e 5A       		.byte	0x5a
 3399 040f 50040000 		.4byte	0x450
 3400 0413 02       		.uleb128 0x2
 3401 0414 91       		.byte	0x91
 3402 0415 68       		.sleb128 -24
 3403 0416 14       		.uleb128 0x14
 3404 0417 730A0000 		.4byte	.LASF80
 3405 041b 01       		.byte	0x1
 3406 041c 5C       		.byte	0x5c
 3407 041d 6D010000 		.4byte	0x16d
 3408 0421 02       		.uleb128 0x2
 3409 0422 91       		.byte	0x91
 3410 0423 70       		.sleb128 -16
 3411 0424 14       		.uleb128 0x14
 3412 0425 2D060000 		.4byte	.LASF77
 3413 0429 01       		.byte	0x1
 3414 042a 5D       		.byte	0x5d
 3415 042b 6D010000 		.4byte	0x16d
 3416 042f 02       		.uleb128 0x2
 3417 0430 91       		.byte	0x91
 3418 0431 74       		.sleb128 -12
 3419 0432 18       		.uleb128 0x18
 3420 0433 FC040000 		.4byte	.LASF81
 3421 0437 01       		.byte	0x1
 3422 0438 5F       		.byte	0x5f
 3423 0439 25000000 		.4byte	0x25
 3424 043d 16       		.uleb128 0x16
 3425 043e 00       		.byte	0
 3426 043f 00       		.byte	0
 3427 0440 08       		.uleb128 0x8
 3428 0441 04       		.byte	0x4
 3429 0442 46040000 		.4byte	0x446
 3430 0446 09       		.uleb128 0x9
 3431 0447 FE020000 		.4byte	0x2fe
 3432 044b 09       		.uleb128 0x9
 3433 044c 40040000 		.4byte	0x440
 3434 0450 08       		.uleb128 0x8
 3435 0451 04       		.byte	0x4
 3436 0452 8E010000 		.4byte	0x18e
 3437 0456 13       		.uleb128 0x13
 3438 0457 4F0D0000 		.4byte	.LASF82
 3439 045b 01       		.byte	0x1
 3440 045c 74       		.byte	0x74
 3441 045d 6D010000 		.4byte	0x16d
 3442 0461 00000000 		.4byte	.LFB71
 3443 0465 3C000000 		.4byte	.LFE71-.LFB71
 3444 0469 01       		.uleb128 0x1
 3445 046a 9C       		.byte	0x9c
 3446 046b E0040000 		.4byte	0x4e0
 3447 046f 1A       		.uleb128 0x1a
 3448 0470 810C0000 		.4byte	.LASF57
 3449 0474 01       		.byte	0x1
 3450 0475 74       		.byte	0x74
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 85


 3451 0476 46010000 		.4byte	0x146
 3452 047a 02       		.uleb128 0x2
 3453 047b 91       		.byte	0x91
 3454 047c 6C       		.sleb128 -20
 3455 047d 1A       		.uleb128 0x1a
 3456 047e 39050000 		.4byte	.LASF58
 3457 0482 01       		.byte	0x1
 3458 0483 74       		.byte	0x74
 3459 0484 E3020000 		.4byte	0x2e3
 3460 0488 02       		.uleb128 0x2
 3461 0489 91       		.byte	0x91
 3462 048a 68       		.sleb128 -24
 3463 048b 1A       		.uleb128 0x1a
 3464 048c 57030000 		.4byte	.LASF59
 3465 0490 01       		.byte	0x1
 3466 0491 74       		.byte	0x74
 3467 0492 B4000000 		.4byte	0xb4
 3468 0496 02       		.uleb128 0x2
 3469 0497 91       		.byte	0x91
 3470 0498 66       		.sleb128 -26
 3471 0499 1A       		.uleb128 0x1a
 3472 049a 81090000 		.4byte	.LASF60
 3473 049e 01       		.byte	0x1
 3474 049f 74       		.byte	0x74
 3475 04a0 0E010000 		.4byte	0x10e
 3476 04a4 02       		.uleb128 0x2
 3477 04a5 91       		.byte	0x91
 3478 04a6 60       		.sleb128 -32
 3479 04a7 1A       		.uleb128 0x1a
 3480 04a8 A7000000 		.4byte	.LASF61
 3481 04ac 01       		.byte	0x1
 3482 04ad 74       		.byte	0x74
 3483 04ae 78010000 		.4byte	0x178
 3484 04b2 02       		.uleb128 0x2
 3485 04b3 91       		.byte	0x91
 3486 04b4 00       		.sleb128 0
 3487 04b5 1A       		.uleb128 0x1a
 3488 04b6 9D0D0000 		.4byte	.LASF79
 3489 04ba 01       		.byte	0x1
 3490 04bb 74       		.byte	0x74
 3491 04bc 50040000 		.4byte	0x450
 3492 04c0 02       		.uleb128 0x2
 3493 04c1 91       		.byte	0x91
 3494 04c2 04       		.sleb128 4
 3495 04c3 14       		.uleb128 0x14
 3496 04c4 730A0000 		.4byte	.LASF80
 3497 04c8 01       		.byte	0x1
 3498 04c9 76       		.byte	0x76
 3499 04ca 6D010000 		.4byte	0x16d
 3500 04ce 02       		.uleb128 0x2
 3501 04cf 91       		.byte	0x91
 3502 04d0 70       		.sleb128 -16
 3503 04d1 14       		.uleb128 0x14
 3504 04d2 2D060000 		.4byte	.LASF77
 3505 04d6 01       		.byte	0x1
 3506 04d7 77       		.byte	0x77
 3507 04d8 6D010000 		.4byte	0x16d
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 86


 3508 04dc 02       		.uleb128 0x2
 3509 04dd 91       		.byte	0x91
 3510 04de 74       		.sleb128 -12
 3511 04df 00       		.byte	0
 3512 04e0 19       		.uleb128 0x19
 3513 04e1 C10B0000 		.4byte	.LASF84
 3514 04e5 01       		.byte	0x1
 3515 04e6 8D       		.byte	0x8d
 3516 04e7 00000000 		.4byte	.LFB72
 3517 04eb 26000000 		.4byte	.LFE72-.LFB72
 3518 04ef 01       		.uleb128 0x1
 3519 04f0 9C       		.byte	0x9c
 3520 04f1 20050000 		.4byte	0x520
 3521 04f5 1A       		.uleb128 0x1a
 3522 04f6 27060000 		.4byte	.LASF85
 3523 04fa 01       		.byte	0x1
 3524 04fb 8D       		.byte	0x8d
 3525 04fc 8E010000 		.4byte	0x18e
 3526 0500 02       		.uleb128 0x2
 3527 0501 91       		.byte	0x91
 3528 0502 6C       		.sleb128 -20
 3529 0503 1A       		.uleb128 0x1a
 3530 0504 39020000 		.4byte	.LASF63
 3531 0508 01       		.byte	0x1
 3532 0509 8D       		.byte	0x8d
 3533 050a 2B050000 		.4byte	0x52b
 3534 050e 02       		.uleb128 0x2
 3535 050f 91       		.byte	0x91
 3536 0510 68       		.sleb128 -24
 3537 0511 14       		.uleb128 0x14
 3538 0512 2D060000 		.4byte	.LASF77
 3539 0516 01       		.byte	0x1
 3540 0517 8F       		.byte	0x8f
 3541 0518 6D010000 		.4byte	0x16d
 3542 051c 02       		.uleb128 0x2
 3543 051d 91       		.byte	0x91
 3544 051e 74       		.sleb128 -12
 3545 051f 00       		.byte	0
 3546 0520 08       		.uleb128 0x8
 3547 0521 04       		.byte	0x4
 3548 0522 26050000 		.4byte	0x526
 3549 0526 09       		.uleb128 0x9
 3550 0527 77020000 		.4byte	0x277
 3551 052b 09       		.uleb128 0x9
 3552 052c 20050000 		.4byte	0x520
 3553 0530 19       		.uleb128 0x19
 3554 0531 97000000 		.4byte	.LASF86
 3555 0535 01       		.byte	0x1
 3556 0536 97       		.byte	0x97
 3557 0537 00000000 		.4byte	.LFB73
 3558 053b 22000000 		.4byte	.LFE73-.LFB73
 3559 053f 01       		.uleb128 0x1
 3560 0540 9C       		.byte	0x9c
 3561 0541 62050000 		.4byte	0x562
 3562 0545 1A       		.uleb128 0x1a
 3563 0546 5E090000 		.4byte	.LASF87
 3564 054a 01       		.byte	0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 87


 3565 054b 97       		.byte	0x97
 3566 054c 8E010000 		.4byte	0x18e
 3567 0550 02       		.uleb128 0x2
 3568 0551 91       		.byte	0x91
 3569 0552 6C       		.sleb128 -20
 3570 0553 14       		.uleb128 0x14
 3571 0554 2D060000 		.4byte	.LASF77
 3572 0558 01       		.byte	0x1
 3573 0559 99       		.byte	0x99
 3574 055a 6D010000 		.4byte	0x16d
 3575 055e 02       		.uleb128 0x2
 3576 055f 91       		.byte	0x91
 3577 0560 74       		.sleb128 -12
 3578 0561 00       		.byte	0
 3579 0562 19       		.uleb128 0x19
 3580 0563 97010000 		.4byte	.LASF88
 3581 0567 01       		.byte	0x1
 3582 0568 A2       		.byte	0xa2
 3583 0569 00000000 		.4byte	.LFB74
 3584 056d 26000000 		.4byte	.LFE74-.LFB74
 3585 0571 01       		.uleb128 0x1
 3586 0572 9C       		.byte	0x9c
 3587 0573 A2050000 		.4byte	0x5a2
 3588 0577 1A       		.uleb128 0x1a
 3589 0578 120A0000 		.4byte	.LASF89
 3590 057c 01       		.byte	0x1
 3591 057d A2       		.byte	0xa2
 3592 057e A8050000 		.4byte	0x5a8
 3593 0582 02       		.uleb128 0x2
 3594 0583 91       		.byte	0x91
 3595 0584 6C       		.sleb128 -20
 3596 0585 1A       		.uleb128 0x1a
 3597 0586 8C0C0000 		.4byte	.LASF90
 3598 058a 01       		.byte	0x1
 3599 058b A2       		.byte	0xa2
 3600 058c 83010000 		.4byte	0x183
 3601 0590 02       		.uleb128 0x2
 3602 0591 91       		.byte	0x91
 3603 0592 68       		.sleb128 -24
 3604 0593 14       		.uleb128 0x14
 3605 0594 2D060000 		.4byte	.LASF77
 3606 0598 01       		.byte	0x1
 3607 0599 A4       		.byte	0xa4
 3608 059a 6D010000 		.4byte	0x16d
 3609 059e 02       		.uleb128 0x2
 3610 059f 91       		.byte	0x91
 3611 05a0 74       		.sleb128 -12
 3612 05a1 00       		.byte	0
 3613 05a2 08       		.uleb128 0x8
 3614 05a3 04       		.byte	0x4
 3615 05a4 83010000 		.4byte	0x183
 3616 05a8 09       		.uleb128 0x9
 3617 05a9 A2050000 		.4byte	0x5a2
 3618 05ad 19       		.uleb128 0x19
 3619 05ae 3B030000 		.4byte	.LASF91
 3620 05b2 01       		.byte	0x1
 3621 05b3 BA       		.byte	0xba
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 88


 3622 05b4 00000000 		.4byte	.LFB75
 3623 05b8 22000000 		.4byte	.LFE75-.LFB75
 3624 05bc 01       		.uleb128 0x1
 3625 05bd 9C       		.byte	0x9c
 3626 05be DF050000 		.4byte	0x5df
 3627 05c2 1A       		.uleb128 0x1a
 3628 05c3 170B0000 		.4byte	.LASF92
 3629 05c7 01       		.byte	0x1
 3630 05c8 BA       		.byte	0xba
 3631 05c9 83010000 		.4byte	0x183
 3632 05cd 02       		.uleb128 0x2
 3633 05ce 91       		.byte	0x91
 3634 05cf 6C       		.sleb128 -20
 3635 05d0 14       		.uleb128 0x14
 3636 05d1 2D060000 		.4byte	.LASF77
 3637 05d5 01       		.byte	0x1
 3638 05d6 BC       		.byte	0xbc
 3639 05d7 6D010000 		.4byte	0x16d
 3640 05db 02       		.uleb128 0x2
 3641 05dc 91       		.byte	0x91
 3642 05dd 74       		.sleb128 -12
 3643 05de 00       		.byte	0
 3644 05df 13       		.uleb128 0x13
 3645 05e0 D70A0000 		.4byte	.LASF93
 3646 05e4 01       		.byte	0x1
 3647 05e5 C5       		.byte	0xc5
 3648 05e6 78010000 		.4byte	0x178
 3649 05ea 00000000 		.4byte	.LFB76
 3650 05ee 26000000 		.4byte	.LFE76-.LFB76
 3651 05f2 01       		.uleb128 0x1
 3652 05f3 9C       		.byte	0x9c
 3653 05f4 23060000 		.4byte	0x623
 3654 05f8 1A       		.uleb128 0x1a
 3655 05f9 93050000 		.4byte	.LASF94
 3656 05fd 01       		.byte	0x1
 3657 05fe C5       		.byte	0xc5
 3658 05ff 23060000 		.4byte	0x623
 3659 0603 02       		.uleb128 0x2
 3660 0604 91       		.byte	0x91
 3661 0605 6C       		.sleb128 -20
 3662 0606 14       		.uleb128 0x14
 3663 0607 C1020000 		.4byte	.LASF95
 3664 060b 01       		.byte	0x1
 3665 060c C7       		.byte	0xc7
 3666 060d 78010000 		.4byte	0x178
 3667 0611 02       		.uleb128 0x2
 3668 0612 91       		.byte	0x91
 3669 0613 70       		.sleb128 -16
 3670 0614 14       		.uleb128 0x14
 3671 0615 2D060000 		.4byte	.LASF77
 3672 0619 01       		.byte	0x1
 3673 061a C8       		.byte	0xc8
 3674 061b 6D010000 		.4byte	0x16d
 3675 061f 02       		.uleb128 0x2
 3676 0620 91       		.byte	0x91
 3677 0621 74       		.sleb128 -12
 3678 0622 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 89


 3679 0623 09       		.uleb128 0x9
 3680 0624 8E010000 		.4byte	0x18e
 3681 0628 19       		.uleb128 0x19
 3682 0629 70020000 		.4byte	.LASF96
 3683 062d 01       		.byte	0x1
 3684 062e D2       		.byte	0xd2
 3685 062f 00000000 		.4byte	.LFB77
 3686 0633 26000000 		.4byte	.LFE77-.LFB77
 3687 0637 01       		.uleb128 0x1
 3688 0638 9C       		.byte	0x9c
 3689 0639 68060000 		.4byte	0x668
 3690 063d 1A       		.uleb128 0x1a
 3691 063e 93050000 		.4byte	.LASF94
 3692 0642 01       		.byte	0x1
 3693 0643 D2       		.byte	0xd2
 3694 0644 8E010000 		.4byte	0x18e
 3695 0648 02       		.uleb128 0x2
 3696 0649 91       		.byte	0x91
 3697 064a 6C       		.sleb128 -20
 3698 064b 1A       		.uleb128 0x1a
 3699 064c FF060000 		.4byte	.LASF97
 3700 0650 01       		.byte	0x1
 3701 0651 D2       		.byte	0xd2
 3702 0652 78010000 		.4byte	0x178
 3703 0656 02       		.uleb128 0x2
 3704 0657 91       		.byte	0x91
 3705 0658 68       		.sleb128 -24
 3706 0659 14       		.uleb128 0x14
 3707 065a 2D060000 		.4byte	.LASF77
 3708 065e 01       		.byte	0x1
 3709 065f D4       		.byte	0xd4
 3710 0660 6D010000 		.4byte	0x16d
 3711 0664 02       		.uleb128 0x2
 3712 0665 91       		.byte	0x91
 3713 0666 74       		.sleb128 -12
 3714 0667 00       		.byte	0
 3715 0668 13       		.uleb128 0x13
 3716 0669 38040000 		.4byte	.LASF98
 3717 066d 01       		.byte	0x1
 3718 066e DD       		.byte	0xdd
 3719 066f D5010000 		.4byte	0x1d5
 3720 0673 00000000 		.4byte	.LFB78
 3721 0677 28000000 		.4byte	.LFE78-.LFB78
 3722 067b 01       		.uleb128 0x1
 3723 067c 9C       		.byte	0x9c
 3724 067d AC060000 		.4byte	0x6ac
 3725 0681 1A       		.uleb128 0x1a
 3726 0682 93050000 		.4byte	.LASF94
 3727 0686 01       		.byte	0x1
 3728 0687 DD       		.byte	0xdd
 3729 0688 8E010000 		.4byte	0x18e
 3730 068c 02       		.uleb128 0x2
 3731 068d 91       		.byte	0x91
 3732 068e 6C       		.sleb128 -20
 3733 068f 14       		.uleb128 0x14
 3734 0690 2D060000 		.4byte	.LASF77
 3735 0694 01       		.byte	0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 90


 3736 0695 DF       		.byte	0xdf
 3737 0696 6D010000 		.4byte	0x16d
 3738 069a 02       		.uleb128 0x2
 3739 069b 91       		.byte	0x91
 3740 069c 74       		.sleb128 -12
 3741 069d 14       		.uleb128 0x14
 3742 069e AB020000 		.4byte	.LASF99
 3743 06a2 01       		.byte	0x1
 3744 06a3 E0       		.byte	0xe0
 3745 06a4 D5010000 		.4byte	0x1d5
 3746 06a8 02       		.uleb128 0x2
 3747 06a9 91       		.byte	0x91
 3748 06aa 73       		.sleb128 -13
 3749 06ab 00       		.byte	0
 3750 06ac 1B       		.uleb128 0x1b
 3751 06ad CA070000 		.4byte	.LASF100
 3752 06b1 01       		.byte	0x1
 3753 06b2 0201     		.2byte	0x102
 3754 06b4 00000000 		.4byte	.LFB79
 3755 06b8 22000000 		.4byte	.LFE79-.LFB79
 3756 06bc 01       		.uleb128 0x1
 3757 06bd 9C       		.byte	0x9c
 3758 06be E1060000 		.4byte	0x6e1
 3759 06c2 1C       		.uleb128 0x1c
 3760 06c3 020A0000 		.4byte	.LASF101
 3761 06c7 01       		.byte	0x1
 3762 06c8 0201     		.2byte	0x102
 3763 06ca 8E010000 		.4byte	0x18e
 3764 06ce 02       		.uleb128 0x2
 3765 06cf 91       		.byte	0x91
 3766 06d0 6C       		.sleb128 -20
 3767 06d1 1D       		.uleb128 0x1d
 3768 06d2 2D060000 		.4byte	.LASF77
 3769 06d6 01       		.byte	0x1
 3770 06d7 0401     		.2byte	0x104
 3771 06d9 6D010000 		.4byte	0x16d
 3772 06dd 02       		.uleb128 0x2
 3773 06de 91       		.byte	0x91
 3774 06df 74       		.sleb128 -12
 3775 06e0 00       		.byte	0
 3776 06e1 1B       		.uleb128 0x1b
 3777 06e2 54060000 		.4byte	.LASF102
 3778 06e6 01       		.byte	0x1
 3779 06e7 0D01     		.2byte	0x10d
 3780 06e9 00000000 		.4byte	.LFB80
 3781 06ed 22000000 		.4byte	.LFE80-.LFB80
 3782 06f1 01       		.uleb128 0x1
 3783 06f2 9C       		.byte	0x9c
 3784 06f3 16070000 		.4byte	0x716
 3785 06f7 1C       		.uleb128 0x1c
 3786 06f8 D6020000 		.4byte	.LASF103
 3787 06fc 01       		.byte	0x1
 3788 06fd 0D01     		.2byte	0x10d
 3789 06ff 8E010000 		.4byte	0x18e
 3790 0703 02       		.uleb128 0x2
 3791 0704 91       		.byte	0x91
 3792 0705 6C       		.sleb128 -20
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 91


 3793 0706 1D       		.uleb128 0x1d
 3794 0707 2D060000 		.4byte	.LASF77
 3795 070b 01       		.byte	0x1
 3796 070c 0F01     		.2byte	0x10f
 3797 070e 6D010000 		.4byte	0x16d
 3798 0712 02       		.uleb128 0x2
 3799 0713 91       		.byte	0x91
 3800 0714 74       		.sleb128 -12
 3801 0715 00       		.byte	0
 3802 0716 1B       		.uleb128 0x1b
 3803 0717 1C070000 		.4byte	.LASF104
 3804 071b 01       		.byte	0x1
 3805 071c 1701     		.2byte	0x117
 3806 071e 00000000 		.4byte	.LFB81
 3807 0722 1E000000 		.4byte	.LFE81-.LFB81
 3808 0726 01       		.uleb128 0x1
 3809 0727 9C       		.byte	0x9c
 3810 0728 3C070000 		.4byte	0x73c
 3811 072c 1D       		.uleb128 0x1d
 3812 072d 2D060000 		.4byte	.LASF77
 3813 0731 01       		.byte	0x1
 3814 0732 1901     		.2byte	0x119
 3815 0734 6D010000 		.4byte	0x16d
 3816 0738 02       		.uleb128 0x2
 3817 0739 91       		.byte	0x91
 3818 073a 74       		.sleb128 -12
 3819 073b 00       		.byte	0
 3820 073c 1E       		.uleb128 0x1e
 3821 073d 24090000 		.4byte	.LASF105
 3822 0741 01       		.byte	0x1
 3823 0742 2001     		.2byte	0x120
 3824 0744 6D010000 		.4byte	0x16d
 3825 0748 00000000 		.4byte	.LFB82
 3826 074c 22000000 		.4byte	.LFE82-.LFB82
 3827 0750 01       		.uleb128 0x1
 3828 0751 9C       		.byte	0x9c
 3829 0752 75070000 		.4byte	0x775
 3830 0756 1D       		.uleb128 0x1d
 3831 0757 730A0000 		.4byte	.LASF80
 3832 075b 01       		.byte	0x1
 3833 075c 2201     		.2byte	0x122
 3834 075e 6D010000 		.4byte	0x16d
 3835 0762 02       		.uleb128 0x2
 3836 0763 91       		.byte	0x91
 3837 0764 70       		.sleb128 -16
 3838 0765 1D       		.uleb128 0x1d
 3839 0766 2D060000 		.4byte	.LASF77
 3840 076a 01       		.byte	0x1
 3841 076b 2301     		.2byte	0x123
 3842 076d 6D010000 		.4byte	0x16d
 3843 0771 02       		.uleb128 0x2
 3844 0772 91       		.byte	0x91
 3845 0773 74       		.sleb128 -12
 3846 0774 00       		.byte	0
 3847 0775 1E       		.uleb128 0x1e
 3848 0776 870D0000 		.4byte	.LASF106
 3849 077a 01       		.byte	0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 92


 3850 077b 2B01     		.2byte	0x12b
 3851 077d 83010000 		.4byte	0x183
 3852 0781 00000000 		.4byte	.LFB83
 3853 0785 22000000 		.4byte	.LFE83-.LFB83
 3854 0789 01       		.uleb128 0x1
 3855 078a 9C       		.byte	0x9c
 3856 078b AE070000 		.4byte	0x7ae
 3857 078f 1D       		.uleb128 0x1d
 3858 0790 730A0000 		.4byte	.LASF80
 3859 0794 01       		.byte	0x1
 3860 0795 2D01     		.2byte	0x12d
 3861 0797 83010000 		.4byte	0x183
 3862 079b 02       		.uleb128 0x2
 3863 079c 91       		.byte	0x91
 3864 079d 70       		.sleb128 -16
 3865 079e 1D       		.uleb128 0x1d
 3866 079f 2D060000 		.4byte	.LASF77
 3867 07a3 01       		.byte	0x1
 3868 07a4 2E01     		.2byte	0x12e
 3869 07a6 6D010000 		.4byte	0x16d
 3870 07aa 02       		.uleb128 0x2
 3871 07ab 91       		.byte	0x91
 3872 07ac 74       		.sleb128 -12
 3873 07ad 00       		.byte	0
 3874 07ae 1E       		.uleb128 0x1e
 3875 07af 6E000000 		.4byte	.LASF107
 3876 07b3 01       		.byte	0x1
 3877 07b4 3601     		.2byte	0x136
 3878 07b6 78010000 		.4byte	0x178
 3879 07ba 00000000 		.4byte	.LFB84
 3880 07be 22000000 		.4byte	.LFE84-.LFB84
 3881 07c2 01       		.uleb128 0x1
 3882 07c3 9C       		.byte	0x9c
 3883 07c4 E7070000 		.4byte	0x7e7
 3884 07c8 1D       		.uleb128 0x1d
 3885 07c9 C1020000 		.4byte	.LASF95
 3886 07cd 01       		.byte	0x1
 3887 07ce 3801     		.2byte	0x138
 3888 07d0 78010000 		.4byte	0x178
 3889 07d4 02       		.uleb128 0x2
 3890 07d5 91       		.byte	0x91
 3891 07d6 70       		.sleb128 -16
 3892 07d7 1D       		.uleb128 0x1d
 3893 07d8 2D060000 		.4byte	.LASF77
 3894 07dc 01       		.byte	0x1
 3895 07dd 3901     		.2byte	0x139
 3896 07df 6D010000 		.4byte	0x16d
 3897 07e3 02       		.uleb128 0x2
 3898 07e4 91       		.byte	0x91
 3899 07e5 74       		.sleb128 -12
 3900 07e6 00       		.byte	0
 3901 07e7 1E       		.uleb128 0x1e
 3902 07e8 F0030000 		.4byte	.LASF108
 3903 07ec 01       		.byte	0x1
 3904 07ed 4101     		.2byte	0x141
 3905 07ef 10010000 		.4byte	0x110
 3906 07f3 00000000 		.4byte	.LFB85
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 93


 3907 07f7 26000000 		.4byte	.LFE85-.LFB85
 3908 07fb 01       		.uleb128 0x1
 3909 07fc 9C       		.byte	0x9c
 3910 07fd 2F080000 		.4byte	0x82f
 3911 0801 1C       		.uleb128 0x1c
 3912 0802 BD070000 		.4byte	.LASF109
 3913 0806 01       		.byte	0x1
 3914 0807 4101     		.2byte	0x141
 3915 0809 8E010000 		.4byte	0x18e
 3916 080d 02       		.uleb128 0x2
 3917 080e 91       		.byte	0x91
 3918 080f 6C       		.sleb128 -20
 3919 0810 1D       		.uleb128 0x1d
 3920 0811 37090000 		.4byte	.LASF110
 3921 0815 01       		.byte	0x1
 3922 0816 4301     		.2byte	0x143
 3923 0818 10010000 		.4byte	0x110
 3924 081c 02       		.uleb128 0x2
 3925 081d 91       		.byte	0x91
 3926 081e 70       		.sleb128 -16
 3927 081f 1D       		.uleb128 0x1d
 3928 0820 2D060000 		.4byte	.LASF77
 3929 0824 01       		.byte	0x1
 3930 0825 4401     		.2byte	0x144
 3931 0827 6D010000 		.4byte	0x16d
 3932 082b 02       		.uleb128 0x2
 3933 082c 91       		.byte	0x91
 3934 082d 74       		.sleb128 -12
 3935 082e 00       		.byte	0
 3936 082f 1E       		.uleb128 0x1e
 3937 0830 57080000 		.4byte	.LASF111
 3938 0834 01       		.byte	0x1
 3939 0835 C601     		.2byte	0x1c6
 3940 0837 6D010000 		.4byte	0x16d
 3941 083b 00000000 		.4byte	.LFB86
 3942 083f 26000000 		.4byte	.LFE86-.LFB86
 3943 0843 01       		.uleb128 0x1
 3944 0844 9C       		.byte	0x9c
 3945 0845 77080000 		.4byte	0x877
 3946 0849 1C       		.uleb128 0x1c
 3947 084a 510C0000 		.4byte	.LASF112
 3948 084e 01       		.byte	0x1
 3949 084f C601     		.2byte	0x1c6
 3950 0851 83010000 		.4byte	0x183
 3951 0855 02       		.uleb128 0x2
 3952 0856 91       		.byte	0x91
 3953 0857 6C       		.sleb128 -20
 3954 0858 1D       		.uleb128 0x1d
 3955 0859 730A0000 		.4byte	.LASF80
 3956 085d 01       		.byte	0x1
 3957 085e C801     		.2byte	0x1c8
 3958 0860 6D010000 		.4byte	0x16d
 3959 0864 02       		.uleb128 0x2
 3960 0865 91       		.byte	0x91
 3961 0866 70       		.sleb128 -16
 3962 0867 1D       		.uleb128 0x1d
 3963 0868 2D060000 		.4byte	.LASF77
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 94


 3964 086c 01       		.byte	0x1
 3965 086d C901     		.2byte	0x1c9
 3966 086f 6D010000 		.4byte	0x16d
 3967 0873 02       		.uleb128 0x2
 3968 0874 91       		.byte	0x91
 3969 0875 74       		.sleb128 -12
 3970 0876 00       		.byte	0
 3971 0877 1E       		.uleb128 0x1e
 3972 0878 D40C0000 		.4byte	.LASF113
 3973 087c 01       		.byte	0x1
 3974 087d D201     		.2byte	0x1d2
 3975 087f 78010000 		.4byte	0x178
 3976 0883 00000000 		.4byte	.LFB87
 3977 0887 26000000 		.4byte	.LFE87-.LFB87
 3978 088b 01       		.uleb128 0x1
 3979 088c 9C       		.byte	0x9c
 3980 088d BF080000 		.4byte	0x8bf
 3981 0891 1C       		.uleb128 0x1c
 3982 0892 27060000 		.4byte	.LASF85
 3983 0896 01       		.byte	0x1
 3984 0897 D201     		.2byte	0x1d2
 3985 0899 8E010000 		.4byte	0x18e
 3986 089d 02       		.uleb128 0x2
 3987 089e 91       		.byte	0x91
 3988 089f 6C       		.sleb128 -20
 3989 08a0 1D       		.uleb128 0x1d
 3990 08a1 C1020000 		.4byte	.LASF95
 3991 08a5 01       		.byte	0x1
 3992 08a6 D401     		.2byte	0x1d4
 3993 08a8 78010000 		.4byte	0x178
 3994 08ac 02       		.uleb128 0x2
 3995 08ad 91       		.byte	0x91
 3996 08ae 70       		.sleb128 -16
 3997 08af 1D       		.uleb128 0x1d
 3998 08b0 2D060000 		.4byte	.LASF77
 3999 08b4 01       		.byte	0x1
 4000 08b5 D501     		.2byte	0x1d5
 4001 08b7 6D010000 		.4byte	0x16d
 4002 08bb 02       		.uleb128 0x2
 4003 08bc 91       		.byte	0x91
 4004 08bd 74       		.sleb128 -12
 4005 08be 00       		.byte	0
 4006 08bf 1B       		.uleb128 0x1b
 4007 08c0 85020000 		.4byte	.LASF114
 4008 08c4 01       		.byte	0x1
 4009 08c5 0502     		.2byte	0x205
 4010 08c7 00000000 		.4byte	.LFB88
 4011 08cb 22000000 		.4byte	.LFE88-.LFB88
 4012 08cf 01       		.uleb128 0x1
 4013 08d0 9C       		.byte	0x9c
 4014 08d1 F4080000 		.4byte	0x8f4
 4015 08d5 1C       		.uleb128 0x1c
 4016 08d6 4D070000 		.4byte	.LASF115
 4017 08da 01       		.byte	0x1
 4018 08db 0502     		.2byte	0x205
 4019 08dd FA080000 		.4byte	0x8fa
 4020 08e1 02       		.uleb128 0x2
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 95


 4021 08e2 91       		.byte	0x91
 4022 08e3 6C       		.sleb128 -20
 4023 08e4 1D       		.uleb128 0x1d
 4024 08e5 2D060000 		.4byte	.LASF77
 4025 08e9 01       		.byte	0x1
 4026 08ea 0702     		.2byte	0x207
 4027 08ec 6D010000 		.4byte	0x16d
 4028 08f0 02       		.uleb128 0x2
 4029 08f1 91       		.byte	0x91
 4030 08f2 74       		.sleb128 -12
 4031 08f3 00       		.byte	0
 4032 08f4 08       		.uleb128 0x8
 4033 08f5 04       		.byte	0x4
 4034 08f6 3B020000 		.4byte	0x23b
 4035 08fa 09       		.uleb128 0x9
 4036 08fb F4080000 		.4byte	0x8f4
 4037 08ff 1E       		.uleb128 0x1e
 4038 0900 0B090000 		.4byte	.LASF116
 4039 0904 01       		.byte	0x1
 4040 0905 0E02     		.2byte	0x20e
 4041 0907 6D010000 		.4byte	0x16d
 4042 090b 00000000 		.4byte	.LFB89
 4043 090f 2A000000 		.4byte	.LFE89-.LFB89
 4044 0913 01       		.uleb128 0x1
 4045 0914 9C       		.byte	0x9c
 4046 0915 56090000 		.4byte	0x956
 4047 0919 1C       		.uleb128 0x1c
 4048 091a 4D070000 		.4byte	.LASF115
 4049 091e 01       		.byte	0x1
 4050 091f 0E02     		.2byte	0x20e
 4051 0921 FA080000 		.4byte	0x8fa
 4052 0925 02       		.uleb128 0x2
 4053 0926 91       		.byte	0x91
 4054 0927 6C       		.sleb128 -20
 4055 0928 1C       		.uleb128 0x1c
 4056 0929 00000000 		.4byte	.LASF117
 4057 092d 01       		.byte	0x1
 4058 092e 0E02     		.2byte	0x20e
 4059 0930 A8050000 		.4byte	0x5a8
 4060 0934 02       		.uleb128 0x2
 4061 0935 91       		.byte	0x91
 4062 0936 68       		.sleb128 -24
 4063 0937 1D       		.uleb128 0x1d
 4064 0938 730A0000 		.4byte	.LASF80
 4065 093c 01       		.byte	0x1
 4066 093d 1002     		.2byte	0x210
 4067 093f 6D010000 		.4byte	0x16d
 4068 0943 02       		.uleb128 0x2
 4069 0944 91       		.byte	0x91
 4070 0945 70       		.sleb128 -16
 4071 0946 1D       		.uleb128 0x1d
 4072 0947 2D060000 		.4byte	.LASF77
 4073 094b 01       		.byte	0x1
 4074 094c 1102     		.2byte	0x211
 4075 094e 6D010000 		.4byte	0x16d
 4076 0952 02       		.uleb128 0x2
 4077 0953 91       		.byte	0x91
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 96


 4078 0954 74       		.sleb128 -12
 4079 0955 00       		.byte	0
 4080 0956 1E       		.uleb128 0x1e
 4081 0957 440B0000 		.4byte	.LASF118
 4082 095b 01       		.byte	0x1
 4083 095c 1A02     		.2byte	0x21a
 4084 095e 6D010000 		.4byte	0x16d
 4085 0962 00000000 		.4byte	.LFB90
 4086 0966 34000000 		.4byte	.LFE90-.LFB90
 4087 096a 01       		.uleb128 0x1
 4088 096b 9C       		.byte	0x9c
 4089 096c CB090000 		.4byte	0x9cb
 4090 0970 1C       		.uleb128 0x1c
 4091 0971 01080000 		.4byte	.LASF119
 4092 0975 01       		.byte	0x1
 4093 0976 1A02     		.2byte	0x21a
 4094 0978 8E010000 		.4byte	0x18e
 4095 097c 02       		.uleb128 0x2
 4096 097d 91       		.byte	0x91
 4097 097e 6C       		.sleb128 -20
 4098 097f 1C       		.uleb128 0x1c
 4099 0980 FA090000 		.4byte	.LASF120
 4100 0984 01       		.byte	0x1
 4101 0985 1A02     		.2byte	0x21a
 4102 0987 CA000000 		.4byte	0xca
 4103 098b 02       		.uleb128 0x2
 4104 098c 91       		.byte	0x91
 4105 098d 68       		.sleb128 -24
 4106 098e 1C       		.uleb128 0x1c
 4107 098f 78070000 		.4byte	.LASF121
 4108 0993 01       		.byte	0x1
 4109 0994 1A02     		.2byte	0x21a
 4110 0996 0B020000 		.4byte	0x20b
 4111 099a 02       		.uleb128 0x2
 4112 099b 91       		.byte	0x91
 4113 099c 67       		.sleb128 -25
 4114 099d 1C       		.uleb128 0x1c
 4115 099e 30070000 		.4byte	.LASF122
 4116 09a2 01       		.byte	0x1
 4117 09a3 1A02     		.2byte	0x21a
 4118 09a5 CB090000 		.4byte	0x9cb
 4119 09a9 02       		.uleb128 0x2
 4120 09aa 91       		.byte	0x91
 4121 09ab 60       		.sleb128 -32
 4122 09ac 1D       		.uleb128 0x1d
 4123 09ad 730A0000 		.4byte	.LASF80
 4124 09b1 01       		.byte	0x1
 4125 09b2 1C02     		.2byte	0x21c
 4126 09b4 6D010000 		.4byte	0x16d
 4127 09b8 02       		.uleb128 0x2
 4128 09b9 91       		.byte	0x91
 4129 09ba 70       		.sleb128 -16
 4130 09bb 1D       		.uleb128 0x1d
 4131 09bc 2D060000 		.4byte	.LASF77
 4132 09c0 01       		.byte	0x1
 4133 09c1 1D02     		.2byte	0x21d
 4134 09c3 6D010000 		.4byte	0x16d
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 97


 4135 09c7 02       		.uleb128 0x2
 4136 09c8 91       		.byte	0x91
 4137 09c9 74       		.sleb128 -12
 4138 09ca 00       		.byte	0
 4139 09cb 08       		.uleb128 0x8
 4140 09cc 04       		.byte	0x4
 4141 09cd CA000000 		.4byte	0xca
 4142 09d1 1E       		.uleb128 0x1e
 4143 09d2 6D090000 		.4byte	.LASF123
 4144 09d6 01       		.byte	0x1
 4145 09d7 2702     		.2byte	0x227
 4146 09d9 6D010000 		.4byte	0x16d
 4147 09dd 00000000 		.4byte	.LFB91
 4148 09e1 32000000 		.4byte	.LFE91-.LFB91
 4149 09e5 01       		.uleb128 0x1
 4150 09e6 9C       		.byte	0x9c
 4151 09e7 460A0000 		.4byte	0xa46
 4152 09eb 1C       		.uleb128 0x1c
 4153 09ec 02040000 		.4byte	.LASF124
 4154 09f0 01       		.byte	0x1
 4155 09f1 2702     		.2byte	0x227
 4156 09f3 CA000000 		.4byte	0xca
 4157 09f7 02       		.uleb128 0x2
 4158 09f8 91       		.byte	0x91
 4159 09f9 6C       		.sleb128 -20
 4160 09fa 1C       		.uleb128 0x1c
 4161 09fb 40060000 		.4byte	.LASF125
 4162 09ff 01       		.byte	0x1
 4163 0a00 2702     		.2byte	0x227
 4164 0a02 CA000000 		.4byte	0xca
 4165 0a06 02       		.uleb128 0x2
 4166 0a07 91       		.byte	0x91
 4167 0a08 68       		.sleb128 -24
 4168 0a09 1C       		.uleb128 0x1c
 4169 0a0a 430A0000 		.4byte	.LASF126
 4170 0a0e 01       		.byte	0x1
 4171 0a0f 2702     		.2byte	0x227
 4172 0a11 CB090000 		.4byte	0x9cb
 4173 0a15 02       		.uleb128 0x2
 4174 0a16 91       		.byte	0x91
 4175 0a17 64       		.sleb128 -28
 4176 0a18 1C       		.uleb128 0x1c
 4177 0a19 070C0000 		.4byte	.LASF127
 4178 0a1d 01       		.byte	0x1
 4179 0a1e 2702     		.2byte	0x227
 4180 0a20 83010000 		.4byte	0x183
 4181 0a24 02       		.uleb128 0x2
 4182 0a25 91       		.byte	0x91
 4183 0a26 60       		.sleb128 -32
 4184 0a27 1D       		.uleb128 0x1d
 4185 0a28 730A0000 		.4byte	.LASF80
 4186 0a2c 01       		.byte	0x1
 4187 0a2d 2902     		.2byte	0x229
 4188 0a2f 6D010000 		.4byte	0x16d
 4189 0a33 02       		.uleb128 0x2
 4190 0a34 91       		.byte	0x91
 4191 0a35 70       		.sleb128 -16
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 98


 4192 0a36 1D       		.uleb128 0x1d
 4193 0a37 2D060000 		.4byte	.LASF77
 4194 0a3b 01       		.byte	0x1
 4195 0a3c 2A02     		.2byte	0x22a
 4196 0a3e 6D010000 		.4byte	0x16d
 4197 0a42 02       		.uleb128 0x2
 4198 0a43 91       		.byte	0x91
 4199 0a44 74       		.sleb128 -12
 4200 0a45 00       		.byte	0
 4201 0a46 1E       		.uleb128 0x1e
 4202 0a47 0E010000 		.4byte	.LASF128
 4203 0a4b 01       		.byte	0x1
 4204 0a4c 3402     		.2byte	0x234
 4205 0a4e CA000000 		.4byte	0xca
 4206 0a52 00000000 		.4byte	.LFB92
 4207 0a56 2A000000 		.4byte	.LFE92-.LFB92
 4208 0a5a 01       		.uleb128 0x1
 4209 0a5b 9C       		.byte	0x9c
 4210 0a5c 9D0A0000 		.4byte	0xa9d
 4211 0a60 1C       		.uleb128 0x1c
 4212 0a61 96030000 		.4byte	.LASF129
 4213 0a65 01       		.byte	0x1
 4214 0a66 3402     		.2byte	0x234
 4215 0a68 6D010000 		.4byte	0x16d
 4216 0a6c 02       		.uleb128 0x2
 4217 0a6d 91       		.byte	0x91
 4218 0a6e 6C       		.sleb128 -20
 4219 0a6f 1C       		.uleb128 0x1c
 4220 0a70 070C0000 		.4byte	.LASF127
 4221 0a74 01       		.byte	0x1
 4222 0a75 3402     		.2byte	0x234
 4223 0a77 83010000 		.4byte	0x183
 4224 0a7b 02       		.uleb128 0x2
 4225 0a7c 91       		.byte	0x91
 4226 0a7d 68       		.sleb128 -24
 4227 0a7e 1D       		.uleb128 0x1d
 4228 0a7f D50D0000 		.4byte	.LASF130
 4229 0a83 01       		.byte	0x1
 4230 0a84 3602     		.2byte	0x236
 4231 0a86 CA000000 		.4byte	0xca
 4232 0a8a 02       		.uleb128 0x2
 4233 0a8b 91       		.byte	0x91
 4234 0a8c 70       		.sleb128 -16
 4235 0a8d 1D       		.uleb128 0x1d
 4236 0a8e 2D060000 		.4byte	.LASF77
 4237 0a92 01       		.byte	0x1
 4238 0a93 3702     		.2byte	0x237
 4239 0a95 6D010000 		.4byte	0x16d
 4240 0a99 02       		.uleb128 0x2
 4241 0a9a 91       		.byte	0x91
 4242 0a9b 74       		.sleb128 -12
 4243 0a9c 00       		.byte	0
 4244 0a9d 1E       		.uleb128 0x1e
 4245 0a9e 350D0000 		.4byte	.LASF131
 4246 0aa2 01       		.byte	0x1
 4247 0aa3 4102     		.2byte	0x241
 4248 0aa5 6D010000 		.4byte	0x16d
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 99


 4249 0aa9 00000000 		.4byte	.LFB93
 4250 0aad 26000000 		.4byte	.LFE93-.LFB93
 4251 0ab1 01       		.uleb128 0x1
 4252 0ab2 9C       		.byte	0x9c
 4253 0ab3 E50A0000 		.4byte	0xae5
 4254 0ab7 1C       		.uleb128 0x1c
 4255 0ab8 27060000 		.4byte	.LASF85
 4256 0abc 01       		.byte	0x1
 4257 0abd 4102     		.2byte	0x241
 4258 0abf 8E010000 		.4byte	0x18e
 4259 0ac3 02       		.uleb128 0x2
 4260 0ac4 91       		.byte	0x91
 4261 0ac5 6C       		.sleb128 -20
 4262 0ac6 1D       		.uleb128 0x1d
 4263 0ac7 730A0000 		.4byte	.LASF80
 4264 0acb 01       		.byte	0x1
 4265 0acc 4302     		.2byte	0x243
 4266 0ace 6D010000 		.4byte	0x16d
 4267 0ad2 02       		.uleb128 0x2
 4268 0ad3 91       		.byte	0x91
 4269 0ad4 70       		.sleb128 -16
 4270 0ad5 1D       		.uleb128 0x1d
 4271 0ad6 2D060000 		.4byte	.LASF77
 4272 0ada 01       		.byte	0x1
 4273 0adb 4402     		.2byte	0x244
 4274 0add 6D010000 		.4byte	0x16d
 4275 0ae1 02       		.uleb128 0x2
 4276 0ae2 91       		.byte	0x91
 4277 0ae3 74       		.sleb128 -12
 4278 0ae4 00       		.byte	0
 4279 0ae5 1E       		.uleb128 0x1e
 4280 0ae6 580A0000 		.4byte	.LASF132
 4281 0aea 01       		.byte	0x1
 4282 0aeb 4E02     		.2byte	0x24e
 4283 0aed CA000000 		.4byte	0xca
 4284 0af1 00000000 		.4byte	.LFB94
 4285 0af5 2A000000 		.4byte	.LFE94-.LFB94
 4286 0af9 01       		.uleb128 0x1
 4287 0afa 9C       		.byte	0x9c
 4288 0afb 3C0B0000 		.4byte	0xb3c
 4289 0aff 1C       		.uleb128 0x1c
 4290 0b00 27060000 		.4byte	.LASF85
 4291 0b04 01       		.byte	0x1
 4292 0b05 4E02     		.2byte	0x24e
 4293 0b07 8E010000 		.4byte	0x18e
 4294 0b0b 02       		.uleb128 0x2
 4295 0b0c 91       		.byte	0x91
 4296 0b0d 6C       		.sleb128 -20
 4297 0b0e 1C       		.uleb128 0x1c
 4298 0b0f 70010000 		.4byte	.LASF133
 4299 0b13 01       		.byte	0x1
 4300 0b14 4E02     		.2byte	0x24e
 4301 0b16 CA000000 		.4byte	0xca
 4302 0b1a 02       		.uleb128 0x2
 4303 0b1b 91       		.byte	0x91
 4304 0b1c 68       		.sleb128 -24
 4305 0b1d 1D       		.uleb128 0x1d
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 100


 4306 0b1e D50D0000 		.4byte	.LASF130
 4307 0b22 01       		.byte	0x1
 4308 0b23 5002     		.2byte	0x250
 4309 0b25 CA000000 		.4byte	0xca
 4310 0b29 02       		.uleb128 0x2
 4311 0b2a 91       		.byte	0x91
 4312 0b2b 70       		.sleb128 -16
 4313 0b2c 1D       		.uleb128 0x1d
 4314 0b2d 2D060000 		.4byte	.LASF77
 4315 0b31 01       		.byte	0x1
 4316 0b32 5102     		.2byte	0x251
 4317 0b34 6D010000 		.4byte	0x16d
 4318 0b38 02       		.uleb128 0x2
 4319 0b39 91       		.byte	0x91
 4320 0b3a 74       		.sleb128 -12
 4321 0b3b 00       		.byte	0
 4322 0b3c 1E       		.uleb128 0x1e
 4323 0b3d 8B0A0000 		.4byte	.LASF134
 4324 0b41 01       		.byte	0x1
 4325 0b42 5B02     		.2byte	0x25b
 4326 0b44 09030000 		.4byte	0x309
 4327 0b48 00000000 		.4byte	.LFB95
 4328 0b4c 32000000 		.4byte	.LFE95-.LFB95
 4329 0b50 01       		.uleb128 0x1
 4330 0b51 9C       		.byte	0x9c
 4331 0b52 A20B0000 		.4byte	0xba2
 4332 0b56 1C       		.uleb128 0x1c
 4333 0b57 2C080000 		.4byte	.LASF135
 4334 0b5b 01       		.byte	0x1
 4335 0b5c 5B02     		.2byte	0x25b
 4336 0b5e 78010000 		.4byte	0x178
 4337 0b62 02       		.uleb128 0x2
 4338 0b63 91       		.byte	0x91
 4339 0b64 6C       		.sleb128 -20
 4340 0b65 1C       		.uleb128 0x1c
 4341 0b66 79050000 		.4byte	.LASF136
 4342 0b6a 01       		.byte	0x1
 4343 0b6b 5B02     		.2byte	0x25b
 4344 0b6d 78010000 		.4byte	0x178
 4345 0b71 02       		.uleb128 0x2
 4346 0b72 91       		.byte	0x91
 4347 0b73 68       		.sleb128 -24
 4348 0b74 1C       		.uleb128 0x1c
 4349 0b75 A6070000 		.4byte	.LASF137
 4350 0b79 01       		.byte	0x1
 4351 0b7a 5B02     		.2byte	0x25b
 4352 0b7c A9000000 		.4byte	0xa9
 4353 0b80 02       		.uleb128 0x2
 4354 0b81 91       		.byte	0x91
 4355 0b82 67       		.sleb128 -25
 4356 0b83 1D       		.uleb128 0x1d
 4357 0b84 730A0000 		.4byte	.LASF80
 4358 0b88 01       		.byte	0x1
 4359 0b89 5D02     		.2byte	0x25d
 4360 0b8b 09030000 		.4byte	0x309
 4361 0b8f 02       		.uleb128 0x2
 4362 0b90 91       		.byte	0x91
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 101


 4363 0b91 70       		.sleb128 -16
 4364 0b92 1D       		.uleb128 0x1d
 4365 0b93 2D060000 		.4byte	.LASF77
 4366 0b97 01       		.byte	0x1
 4367 0b98 5E02     		.2byte	0x25e
 4368 0b9a 6D010000 		.4byte	0x16d
 4369 0b9e 02       		.uleb128 0x2
 4370 0b9f 91       		.byte	0x91
 4371 0ba0 74       		.sleb128 -12
 4372 0ba1 00       		.byte	0
 4373 0ba2 1E       		.uleb128 0x1e
 4374 0ba3 D1060000 		.4byte	.LASF138
 4375 0ba7 01       		.byte	0x1
 4376 0ba8 7402     		.2byte	0x274
 4377 0baa 6D010000 		.4byte	0x16d
 4378 0bae 00000000 		.4byte	.LFB96
 4379 0bb2 2A000000 		.4byte	.LFE96-.LFB96
 4380 0bb6 01       		.uleb128 0x1
 4381 0bb7 9C       		.byte	0x9c
 4382 0bb8 F90B0000 		.4byte	0xbf9
 4383 0bbc 1C       		.uleb128 0x1c
 4384 0bbd 2F0A0000 		.4byte	.LASF139
 4385 0bc1 01       		.byte	0x1
 4386 0bc2 7402     		.2byte	0x274
 4387 0bc4 09030000 		.4byte	0x309
 4388 0bc8 02       		.uleb128 0x2
 4389 0bc9 91       		.byte	0x91
 4390 0bca 6C       		.sleb128 -20
 4391 0bcb 1C       		.uleb128 0x1c
 4392 0bcc 57070000 		.4byte	.LASF140
 4393 0bd0 01       		.byte	0x1
 4394 0bd1 7402     		.2byte	0x274
 4395 0bd3 6D010000 		.4byte	0x16d
 4396 0bd7 02       		.uleb128 0x2
 4397 0bd8 91       		.byte	0x91
 4398 0bd9 68       		.sleb128 -24
 4399 0bda 1D       		.uleb128 0x1d
 4400 0bdb 730A0000 		.4byte	.LASF80
 4401 0bdf 01       		.byte	0x1
 4402 0be0 7602     		.2byte	0x276
 4403 0be2 6D010000 		.4byte	0x16d
 4404 0be6 02       		.uleb128 0x2
 4405 0be7 91       		.byte	0x91
 4406 0be8 70       		.sleb128 -16
 4407 0be9 1D       		.uleb128 0x1d
 4408 0bea 2D060000 		.4byte	.LASF77
 4409 0bee 01       		.byte	0x1
 4410 0bef 7702     		.2byte	0x277
 4411 0bf1 6D010000 		.4byte	0x16d
 4412 0bf5 02       		.uleb128 0x2
 4413 0bf6 91       		.byte	0x91
 4414 0bf7 74       		.sleb128 -12
 4415 0bf8 00       		.byte	0
 4416 0bf9 1E       		.uleb128 0x1e
 4417 0bfa 120D0000 		.4byte	.LASF141
 4418 0bfe 01       		.byte	0x1
 4419 0bff 7F02     		.2byte	0x27f
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 102


 4420 0c01 6D010000 		.4byte	0x16d
 4421 0c05 00000000 		.4byte	.LFB97
 4422 0c09 32000000 		.4byte	.LFE97-.LFB97
 4423 0c0d 01       		.uleb128 0x1
 4424 0c0e 9C       		.byte	0x9c
 4425 0c0f 6E0C0000 		.4byte	0xc6e
 4426 0c13 1C       		.uleb128 0x1c
 4427 0c14 4A030000 		.4byte	.LASF142
 4428 0c18 01       		.byte	0x1
 4429 0c19 7F02     		.2byte	0x27f
 4430 0c1b 09030000 		.4byte	0x309
 4431 0c1f 02       		.uleb128 0x2
 4432 0c20 91       		.byte	0x91
 4433 0c21 6C       		.sleb128 -20
 4434 0c22 1C       		.uleb128 0x1c
 4435 0c23 D9090000 		.4byte	.LASF143
 4436 0c27 01       		.byte	0x1
 4437 0c28 7F02     		.2byte	0x27f
 4438 0c2a 750C0000 		.4byte	0xc75
 4439 0c2e 02       		.uleb128 0x2
 4440 0c2f 91       		.byte	0x91
 4441 0c30 68       		.sleb128 -24
 4442 0c31 1C       		.uleb128 0x1c
 4443 0c32 070C0000 		.4byte	.LASF127
 4444 0c36 01       		.byte	0x1
 4445 0c37 7F02     		.2byte	0x27f
 4446 0c39 83010000 		.4byte	0x183
 4447 0c3d 02       		.uleb128 0x2
 4448 0c3e 91       		.byte	0x91
 4449 0c3f 64       		.sleb128 -28
 4450 0c40 1C       		.uleb128 0x1c
 4451 0c41 B3020000 		.4byte	.LASF144
 4452 0c45 01       		.byte	0x1
 4453 0c46 7F02     		.2byte	0x27f
 4454 0c48 6D010000 		.4byte	0x16d
 4455 0c4c 02       		.uleb128 0x2
 4456 0c4d 91       		.byte	0x91
 4457 0c4e 60       		.sleb128 -32
 4458 0c4f 1D       		.uleb128 0x1d
 4459 0c50 730A0000 		.4byte	.LASF80
 4460 0c54 01       		.byte	0x1
 4461 0c55 8102     		.2byte	0x281
 4462 0c57 6D010000 		.4byte	0x16d
 4463 0c5b 02       		.uleb128 0x2
 4464 0c5c 91       		.byte	0x91
 4465 0c5d 70       		.sleb128 -16
 4466 0c5e 1D       		.uleb128 0x1d
 4467 0c5f 2D060000 		.4byte	.LASF77
 4468 0c63 01       		.byte	0x1
 4469 0c64 8202     		.2byte	0x282
 4470 0c66 6D010000 		.4byte	0x16d
 4471 0c6a 02       		.uleb128 0x2
 4472 0c6b 91       		.byte	0x91
 4473 0c6c 74       		.sleb128 -12
 4474 0c6d 00       		.byte	0
 4475 0c6e 08       		.uleb128 0x8
 4476 0c6f 04       		.byte	0x4
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 103


 4477 0c70 740C0000 		.4byte	0xc74
 4478 0c74 1F       		.uleb128 0x1f
 4479 0c75 09       		.uleb128 0x9
 4480 0c76 6E0C0000 		.4byte	0xc6e
 4481 0c7a 1E       		.uleb128 0x1e
 4482 0c7b DB070000 		.4byte	.LASF145
 4483 0c7f 01       		.byte	0x1
 4484 0c80 8A02     		.2byte	0x28a
 4485 0c82 78010000 		.4byte	0x178
 4486 0c86 00000000 		.4byte	.LFB98
 4487 0c8a 26000000 		.4byte	.LFE98-.LFB98
 4488 0c8e 01       		.uleb128 0x1
 4489 0c8f 9C       		.byte	0x9c
 4490 0c90 C20C0000 		.4byte	0xcc2
 4491 0c94 1C       		.uleb128 0x1c
 4492 0c95 2F0A0000 		.4byte	.LASF139
 4493 0c99 01       		.byte	0x1
 4494 0c9a 8A02     		.2byte	0x28a
 4495 0c9c C20C0000 		.4byte	0xcc2
 4496 0ca0 02       		.uleb128 0x2
 4497 0ca1 91       		.byte	0x91
 4498 0ca2 6C       		.sleb128 -20
 4499 0ca3 1D       		.uleb128 0x1d
 4500 0ca4 2D060000 		.4byte	.LASF77
 4501 0ca8 01       		.byte	0x1
 4502 0ca9 8C02     		.2byte	0x28c
 4503 0cab 6D010000 		.4byte	0x16d
 4504 0caf 02       		.uleb128 0x2
 4505 0cb0 91       		.byte	0x91
 4506 0cb1 74       		.sleb128 -12
 4507 0cb2 1D       		.uleb128 0x1d
 4508 0cb3 C1020000 		.4byte	.LASF95
 4509 0cb7 01       		.byte	0x1
 4510 0cb8 8D02     		.2byte	0x28d
 4511 0cba 78010000 		.4byte	0x178
 4512 0cbe 02       		.uleb128 0x2
 4513 0cbf 91       		.byte	0x91
 4514 0cc0 70       		.sleb128 -16
 4515 0cc1 00       		.byte	0
 4516 0cc2 09       		.uleb128 0x9
 4517 0cc3 09030000 		.4byte	0x309
 4518 0cc7 1E       		.uleb128 0x1e
 4519 0cc8 F70D0000 		.4byte	.LASF146
 4520 0ccc 01       		.byte	0x1
 4521 0ccd 9502     		.2byte	0x295
 4522 0ccf 78010000 		.4byte	0x178
 4523 0cd3 00000000 		.4byte	.LFB99
 4524 0cd7 26000000 		.4byte	.LFE99-.LFB99
 4525 0cdb 01       		.uleb128 0x1
 4526 0cdc 9C       		.byte	0x9c
 4527 0cdd 0F0D0000 		.4byte	0xd0f
 4528 0ce1 1C       		.uleb128 0x1c
 4529 0ce2 4A030000 		.4byte	.LASF142
 4530 0ce6 01       		.byte	0x1
 4531 0ce7 9502     		.2byte	0x295
 4532 0ce9 C20C0000 		.4byte	0xcc2
 4533 0ced 02       		.uleb128 0x2
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 104


 4534 0cee 91       		.byte	0x91
 4535 0cef 6C       		.sleb128 -20
 4536 0cf0 1D       		.uleb128 0x1d
 4537 0cf1 2D060000 		.4byte	.LASF77
 4538 0cf5 01       		.byte	0x1
 4539 0cf6 9702     		.2byte	0x297
 4540 0cf8 6D010000 		.4byte	0x16d
 4541 0cfc 02       		.uleb128 0x2
 4542 0cfd 91       		.byte	0x91
 4543 0cfe 74       		.sleb128 -12
 4544 0cff 1D       		.uleb128 0x1d
 4545 0d00 C1020000 		.4byte	.LASF95
 4546 0d04 01       		.byte	0x1
 4547 0d05 9802     		.2byte	0x298
 4548 0d07 78010000 		.4byte	0x178
 4549 0d0b 02       		.uleb128 0x2
 4550 0d0c 91       		.byte	0x91
 4551 0d0d 70       		.sleb128 -16
 4552 0d0e 00       		.byte	0
 4553 0d0f 1E       		.uleb128 0x1e
 4554 0d10 5F0D0000 		.4byte	.LASF147
 4555 0d14 01       		.byte	0x1
 4556 0d15 A002     		.2byte	0x2a0
 4557 0d17 6D010000 		.4byte	0x16d
 4558 0d1b 00000000 		.4byte	.LFB100
 4559 0d1f 2E000000 		.4byte	.LFE100-.LFB100
 4560 0d23 01       		.uleb128 0x1
 4561 0d24 9C       		.byte	0x9c
 4562 0d25 750D0000 		.4byte	0xd75
 4563 0d29 1C       		.uleb128 0x1c
 4564 0d2a 2F0A0000 		.4byte	.LASF139
 4565 0d2e 01       		.byte	0x1
 4566 0d2f A002     		.2byte	0x2a0
 4567 0d31 09030000 		.4byte	0x309
 4568 0d35 02       		.uleb128 0x2
 4569 0d36 91       		.byte	0x91
 4570 0d37 6C       		.sleb128 -20
 4571 0d38 1C       		.uleb128 0x1c
 4572 0d39 2F040000 		.4byte	.LASF148
 4573 0d3d 01       		.byte	0x1
 4574 0d3e A002     		.2byte	0x2a0
 4575 0d40 750D0000 		.4byte	0xd75
 4576 0d44 02       		.uleb128 0x2
 4577 0d45 91       		.byte	0x91
 4578 0d46 68       		.sleb128 -24
 4579 0d47 1C       		.uleb128 0x1c
 4580 0d48 070C0000 		.4byte	.LASF127
 4581 0d4c 01       		.byte	0x1
 4582 0d4d A002     		.2byte	0x2a0
 4583 0d4f 83010000 		.4byte	0x183
 4584 0d53 02       		.uleb128 0x2
 4585 0d54 91       		.byte	0x91
 4586 0d55 64       		.sleb128 -28
 4587 0d56 1D       		.uleb128 0x1d
 4588 0d57 2D060000 		.4byte	.LASF77
 4589 0d5b 01       		.byte	0x1
 4590 0d5c A202     		.2byte	0x2a2
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 105


 4591 0d5e 6D010000 		.4byte	0x16d
 4592 0d62 02       		.uleb128 0x2
 4593 0d63 91       		.byte	0x91
 4594 0d64 74       		.sleb128 -12
 4595 0d65 1D       		.uleb128 0x1d
 4596 0d66 730A0000 		.4byte	.LASF80
 4597 0d6a 01       		.byte	0x1
 4598 0d6b A302     		.2byte	0x2a3
 4599 0d6d 6D010000 		.4byte	0x16d
 4600 0d71 02       		.uleb128 0x2
 4601 0d72 91       		.byte	0x91
 4602 0d73 70       		.sleb128 -16
 4603 0d74 00       		.byte	0
 4604 0d75 09       		.uleb128 0x9
 4605 0d76 0E010000 		.4byte	0x10e
 4606 0d7a 1E       		.uleb128 0x1e
 4607 0d7b 720C0000 		.4byte	.LASF149
 4608 0d7f 01       		.byte	0x1
 4609 0d80 AB02     		.2byte	0x2ab
 4610 0d82 6D010000 		.4byte	0x16d
 4611 0d86 00000000 		.4byte	.LFB101
 4612 0d8a 2E000000 		.4byte	.LFE101-.LFB101
 4613 0d8e 01       		.uleb128 0x1
 4614 0d8f 9C       		.byte	0x9c
 4615 0d90 E00D0000 		.4byte	0xde0
 4616 0d94 1C       		.uleb128 0x1c
 4617 0d95 4A030000 		.4byte	.LASF142
 4618 0d99 01       		.byte	0x1
 4619 0d9a AB02     		.2byte	0x2ab
 4620 0d9c 09030000 		.4byte	0x309
 4621 0da0 02       		.uleb128 0x2
 4622 0da1 91       		.byte	0x91
 4623 0da2 6C       		.sleb128 -20
 4624 0da3 1C       		.uleb128 0x1c
 4625 0da4 2F040000 		.4byte	.LASF148
 4626 0da8 01       		.byte	0x1
 4627 0da9 AB02     		.2byte	0x2ab
 4628 0dab 750D0000 		.4byte	0xd75
 4629 0daf 02       		.uleb128 0x2
 4630 0db0 91       		.byte	0x91
 4631 0db1 68       		.sleb128 -24
 4632 0db2 1C       		.uleb128 0x1c
 4633 0db3 070C0000 		.4byte	.LASF127
 4634 0db7 01       		.byte	0x1
 4635 0db8 AB02     		.2byte	0x2ab
 4636 0dba 83010000 		.4byte	0x183
 4637 0dbe 02       		.uleb128 0x2
 4638 0dbf 91       		.byte	0x91
 4639 0dc0 64       		.sleb128 -28
 4640 0dc1 1D       		.uleb128 0x1d
 4641 0dc2 2D060000 		.4byte	.LASF77
 4642 0dc6 01       		.byte	0x1
 4643 0dc7 AD02     		.2byte	0x2ad
 4644 0dc9 6D010000 		.4byte	0x16d
 4645 0dcd 02       		.uleb128 0x2
 4646 0dce 91       		.byte	0x91
 4647 0dcf 74       		.sleb128 -12
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 106


 4648 0dd0 1D       		.uleb128 0x1d
 4649 0dd1 730A0000 		.4byte	.LASF80
 4650 0dd5 01       		.byte	0x1
 4651 0dd6 AE02     		.2byte	0x2ae
 4652 0dd8 6D010000 		.4byte	0x16d
 4653 0ddc 02       		.uleb128 0x2
 4654 0ddd 91       		.byte	0x91
 4655 0dde 70       		.sleb128 -16
 4656 0ddf 00       		.byte	0
 4657 0de0 1E       		.uleb128 0x1e
 4658 0de1 BB040000 		.4byte	.LASF150
 4659 0de5 01       		.byte	0x1
 4660 0de6 B602     		.2byte	0x2b6
 4661 0de8 6D010000 		.4byte	0x16d
 4662 0dec 00000000 		.4byte	.LFB102
 4663 0df0 2A000000 		.4byte	.LFE102-.LFB102
 4664 0df4 01       		.uleb128 0x1
 4665 0df5 9C       		.byte	0x9c
 4666 0df6 370E0000 		.4byte	0xe37
 4667 0dfa 1C       		.uleb128 0x1c
 4668 0dfb 4A030000 		.4byte	.LASF142
 4669 0dff 01       		.byte	0x1
 4670 0e00 B602     		.2byte	0x2b6
 4671 0e02 09030000 		.4byte	0x309
 4672 0e06 02       		.uleb128 0x2
 4673 0e07 91       		.byte	0x91
 4674 0e08 6C       		.sleb128 -20
 4675 0e09 1C       		.uleb128 0x1c
 4676 0e0a 070C0000 		.4byte	.LASF127
 4677 0e0e 01       		.byte	0x1
 4678 0e0f B602     		.2byte	0x2b6
 4679 0e11 83010000 		.4byte	0x183
 4680 0e15 02       		.uleb128 0x2
 4681 0e16 91       		.byte	0x91
 4682 0e17 68       		.sleb128 -24
 4683 0e18 1D       		.uleb128 0x1d
 4684 0e19 2D060000 		.4byte	.LASF77
 4685 0e1d 01       		.byte	0x1
 4686 0e1e B802     		.2byte	0x2b8
 4687 0e20 6D010000 		.4byte	0x16d
 4688 0e24 02       		.uleb128 0x2
 4689 0e25 91       		.byte	0x91
 4690 0e26 74       		.sleb128 -12
 4691 0e27 1D       		.uleb128 0x1d
 4692 0e28 730A0000 		.4byte	.LASF80
 4693 0e2c 01       		.byte	0x1
 4694 0e2d B902     		.2byte	0x2b9
 4695 0e2f 6D010000 		.4byte	0x16d
 4696 0e33 02       		.uleb128 0x2
 4697 0e34 91       		.byte	0x91
 4698 0e35 70       		.sleb128 -16
 4699 0e36 00       		.byte	0
 4700 0e37 1E       		.uleb128 0x1e
 4701 0e38 BD000000 		.4byte	.LASF151
 4702 0e3c 01       		.byte	0x1
 4703 0e3d CF02     		.2byte	0x2cf
 4704 0e3f 09030000 		.4byte	0x309
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 107


 4705 0e43 00000000 		.4byte	.LFB103
 4706 0e47 2A000000 		.4byte	.LFE103-.LFB103
 4707 0e4b 01       		.uleb128 0x1
 4708 0e4c 9C       		.byte	0x9c
 4709 0e4d 7F0E0000 		.4byte	0xe7f
 4710 0e51 1C       		.uleb128 0x1c
 4711 0e52 A6070000 		.4byte	.LASF137
 4712 0e56 01       		.byte	0x1
 4713 0e57 CF02     		.2byte	0x2cf
 4714 0e59 7F0E0000 		.4byte	0xe7f
 4715 0e5d 02       		.uleb128 0x2
 4716 0e5e 91       		.byte	0x91
 4717 0e5f 6F       		.sleb128 -17
 4718 0e60 1D       		.uleb128 0x1d
 4719 0e61 730A0000 		.4byte	.LASF80
 4720 0e65 01       		.byte	0x1
 4721 0e66 D102     		.2byte	0x2d1
 4722 0e68 09030000 		.4byte	0x309
 4723 0e6c 02       		.uleb128 0x2
 4724 0e6d 91       		.byte	0x91
 4725 0e6e 70       		.sleb128 -16
 4726 0e6f 1D       		.uleb128 0x1d
 4727 0e70 2D060000 		.4byte	.LASF77
 4728 0e74 01       		.byte	0x1
 4729 0e75 D202     		.2byte	0x2d2
 4730 0e77 6D010000 		.4byte	0x16d
 4731 0e7b 02       		.uleb128 0x2
 4732 0e7c 91       		.byte	0x91
 4733 0e7d 74       		.sleb128 -12
 4734 0e7e 00       		.byte	0
 4735 0e7f 09       		.uleb128 0x9
 4736 0e80 A9000000 		.4byte	0xa9
 4737 0e84 1E       		.uleb128 0x1e
 4738 0e85 74030000 		.4byte	.LASF152
 4739 0e89 01       		.byte	0x1
 4740 0e8a E902     		.2byte	0x2e9
 4741 0e8c 09030000 		.4byte	0x309
 4742 0e90 00000000 		.4byte	.LFB104
 4743 0e94 2A000000 		.4byte	.LFE104-.LFB104
 4744 0e98 01       		.uleb128 0x1
 4745 0e99 9C       		.byte	0x9c
 4746 0e9a DB0E0000 		.4byte	0xedb
 4747 0e9e 1C       		.uleb128 0x1c
 4748 0e9f 9F0B0000 		.4byte	.LASF153
 4749 0ea3 01       		.byte	0x1
 4750 0ea4 E902     		.2byte	0x2e9
 4751 0ea6 78010000 		.4byte	0x178
 4752 0eaa 02       		.uleb128 0x2
 4753 0eab 91       		.byte	0x91
 4754 0eac 6C       		.sleb128 -20
 4755 0ead 1C       		.uleb128 0x1c
 4756 0eae 84050000 		.4byte	.LASF154
 4757 0eb2 01       		.byte	0x1
 4758 0eb3 E902     		.2byte	0x2e9
 4759 0eb5 78010000 		.4byte	0x178
 4760 0eb9 02       		.uleb128 0x2
 4761 0eba 91       		.byte	0x91
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 108


 4762 0ebb 68       		.sleb128 -24
 4763 0ebc 1D       		.uleb128 0x1d
 4764 0ebd 730A0000 		.4byte	.LASF80
 4765 0ec1 01       		.byte	0x1
 4766 0ec2 EB02     		.2byte	0x2eb
 4767 0ec4 09030000 		.4byte	0x309
 4768 0ec8 02       		.uleb128 0x2
 4769 0ec9 91       		.byte	0x91
 4770 0eca 70       		.sleb128 -16
 4771 0ecb 1D       		.uleb128 0x1d
 4772 0ecc 2D060000 		.4byte	.LASF77
 4773 0ed0 01       		.byte	0x1
 4774 0ed1 EC02     		.2byte	0x2ec
 4775 0ed3 6D010000 		.4byte	0x16d
 4776 0ed7 02       		.uleb128 0x2
 4777 0ed8 91       		.byte	0x91
 4778 0ed9 74       		.sleb128 -12
 4779 0eda 00       		.byte	0
 4780 0edb 1E       		.uleb128 0x1e
 4781 0edc 3A080000 		.4byte	.LASF155
 4782 0ee0 01       		.byte	0x1
 4783 0ee1 0403     		.2byte	0x304
 4784 0ee3 6D010000 		.4byte	0x16d
 4785 0ee7 00000000 		.4byte	.LFB105
 4786 0eeb 2A000000 		.4byte	.LFE105-.LFB105
 4787 0eef 01       		.uleb128 0x1
 4788 0ef0 9C       		.byte	0x9c
 4789 0ef1 320F0000 		.4byte	0xf32
 4790 0ef5 1C       		.uleb128 0x1c
 4791 0ef6 E8060000 		.4byte	.LASF156
 4792 0efa 01       		.byte	0x1
 4793 0efb 0403     		.2byte	0x304
 4794 0efd 09030000 		.4byte	0x309
 4795 0f01 02       		.uleb128 0x2
 4796 0f02 91       		.byte	0x91
 4797 0f03 6C       		.sleb128 -20
 4798 0f04 1C       		.uleb128 0x1c
 4799 0f05 CE090000 		.4byte	.LASF157
 4800 0f09 01       		.byte	0x1
 4801 0f0a 0403     		.2byte	0x304
 4802 0f0c 83010000 		.4byte	0x183
 4803 0f10 02       		.uleb128 0x2
 4804 0f11 91       		.byte	0x91
 4805 0f12 68       		.sleb128 -24
 4806 0f13 1D       		.uleb128 0x1d
 4807 0f14 730A0000 		.4byte	.LASF80
 4808 0f18 01       		.byte	0x1
 4809 0f19 0603     		.2byte	0x306
 4810 0f1b 6D010000 		.4byte	0x16d
 4811 0f1f 02       		.uleb128 0x2
 4812 0f20 91       		.byte	0x91
 4813 0f21 70       		.sleb128 -16
 4814 0f22 1D       		.uleb128 0x1d
 4815 0f23 2D060000 		.4byte	.LASF77
 4816 0f27 01       		.byte	0x1
 4817 0f28 0703     		.2byte	0x307
 4818 0f2a 6D010000 		.4byte	0x16d
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 109


 4819 0f2e 02       		.uleb128 0x2
 4820 0f2f 91       		.byte	0x91
 4821 0f30 74       		.sleb128 -12
 4822 0f31 00       		.byte	0
 4823 0f32 1E       		.uleb128 0x1e
 4824 0f33 0E000000 		.4byte	.LASF158
 4825 0f37 01       		.byte	0x1
 4826 0f38 1103     		.2byte	0x311
 4827 0f3a 6D010000 		.4byte	0x16d
 4828 0f3e 00000000 		.4byte	.LFB106
 4829 0f42 26000000 		.4byte	.LFE106-.LFB106
 4830 0f46 01       		.uleb128 0x1
 4831 0f47 9C       		.byte	0x9c
 4832 0f48 7A0F0000 		.4byte	0xf7a
 4833 0f4c 1C       		.uleb128 0x1c
 4834 0f4d E8060000 		.4byte	.LASF156
 4835 0f51 01       		.byte	0x1
 4836 0f52 1103     		.2byte	0x311
 4837 0f54 09030000 		.4byte	0x309
 4838 0f58 02       		.uleb128 0x2
 4839 0f59 91       		.byte	0x91
 4840 0f5a 6C       		.sleb128 -20
 4841 0f5b 1D       		.uleb128 0x1d
 4842 0f5c 730A0000 		.4byte	.LASF80
 4843 0f60 01       		.byte	0x1
 4844 0f61 1303     		.2byte	0x313
 4845 0f63 6D010000 		.4byte	0x16d
 4846 0f67 02       		.uleb128 0x2
 4847 0f68 91       		.byte	0x91
 4848 0f69 70       		.sleb128 -16
 4849 0f6a 1D       		.uleb128 0x1d
 4850 0f6b 2D060000 		.4byte	.LASF77
 4851 0f6f 01       		.byte	0x1
 4852 0f70 1403     		.2byte	0x314
 4853 0f72 6D010000 		.4byte	0x16d
 4854 0f76 02       		.uleb128 0x2
 4855 0f77 91       		.byte	0x91
 4856 0f78 74       		.sleb128 -12
 4857 0f79 00       		.byte	0
 4858 0f7a 1B       		.uleb128 0x1b
 4859 0f7b 140C0000 		.4byte	.LASF159
 4860 0f7f 01       		.byte	0x1
 4861 0f80 5203     		.2byte	0x352
 4862 0f82 00000000 		.4byte	.LFB107
 4863 0f86 26000000 		.4byte	.LFE107-.LFB107
 4864 0f8a 01       		.uleb128 0x1
 4865 0f8b 9C       		.byte	0x9c
 4866 0f8c BE0F0000 		.4byte	0xfbe
 4867 0f90 1C       		.uleb128 0x1c
 4868 0f91 4A030000 		.4byte	.LASF142
 4869 0f95 01       		.byte	0x1
 4870 0f96 5203     		.2byte	0x352
 4871 0f98 09030000 		.4byte	0x309
 4872 0f9c 02       		.uleb128 0x2
 4873 0f9d 91       		.byte	0x91
 4874 0f9e 6C       		.sleb128 -20
 4875 0f9f 1C       		.uleb128 0x1c
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 110


 4876 0fa0 39050000 		.4byte	.LASF58
 4877 0fa4 01       		.byte	0x1
 4878 0fa5 5203     		.2byte	0x352
 4879 0fa7 16010000 		.4byte	0x116
 4880 0fab 02       		.uleb128 0x2
 4881 0fac 91       		.byte	0x91
 4882 0fad 68       		.sleb128 -24
 4883 0fae 1D       		.uleb128 0x1d
 4884 0faf 2D060000 		.4byte	.LASF77
 4885 0fb3 01       		.byte	0x1
 4886 0fb4 5403     		.2byte	0x354
 4887 0fb6 6D010000 		.4byte	0x16d
 4888 0fba 02       		.uleb128 0x2
 4889 0fbb 91       		.byte	0x91
 4890 0fbc 74       		.sleb128 -12
 4891 0fbd 00       		.byte	0
 4892 0fbe 1B       		.uleb128 0x1b
 4893 0fbf A8030000 		.4byte	.LASF160
 4894 0fc3 01       		.byte	0x1
 4895 0fc4 5E03     		.2byte	0x35e
 4896 0fc6 00000000 		.4byte	.LFB108
 4897 0fca 22000000 		.4byte	.LFE108-.LFB108
 4898 0fce 01       		.uleb128 0x1
 4899 0fcf 9C       		.byte	0x9c
 4900 0fd0 F30F0000 		.4byte	0xff3
 4901 0fd4 1C       		.uleb128 0x1c
 4902 0fd5 4A030000 		.4byte	.LASF142
 4903 0fd9 01       		.byte	0x1
 4904 0fda 5E03     		.2byte	0x35e
 4905 0fdc 09030000 		.4byte	0x309
 4906 0fe0 02       		.uleb128 0x2
 4907 0fe1 91       		.byte	0x91
 4908 0fe2 6C       		.sleb128 -20
 4909 0fe3 1D       		.uleb128 0x1d
 4910 0fe4 2D060000 		.4byte	.LASF77
 4911 0fe8 01       		.byte	0x1
 4912 0fe9 6003     		.2byte	0x360
 4913 0feb 6D010000 		.4byte	0x16d
 4914 0fef 02       		.uleb128 0x2
 4915 0ff0 91       		.byte	0x91
 4916 0ff1 74       		.sleb128 -12
 4917 0ff2 00       		.byte	0
 4918 0ff3 1E       		.uleb128 0x1e
 4919 0ff4 E7090000 		.4byte	.LASF161
 4920 0ff8 01       		.byte	0x1
 4921 0ff9 6A03     		.2byte	0x36a
 4922 0ffb 16010000 		.4byte	0x116
 4923 0fff 00000000 		.4byte	.LFB109
 4924 1003 26000000 		.4byte	.LFE109-.LFB109
 4925 1007 01       		.uleb128 0x1
 4926 1008 9C       		.byte	0x9c
 4927 1009 3B100000 		.4byte	0x103b
 4928 100d 1C       		.uleb128 0x1c
 4929 100e 4A030000 		.4byte	.LASF142
 4930 1012 01       		.byte	0x1
 4931 1013 6A03     		.2byte	0x36a
 4932 1015 09030000 		.4byte	0x309
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 111


 4933 1019 02       		.uleb128 0x2
 4934 101a 91       		.byte	0x91
 4935 101b 6C       		.sleb128 -20
 4936 101c 1D       		.uleb128 0x1d
 4937 101d 2D060000 		.4byte	.LASF77
 4938 1021 01       		.byte	0x1
 4939 1022 6C03     		.2byte	0x36c
 4940 1024 6D010000 		.4byte	0x16d
 4941 1028 02       		.uleb128 0x2
 4942 1029 91       		.byte	0x91
 4943 102a 74       		.sleb128 -12
 4944 102b 1D       		.uleb128 0x1d
 4945 102c 37090000 		.4byte	.LASF110
 4946 1030 01       		.byte	0x1
 4947 1031 6D03     		.2byte	0x36d
 4948 1033 16010000 		.4byte	0x116
 4949 1037 02       		.uleb128 0x2
 4950 1038 91       		.byte	0x91
 4951 1039 70       		.sleb128 -16
 4952 103a 00       		.byte	0
 4953 103b 1B       		.uleb128 0x1b
 4954 103c 250B0000 		.4byte	.LASF162
 4955 1040 01       		.byte	0x1
 4956 1041 7703     		.2byte	0x377
 4957 1043 00000000 		.4byte	.LFB110
 4958 1047 22000000 		.4byte	.LFE110-.LFB110
 4959 104b 01       		.uleb128 0x1
 4960 104c 9C       		.byte	0x9c
 4961 104d 70100000 		.4byte	0x1070
 4962 1051 1C       		.uleb128 0x1c
 4963 1052 4A030000 		.4byte	.LASF142
 4964 1056 01       		.byte	0x1
 4965 1057 7703     		.2byte	0x377
 4966 1059 09030000 		.4byte	0x309
 4967 105d 02       		.uleb128 0x2
 4968 105e 91       		.byte	0x91
 4969 105f 6C       		.sleb128 -20
 4970 1060 1D       		.uleb128 0x1d
 4971 1061 2D060000 		.4byte	.LASF77
 4972 1065 01       		.byte	0x1
 4973 1066 7903     		.2byte	0x379
 4974 1068 6D010000 		.4byte	0x16d
 4975 106c 02       		.uleb128 0x2
 4976 106d 91       		.byte	0x91
 4977 106e 74       		.sleb128 -12
 4978 106f 00       		.byte	0
 4979 1070 1E       		.uleb128 0x1e
 4980 1071 2B000000 		.4byte	.LASF163
 4981 1075 01       		.byte	0x1
 4982 1076 8203     		.2byte	0x382
 4983 1078 0E010000 		.4byte	0x10e
 4984 107c 00000000 		.4byte	.LFB111
 4985 1080 26000000 		.4byte	.LFE111-.LFB111
 4986 1084 01       		.uleb128 0x1
 4987 1085 9C       		.byte	0x9c
 4988 1086 B8100000 		.4byte	0x10b8
 4989 108a 1C       		.uleb128 0x1c
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 112


 4990 108b 21060000 		.4byte	.LASF164
 4991 108f 01       		.byte	0x1
 4992 1090 8203     		.2byte	0x382
 4993 1092 2C000000 		.4byte	0x2c
 4994 1096 02       		.uleb128 0x2
 4995 1097 91       		.byte	0x91
 4996 1098 6C       		.sleb128 -20
 4997 1099 1D       		.uleb128 0x1d
 4998 109a 68040000 		.4byte	.LASF165
 4999 109e 01       		.byte	0x1
 5000 109f 8403     		.2byte	0x384
 5001 10a1 0E010000 		.4byte	0x10e
 5002 10a5 02       		.uleb128 0x2
 5003 10a6 91       		.byte	0x91
 5004 10a7 70       		.sleb128 -16
 5005 10a8 1D       		.uleb128 0x1d
 5006 10a9 2D060000 		.4byte	.LASF77
 5007 10ad 01       		.byte	0x1
 5008 10ae 8503     		.2byte	0x385
 5009 10b0 6D010000 		.4byte	0x16d
 5010 10b4 02       		.uleb128 0x2
 5011 10b5 91       		.byte	0x91
 5012 10b6 74       		.sleb128 -12
 5013 10b7 00       		.byte	0
 5014 10b8 1B       		.uleb128 0x1b
 5015 10b9 89000000 		.4byte	.LASF166
 5016 10bd 01       		.byte	0x1
 5017 10be 9103     		.2byte	0x391
 5018 10c0 00000000 		.4byte	.LFB112
 5019 10c4 22000000 		.4byte	.LFE112-.LFB112
 5020 10c8 01       		.uleb128 0x1
 5021 10c9 9C       		.byte	0x9c
 5022 10ca EC100000 		.4byte	0x10ec
 5023 10ce 20       		.uleb128 0x20
 5024 10cf 707600   		.ascii	"pv\000"
 5025 10d2 01       		.byte	0x1
 5026 10d3 9103     		.2byte	0x391
 5027 10d5 0E010000 		.4byte	0x10e
 5028 10d9 02       		.uleb128 0x2
 5029 10da 91       		.byte	0x91
 5030 10db 6C       		.sleb128 -20
 5031 10dc 1D       		.uleb128 0x1d
 5032 10dd 2D060000 		.4byte	.LASF77
 5033 10e1 01       		.byte	0x1
 5034 10e2 9303     		.2byte	0x393
 5035 10e4 6D010000 		.4byte	0x16d
 5036 10e8 02       		.uleb128 0x2
 5037 10e9 91       		.byte	0x91
 5038 10ea 74       		.sleb128 -12
 5039 10eb 00       		.byte	0
 5040 10ec 1B       		.uleb128 0x1b
 5041 10ed 9A040000 		.4byte	.LASF167
 5042 10f1 01       		.byte	0x1
 5043 10f2 9D03     		.2byte	0x39d
 5044 10f4 00000000 		.4byte	.LFB113
 5045 10f8 1E000000 		.4byte	.LFE113-.LFB113
 5046 10fc 01       		.uleb128 0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 113


 5047 10fd 9C       		.byte	0x9c
 5048 10fe 12110000 		.4byte	0x1112
 5049 1102 1D       		.uleb128 0x1d
 5050 1103 2D060000 		.4byte	.LASF77
 5051 1107 01       		.byte	0x1
 5052 1108 9F03     		.2byte	0x39f
 5053 110a 6D010000 		.4byte	0x16d
 5054 110e 02       		.uleb128 0x2
 5055 110f 91       		.byte	0x91
 5056 1110 74       		.sleb128 -12
 5057 1111 00       		.byte	0
 5058 1112 1E       		.uleb128 0x1e
 5059 1113 20050000 		.4byte	.LASF168
 5060 1117 01       		.byte	0x1
 5061 1118 A903     		.2byte	0x3a9
 5062 111a 2C000000 		.4byte	0x2c
 5063 111e 00000000 		.4byte	.LFB114
 5064 1122 22000000 		.4byte	.LFE114-.LFB114
 5065 1126 01       		.uleb128 0x1
 5066 1127 9C       		.byte	0x9c
 5067 1128 4B110000 		.4byte	0x114b
 5068 112c 1D       		.uleb128 0x1d
 5069 112d 730A0000 		.4byte	.LASF80
 5070 1131 01       		.byte	0x1
 5071 1132 AB03     		.2byte	0x3ab
 5072 1134 2C000000 		.4byte	0x2c
 5073 1138 02       		.uleb128 0x2
 5074 1139 91       		.byte	0x91
 5075 113a 70       		.sleb128 -16
 5076 113b 1D       		.uleb128 0x1d
 5077 113c 2D060000 		.4byte	.LASF77
 5078 1140 01       		.byte	0x1
 5079 1141 AC03     		.2byte	0x3ac
 5080 1143 6D010000 		.4byte	0x16d
 5081 1147 02       		.uleb128 0x2
 5082 1148 91       		.byte	0x91
 5083 1149 74       		.sleb128 -12
 5084 114a 00       		.byte	0
 5085 114b 1E       		.uleb128 0x1e
 5086 114c B8090000 		.4byte	.LASF169
 5087 1150 01       		.byte	0x1
 5088 1151 6704     		.2byte	0x467
 5089 1153 1F030000 		.4byte	0x31f
 5090 1157 00000000 		.4byte	.LFB115
 5091 115b 22000000 		.4byte	.LFE115-.LFB115
 5092 115f 01       		.uleb128 0x1
 5093 1160 9C       		.byte	0x9c
 5094 1161 84110000 		.4byte	0x1184
 5095 1165 1D       		.uleb128 0x1d
 5096 1166 730A0000 		.4byte	.LASF80
 5097 116a 01       		.byte	0x1
 5098 116b 6904     		.2byte	0x469
 5099 116d 1F030000 		.4byte	0x31f
 5100 1171 02       		.uleb128 0x2
 5101 1172 91       		.byte	0x91
 5102 1173 70       		.sleb128 -16
 5103 1174 1D       		.uleb128 0x1d
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 114


 5104 1175 2D060000 		.4byte	.LASF77
 5105 1179 01       		.byte	0x1
 5106 117a 6A04     		.2byte	0x46a
 5107 117c 6D010000 		.4byte	0x16d
 5108 1180 02       		.uleb128 0x2
 5109 1181 91       		.byte	0x91
 5110 1182 74       		.sleb128 -12
 5111 1183 00       		.byte	0
 5112 1184 1E       		.uleb128 0x1e
 5113 1185 870B0000 		.4byte	.LASF170
 5114 1189 01       		.byte	0x1
 5115 118a 8204     		.2byte	0x482
 5116 118c 35030000 		.4byte	0x335
 5117 1190 00000000 		.4byte	.LFB116
 5118 1194 36000000 		.4byte	.LFE116-.LFB116
 5119 1198 01       		.uleb128 0x1
 5120 1199 9C       		.byte	0x9c
 5121 119a 08120000 		.4byte	0x1208
 5122 119e 1C       		.uleb128 0x1c
 5123 119f 9A050000 		.4byte	.LASF171
 5124 11a3 01       		.byte	0x1
 5125 11a4 8204     		.2byte	0x482
 5126 11a6 1F030000 		.4byte	0x31f
 5127 11aa 02       		.uleb128 0x2
 5128 11ab 91       		.byte	0x91
 5129 11ac 6C       		.sleb128 -20
 5130 11ad 1C       		.uleb128 0x1c
 5131 11ae 7B0A0000 		.4byte	.LASF172
 5132 11b2 01       		.byte	0x1
 5133 11b3 8204     		.2byte	0x482
 5134 11b5 08120000 		.4byte	0x1208
 5135 11b9 02       		.uleb128 0x2
 5136 11ba 91       		.byte	0x91
 5137 11bb 68       		.sleb128 -24
 5138 11bc 1C       		.uleb128 0x1c
 5139 11bd 280D0000 		.4byte	.LASF173
 5140 11c1 01       		.byte	0x1
 5141 11c2 8204     		.2byte	0x482
 5142 11c4 0D120000 		.4byte	0x120d
 5143 11c8 02       		.uleb128 0x2
 5144 11c9 91       		.byte	0x91
 5145 11ca 64       		.sleb128 -28
 5146 11cb 1C       		.uleb128 0x1c
 5147 11cc DE040000 		.4byte	.LASF174
 5148 11d0 01       		.byte	0x1
 5149 11d1 8204     		.2byte	0x482
 5150 11d3 0D120000 		.4byte	0x120d
 5151 11d7 02       		.uleb128 0x2
 5152 11d8 91       		.byte	0x91
 5153 11d9 60       		.sleb128 -32
 5154 11da 1C       		.uleb128 0x1c
 5155 11db 070C0000 		.4byte	.LASF127
 5156 11df 01       		.byte	0x1
 5157 11e0 8204     		.2byte	0x482
 5158 11e2 83010000 		.4byte	0x183
 5159 11e6 02       		.uleb128 0x2
 5160 11e7 91       		.byte	0x91
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 115


 5161 11e8 00       		.sleb128 0
 5162 11e9 1D       		.uleb128 0x1d
 5163 11ea 730A0000 		.4byte	.LASF80
 5164 11ee 01       		.byte	0x1
 5165 11ef 8404     		.2byte	0x484
 5166 11f1 35030000 		.4byte	0x335
 5167 11f5 02       		.uleb128 0x2
 5168 11f6 91       		.byte	0x91
 5169 11f7 70       		.sleb128 -16
 5170 11f8 1D       		.uleb128 0x1d
 5171 11f9 2D060000 		.4byte	.LASF77
 5172 11fd 01       		.byte	0x1
 5173 11fe 8504     		.2byte	0x485
 5174 1200 6D010000 		.4byte	0x16d
 5175 1204 02       		.uleb128 0x2
 5176 1205 91       		.byte	0x91
 5177 1206 74       		.sleb128 -12
 5178 1207 00       		.byte	0
 5179 1208 09       		.uleb128 0x9
 5180 1209 35030000 		.4byte	0x335
 5181 120d 09       		.uleb128 0x9
 5182 120e 6D010000 		.4byte	0x16d
 5183 1212 1E       		.uleb128 0x1e
 5184 1213 6D080000 		.4byte	.LASF175
 5185 1217 01       		.byte	0x1
 5186 1218 8E04     		.2byte	0x48e
 5187 121a 35030000 		.4byte	0x335
 5188 121e 00000000 		.4byte	.LFB117
 5189 1222 2A000000 		.4byte	.LFE117-.LFB117
 5190 1226 01       		.uleb128 0x1
 5191 1227 9C       		.byte	0x9c
 5192 1228 69120000 		.4byte	0x1269
 5193 122c 1C       		.uleb128 0x1c
 5194 122d 9A050000 		.4byte	.LASF171
 5195 1231 01       		.byte	0x1
 5196 1232 8E04     		.2byte	0x48e
 5197 1234 1F030000 		.4byte	0x31f
 5198 1238 02       		.uleb128 0x2
 5199 1239 91       		.byte	0x91
 5200 123a 6C       		.sleb128 -20
 5201 123b 1C       		.uleb128 0x1c
 5202 123c 12050000 		.4byte	.LASF176
 5203 1240 01       		.byte	0x1
 5204 1241 8E04     		.2byte	0x48e
 5205 1243 08120000 		.4byte	0x1208
 5206 1247 02       		.uleb128 0x2
 5207 1248 91       		.byte	0x91
 5208 1249 68       		.sleb128 -24
 5209 124a 1D       		.uleb128 0x1d
 5210 124b 730A0000 		.4byte	.LASF80
 5211 124f 01       		.byte	0x1
 5212 1250 9004     		.2byte	0x490
 5213 1252 35030000 		.4byte	0x335
 5214 1256 02       		.uleb128 0x2
 5215 1257 91       		.byte	0x91
 5216 1258 70       		.sleb128 -16
 5217 1259 1D       		.uleb128 0x1d
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 116


 5218 125a 2D060000 		.4byte	.LASF77
 5219 125e 01       		.byte	0x1
 5220 125f 9104     		.2byte	0x491
 5221 1261 6D010000 		.4byte	0x16d
 5222 1265 02       		.uleb128 0x2
 5223 1266 91       		.byte	0x91
 5224 1267 74       		.sleb128 -12
 5225 1268 00       		.byte	0
 5226 1269 1E       		.uleb128 0x1e
 5227 126a AB0D0000 		.4byte	.LASF177
 5228 126e 01       		.byte	0x1
 5229 126f 9A04     		.2byte	0x49a
 5230 1271 35030000 		.4byte	0x335
 5231 1275 00000000 		.4byte	.LFB118
 5232 1279 2A000000 		.4byte	.LFE118-.LFB118
 5233 127d 01       		.uleb128 0x1
 5234 127e 9C       		.byte	0x9c
 5235 127f C0120000 		.4byte	0x12c0
 5236 1283 1C       		.uleb128 0x1c
 5237 1284 9A050000 		.4byte	.LASF171
 5238 1288 01       		.byte	0x1
 5239 1289 9A04     		.2byte	0x49a
 5240 128b 1F030000 		.4byte	0x31f
 5241 128f 02       		.uleb128 0x2
 5242 1290 91       		.byte	0x91
 5243 1291 6C       		.sleb128 -20
 5244 1292 1C       		.uleb128 0x1c
 5245 1293 B50B0000 		.4byte	.LASF178
 5246 1297 01       		.byte	0x1
 5247 1298 9A04     		.2byte	0x49a
 5248 129a 08120000 		.4byte	0x1208
 5249 129e 02       		.uleb128 0x2
 5250 129f 91       		.byte	0x91
 5251 12a0 68       		.sleb128 -24
 5252 12a1 1D       		.uleb128 0x1d
 5253 12a2 730A0000 		.4byte	.LASF80
 5254 12a6 01       		.byte	0x1
 5255 12a7 9C04     		.2byte	0x49c
 5256 12a9 35030000 		.4byte	0x335
 5257 12ad 02       		.uleb128 0x2
 5258 12ae 91       		.byte	0x91
 5259 12af 70       		.sleb128 -16
 5260 12b0 1D       		.uleb128 0x1d
 5261 12b1 2D060000 		.4byte	.LASF77
 5262 12b5 01       		.byte	0x1
 5263 12b6 9D04     		.2byte	0x49d
 5264 12b8 6D010000 		.4byte	0x16d
 5265 12bc 02       		.uleb128 0x2
 5266 12bd 91       		.byte	0x91
 5267 12be 74       		.sleb128 -12
 5268 12bf 00       		.byte	0
 5269 12c0 1E       		.uleb128 0x1e
 5270 12c1 40090000 		.4byte	.LASF179
 5271 12c5 01       		.byte	0x1
 5272 12c6 A604     		.2byte	0x4a6
 5273 12c8 35030000 		.4byte	0x335
 5274 12cc 00000000 		.4byte	.LFB119
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 117


 5275 12d0 32000000 		.4byte	.LFE119-.LFB119
 5276 12d4 01       		.uleb128 0x1
 5277 12d5 9C       		.byte	0x9c
 5278 12d6 35130000 		.4byte	0x1335
 5279 12da 1C       		.uleb128 0x1c
 5280 12db 9A050000 		.4byte	.LASF171
 5281 12df 01       		.byte	0x1
 5282 12e0 A604     		.2byte	0x4a6
 5283 12e2 1F030000 		.4byte	0x31f
 5284 12e6 02       		.uleb128 0x2
 5285 12e7 91       		.byte	0x91
 5286 12e8 6C       		.sleb128 -20
 5287 12e9 1C       		.uleb128 0x1c
 5288 12ea B50B0000 		.4byte	.LASF178
 5289 12ee 01       		.byte	0x1
 5290 12ef A604     		.2byte	0x4a6
 5291 12f1 08120000 		.4byte	0x1208
 5292 12f5 02       		.uleb128 0x2
 5293 12f6 91       		.byte	0x91
 5294 12f7 68       		.sleb128 -24
 5295 12f8 1C       		.uleb128 0x1c
 5296 12f9 7B0A0000 		.4byte	.LASF172
 5297 12fd 01       		.byte	0x1
 5298 12fe A604     		.2byte	0x4a6
 5299 1300 08120000 		.4byte	0x1208
 5300 1304 02       		.uleb128 0x2
 5301 1305 91       		.byte	0x91
 5302 1306 64       		.sleb128 -28
 5303 1307 1C       		.uleb128 0x1c
 5304 1308 070C0000 		.4byte	.LASF127
 5305 130c 01       		.byte	0x1
 5306 130d A604     		.2byte	0x4a6
 5307 130f 83010000 		.4byte	0x183
 5308 1313 02       		.uleb128 0x2
 5309 1314 91       		.byte	0x91
 5310 1315 60       		.sleb128 -32
 5311 1316 1D       		.uleb128 0x1d
 5312 1317 730A0000 		.4byte	.LASF80
 5313 131b 01       		.byte	0x1
 5314 131c A804     		.2byte	0x4a8
 5315 131e 35030000 		.4byte	0x335
 5316 1322 02       		.uleb128 0x2
 5317 1323 91       		.byte	0x91
 5318 1324 70       		.sleb128 -16
 5319 1325 1D       		.uleb128 0x1d
 5320 1326 2D060000 		.4byte	.LASF77
 5321 132a 01       		.byte	0x1
 5322 132b A904     		.2byte	0x4a9
 5323 132d 6D010000 		.4byte	0x16d
 5324 1331 02       		.uleb128 0x2
 5325 1332 91       		.byte	0x91
 5326 1333 74       		.sleb128 -12
 5327 1334 00       		.byte	0
 5328 1335 1B       		.uleb128 0x1b
 5329 1336 710D0000 		.4byte	.LASF180
 5330 133a 01       		.byte	0x1
 5331 133b B204     		.2byte	0x4b2
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 118


 5332 133d 00000000 		.4byte	.LFB120
 5333 1341 22000000 		.4byte	.LFE120-.LFB120
 5334 1345 01       		.uleb128 0x1
 5335 1346 9C       		.byte	0x9c
 5336 1347 6A130000 		.4byte	0x136a
 5337 134b 1C       		.uleb128 0x1c
 5338 134c 9A050000 		.4byte	.LASF171
 5339 1350 01       		.byte	0x1
 5340 1351 B204     		.2byte	0x4b2
 5341 1353 1F030000 		.4byte	0x31f
 5342 1357 02       		.uleb128 0x2
 5343 1358 91       		.byte	0x91
 5344 1359 6C       		.sleb128 -20
 5345 135a 1D       		.uleb128 0x1d
 5346 135b 2D060000 		.4byte	.LASF77
 5347 135f 01       		.byte	0x1
 5348 1360 B404     		.2byte	0x4b4
 5349 1362 6D010000 		.4byte	0x16d
 5350 1366 02       		.uleb128 0x2
 5351 1367 91       		.byte	0x91
 5352 1368 74       		.sleb128 -12
 5353 1369 00       		.byte	0
 5354 136a 1E       		.uleb128 0x1e
 5355 136b 5A020000 		.4byte	.LASF181
 5356 136f 01       		.byte	0x1
 5357 1370 BB04     		.2byte	0x4bb
 5358 1372 2C000000 		.4byte	0x2c
 5359 1376 00000000 		.4byte	.LFB121
 5360 137a 32000000 		.4byte	.LFE121-.LFB121
 5361 137e 01       		.uleb128 0x1
 5362 137f 9C       		.byte	0x9c
 5363 1380 DF130000 		.4byte	0x13df
 5364 1384 1C       		.uleb128 0x1c
 5365 1385 350C0000 		.4byte	.LASF182
 5366 1389 01       		.byte	0x1
 5367 138a BB04     		.2byte	0x4bb
 5368 138c 40030000 		.4byte	0x340
 5369 1390 02       		.uleb128 0x2
 5370 1391 91       		.byte	0x91
 5371 1392 6C       		.sleb128 -20
 5372 1393 1C       		.uleb128 0x1c
 5373 1394 91040000 		.4byte	.LASF183
 5374 1398 01       		.byte	0x1
 5375 1399 BB04     		.2byte	0x4bb
 5376 139b 6E0C0000 		.4byte	0xc6e
 5377 139f 02       		.uleb128 0x2
 5378 13a0 91       		.byte	0x91
 5379 13a1 68       		.sleb128 -24
 5380 13a2 1C       		.uleb128 0x1c
 5381 13a3 E5020000 		.4byte	.LASF184
 5382 13a7 01       		.byte	0x1
 5383 13a8 BB04     		.2byte	0x4bb
 5384 13aa 2C000000 		.4byte	0x2c
 5385 13ae 02       		.uleb128 0x2
 5386 13af 91       		.byte	0x91
 5387 13b0 64       		.sleb128 -28
 5388 13b1 1C       		.uleb128 0x1c
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 119


 5389 13b2 070C0000 		.4byte	.LASF127
 5390 13b6 01       		.byte	0x1
 5391 13b7 BB04     		.2byte	0x4bb
 5392 13b9 83010000 		.4byte	0x183
 5393 13bd 02       		.uleb128 0x2
 5394 13be 91       		.byte	0x91
 5395 13bf 60       		.sleb128 -32
 5396 13c0 1D       		.uleb128 0x1d
 5397 13c1 730A0000 		.4byte	.LASF80
 5398 13c5 01       		.byte	0x1
 5399 13c6 BD04     		.2byte	0x4bd
 5400 13c8 2C000000 		.4byte	0x2c
 5401 13cc 02       		.uleb128 0x2
 5402 13cd 91       		.byte	0x91
 5403 13ce 70       		.sleb128 -16
 5404 13cf 1D       		.uleb128 0x1d
 5405 13d0 2D060000 		.4byte	.LASF77
 5406 13d4 01       		.byte	0x1
 5407 13d5 BE04     		.2byte	0x4be
 5408 13d7 6D010000 		.4byte	0x16d
 5409 13db 02       		.uleb128 0x2
 5410 13dc 91       		.byte	0x91
 5411 13dd 74       		.sleb128 -12
 5412 13de 00       		.byte	0
 5413 13df 1E       		.uleb128 0x1e
 5414 13e0 FF020000 		.4byte	.LASF185
 5415 13e4 01       		.byte	0x1
 5416 13e5 C704     		.2byte	0x4c7
 5417 13e7 2C000000 		.4byte	0x2c
 5418 13eb 00000000 		.4byte	.LFB122
 5419 13ef 26000000 		.4byte	.LFE122-.LFB122
 5420 13f3 01       		.uleb128 0x1
 5421 13f4 9C       		.byte	0x9c
 5422 13f5 27140000 		.4byte	0x1427
 5423 13f9 1C       		.uleb128 0x1c
 5424 13fa 350C0000 		.4byte	.LASF182
 5425 13fe 01       		.byte	0x1
 5426 13ff C704     		.2byte	0x4c7
 5427 1401 40030000 		.4byte	0x340
 5428 1405 02       		.uleb128 0x2
 5429 1406 91       		.byte	0x91
 5430 1407 6C       		.sleb128 -20
 5431 1408 1D       		.uleb128 0x1d
 5432 1409 730A0000 		.4byte	.LASF80
 5433 140d 01       		.byte	0x1
 5434 140e C904     		.2byte	0x4c9
 5435 1410 2C000000 		.4byte	0x2c
 5436 1414 02       		.uleb128 0x2
 5437 1415 91       		.byte	0x91
 5438 1416 70       		.sleb128 -16
 5439 1417 1D       		.uleb128 0x1d
 5440 1418 2D060000 		.4byte	.LASF77
 5441 141c 01       		.byte	0x1
 5442 141d CA04     		.2byte	0x4ca
 5443 141f 6D010000 		.4byte	0x16d
 5444 1423 02       		.uleb128 0x2
 5445 1424 91       		.byte	0x91
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 120


 5446 1425 74       		.sleb128 -12
 5447 1426 00       		.byte	0
 5448 1427 1E       		.uleb128 0x1e
 5449 1428 DE0D0000 		.4byte	.LASF186
 5450 142c 01       		.byte	0x1
 5451 142d D304     		.2byte	0x4d3
 5452 142f 2C000000 		.4byte	0x2c
 5453 1433 00000000 		.4byte	.LFB123
 5454 1437 32000000 		.4byte	.LFE123-.LFB123
 5455 143b 01       		.uleb128 0x1
 5456 143c 9C       		.byte	0x9c
 5457 143d 9C140000 		.4byte	0x149c
 5458 1441 1C       		.uleb128 0x1c
 5459 1442 350C0000 		.4byte	.LASF182
 5460 1446 01       		.byte	0x1
 5461 1447 D304     		.2byte	0x4d3
 5462 1449 40030000 		.4byte	0x340
 5463 144d 02       		.uleb128 0x2
 5464 144e 91       		.byte	0x91
 5465 144f 6C       		.sleb128 -20
 5466 1450 1C       		.uleb128 0x1c
 5467 1451 42020000 		.4byte	.LASF187
 5468 1455 01       		.byte	0x1
 5469 1456 D304     		.2byte	0x4d3
 5470 1458 0E010000 		.4byte	0x10e
 5471 145c 02       		.uleb128 0x2
 5472 145d 91       		.byte	0x91
 5473 145e 68       		.sleb128 -24
 5474 145f 1C       		.uleb128 0x1c
 5475 1460 F60A0000 		.4byte	.LASF188
 5476 1464 01       		.byte	0x1
 5477 1465 D304     		.2byte	0x4d3
 5478 1467 2C000000 		.4byte	0x2c
 5479 146b 02       		.uleb128 0x2
 5480 146c 91       		.byte	0x91
 5481 146d 64       		.sleb128 -28
 5482 146e 1C       		.uleb128 0x1c
 5483 146f 070C0000 		.4byte	.LASF127
 5484 1473 01       		.byte	0x1
 5485 1474 D304     		.2byte	0x4d3
 5486 1476 83010000 		.4byte	0x183
 5487 147a 02       		.uleb128 0x2
 5488 147b 91       		.byte	0x91
 5489 147c 60       		.sleb128 -32
 5490 147d 1D       		.uleb128 0x1d
 5491 147e 730A0000 		.4byte	.LASF80
 5492 1482 01       		.byte	0x1
 5493 1483 D504     		.2byte	0x4d5
 5494 1485 2C000000 		.4byte	0x2c
 5495 1489 02       		.uleb128 0x2
 5496 148a 91       		.byte	0x91
 5497 148b 70       		.sleb128 -16
 5498 148c 1D       		.uleb128 0x1d
 5499 148d 2D060000 		.4byte	.LASF77
 5500 1491 01       		.byte	0x1
 5501 1492 D604     		.2byte	0x4d6
 5502 1494 6D010000 		.4byte	0x16d
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 121


 5503 1498 02       		.uleb128 0x2
 5504 1499 91       		.byte	0x91
 5505 149a 74       		.sleb128 -12
 5506 149b 00       		.byte	0
 5507 149c 1B       		.uleb128 0x1b
 5508 149d 17040000 		.4byte	.LASF189
 5509 14a1 01       		.byte	0x1
 5510 14a2 DF04     		.2byte	0x4df
 5511 14a4 00000000 		.4byte	.LFB124
 5512 14a8 22000000 		.4byte	.LFE124-.LFB124
 5513 14ac 01       		.uleb128 0x1
 5514 14ad 9C       		.byte	0x9c
 5515 14ae D1140000 		.4byte	0x14d1
 5516 14b2 1C       		.uleb128 0x1c
 5517 14b3 350C0000 		.4byte	.LASF182
 5518 14b7 01       		.byte	0x1
 5519 14b8 DF04     		.2byte	0x4df
 5520 14ba 40030000 		.4byte	0x340
 5521 14be 02       		.uleb128 0x2
 5522 14bf 91       		.byte	0x91
 5523 14c0 6C       		.sleb128 -20
 5524 14c1 1D       		.uleb128 0x1d
 5525 14c2 2D060000 		.4byte	.LASF77
 5526 14c6 01       		.byte	0x1
 5527 14c7 E104     		.2byte	0x4e1
 5528 14c9 6D010000 		.4byte	0x16d
 5529 14cd 02       		.uleb128 0x2
 5530 14ce 91       		.byte	0x91
 5531 14cf 74       		.sleb128 -12
 5532 14d0 00       		.byte	0
 5533 14d1 1E       		.uleb128 0x1e
 5534 14d2 F6000000 		.4byte	.LASF190
 5535 14d6 01       		.byte	0x1
 5536 14d7 E804     		.2byte	0x4e8
 5537 14d9 6D010000 		.4byte	0x16d
 5538 14dd 00000000 		.4byte	.LFB125
 5539 14e1 26000000 		.4byte	.LFE125-.LFB125
 5540 14e5 01       		.uleb128 0x1
 5541 14e6 9C       		.byte	0x9c
 5542 14e7 19150000 		.4byte	0x1519
 5543 14eb 1C       		.uleb128 0x1c
 5544 14ec 350C0000 		.4byte	.LASF182
 5545 14f0 01       		.byte	0x1
 5546 14f1 E804     		.2byte	0x4e8
 5547 14f3 40030000 		.4byte	0x340
 5548 14f7 02       		.uleb128 0x2
 5549 14f8 91       		.byte	0x91
 5550 14f9 6C       		.sleb128 -20
 5551 14fa 1D       		.uleb128 0x1d
 5552 14fb 730A0000 		.4byte	.LASF80
 5553 14ff 01       		.byte	0x1
 5554 1500 EA04     		.2byte	0x4ea
 5555 1502 6D010000 		.4byte	0x16d
 5556 1506 02       		.uleb128 0x2
 5557 1507 91       		.byte	0x91
 5558 1508 70       		.sleb128 -16
 5559 1509 1D       		.uleb128 0x1d
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 122


 5560 150a 2D060000 		.4byte	.LASF77
 5561 150e 01       		.byte	0x1
 5562 150f EB04     		.2byte	0x4eb
 5563 1511 6D010000 		.4byte	0x16d
 5564 1515 02       		.uleb128 0x2
 5565 1516 91       		.byte	0x91
 5566 1517 74       		.sleb128 -12
 5567 1518 00       		.byte	0
 5568 1519 1E       		.uleb128 0x1e
 5569 151a DD0B0000 		.4byte	.LASF191
 5570 151e 01       		.byte	0x1
 5571 151f F404     		.2byte	0x4f4
 5572 1521 6D010000 		.4byte	0x16d
 5573 1525 00000000 		.4byte	.LFB126
 5574 1529 26000000 		.4byte	.LFE126-.LFB126
 5575 152d 01       		.uleb128 0x1
 5576 152e 9C       		.byte	0x9c
 5577 152f 61150000 		.4byte	0x1561
 5578 1533 1C       		.uleb128 0x1c
 5579 1534 350C0000 		.4byte	.LASF182
 5580 1538 01       		.byte	0x1
 5581 1539 F404     		.2byte	0x4f4
 5582 153b 40030000 		.4byte	0x340
 5583 153f 02       		.uleb128 0x2
 5584 1540 91       		.byte	0x91
 5585 1541 6C       		.sleb128 -20
 5586 1542 1D       		.uleb128 0x1d
 5587 1543 730A0000 		.4byte	.LASF80
 5588 1547 01       		.byte	0x1
 5589 1548 F604     		.2byte	0x4f6
 5590 154a 6D010000 		.4byte	0x16d
 5591 154e 02       		.uleb128 0x2
 5592 154f 91       		.byte	0x91
 5593 1550 70       		.sleb128 -16
 5594 1551 1D       		.uleb128 0x1d
 5595 1552 2D060000 		.4byte	.LASF77
 5596 1556 01       		.byte	0x1
 5597 1557 F704     		.2byte	0x4f7
 5598 1559 6D010000 		.4byte	0x16d
 5599 155d 02       		.uleb128 0x2
 5600 155e 91       		.byte	0x91
 5601 155f 74       		.sleb128 -12
 5602 1560 00       		.byte	0
 5603 1561 1E       		.uleb128 0x1e
 5604 1562 AF060000 		.4byte	.LASF192
 5605 1566 01       		.byte	0x1
 5606 1567 0005     		.2byte	0x500
 5607 1569 6D010000 		.4byte	0x16d
 5608 156d 00000000 		.4byte	.LFB127
 5609 1571 26000000 		.4byte	.LFE127-.LFB127
 5610 1575 01       		.uleb128 0x1
 5611 1576 9C       		.byte	0x9c
 5612 1577 A9150000 		.4byte	0x15a9
 5613 157b 1C       		.uleb128 0x1c
 5614 157c 350C0000 		.4byte	.LASF182
 5615 1580 01       		.byte	0x1
 5616 1581 0005     		.2byte	0x500
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 123


 5617 1583 40030000 		.4byte	0x340
 5618 1587 02       		.uleb128 0x2
 5619 1588 91       		.byte	0x91
 5620 1589 6C       		.sleb128 -20
 5621 158a 1D       		.uleb128 0x1d
 5622 158b 730A0000 		.4byte	.LASF80
 5623 158f 01       		.byte	0x1
 5624 1590 0205     		.2byte	0x502
 5625 1592 6D010000 		.4byte	0x16d
 5626 1596 02       		.uleb128 0x2
 5627 1597 91       		.byte	0x91
 5628 1598 70       		.sleb128 -16
 5629 1599 1D       		.uleb128 0x1d
 5630 159a 2D060000 		.4byte	.LASF77
 5631 159e 01       		.byte	0x1
 5632 159f 0305     		.2byte	0x503
 5633 15a1 6D010000 		.4byte	0x16d
 5634 15a5 02       		.uleb128 0x2
 5635 15a6 91       		.byte	0x91
 5636 15a7 74       		.sleb128 -12
 5637 15a8 00       		.byte	0
 5638 15a9 1E       		.uleb128 0x1e
 5639 15aa 660B0000 		.4byte	.LASF193
 5640 15ae 01       		.byte	0x1
 5641 15af 0C05     		.2byte	0x50c
 5642 15b1 2C000000 		.4byte	0x2c
 5643 15b5 00000000 		.4byte	.LFB128
 5644 15b9 26000000 		.4byte	.LFE128-.LFB128
 5645 15bd 01       		.uleb128 0x1
 5646 15be 9C       		.byte	0x9c
 5647 15bf F1150000 		.4byte	0x15f1
 5648 15c3 1C       		.uleb128 0x1c
 5649 15c4 350C0000 		.4byte	.LASF182
 5650 15c8 01       		.byte	0x1
 5651 15c9 0C05     		.2byte	0x50c
 5652 15cb 40030000 		.4byte	0x340
 5653 15cf 02       		.uleb128 0x2
 5654 15d0 91       		.byte	0x91
 5655 15d1 6C       		.sleb128 -20
 5656 15d2 1D       		.uleb128 0x1d
 5657 15d3 730A0000 		.4byte	.LASF80
 5658 15d7 01       		.byte	0x1
 5659 15d8 0E05     		.2byte	0x50e
 5660 15da 2C000000 		.4byte	0x2c
 5661 15de 02       		.uleb128 0x2
 5662 15df 91       		.byte	0x91
 5663 15e0 70       		.sleb128 -16
 5664 15e1 1D       		.uleb128 0x1d
 5665 15e2 2D060000 		.4byte	.LASF77
 5666 15e6 01       		.byte	0x1
 5667 15e7 0F05     		.2byte	0x50f
 5668 15e9 6D010000 		.4byte	0x16d
 5669 15ed 02       		.uleb128 0x2
 5670 15ee 91       		.byte	0x91
 5671 15ef 74       		.sleb128 -12
 5672 15f0 00       		.byte	0
 5673 15f1 1E       		.uleb128 0x1e
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 124


 5674 15f2 46010000 		.4byte	.LASF194
 5675 15f6 01       		.byte	0x1
 5676 15f7 1805     		.2byte	0x518
 5677 15f9 2C000000 		.4byte	0x2c
 5678 15fd 00000000 		.4byte	.LFB129
 5679 1601 26000000 		.4byte	.LFE129-.LFB129
 5680 1605 01       		.uleb128 0x1
 5681 1606 9C       		.byte	0x9c
 5682 1607 39160000 		.4byte	0x1639
 5683 160b 1C       		.uleb128 0x1c
 5684 160c 350C0000 		.4byte	.LASF182
 5685 1610 01       		.byte	0x1
 5686 1611 1805     		.2byte	0x518
 5687 1613 40030000 		.4byte	0x340
 5688 1617 02       		.uleb128 0x2
 5689 1618 91       		.byte	0x91
 5690 1619 6C       		.sleb128 -20
 5691 161a 1D       		.uleb128 0x1d
 5692 161b 730A0000 		.4byte	.LASF80
 5693 161f 01       		.byte	0x1
 5694 1620 1A05     		.2byte	0x51a
 5695 1622 2C000000 		.4byte	0x2c
 5696 1626 02       		.uleb128 0x2
 5697 1627 91       		.byte	0x91
 5698 1628 70       		.sleb128 -16
 5699 1629 1D       		.uleb128 0x1d
 5700 162a 2D060000 		.4byte	.LASF77
 5701 162e 01       		.byte	0x1
 5702 162f 1B05     		.2byte	0x51b
 5703 1631 6D010000 		.4byte	0x16d
 5704 1635 02       		.uleb128 0x2
 5705 1636 91       		.byte	0x91
 5706 1637 74       		.sleb128 -12
 5707 1638 00       		.byte	0
 5708 1639 1E       		.uleb128 0x1e
 5709 163a 4D000000 		.4byte	.LASF195
 5710 163e 01       		.byte	0x1
 5711 163f 2405     		.2byte	0x524
 5712 1641 6D010000 		.4byte	0x16d
 5713 1645 00000000 		.4byte	.LFB130
 5714 1649 2A000000 		.4byte	.LFE130-.LFB130
 5715 164d 01       		.uleb128 0x1
 5716 164e 9C       		.byte	0x9c
 5717 164f 90160000 		.4byte	0x1690
 5718 1653 1C       		.uleb128 0x1c
 5719 1654 350C0000 		.4byte	.LASF182
 5720 1658 01       		.byte	0x1
 5721 1659 2405     		.2byte	0x524
 5722 165b 40030000 		.4byte	0x340
 5723 165f 02       		.uleb128 0x2
 5724 1660 91       		.byte	0x91
 5725 1661 6C       		.sleb128 -20
 5726 1662 1C       		.uleb128 0x1c
 5727 1663 430C0000 		.4byte	.LASF196
 5728 1667 01       		.byte	0x1
 5729 1668 2405     		.2byte	0x524
 5730 166a 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 125


 5731 166e 02       		.uleb128 0x2
 5732 166f 91       		.byte	0x91
 5733 1670 68       		.sleb128 -24
 5734 1671 1D       		.uleb128 0x1d
 5735 1672 730A0000 		.4byte	.LASF80
 5736 1676 01       		.byte	0x1
 5737 1677 2605     		.2byte	0x526
 5738 1679 6D010000 		.4byte	0x16d
 5739 167d 02       		.uleb128 0x2
 5740 167e 91       		.byte	0x91
 5741 167f 70       		.sleb128 -16
 5742 1680 1D       		.uleb128 0x1d
 5743 1681 2D060000 		.4byte	.LASF77
 5744 1685 01       		.byte	0x1
 5745 1686 2705     		.2byte	0x527
 5746 1688 6D010000 		.4byte	0x16d
 5747 168c 02       		.uleb128 0x2
 5748 168d 91       		.byte	0x91
 5749 168e 74       		.sleb128 -12
 5750 168f 00       		.byte	0
 5751 1690 1E       		.uleb128 0x1e
 5752 1691 40050000 		.4byte	.LASF197
 5753 1695 01       		.byte	0x1
 5754 1696 3105     		.2byte	0x531
 5755 1698 40030000 		.4byte	0x340
 5756 169c 00000000 		.4byte	.LFB131
 5757 16a0 2E000000 		.4byte	.LFE131-.LFB131
 5758 16a4 01       		.uleb128 0x1
 5759 16a5 9C       		.byte	0x9c
 5760 16a6 F6160000 		.4byte	0x16f6
 5761 16aa 1C       		.uleb128 0x1c
 5762 16ab 3C000000 		.4byte	.LASF198
 5763 16af 01       		.byte	0x1
 5764 16b0 3105     		.2byte	0x531
 5765 16b2 2C000000 		.4byte	0x2c
 5766 16b6 02       		.uleb128 0x2
 5767 16b7 91       		.byte	0x91
 5768 16b8 6C       		.sleb128 -20
 5769 16b9 1C       		.uleb128 0x1c
 5770 16ba 55040000 		.4byte	.LASF199
 5771 16be 01       		.byte	0x1
 5772 16bf 3105     		.2byte	0x531
 5773 16c1 2C000000 		.4byte	0x2c
 5774 16c5 02       		.uleb128 0x2
 5775 16c6 91       		.byte	0x91
 5776 16c7 68       		.sleb128 -24
 5777 16c8 1C       		.uleb128 0x1c
 5778 16c9 F40C0000 		.4byte	.LASF200
 5779 16cd 01       		.byte	0x1
 5780 16ce 3105     		.2byte	0x531
 5781 16d0 6D010000 		.4byte	0x16d
 5782 16d4 02       		.uleb128 0x2
 5783 16d5 91       		.byte	0x91
 5784 16d6 64       		.sleb128 -28
 5785 16d7 1D       		.uleb128 0x1d
 5786 16d8 730A0000 		.4byte	.LASF80
 5787 16dc 01       		.byte	0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 126


 5788 16dd 3305     		.2byte	0x533
 5789 16df 40030000 		.4byte	0x340
 5790 16e3 02       		.uleb128 0x2
 5791 16e4 91       		.byte	0x91
 5792 16e5 70       		.sleb128 -16
 5793 16e6 1D       		.uleb128 0x1d
 5794 16e7 2D060000 		.4byte	.LASF77
 5795 16eb 01       		.byte	0x1
 5796 16ec 3405     		.2byte	0x534
 5797 16ee 6D010000 		.4byte	0x16d
 5798 16f2 02       		.uleb128 0x2
 5799 16f3 91       		.byte	0x91
 5800 16f4 74       		.sleb128 -12
 5801 16f5 00       		.byte	0
 5802 16f6 11       		.uleb128 0x11
 5803 16f7 21010000 		.4byte	0x121
 5804 16fb 06170000 		.4byte	0x1706
 5805 16ff 12       		.uleb128 0x12
 5806 1700 07010000 		.4byte	0x107
 5807 1704 07       		.byte	0x7
 5808 1705 00       		.byte	0
 5809 1706 21       		.uleb128 0x21
 5810 1707 EE040000 		.4byte	.LASF201
 5811 170b 06       		.byte	0x6
 5812 170c 34       		.byte	0x34
 5813 170d F6160000 		.4byte	0x16f6
 5814 1711 05       		.uleb128 0x5
 5815 1712 03       		.byte	0x3
 5816 1713 00000000 		.4byte	DS18x8_Sensor
 5817 1717 21       		.uleb128 0x21
 5818 1718 F60B0000 		.4byte	.LASF202
 5819 171c 06       		.byte	0x6
 5820 171d 39       		.byte	0x39
 5821 171e 02010000 		.4byte	0x102
 5822 1722 05       		.uleb128 0x5
 5823 1723 03       		.byte	0x3
 5824 1724 00000000 		.4byte	DS18x8_DataReady
 5825 1728 22       		.uleb128 0x22
 5826 1729 AB090000 		.4byte	.LASF203
 5827 172d 0D       		.byte	0xd
 5828 172e 1207     		.2byte	0x712
 5829 1730 34170000 		.4byte	0x1734
 5830 1734 06       		.uleb128 0x6
 5831 1735 BF000000 		.4byte	0xbf
 5832 1739 00       		.byte	0
 5833              		.section	.debug_abbrev,"",%progbits
 5834              	.Ldebug_abbrev0:
 5835 0000 01       		.uleb128 0x1
 5836 0001 11       		.uleb128 0x11
 5837 0002 01       		.byte	0x1
 5838 0003 25       		.uleb128 0x25
 5839 0004 0E       		.uleb128 0xe
 5840 0005 13       		.uleb128 0x13
 5841 0006 0B       		.uleb128 0xb
 5842 0007 03       		.uleb128 0x3
 5843 0008 0E       		.uleb128 0xe
 5844 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 127


 5845 000a 0E       		.uleb128 0xe
 5846 000b 55       		.uleb128 0x55
 5847 000c 17       		.uleb128 0x17
 5848 000d 11       		.uleb128 0x11
 5849 000e 01       		.uleb128 0x1
 5850 000f 10       		.uleb128 0x10
 5851 0010 17       		.uleb128 0x17
 5852 0011 00       		.byte	0
 5853 0012 00       		.byte	0
 5854 0013 02       		.uleb128 0x2
 5855 0014 24       		.uleb128 0x24
 5856 0015 00       		.byte	0
 5857 0016 0B       		.uleb128 0xb
 5858 0017 0B       		.uleb128 0xb
 5859 0018 3E       		.uleb128 0x3e
 5860 0019 0B       		.uleb128 0xb
 5861 001a 03       		.uleb128 0x3
 5862 001b 08       		.uleb128 0x8
 5863 001c 00       		.byte	0
 5864 001d 00       		.byte	0
 5865 001e 03       		.uleb128 0x3
 5866 001f 16       		.uleb128 0x16
 5867 0020 00       		.byte	0
 5868 0021 03       		.uleb128 0x3
 5869 0022 0E       		.uleb128 0xe
 5870 0023 3A       		.uleb128 0x3a
 5871 0024 0B       		.uleb128 0xb
 5872 0025 3B       		.uleb128 0x3b
 5873 0026 0B       		.uleb128 0xb
 5874 0027 49       		.uleb128 0x49
 5875 0028 13       		.uleb128 0x13
 5876 0029 00       		.byte	0
 5877 002a 00       		.byte	0
 5878 002b 04       		.uleb128 0x4
 5879 002c 24       		.uleb128 0x24
 5880 002d 00       		.byte	0
 5881 002e 0B       		.uleb128 0xb
 5882 002f 0B       		.uleb128 0xb
 5883 0030 3E       		.uleb128 0x3e
 5884 0031 0B       		.uleb128 0xb
 5885 0032 03       		.uleb128 0x3
 5886 0033 0E       		.uleb128 0xe
 5887 0034 00       		.byte	0
 5888 0035 00       		.byte	0
 5889 0036 05       		.uleb128 0x5
 5890 0037 16       		.uleb128 0x16
 5891 0038 00       		.byte	0
 5892 0039 03       		.uleb128 0x3
 5893 003a 0E       		.uleb128 0xe
 5894 003b 3A       		.uleb128 0x3a
 5895 003c 0B       		.uleb128 0xb
 5896 003d 3B       		.uleb128 0x3b
 5897 003e 05       		.uleb128 0x5
 5898 003f 49       		.uleb128 0x49
 5899 0040 13       		.uleb128 0x13
 5900 0041 00       		.byte	0
 5901 0042 00       		.byte	0
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 128


 5902 0043 06       		.uleb128 0x6
 5903 0044 35       		.uleb128 0x35
 5904 0045 00       		.byte	0
 5905 0046 49       		.uleb128 0x49
 5906 0047 13       		.uleb128 0x13
 5907 0048 00       		.byte	0
 5908 0049 00       		.byte	0
 5909 004a 07       		.uleb128 0x7
 5910 004b 0F       		.uleb128 0xf
 5911 004c 00       		.byte	0
 5912 004d 0B       		.uleb128 0xb
 5913 004e 0B       		.uleb128 0xb
 5914 004f 00       		.byte	0
 5915 0050 00       		.byte	0
 5916 0051 08       		.uleb128 0x8
 5917 0052 0F       		.uleb128 0xf
 5918 0053 00       		.byte	0
 5919 0054 0B       		.uleb128 0xb
 5920 0055 0B       		.uleb128 0xb
 5921 0056 49       		.uleb128 0x49
 5922 0057 13       		.uleb128 0x13
 5923 0058 00       		.byte	0
 5924 0059 00       		.byte	0
 5925 005a 09       		.uleb128 0x9
 5926 005b 26       		.uleb128 0x26
 5927 005c 00       		.byte	0
 5928 005d 49       		.uleb128 0x49
 5929 005e 13       		.uleb128 0x13
 5930 005f 00       		.byte	0
 5931 0060 00       		.byte	0
 5932 0061 0A       		.uleb128 0xa
 5933 0062 13       		.uleb128 0x13
 5934 0063 01       		.byte	0x1
 5935 0064 03       		.uleb128 0x3
 5936 0065 0E       		.uleb128 0xe
 5937 0066 0B       		.uleb128 0xb
 5938 0067 0B       		.uleb128 0xb
 5939 0068 3A       		.uleb128 0x3a
 5940 0069 0B       		.uleb128 0xb
 5941 006a 3B       		.uleb128 0x3b
 5942 006b 0B       		.uleb128 0xb
 5943 006c 01       		.uleb128 0x1
 5944 006d 13       		.uleb128 0x13
 5945 006e 00       		.byte	0
 5946 006f 00       		.byte	0
 5947 0070 0B       		.uleb128 0xb
 5948 0071 0D       		.uleb128 0xd
 5949 0072 00       		.byte	0
 5950 0073 03       		.uleb128 0x3
 5951 0074 0E       		.uleb128 0xe
 5952 0075 3A       		.uleb128 0x3a
 5953 0076 0B       		.uleb128 0xb
 5954 0077 3B       		.uleb128 0x3b
 5955 0078 0B       		.uleb128 0xb
 5956 0079 49       		.uleb128 0x49
 5957 007a 13       		.uleb128 0x13
 5958 007b 38       		.uleb128 0x38
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 129


 5959 007c 0B       		.uleb128 0xb
 5960 007d 00       		.byte	0
 5961 007e 00       		.byte	0
 5962 007f 0C       		.uleb128 0xc
 5963 0080 15       		.uleb128 0x15
 5964 0081 01       		.byte	0x1
 5965 0082 27       		.uleb128 0x27
 5966 0083 19       		.uleb128 0x19
 5967 0084 01       		.uleb128 0x1
 5968 0085 13       		.uleb128 0x13
 5969 0086 00       		.byte	0
 5970 0087 00       		.byte	0
 5971 0088 0D       		.uleb128 0xd
 5972 0089 05       		.uleb128 0x5
 5973 008a 00       		.byte	0
 5974 008b 49       		.uleb128 0x49
 5975 008c 13       		.uleb128 0x13
 5976 008d 00       		.byte	0
 5977 008e 00       		.byte	0
 5978 008f 0E       		.uleb128 0xe
 5979 0090 13       		.uleb128 0x13
 5980 0091 00       		.byte	0
 5981 0092 03       		.uleb128 0x3
 5982 0093 0E       		.uleb128 0xe
 5983 0094 3C       		.uleb128 0x3c
 5984 0095 19       		.uleb128 0x19
 5985 0096 00       		.byte	0
 5986 0097 00       		.byte	0
 5987 0098 0F       		.uleb128 0xf
 5988 0099 04       		.uleb128 0x4
 5989 009a 01       		.byte	0x1
 5990 009b 0B       		.uleb128 0xb
 5991 009c 0B       		.uleb128 0xb
 5992 009d 49       		.uleb128 0x49
 5993 009e 13       		.uleb128 0x13
 5994 009f 3A       		.uleb128 0x3a
 5995 00a0 0B       		.uleb128 0xb
 5996 00a1 3B       		.uleb128 0x3b
 5997 00a2 0B       		.uleb128 0xb
 5998 00a3 01       		.uleb128 0x1
 5999 00a4 13       		.uleb128 0x13
 6000 00a5 00       		.byte	0
 6001 00a6 00       		.byte	0
 6002 00a7 10       		.uleb128 0x10
 6003 00a8 28       		.uleb128 0x28
 6004 00a9 00       		.byte	0
 6005 00aa 03       		.uleb128 0x3
 6006 00ab 0E       		.uleb128 0xe
 6007 00ac 1C       		.uleb128 0x1c
 6008 00ad 0B       		.uleb128 0xb
 6009 00ae 00       		.byte	0
 6010 00af 00       		.byte	0
 6011 00b0 11       		.uleb128 0x11
 6012 00b1 01       		.uleb128 0x1
 6013 00b2 01       		.byte	0x1
 6014 00b3 49       		.uleb128 0x49
 6015 00b4 13       		.uleb128 0x13
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 130


 6016 00b5 01       		.uleb128 0x1
 6017 00b6 13       		.uleb128 0x13
 6018 00b7 00       		.byte	0
 6019 00b8 00       		.byte	0
 6020 00b9 12       		.uleb128 0x12
 6021 00ba 21       		.uleb128 0x21
 6022 00bb 00       		.byte	0
 6023 00bc 49       		.uleb128 0x49
 6024 00bd 13       		.uleb128 0x13
 6025 00be 2F       		.uleb128 0x2f
 6026 00bf 0B       		.uleb128 0xb
 6027 00c0 00       		.byte	0
 6028 00c1 00       		.byte	0
 6029 00c2 13       		.uleb128 0x13
 6030 00c3 2E       		.uleb128 0x2e
 6031 00c4 01       		.byte	0x1
 6032 00c5 3F       		.uleb128 0x3f
 6033 00c6 19       		.uleb128 0x19
 6034 00c7 03       		.uleb128 0x3
 6035 00c8 0E       		.uleb128 0xe
 6036 00c9 3A       		.uleb128 0x3a
 6037 00ca 0B       		.uleb128 0xb
 6038 00cb 3B       		.uleb128 0x3b
 6039 00cc 0B       		.uleb128 0xb
 6040 00cd 27       		.uleb128 0x27
 6041 00ce 19       		.uleb128 0x19
 6042 00cf 49       		.uleb128 0x49
 6043 00d0 13       		.uleb128 0x13
 6044 00d1 11       		.uleb128 0x11
 6045 00d2 01       		.uleb128 0x1
 6046 00d3 12       		.uleb128 0x12
 6047 00d4 06       		.uleb128 0x6
 6048 00d5 40       		.uleb128 0x40
 6049 00d6 18       		.uleb128 0x18
 6050 00d7 9642     		.uleb128 0x2116
 6051 00d9 19       		.uleb128 0x19
 6052 00da 01       		.uleb128 0x1
 6053 00db 13       		.uleb128 0x13
 6054 00dc 00       		.byte	0
 6055 00dd 00       		.byte	0
 6056 00de 14       		.uleb128 0x14
 6057 00df 34       		.uleb128 0x34
 6058 00e0 00       		.byte	0
 6059 00e1 03       		.uleb128 0x3
 6060 00e2 0E       		.uleb128 0xe
 6061 00e3 3A       		.uleb128 0x3a
 6062 00e4 0B       		.uleb128 0xb
 6063 00e5 3B       		.uleb128 0x3b
 6064 00e6 0B       		.uleb128 0xb
 6065 00e7 49       		.uleb128 0x49
 6066 00e8 13       		.uleb128 0x13
 6067 00e9 02       		.uleb128 0x2
 6068 00ea 18       		.uleb128 0x18
 6069 00eb 00       		.byte	0
 6070 00ec 00       		.byte	0
 6071 00ed 15       		.uleb128 0x15
 6072 00ee 2E       		.uleb128 0x2e
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 131


 6073 00ef 01       		.byte	0x1
 6074 00f0 3F       		.uleb128 0x3f
 6075 00f1 19       		.uleb128 0x19
 6076 00f2 03       		.uleb128 0x3
 6077 00f3 0E       		.uleb128 0xe
 6078 00f4 3A       		.uleb128 0x3a
 6079 00f5 0B       		.uleb128 0xb
 6080 00f6 3B       		.uleb128 0x3b
 6081 00f7 0B       		.uleb128 0xb
 6082 00f8 49       		.uleb128 0x49
 6083 00f9 13       		.uleb128 0x13
 6084 00fa 3C       		.uleb128 0x3c
 6085 00fb 19       		.uleb128 0x19
 6086 00fc 01       		.uleb128 0x1
 6087 00fd 13       		.uleb128 0x13
 6088 00fe 00       		.byte	0
 6089 00ff 00       		.byte	0
 6090 0100 16       		.uleb128 0x16
 6091 0101 18       		.uleb128 0x18
 6092 0102 00       		.byte	0
 6093 0103 00       		.byte	0
 6094 0104 00       		.byte	0
 6095 0105 17       		.uleb128 0x17
 6096 0106 0B       		.uleb128 0xb
 6097 0107 01       		.byte	0x1
 6098 0108 11       		.uleb128 0x11
 6099 0109 01       		.uleb128 0x1
 6100 010a 12       		.uleb128 0x12
 6101 010b 06       		.uleb128 0x6
 6102 010c 00       		.byte	0
 6103 010d 00       		.byte	0
 6104 010e 18       		.uleb128 0x18
 6105 010f 2E       		.uleb128 0x2e
 6106 0110 01       		.byte	0x1
 6107 0111 3F       		.uleb128 0x3f
 6108 0112 19       		.uleb128 0x19
 6109 0113 03       		.uleb128 0x3
 6110 0114 0E       		.uleb128 0xe
 6111 0115 3A       		.uleb128 0x3a
 6112 0116 0B       		.uleb128 0xb
 6113 0117 3B       		.uleb128 0x3b
 6114 0118 0B       		.uleb128 0xb
 6115 0119 49       		.uleb128 0x49
 6116 011a 13       		.uleb128 0x13
 6117 011b 3C       		.uleb128 0x3c
 6118 011c 19       		.uleb128 0x19
 6119 011d 00       		.byte	0
 6120 011e 00       		.byte	0
 6121 011f 19       		.uleb128 0x19
 6122 0120 2E       		.uleb128 0x2e
 6123 0121 01       		.byte	0x1
 6124 0122 3F       		.uleb128 0x3f
 6125 0123 19       		.uleb128 0x19
 6126 0124 03       		.uleb128 0x3
 6127 0125 0E       		.uleb128 0xe
 6128 0126 3A       		.uleb128 0x3a
 6129 0127 0B       		.uleb128 0xb
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 132


 6130 0128 3B       		.uleb128 0x3b
 6131 0129 0B       		.uleb128 0xb
 6132 012a 27       		.uleb128 0x27
 6133 012b 19       		.uleb128 0x19
 6134 012c 11       		.uleb128 0x11
 6135 012d 01       		.uleb128 0x1
 6136 012e 12       		.uleb128 0x12
 6137 012f 06       		.uleb128 0x6
 6138 0130 40       		.uleb128 0x40
 6139 0131 18       		.uleb128 0x18
 6140 0132 9642     		.uleb128 0x2116
 6141 0134 19       		.uleb128 0x19
 6142 0135 01       		.uleb128 0x1
 6143 0136 13       		.uleb128 0x13
 6144 0137 00       		.byte	0
 6145 0138 00       		.byte	0
 6146 0139 1A       		.uleb128 0x1a
 6147 013a 05       		.uleb128 0x5
 6148 013b 00       		.byte	0
 6149 013c 03       		.uleb128 0x3
 6150 013d 0E       		.uleb128 0xe
 6151 013e 3A       		.uleb128 0x3a
 6152 013f 0B       		.uleb128 0xb
 6153 0140 3B       		.uleb128 0x3b
 6154 0141 0B       		.uleb128 0xb
 6155 0142 49       		.uleb128 0x49
 6156 0143 13       		.uleb128 0x13
 6157 0144 02       		.uleb128 0x2
 6158 0145 18       		.uleb128 0x18
 6159 0146 00       		.byte	0
 6160 0147 00       		.byte	0
 6161 0148 1B       		.uleb128 0x1b
 6162 0149 2E       		.uleb128 0x2e
 6163 014a 01       		.byte	0x1
 6164 014b 3F       		.uleb128 0x3f
 6165 014c 19       		.uleb128 0x19
 6166 014d 03       		.uleb128 0x3
 6167 014e 0E       		.uleb128 0xe
 6168 014f 3A       		.uleb128 0x3a
 6169 0150 0B       		.uleb128 0xb
 6170 0151 3B       		.uleb128 0x3b
 6171 0152 05       		.uleb128 0x5
 6172 0153 27       		.uleb128 0x27
 6173 0154 19       		.uleb128 0x19
 6174 0155 11       		.uleb128 0x11
 6175 0156 01       		.uleb128 0x1
 6176 0157 12       		.uleb128 0x12
 6177 0158 06       		.uleb128 0x6
 6178 0159 40       		.uleb128 0x40
 6179 015a 18       		.uleb128 0x18
 6180 015b 9642     		.uleb128 0x2116
 6181 015d 19       		.uleb128 0x19
 6182 015e 01       		.uleb128 0x1
 6183 015f 13       		.uleb128 0x13
 6184 0160 00       		.byte	0
 6185 0161 00       		.byte	0
 6186 0162 1C       		.uleb128 0x1c
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 133


 6187 0163 05       		.uleb128 0x5
 6188 0164 00       		.byte	0
 6189 0165 03       		.uleb128 0x3
 6190 0166 0E       		.uleb128 0xe
 6191 0167 3A       		.uleb128 0x3a
 6192 0168 0B       		.uleb128 0xb
 6193 0169 3B       		.uleb128 0x3b
 6194 016a 05       		.uleb128 0x5
 6195 016b 49       		.uleb128 0x49
 6196 016c 13       		.uleb128 0x13
 6197 016d 02       		.uleb128 0x2
 6198 016e 18       		.uleb128 0x18
 6199 016f 00       		.byte	0
 6200 0170 00       		.byte	0
 6201 0171 1D       		.uleb128 0x1d
 6202 0172 34       		.uleb128 0x34
 6203 0173 00       		.byte	0
 6204 0174 03       		.uleb128 0x3
 6205 0175 0E       		.uleb128 0xe
 6206 0176 3A       		.uleb128 0x3a
 6207 0177 0B       		.uleb128 0xb
 6208 0178 3B       		.uleb128 0x3b
 6209 0179 05       		.uleb128 0x5
 6210 017a 49       		.uleb128 0x49
 6211 017b 13       		.uleb128 0x13
 6212 017c 02       		.uleb128 0x2
 6213 017d 18       		.uleb128 0x18
 6214 017e 00       		.byte	0
 6215 017f 00       		.byte	0
 6216 0180 1E       		.uleb128 0x1e
 6217 0181 2E       		.uleb128 0x2e
 6218 0182 01       		.byte	0x1
 6219 0183 3F       		.uleb128 0x3f
 6220 0184 19       		.uleb128 0x19
 6221 0185 03       		.uleb128 0x3
 6222 0186 0E       		.uleb128 0xe
 6223 0187 3A       		.uleb128 0x3a
 6224 0188 0B       		.uleb128 0xb
 6225 0189 3B       		.uleb128 0x3b
 6226 018a 05       		.uleb128 0x5
 6227 018b 27       		.uleb128 0x27
 6228 018c 19       		.uleb128 0x19
 6229 018d 49       		.uleb128 0x49
 6230 018e 13       		.uleb128 0x13
 6231 018f 11       		.uleb128 0x11
 6232 0190 01       		.uleb128 0x1
 6233 0191 12       		.uleb128 0x12
 6234 0192 06       		.uleb128 0x6
 6235 0193 40       		.uleb128 0x40
 6236 0194 18       		.uleb128 0x18
 6237 0195 9642     		.uleb128 0x2116
 6238 0197 19       		.uleb128 0x19
 6239 0198 01       		.uleb128 0x1
 6240 0199 13       		.uleb128 0x13
 6241 019a 00       		.byte	0
 6242 019b 00       		.byte	0
 6243 019c 1F       		.uleb128 0x1f
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 134


 6244 019d 26       		.uleb128 0x26
 6245 019e 00       		.byte	0
 6246 019f 00       		.byte	0
 6247 01a0 00       		.byte	0
 6248 01a1 20       		.uleb128 0x20
 6249 01a2 05       		.uleb128 0x5
 6250 01a3 00       		.byte	0
 6251 01a4 03       		.uleb128 0x3
 6252 01a5 08       		.uleb128 0x8
 6253 01a6 3A       		.uleb128 0x3a
 6254 01a7 0B       		.uleb128 0xb
 6255 01a8 3B       		.uleb128 0x3b
 6256 01a9 05       		.uleb128 0x5
 6257 01aa 49       		.uleb128 0x49
 6258 01ab 13       		.uleb128 0x13
 6259 01ac 02       		.uleb128 0x2
 6260 01ad 18       		.uleb128 0x18
 6261 01ae 00       		.byte	0
 6262 01af 00       		.byte	0
 6263 01b0 21       		.uleb128 0x21
 6264 01b1 34       		.uleb128 0x34
 6265 01b2 00       		.byte	0
 6266 01b3 03       		.uleb128 0x3
 6267 01b4 0E       		.uleb128 0xe
 6268 01b5 3A       		.uleb128 0x3a
 6269 01b6 0B       		.uleb128 0xb
 6270 01b7 3B       		.uleb128 0x3b
 6271 01b8 0B       		.uleb128 0xb
 6272 01b9 49       		.uleb128 0x49
 6273 01ba 13       		.uleb128 0x13
 6274 01bb 3F       		.uleb128 0x3f
 6275 01bc 19       		.uleb128 0x19
 6276 01bd 02       		.uleb128 0x2
 6277 01be 18       		.uleb128 0x18
 6278 01bf 00       		.byte	0
 6279 01c0 00       		.byte	0
 6280 01c1 22       		.uleb128 0x22
 6281 01c2 34       		.uleb128 0x34
 6282 01c3 00       		.byte	0
 6283 01c4 03       		.uleb128 0x3
 6284 01c5 0E       		.uleb128 0xe
 6285 01c6 3A       		.uleb128 0x3a
 6286 01c7 0B       		.uleb128 0xb
 6287 01c8 3B       		.uleb128 0x3b
 6288 01c9 05       		.uleb128 0x5
 6289 01ca 49       		.uleb128 0x49
 6290 01cb 13       		.uleb128 0x13
 6291 01cc 3F       		.uleb128 0x3f
 6292 01cd 19       		.uleb128 0x19
 6293 01ce 3C       		.uleb128 0x3c
 6294 01cf 19       		.uleb128 0x19
 6295 01d0 00       		.byte	0
 6296 01d1 00       		.byte	0
 6297 01d2 00       		.byte	0
 6298              		.section	.debug_aranges,"",%progbits
 6299 0000 14020000 		.4byte	0x214
 6300 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 135


 6301 0006 00000000 		.4byte	.Ldebug_info0
 6302 000a 04       		.byte	0x4
 6303 000b 00       		.byte	0
 6304 000c 0000     		.2byte	0
 6305 000e 0000     		.2byte	0
 6306 0010 00000000 		.4byte	.LFB68
 6307 0014 20000000 		.4byte	.LFE68-.LFB68
 6308 0018 00000000 		.4byte	.LFB69
 6309 001c 1A000000 		.4byte	.LFE69-.LFB69
 6310 0020 00000000 		.4byte	.LFB70
 6311 0024 2A000000 		.4byte	.LFE70-.LFB70
 6312 0028 00000000 		.4byte	.LFB71
 6313 002c 3C000000 		.4byte	.LFE71-.LFB71
 6314 0030 00000000 		.4byte	.LFB72
 6315 0034 26000000 		.4byte	.LFE72-.LFB72
 6316 0038 00000000 		.4byte	.LFB73
 6317 003c 22000000 		.4byte	.LFE73-.LFB73
 6318 0040 00000000 		.4byte	.LFB74
 6319 0044 26000000 		.4byte	.LFE74-.LFB74
 6320 0048 00000000 		.4byte	.LFB75
 6321 004c 22000000 		.4byte	.LFE75-.LFB75
 6322 0050 00000000 		.4byte	.LFB76
 6323 0054 26000000 		.4byte	.LFE76-.LFB76
 6324 0058 00000000 		.4byte	.LFB77
 6325 005c 26000000 		.4byte	.LFE77-.LFB77
 6326 0060 00000000 		.4byte	.LFB78
 6327 0064 28000000 		.4byte	.LFE78-.LFB78
 6328 0068 00000000 		.4byte	.LFB79
 6329 006c 22000000 		.4byte	.LFE79-.LFB79
 6330 0070 00000000 		.4byte	.LFB80
 6331 0074 22000000 		.4byte	.LFE80-.LFB80
 6332 0078 00000000 		.4byte	.LFB81
 6333 007c 1E000000 		.4byte	.LFE81-.LFB81
 6334 0080 00000000 		.4byte	.LFB82
 6335 0084 22000000 		.4byte	.LFE82-.LFB82
 6336 0088 00000000 		.4byte	.LFB83
 6337 008c 22000000 		.4byte	.LFE83-.LFB83
 6338 0090 00000000 		.4byte	.LFB84
 6339 0094 22000000 		.4byte	.LFE84-.LFB84
 6340 0098 00000000 		.4byte	.LFB85
 6341 009c 26000000 		.4byte	.LFE85-.LFB85
 6342 00a0 00000000 		.4byte	.LFB86
 6343 00a4 26000000 		.4byte	.LFE86-.LFB86
 6344 00a8 00000000 		.4byte	.LFB87
 6345 00ac 26000000 		.4byte	.LFE87-.LFB87
 6346 00b0 00000000 		.4byte	.LFB88
 6347 00b4 22000000 		.4byte	.LFE88-.LFB88
 6348 00b8 00000000 		.4byte	.LFB89
 6349 00bc 2A000000 		.4byte	.LFE89-.LFB89
 6350 00c0 00000000 		.4byte	.LFB90
 6351 00c4 34000000 		.4byte	.LFE90-.LFB90
 6352 00c8 00000000 		.4byte	.LFB91
 6353 00cc 32000000 		.4byte	.LFE91-.LFB91
 6354 00d0 00000000 		.4byte	.LFB92
 6355 00d4 2A000000 		.4byte	.LFE92-.LFB92
 6356 00d8 00000000 		.4byte	.LFB93
 6357 00dc 26000000 		.4byte	.LFE93-.LFB93
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 136


 6358 00e0 00000000 		.4byte	.LFB94
 6359 00e4 2A000000 		.4byte	.LFE94-.LFB94
 6360 00e8 00000000 		.4byte	.LFB95
 6361 00ec 32000000 		.4byte	.LFE95-.LFB95
 6362 00f0 00000000 		.4byte	.LFB96
 6363 00f4 2A000000 		.4byte	.LFE96-.LFB96
 6364 00f8 00000000 		.4byte	.LFB97
 6365 00fc 32000000 		.4byte	.LFE97-.LFB97
 6366 0100 00000000 		.4byte	.LFB98
 6367 0104 26000000 		.4byte	.LFE98-.LFB98
 6368 0108 00000000 		.4byte	.LFB99
 6369 010c 26000000 		.4byte	.LFE99-.LFB99
 6370 0110 00000000 		.4byte	.LFB100
 6371 0114 2E000000 		.4byte	.LFE100-.LFB100
 6372 0118 00000000 		.4byte	.LFB101
 6373 011c 2E000000 		.4byte	.LFE101-.LFB101
 6374 0120 00000000 		.4byte	.LFB102
 6375 0124 2A000000 		.4byte	.LFE102-.LFB102
 6376 0128 00000000 		.4byte	.LFB103
 6377 012c 2A000000 		.4byte	.LFE103-.LFB103
 6378 0130 00000000 		.4byte	.LFB104
 6379 0134 2A000000 		.4byte	.LFE104-.LFB104
 6380 0138 00000000 		.4byte	.LFB105
 6381 013c 2A000000 		.4byte	.LFE105-.LFB105
 6382 0140 00000000 		.4byte	.LFB106
 6383 0144 26000000 		.4byte	.LFE106-.LFB106
 6384 0148 00000000 		.4byte	.LFB107
 6385 014c 26000000 		.4byte	.LFE107-.LFB107
 6386 0150 00000000 		.4byte	.LFB108
 6387 0154 22000000 		.4byte	.LFE108-.LFB108
 6388 0158 00000000 		.4byte	.LFB109
 6389 015c 26000000 		.4byte	.LFE109-.LFB109
 6390 0160 00000000 		.4byte	.LFB110
 6391 0164 22000000 		.4byte	.LFE110-.LFB110
 6392 0168 00000000 		.4byte	.LFB111
 6393 016c 26000000 		.4byte	.LFE111-.LFB111
 6394 0170 00000000 		.4byte	.LFB112
 6395 0174 22000000 		.4byte	.LFE112-.LFB112
 6396 0178 00000000 		.4byte	.LFB113
 6397 017c 1E000000 		.4byte	.LFE113-.LFB113
 6398 0180 00000000 		.4byte	.LFB114
 6399 0184 22000000 		.4byte	.LFE114-.LFB114
 6400 0188 00000000 		.4byte	.LFB115
 6401 018c 22000000 		.4byte	.LFE115-.LFB115
 6402 0190 00000000 		.4byte	.LFB116
 6403 0194 36000000 		.4byte	.LFE116-.LFB116
 6404 0198 00000000 		.4byte	.LFB117
 6405 019c 2A000000 		.4byte	.LFE117-.LFB117
 6406 01a0 00000000 		.4byte	.LFB118
 6407 01a4 2A000000 		.4byte	.LFE118-.LFB118
 6408 01a8 00000000 		.4byte	.LFB119
 6409 01ac 32000000 		.4byte	.LFE119-.LFB119
 6410 01b0 00000000 		.4byte	.LFB120
 6411 01b4 22000000 		.4byte	.LFE120-.LFB120
 6412 01b8 00000000 		.4byte	.LFB121
 6413 01bc 32000000 		.4byte	.LFE121-.LFB121
 6414 01c0 00000000 		.4byte	.LFB122
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 137


 6415 01c4 26000000 		.4byte	.LFE122-.LFB122
 6416 01c8 00000000 		.4byte	.LFB123
 6417 01cc 32000000 		.4byte	.LFE123-.LFB123
 6418 01d0 00000000 		.4byte	.LFB124
 6419 01d4 22000000 		.4byte	.LFE124-.LFB124
 6420 01d8 00000000 		.4byte	.LFB125
 6421 01dc 26000000 		.4byte	.LFE125-.LFB125
 6422 01e0 00000000 		.4byte	.LFB126
 6423 01e4 26000000 		.4byte	.LFE126-.LFB126
 6424 01e8 00000000 		.4byte	.LFB127
 6425 01ec 26000000 		.4byte	.LFE127-.LFB127
 6426 01f0 00000000 		.4byte	.LFB128
 6427 01f4 26000000 		.4byte	.LFE128-.LFB128
 6428 01f8 00000000 		.4byte	.LFB129
 6429 01fc 26000000 		.4byte	.LFE129-.LFB129
 6430 0200 00000000 		.4byte	.LFB130
 6431 0204 2A000000 		.4byte	.LFE130-.LFB130
 6432 0208 00000000 		.4byte	.LFB131
 6433 020c 2E000000 		.4byte	.LFE131-.LFB131
 6434 0210 00000000 		.4byte	0
 6435 0214 00000000 		.4byte	0
 6436              		.section	.debug_ranges,"",%progbits
 6437              	.Ldebug_ranges0:
 6438 0000 00000000 		.4byte	.LFB68
 6439 0004 20000000 		.4byte	.LFE68
 6440 0008 00000000 		.4byte	.LFB69
 6441 000c 1A000000 		.4byte	.LFE69
 6442 0010 00000000 		.4byte	.LFB70
 6443 0014 2A000000 		.4byte	.LFE70
 6444 0018 00000000 		.4byte	.LFB71
 6445 001c 3C000000 		.4byte	.LFE71
 6446 0020 00000000 		.4byte	.LFB72
 6447 0024 26000000 		.4byte	.LFE72
 6448 0028 00000000 		.4byte	.LFB73
 6449 002c 22000000 		.4byte	.LFE73
 6450 0030 00000000 		.4byte	.LFB74
 6451 0034 26000000 		.4byte	.LFE74
 6452 0038 00000000 		.4byte	.LFB75
 6453 003c 22000000 		.4byte	.LFE75
 6454 0040 00000000 		.4byte	.LFB76
 6455 0044 26000000 		.4byte	.LFE76
 6456 0048 00000000 		.4byte	.LFB77
 6457 004c 26000000 		.4byte	.LFE77
 6458 0050 00000000 		.4byte	.LFB78
 6459 0054 28000000 		.4byte	.LFE78
 6460 0058 00000000 		.4byte	.LFB79
 6461 005c 22000000 		.4byte	.LFE79
 6462 0060 00000000 		.4byte	.LFB80
 6463 0064 22000000 		.4byte	.LFE80
 6464 0068 00000000 		.4byte	.LFB81
 6465 006c 1E000000 		.4byte	.LFE81
 6466 0070 00000000 		.4byte	.LFB82
 6467 0074 22000000 		.4byte	.LFE82
 6468 0078 00000000 		.4byte	.LFB83
 6469 007c 22000000 		.4byte	.LFE83
 6470 0080 00000000 		.4byte	.LFB84
 6471 0084 22000000 		.4byte	.LFE84
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 138


 6472 0088 00000000 		.4byte	.LFB85
 6473 008c 26000000 		.4byte	.LFE85
 6474 0090 00000000 		.4byte	.LFB86
 6475 0094 26000000 		.4byte	.LFE86
 6476 0098 00000000 		.4byte	.LFB87
 6477 009c 26000000 		.4byte	.LFE87
 6478 00a0 00000000 		.4byte	.LFB88
 6479 00a4 22000000 		.4byte	.LFE88
 6480 00a8 00000000 		.4byte	.LFB89
 6481 00ac 2A000000 		.4byte	.LFE89
 6482 00b0 00000000 		.4byte	.LFB90
 6483 00b4 34000000 		.4byte	.LFE90
 6484 00b8 00000000 		.4byte	.LFB91
 6485 00bc 32000000 		.4byte	.LFE91
 6486 00c0 00000000 		.4byte	.LFB92
 6487 00c4 2A000000 		.4byte	.LFE92
 6488 00c8 00000000 		.4byte	.LFB93
 6489 00cc 26000000 		.4byte	.LFE93
 6490 00d0 00000000 		.4byte	.LFB94
 6491 00d4 2A000000 		.4byte	.LFE94
 6492 00d8 00000000 		.4byte	.LFB95
 6493 00dc 32000000 		.4byte	.LFE95
 6494 00e0 00000000 		.4byte	.LFB96
 6495 00e4 2A000000 		.4byte	.LFE96
 6496 00e8 00000000 		.4byte	.LFB97
 6497 00ec 32000000 		.4byte	.LFE97
 6498 00f0 00000000 		.4byte	.LFB98
 6499 00f4 26000000 		.4byte	.LFE98
 6500 00f8 00000000 		.4byte	.LFB99
 6501 00fc 26000000 		.4byte	.LFE99
 6502 0100 00000000 		.4byte	.LFB100
 6503 0104 2E000000 		.4byte	.LFE100
 6504 0108 00000000 		.4byte	.LFB101
 6505 010c 2E000000 		.4byte	.LFE101
 6506 0110 00000000 		.4byte	.LFB102
 6507 0114 2A000000 		.4byte	.LFE102
 6508 0118 00000000 		.4byte	.LFB103
 6509 011c 2A000000 		.4byte	.LFE103
 6510 0120 00000000 		.4byte	.LFB104
 6511 0124 2A000000 		.4byte	.LFE104
 6512 0128 00000000 		.4byte	.LFB105
 6513 012c 2A000000 		.4byte	.LFE105
 6514 0130 00000000 		.4byte	.LFB106
 6515 0134 26000000 		.4byte	.LFE106
 6516 0138 00000000 		.4byte	.LFB107
 6517 013c 26000000 		.4byte	.LFE107
 6518 0140 00000000 		.4byte	.LFB108
 6519 0144 22000000 		.4byte	.LFE108
 6520 0148 00000000 		.4byte	.LFB109
 6521 014c 26000000 		.4byte	.LFE109
 6522 0150 00000000 		.4byte	.LFB110
 6523 0154 22000000 		.4byte	.LFE110
 6524 0158 00000000 		.4byte	.LFB111
 6525 015c 26000000 		.4byte	.LFE111
 6526 0160 00000000 		.4byte	.LFB112
 6527 0164 22000000 		.4byte	.LFE112
 6528 0168 00000000 		.4byte	.LFB113
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 139


 6529 016c 1E000000 		.4byte	.LFE113
 6530 0170 00000000 		.4byte	.LFB114
 6531 0174 22000000 		.4byte	.LFE114
 6532 0178 00000000 		.4byte	.LFB115
 6533 017c 22000000 		.4byte	.LFE115
 6534 0180 00000000 		.4byte	.LFB116
 6535 0184 36000000 		.4byte	.LFE116
 6536 0188 00000000 		.4byte	.LFB117
 6537 018c 2A000000 		.4byte	.LFE117
 6538 0190 00000000 		.4byte	.LFB118
 6539 0194 2A000000 		.4byte	.LFE118
 6540 0198 00000000 		.4byte	.LFB119
 6541 019c 32000000 		.4byte	.LFE119
 6542 01a0 00000000 		.4byte	.LFB120
 6543 01a4 22000000 		.4byte	.LFE120
 6544 01a8 00000000 		.4byte	.LFB121
 6545 01ac 32000000 		.4byte	.LFE121
 6546 01b0 00000000 		.4byte	.LFB122
 6547 01b4 26000000 		.4byte	.LFE122
 6548 01b8 00000000 		.4byte	.LFB123
 6549 01bc 32000000 		.4byte	.LFE123
 6550 01c0 00000000 		.4byte	.LFB124
 6551 01c4 22000000 		.4byte	.LFE124
 6552 01c8 00000000 		.4byte	.LFB125
 6553 01cc 26000000 		.4byte	.LFE125
 6554 01d0 00000000 		.4byte	.LFB126
 6555 01d4 26000000 		.4byte	.LFE126
 6556 01d8 00000000 		.4byte	.LFB127
 6557 01dc 26000000 		.4byte	.LFE127
 6558 01e0 00000000 		.4byte	.LFB128
 6559 01e4 26000000 		.4byte	.LFE128
 6560 01e8 00000000 		.4byte	.LFB129
 6561 01ec 26000000 		.4byte	.LFE129
 6562 01f0 00000000 		.4byte	.LFB130
 6563 01f4 2A000000 		.4byte	.LFE130
 6564 01f8 00000000 		.4byte	.LFB131
 6565 01fc 2E000000 		.4byte	.LFE131
 6566 0200 00000000 		.4byte	0
 6567 0204 00000000 		.4byte	0
 6568              		.section	.debug_line,"",%progbits
 6569              	.Ldebug_line0:
 6570 0000 B2070000 		.section	.debug_str,"MS",%progbits,1
 6570      02007F02 
 6570      00000201 
 6570      FB0E0D00 
 6570      01010101 
 6571              	.LASF117:
 6572 0000 70785469 		.ascii	"pxTicksToWait\000"
 6572      636B7354 
 6572      6F576169 
 6572      7400
 6573              	.LASF158:
 6574 000e 4D50555F 		.ascii	"MPU_xQueueGiveMutexRecursive\000"
 6574      78517565 
 6574      75654769 
 6574      76654D75 
 6574      74657852 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 140


 6575              	.LASF163:
 6576 002b 4D50555F 		.ascii	"MPU_pvPortMalloc\000"
 6576      7076506F 
 6576      72744D61 
 6576      6C6C6F63 
 6576      00
 6577              	.LASF198:
 6578 003c 78427566 		.ascii	"xBufferSizeBytes\000"
 6578      66657253 
 6578      697A6542 
 6578      79746573 
 6578      00
 6579              	.LASF195:
 6580 004d 4D50555F 		.ascii	"MPU_xStreamBufferSetTriggerLevel\000"
 6580      78537472 
 6580      65616D42 
 6580      75666665 
 6580      72536574 
 6581              	.LASF107:
 6582 006e 4D50555F 		.ascii	"MPU_uxTaskGetNumberOfTasks\000"
 6582      75785461 
 6582      736B4765 
 6582      744E756D 
 6582      6265724F 
 6583              	.LASF166:
 6584 0089 4D50555F 		.ascii	"MPU_vPortFree\000"
 6584      76506F72 
 6584      74467265 
 6584      6500
 6585              	.LASF86:
 6586 0097 4D50555F 		.ascii	"MPU_vTaskDelete\000"
 6586      76546173 
 6586      6B44656C 
 6586      65746500 
 6587              	.LASF61:
 6588 00a7 75785072 		.ascii	"uxPriority\000"
 6588      696F7269 
 6588      747900
 6589              	.LASF36:
 6590 00b2 65537573 		.ascii	"eSuspended\000"
 6590      70656E64 
 6590      656400
 6591              	.LASF151:
 6592 00bd 4D50555F 		.ascii	"MPU_xQueueCreateMutex\000"
 6592      78517565 
 6592      75654372 
 6592      65617465 
 6592      4D757465 
 6593              	.LASF66:
 6594 00d3 74736B54 		.ascii	"tskTaskControlBlock\000"
 6594      61736B43 
 6594      6F6E7472 
 6594      6F6C426C 
 6594      6F636B00 
 6595              	.LASF46:
 6596 00e7 44533138 		.ascii	"DS18x8_TSensor\000"
 6596      78385F54 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 141


 6596      53656E73 
 6596      6F7200
 6597              	.LASF190:
 6598 00f6 4D50555F 		.ascii	"MPU_xStreamBufferIsFull\000"
 6598      78537472 
 6598      65616D42 
 6598      75666665 
 6598      72497346 
 6599              	.LASF128:
 6600 010e 4D50555F 		.ascii	"MPU_ulTaskNotifyTake\000"
 6600      756C5461 
 6600      736B4E6F 
 6600      74696679 
 6600      54616B65 
 6601              	.LASF40:
 6602 0123 654E6F41 		.ascii	"eNoAction\000"
 6602      6374696F 
 6602      6E00
 6603              	.LASF0:
 6604 012d 756E7369 		.ascii	"unsigned int\000"
 6604      676E6564 
 6604      20696E74 
 6604      00
 6605              	.LASF28:
 6606 013a 53746163 		.ascii	"StackType_t\000"
 6606      6B547970 
 6606      655F7400 
 6607              	.LASF194:
 6608 0146 4D50555F 		.ascii	"MPU_xStreamBufferBytesAvailable\000"
 6608      78537472 
 6608      65616D42 
 6608      75666665 
 6608      72427974 
 6609              	.LASF47:
 6610 0166 7854494D 		.ascii	"xTIME_OUT\000"
 6610      455F4F55 
 6610      5400
 6611              	.LASF133:
 6612 0170 756C4269 		.ascii	"ulBitsToClear\000"
 6612      7473546F 
 6612      436C6561 
 6612      7200
 6613              	.LASF10:
 6614 017e 5F5F696E 		.ascii	"__int32_t\000"
 6614      7433325F 
 6614      7400
 6615              	.LASF62:
 6616 0188 70757853 		.ascii	"puxStackBuffer\000"
 6616      7461636B 
 6616      42756666 
 6616      657200
 6617              	.LASF88:
 6618 0197 4D50555F 		.ascii	"MPU_vTaskDelayUntil\000"
 6618      76546173 
 6618      6B44656C 
 6618      6179556E 
 6618      74696C00 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 142


 6619              	.LASF204:
 6620 01ab 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6620      43313120 
 6620      352E342E 
 6620      31203230 
 6620      31363036 
 6621 01de 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 6621      20726576 
 6621      6973696F 
 6621      6E203233 
 6621      37373135 
 6622 0211 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 6622      66756E63 
 6622      74696F6E 
 6622      2D736563 
 6622      74696F6E 
 6623              	.LASF63:
 6624 0239 78526567 		.ascii	"xRegions\000"
 6624      696F6E73 
 6624      00
 6625              	.LASF187:
 6626 0242 70765278 		.ascii	"pvRxData\000"
 6626      44617461 
 6626      00
 6627              	.LASF48:
 6628 024b 784F7665 		.ascii	"xOverflowCount\000"
 6628      72666C6F 
 6628      77436F75 
 6628      6E7400
 6629              	.LASF181:
 6630 025a 4D50555F 		.ascii	"MPU_xStreamBufferSend\000"
 6630      78537472 
 6630      65616D42 
 6630      75666665 
 6630      7253656E 
 6631              	.LASF96:
 6632 0270 4D50555F 		.ascii	"MPU_vTaskPrioritySet\000"
 6632      76546173 
 6632      6B507269 
 6632      6F726974 
 6632      79536574 
 6633              	.LASF114:
 6634 0285 4D50555F 		.ascii	"MPU_vTaskSetTimeOutState\000"
 6634      76546173 
 6634      6B536574 
 6634      54696D65 
 6634      4F757453 
 6635              	.LASF54:
 6636 029e 756C5061 		.ascii	"ulParameters\000"
 6636      72616D65 
 6636      74657273 
 6636      00
 6637              	.LASF99:
 6638 02ab 65526574 		.ascii	"eReturn\000"
 6638      75726E00 
 6639              	.LASF144:
 6640 02b3 78436F70 		.ascii	"xCopyPosition\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 143


 6640      79506F73 
 6640      6974696F 
 6640      6E00
 6641              	.LASF95:
 6642 02c1 75785265 		.ascii	"uxReturn\000"
 6642      7475726E 
 6642      00
 6643              	.LASF3:
 6644 02ca 7369676E 		.ascii	"signed char\000"
 6644      65642063 
 6644      68617200 
 6645              	.LASF103:
 6646 02d6 70785461 		.ascii	"pxTaskToResume\000"
 6646      736B546F 
 6646      52657375 
 6646      6D6500
 6647              	.LASF184:
 6648 02e5 78446174 		.ascii	"xDataLengthBytes\000"
 6648      614C656E 
 6648      67746842 
 6648      79746573 
 6648      00
 6649              	.LASF18:
 6650 02f6 75696E74 		.ascii	"uint32_t\000"
 6650      33325F74 
 6650      00
 6651              	.LASF185:
 6652 02ff 4D50555F 		.ascii	"MPU_xStreamBufferNextMessageLengthBytes\000"
 6652      78537472 
 6652      65616D42 
 6652      75666665 
 6652      724E6578 
 6653              	.LASF73:
 6654 0327 706F7274 		.ascii	"portRAISE_PRIVILEGE\000"
 6654      52414953 
 6654      455F5052 
 6654      4956494C 
 6654      45474500 
 6655              	.LASF91:
 6656 033b 4D50555F 		.ascii	"MPU_vTaskDelay\000"
 6656      76546173 
 6656      6B44656C 
 6656      617900
 6657              	.LASF142:
 6658 034a 78517565 		.ascii	"xQueue\000"
 6658      756500
 6659              	.LASF21:
 6660 0351 666C6F61 		.ascii	"float\000"
 6660      7400
 6661              	.LASF59:
 6662 0357 75735374 		.ascii	"usStackDepth\000"
 6662      61636B44 
 6662      65707468 
 6662      00
 6663              	.LASF67:
 6664 0364 51756575 		.ascii	"QueueDefinition\000"
 6664      65446566 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 144


 6664      696E6974 
 6664      696F6E00 
 6665              	.LASF152:
 6666 0374 4D50555F 		.ascii	"MPU_xQueueCreateCountingSemaphore\000"
 6666      78517565 
 6666      75654372 
 6666      65617465 
 6666      436F756E 
 6667              	.LASF129:
 6668 0396 78436C65 		.ascii	"xClearCountOnExit\000"
 6668      6172436F 
 6668      756E744F 
 6668      6E457869 
 6668      7400
 6669              	.LASF160:
 6670 03a8 4D50555F 		.ascii	"MPU_vQueueUnregisterQueue\000"
 6670      76517565 
 6670      7565556E 
 6670      72656769 
 6670      73746572 
 6671              	.LASF43:
 6672 03c2 65536574 		.ascii	"eSetValueWithOverwrite\000"
 6672      56616C75 
 6672      65576974 
 6672      684F7665 
 6672      72777269 
 6673              	.LASF14:
 6674 03d9 6C6F6E67 		.ascii	"long long unsigned int\000"
 6674      206C6F6E 
 6674      6720756E 
 6674      7369676E 
 6674      65642069 
 6675              	.LASF108:
 6676 03f0 4D50555F 		.ascii	"MPU_pcTaskGetName\000"
 6676      70635461 
 6676      736B4765 
 6676      744E616D 
 6676      6500
 6677              	.LASF124:
 6678 0402 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 6678      7473546F 
 6678      436C6561 
 6678      724F6E45 
 6678      6E747279 
 6679              	.LASF189:
 6680 0417 4D50555F 		.ascii	"MPU_vStreamBufferDelete\000"
 6680      76537472 
 6680      65616D42 
 6680      75666665 
 6680      7244656C 
 6681              	.LASF148:
 6682 042f 70764275 		.ascii	"pvBuffer\000"
 6682      66666572 
 6682      00
 6683              	.LASF98:
 6684 0438 4D50555F 		.ascii	"MPU_eTaskGetState\000"
 6684      65546173 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 145


 6684      6B476574 
 6684      53746174 
 6684      6500
 6685              	.LASF8:
 6686 044a 5F5F7569 		.ascii	"__uint16_t\000"
 6686      6E743136 
 6686      5F7400
 6687              	.LASF199:
 6688 0455 78547269 		.ascii	"xTriggerLevelBytes\000"
 6688      67676572 
 6688      4C657665 
 6688      6C427974 
 6688      657300
 6689              	.LASF165:
 6690 0468 70765265 		.ascii	"pvReturn\000"
 6690      7475726E 
 6690      00
 6691              	.LASF72:
 6692 0471 53747265 		.ascii	"StreamBufferDef_t\000"
 6692      616D4275 
 6692      66666572 
 6692      4465665F 
 6692      7400
 6693              	.LASF45:
 6694 0483 654E6F74 		.ascii	"eNotifyAction\000"
 6694      69667941 
 6694      6374696F 
 6694      6E00
 6695              	.LASF183:
 6696 0491 70765478 		.ascii	"pvTxData\000"
 6696      44617461 
 6696      00
 6697              	.LASF167:
 6698 049a 4D50555F 		.ascii	"MPU_vPortInitialiseBlocks\000"
 6698      76506F72 
 6698      74496E69 
 6698      7469616C 
 6698      69736542 
 6699              	.LASF4:
 6700 04b4 73697A65 		.ascii	"size_t\000"
 6700      5F7400
 6701              	.LASF150:
 6702 04bb 4D50555F 		.ascii	"MPU_xQueueSemaphoreTake\000"
 6702      78517565 
 6702      75655365 
 6702      6D617068 
 6702      6F726554 
 6703              	.LASF42:
 6704 04d3 65496E63 		.ascii	"eIncrement\000"
 6704      72656D65 
 6704      6E7400
 6705              	.LASF174:
 6706 04de 78576169 		.ascii	"xWaitForAllBits\000"
 6706      74466F72 
 6706      416C6C42 
 6706      69747300 
 6707              	.LASF201:
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 146


 6708 04ee 44533138 		.ascii	"DS18x8_Sensor\000"
 6708      78385F53 
 6708      656E736F 
 6708      7200
 6709              	.LASF81:
 6710 04fc 78546173 		.ascii	"xTaskCreateRestricted\000"
 6710      6B437265 
 6710      61746552 
 6710      65737472 
 6710      69637465 
 6711              	.LASF176:
 6712 0512 75784269 		.ascii	"uxBitsToClear\000"
 6712      7473546F 
 6712      436C6561 
 6712      7200
 6713              	.LASF168:
 6714 0520 4D50555F 		.ascii	"MPU_xPortGetFreeHeapSize\000"
 6714      78506F72 
 6714      74476574 
 6714      46726565 
 6714      48656170 
 6715              	.LASF58:
 6716 0539 70634E61 		.ascii	"pcName\000"
 6716      6D6500
 6717              	.LASF197:
 6718 0540 4D50555F 		.ascii	"MPU_xStreamBufferGenericCreate\000"
 6718      78537472 
 6718      65616D42 
 6718      75666665 
 6718      7247656E 
 6719              	.LASF76:
 6720 055f 4D50555F 		.ascii	"MPU_xTaskCreateRestricted\000"
 6720      78546173 
 6720      6B437265 
 6720      61746552 
 6720      65737472 
 6721              	.LASF136:
 6722 0579 75784974 		.ascii	"uxItemSize\000"
 6722      656D5369 
 6722      7A6500
 6723              	.LASF154:
 6724 0584 7578496E 		.ascii	"uxInitialCount\000"
 6724      69746961 
 6724      6C436F75 
 6724      6E7400
 6725              	.LASF94:
 6726 0593 70785461 		.ascii	"pxTask\000"
 6726      736B00
 6727              	.LASF171:
 6728 059a 78457665 		.ascii	"xEventGroup\000"
 6728      6E744772 
 6728      6F757000 
 6729              	.LASF23:
 6730 05a6 63686172 		.ascii	"char\000"
 6730      00
 6731              	.LASF83:
 6732 05ab 76506F72 		.ascii	"vPortResetPrivilege\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 147


 6732      74526573 
 6732      65745072 
 6732      6976696C 
 6732      65676500 
 6733              	.LASF44:
 6734 05bf 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 6734      56616C75 
 6734      65576974 
 6734      686F7574 
 6734      4F766572 
 6735              	.LASF30:
 6736 05d9 55426173 		.ascii	"UBaseType_t\000"
 6736      65547970 
 6736      655F7400 
 6737              	.LASF20:
 6738 05e5 75696E74 		.ascii	"uint16\000"
 6738      313600
 6739              	.LASF65:
 6740 05ec 51756575 		.ascii	"QueueHandle_t\000"
 6740      6548616E 
 6740      646C655F 
 6740      7400
 6741              	.LASF69:
 6742 05fa 4576656E 		.ascii	"EventGroupDef_t\000"
 6742      7447726F 
 6742      75704465 
 6742      665F7400 
 6743              	.LASF15:
 6744 060a 75696E74 		.ascii	"uint8_t\000"
 6744      385F7400 
 6745              	.LASF34:
 6746 0612 65526561 		.ascii	"eReady\000"
 6746      647900
 6747              	.LASF26:
 6748 0619 70726573 		.ascii	"present\000"
 6748      656E7400 
 6749              	.LASF164:
 6750 0621 7853697A 		.ascii	"xSize\000"
 6750      6500
 6751              	.LASF85:
 6752 0627 78546173 		.ascii	"xTask\000"
 6752      6B00
 6753              	.LASF77:
 6754 062d 7852756E 		.ascii	"xRunningPrivileged\000"
 6754      6E696E67 
 6754      50726976 
 6754      696C6567 
 6754      656400
 6755              	.LASF125:
 6756 0640 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 6756      7473546F 
 6756      436C6561 
 6756      724F6E45 
 6756      78697400 
 6757              	.LASF102:
 6758 0654 4D50555F 		.ascii	"MPU_vTaskResume\000"
 6758      76546173 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 148


 6758      6B526573 
 6758      756D6500 
 6759              	.LASF55:
 6760 0664 4D656D6F 		.ascii	"MemoryRegion_t\000"
 6760      72795265 
 6760      67696F6E 
 6760      5F7400
 6761              	.LASF1:
 6762 0673 6C6F6E67 		.ascii	"long long int\000"
 6762      206C6F6E 
 6762      6720696E 
 6762      7400
 6763              	.LASF37:
 6764 0681 6544656C 		.ascii	"eDeleted\000"
 6764      65746564 
 6764      00
 6765              	.LASF71:
 6766 068a 53747265 		.ascii	"StreamBufferHandle_t\000"
 6766      616D4275 
 6766      66666572 
 6766      48616E64 
 6766      6C655F74 
 6767              	.LASF53:
 6768 069f 756C4C65 		.ascii	"ulLengthInBytes\000"
 6768      6E677468 
 6768      496E4279 
 6768      74657300 
 6769              	.LASF192:
 6770 06af 4D50555F 		.ascii	"MPU_xStreamBufferReset\000"
 6770      78537472 
 6770      65616D42 
 6770      75666665 
 6770      72526573 
 6771              	.LASF29:
 6772 06c6 42617365 		.ascii	"BaseType_t\000"
 6772      54797065 
 6772      5F7400
 6773              	.LASF138:
 6774 06d1 4D50555F 		.ascii	"MPU_xQueueGenericReset\000"
 6774      78517565 
 6774      75654765 
 6774      6E657269 
 6774      63526573 
 6775              	.LASF156:
 6776 06e8 784D7574 		.ascii	"xMutex\000"
 6776      657800
 6777              	.LASF49:
 6778 06ef 7854696D 		.ascii	"xTimeOnEntering\000"
 6778      654F6E45 
 6778      6E746572 
 6778      696E6700 
 6779              	.LASF97:
 6780 06ff 75784E65 		.ascii	"uxNewPriority\000"
 6780      77507269 
 6780      6F726974 
 6780      7900
 6781              	.LASF27:
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 149


 6782 070d 5461736B 		.ascii	"TaskFunction_t\000"
 6782      46756E63 
 6782      74696F6E 
 6782      5F7400
 6783              	.LASF104:
 6784 071c 4D50555F 		.ascii	"MPU_vTaskSuspendAll\000"
 6784      76546173 
 6784      6B537573 
 6784      70656E64 
 6784      416C6C00 
 6785              	.LASF122:
 6786 0730 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 6786      72657669 
 6786      6F75734E 
 6786      6F746966 
 6786      69636174 
 6787              	.LASF115:
 6788 074d 70785469 		.ascii	"pxTimeOut\000"
 6788      6D654F75 
 6788      7400
 6789              	.LASF140:
 6790 0757 784E6577 		.ascii	"xNewQueue\000"
 6790      51756575 
 6790      6500
 6791              	.LASF50:
 6792 0761 54696D65 		.ascii	"TimeOut_t\000"
 6792      4F75745F 
 6792      7400
 6793              	.LASF32:
 6794 076b 5461736B 		.ascii	"TaskHandle_t\000"
 6794      48616E64 
 6794      6C655F74 
 6794      00
 6795              	.LASF121:
 6796 0778 65416374 		.ascii	"eAction\000"
 6796      696F6E00 
 6797              	.LASF74:
 6798 0780 706F7274 		.ascii	"portRESET_PRIVILEGE\000"
 6798      52455345 
 6798      545F5052 
 6798      4956494C 
 6798      45474500 
 6799              	.LASF207:
 6800 0794 706F7274 		.ascii	"portIS_PRIVILEGED\000"
 6800      49535F50 
 6800      52495649 
 6800      4C454745 
 6800      4400
 6801              	.LASF137:
 6802 07a6 75635175 		.ascii	"ucQueueType\000"
 6802      65756554 
 6802      79706500 
 6803              	.LASF39:
 6804 07b2 65546173 		.ascii	"eTaskState\000"
 6804      6B537461 
 6804      746500
 6805              	.LASF109:
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 150


 6806 07bd 78546173 		.ascii	"xTaskToQuery\000"
 6806      6B546F51 
 6806      75657279 
 6806      00
 6807              	.LASF100:
 6808 07ca 4D50555F 		.ascii	"MPU_vTaskSuspend\000"
 6808      76546173 
 6808      6B537573 
 6808      70656E64 
 6808      00
 6809              	.LASF145:
 6810 07db 4D50555F 		.ascii	"MPU_uxQueueMessagesWaiting\000"
 6810      75785175 
 6810      6575654D 
 6810      65737361 
 6810      67657357 
 6811              	.LASF31:
 6812 07f6 5469636B 		.ascii	"TickType_t\000"
 6812      54797065 
 6812      5F7400
 6813              	.LASF119:
 6814 0801 78546173 		.ascii	"xTaskToNotify\000"
 6814      6B546F4E 
 6814      6F746966 
 6814      7900
 6815              	.LASF78:
 6816 080f 70785461 		.ascii	"pxTaskDefinition\000"
 6816      736B4465 
 6816      66696E69 
 6816      74696F6E 
 6816      00
 6817              	.LASF25:
 6818 0820 54656D70 		.ascii	"Temperature\000"
 6818      65726174 
 6818      75726500 
 6819              	.LASF135:
 6820 082c 75785175 		.ascii	"uxQueueLength\000"
 6820      6575654C 
 6820      656E6774 
 6820      6800
 6821              	.LASF155:
 6822 083a 4D50555F 		.ascii	"MPU_xQueueTakeMutexRecursive\000"
 6822      78517565 
 6822      75655461 
 6822      6B654D75 
 6822      74657852 
 6823              	.LASF111:
 6824 0857 4D50555F 		.ascii	"MPU_xTaskCatchUpTicks\000"
 6824      78546173 
 6824      6B436174 
 6824      63685570 
 6824      5469636B 
 6825              	.LASF175:
 6826 086d 4D50555F 		.ascii	"MPU_xEventGroupClearBits\000"
 6826      78457665 
 6826      6E744772 
 6826      6F757043 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 151


 6826      6C656172 
 6827              	.LASF41:
 6828 0886 65536574 		.ascii	"eSetBits\000"
 6828      42697473 
 6828      00
 6829              	.LASF2:
 6830 088f 6C6F6E67 		.ascii	"long double\000"
 6830      20646F75 
 6830      626C6500 
 6831              	.LASF51:
 6832 089b 784D454D 		.ascii	"xMEMORY_REGION\000"
 6832      4F52595F 
 6832      52454749 
 6832      4F4E00
 6833              	.LASF16:
 6834 08aa 75696E74 		.ascii	"uint16_t\000"
 6834      31365F74 
 6834      00
 6835              	.LASF206:
 6836 08b3 433A5C55 		.ascii	"C:\\Users\\krist\\Documents\\GitHub\\P4_Vertical_fa"
 6836      73657273 
 6836      5C6B7269 
 6836      73745C44 
 6836      6F63756D 
 6837 08e1 726D5C52 		.ascii	"rm\\RTOS_TEMPLATE-master\\PlanteModul.cydsn\000"
 6837      544F535F 
 6837      54454D50 
 6837      4C415445 
 6837      2D6D6173 
 6838              	.LASF116:
 6839 090b 4D50555F 		.ascii	"MPU_xTaskCheckForTimeOut\000"
 6839      78546173 
 6839      6B436865 
 6839      636B466F 
 6839      7254696D 
 6840              	.LASF105:
 6841 0924 4D50555F 		.ascii	"MPU_xTaskResumeAll\000"
 6841      78546173 
 6841      6B526573 
 6841      756D6541 
 6841      6C6C00
 6842              	.LASF110:
 6843 0937 70635265 		.ascii	"pcReturn\000"
 6843      7475726E 
 6843      00
 6844              	.LASF179:
 6845 0940 4D50555F 		.ascii	"MPU_xEventGroupSync\000"
 6845      78457665 
 6845      6E744772 
 6845      6F757053 
 6845      796E6300 
 6846              	.LASF7:
 6847 0954 73686F72 		.ascii	"short int\000"
 6847      7420696E 
 6847      7400
 6848              	.LASF87:
 6849 095e 70785461 		.ascii	"pxTaskToDelete\000"
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 152


 6849      736B546F 
 6849      44656C65 
 6849      746500
 6850              	.LASF123:
 6851 096d 4D50555F 		.ascii	"MPU_xTaskNotifyWait\000"
 6851      78546173 
 6851      6B4E6F74 
 6851      69667957 
 6851      61697400 
 6852              	.LASF60:
 6853 0981 70765061 		.ascii	"pvParameters\000"
 6853      72616D65 
 6853      74657273 
 6853      00
 6854              	.LASF75:
 6855 098e 78506F72 		.ascii	"xPortRaisePrivilege\000"
 6855      74526169 
 6855      73655072 
 6855      6976696C 
 6855      65676500 
 6856              	.LASF11:
 6857 09a2 6C6F6E67 		.ascii	"long int\000"
 6857      20696E74 
 6857      00
 6858              	.LASF203:
 6859 09ab 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6859      52784275 
 6859      66666572 
 6859      00
 6860              	.LASF169:
 6861 09b8 4D50555F 		.ascii	"MPU_xEventGroupCreate\000"
 6861      78457665 
 6861      6E744772 
 6861      6F757043 
 6861      72656174 
 6862              	.LASF157:
 6863 09ce 78426C6F 		.ascii	"xBlockTime\000"
 6863      636B5469 
 6863      6D6500
 6864              	.LASF143:
 6865 09d9 70764974 		.ascii	"pvItemToQueue\000"
 6865      656D546F 
 6865      51756575 
 6865      6500
 6866              	.LASF161:
 6867 09e7 4D50555F 		.ascii	"MPU_pcQueueGetName\000"
 6867      70635175 
 6867      65756547 
 6867      65744E61 
 6867      6D6500
 6868              	.LASF120:
 6869 09fa 756C5661 		.ascii	"ulValue\000"
 6869      6C756500 
 6870              	.LASF101:
 6871 0a02 70785461 		.ascii	"pxTaskToSuspend\000"
 6871      736B546F 
 6871      53757370 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 153


 6871      656E6400 
 6872              	.LASF89:
 6873 0a12 70785072 		.ascii	"pxPreviousWakeTime\000"
 6873      6576696F 
 6873      75735761 
 6873      6B655469 
 6873      6D6500
 6874              	.LASF5:
 6875 0a25 5F5F7569 		.ascii	"__uint8_t\000"
 6875      6E74385F 
 6875      7400
 6876              	.LASF139:
 6877 0a2f 70785175 		.ascii	"pxQueue\000"
 6877      65756500 
 6878              	.LASF70:
 6879 0a37 4576656E 		.ascii	"EventBits_t\000"
 6879      74426974 
 6879      735F7400 
 6880              	.LASF126:
 6881 0a43 70756C4E 		.ascii	"pulNotificationValue\000"
 6881      6F746966 
 6881      69636174 
 6881      696F6E56 
 6881      616C7565 
 6882              	.LASF132:
 6883 0a58 4D50555F 		.ascii	"MPU_ulTaskNotifyValueClear\000"
 6883      756C5461 
 6883      736B4E6F 
 6883      74696679 
 6883      56616C75 
 6884              	.LASF80:
 6885 0a73 78526574 		.ascii	"xReturn\000"
 6885      75726E00 
 6886              	.LASF172:
 6887 0a7b 75784269 		.ascii	"uxBitsToWaitFor\000"
 6887      7473546F 
 6887      57616974 
 6887      466F7200 
 6888              	.LASF134:
 6889 0a8b 4D50555F 		.ascii	"MPU_xQueueGenericCreate\000"
 6889      78517565 
 6889      75654765 
 6889      6E657269 
 6889      63437265 
 6890              	.LASF24:
 6891 0aa3 73697A65 		.ascii	"sizetype\000"
 6891      74797065 
 6891      00
 6892              	.LASF13:
 6893 0aac 6C6F6E67 		.ascii	"long unsigned int\000"
 6893      20756E73 
 6893      69676E65 
 6893      6420696E 
 6893      7400
 6894              	.LASF64:
 6895 0abe 5461736B 		.ascii	"TaskParameters_t\000"
 6895      50617261 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 154


 6895      6D657465 
 6895      72735F74 
 6895      00
 6896              	.LASF17:
 6897 0acf 696E7433 		.ascii	"int32_t\000"
 6897      325F7400 
 6898              	.LASF93:
 6899 0ad7 4D50555F 		.ascii	"MPU_uxTaskPriorityGet\000"
 6899      75785461 
 6899      736B5072 
 6899      696F7269 
 6899      74794765 
 6900              	.LASF33:
 6901 0aed 6552756E 		.ascii	"eRunning\000"
 6901      6E696E67 
 6901      00
 6902              	.LASF188:
 6903 0af6 78427566 		.ascii	"xBufferLengthBytes\000"
 6903      6665724C 
 6903      656E6774 
 6903      68427974 
 6903      657300
 6904              	.LASF52:
 6905 0b09 70764261 		.ascii	"pvBaseAddress\000"
 6905      73654164 
 6905      64726573 
 6905      7300
 6906              	.LASF92:
 6907 0b17 78546963 		.ascii	"xTicksToDelay\000"
 6907      6B73546F 
 6907      44656C61 
 6907      7900
 6908              	.LASF162:
 6909 0b25 4D50555F 		.ascii	"MPU_vQueueDelete\000"
 6909      76517565 
 6909      75654465 
 6909      6C657465 
 6909      00
 6910              	.LASF6:
 6911 0b36 756E7369 		.ascii	"unsigned char\000"
 6911      676E6564 
 6911      20636861 
 6911      7200
 6912              	.LASF118:
 6913 0b44 4D50555F 		.ascii	"MPU_xTaskGenericNotify\000"
 6913      78546173 
 6913      6B47656E 
 6913      65726963 
 6913      4E6F7469 
 6914              	.LASF12:
 6915 0b5b 5F5F7569 		.ascii	"__uint32_t\000"
 6915      6E743332 
 6915      5F7400
 6916              	.LASF193:
 6917 0b66 4D50555F 		.ascii	"MPU_xStreamBufferSpacesAvailable\000"
 6917      78537472 
 6917      65616D42 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 155


 6917      75666665 
 6917      72537061 
 6918              	.LASF170:
 6919 0b87 4D50555F 		.ascii	"MPU_xEventGroupWaitBits\000"
 6919      78457665 
 6919      6E744772 
 6919      6F757057 
 6919      61697442 
 6920              	.LASF153:
 6921 0b9f 7578436F 		.ascii	"uxCountValue\000"
 6921      756E7456 
 6921      616C7565 
 6921      00
 6922              	.LASF38:
 6923 0bac 65496E76 		.ascii	"eInvalid\000"
 6923      616C6964 
 6923      00
 6924              	.LASF178:
 6925 0bb5 75784269 		.ascii	"uxBitsToSet\000"
 6925      7473546F 
 6925      53657400 
 6926              	.LASF84:
 6927 0bc1 4D50555F 		.ascii	"MPU_vTaskAllocateMPURegions\000"
 6927      76546173 
 6927      6B416C6C 
 6927      6F636174 
 6927      654D5055 
 6928              	.LASF191:
 6929 0bdd 4D50555F 		.ascii	"MPU_xStreamBufferIsEmpty\000"
 6929      78537472 
 6929      65616D42 
 6929      75666665 
 6929      72497345 
 6930              	.LASF202:
 6931 0bf6 44533138 		.ascii	"DS18x8_DataReady\000"
 6931      78385F44 
 6931      61746152 
 6931      65616479 
 6931      00
 6932              	.LASF127:
 6933 0c07 78546963 		.ascii	"xTicksToWait\000"
 6933      6B73546F 
 6933      57616974 
 6933      00
 6934              	.LASF159:
 6935 0c14 4D50555F 		.ascii	"MPU_vQueueAddToRegistry\000"
 6935      76517565 
 6935      75654164 
 6935      64546F52 
 6935      65676973 
 6936              	.LASF35:
 6937 0c2c 65426C6F 		.ascii	"eBlocked\000"
 6937      636B6564 
 6937      00
 6938              	.LASF182:
 6939 0c35 78537472 		.ascii	"xStreamBuffer\000"
 6939      65616D42 
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 156


 6939      75666665 
 6939      7200
 6940              	.LASF196:
 6941 0c43 78547269 		.ascii	"xTriggerLevel\000"
 6941      67676572 
 6941      4C657665 
 6941      6C00
 6942              	.LASF112:
 6943 0c51 78546963 		.ascii	"xTicksToCatchUp\000"
 6943      6B73546F 
 6943      43617463 
 6943      68557000 
 6944              	.LASF56:
 6945 0c61 78544153 		.ascii	"xTASK_PARAMETERS\000"
 6945      4B5F5041 
 6945      52414D45 
 6945      54455253 
 6945      00
 6946              	.LASF149:
 6947 0c72 4D50555F 		.ascii	"MPU_xQueuePeek\000"
 6947      78517565 
 6947      75655065 
 6947      656B00
 6948              	.LASF57:
 6949 0c81 70765461 		.ascii	"pvTaskCode\000"
 6949      736B436F 
 6949      646500
 6950              	.LASF90:
 6951 0c8c 7854696D 		.ascii	"xTimeIncrement\000"
 6951      65496E63 
 6951      72656D65 
 6951      6E7400
 6952              	.LASF205:
 6953 0c9b 536F7572 		.ascii	"Source\\portable\\Common\\mpu_wrappers.c\000"
 6953      63655C70 
 6953      6F727461 
 6953      626C655C 
 6953      436F6D6D 
 6954              	.LASF9:
 6955 0cc1 73686F72 		.ascii	"short unsigned int\000"
 6955      7420756E 
 6955      7369676E 
 6955      65642069 
 6955      6E7400
 6956              	.LASF113:
 6957 0cd4 4D50555F 		.ascii	"MPU_uxTaskGetStackHighWaterMark\000"
 6957      75785461 
 6957      736B4765 
 6957      74537461 
 6957      636B4869 
 6958              	.LASF200:
 6959 0cf4 7849734D 		.ascii	"xIsMessageBuffer\000"
 6959      65737361 
 6959      67654275 
 6959      66666572 
 6959      00
 6960              	.LASF19:
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 157


 6961 0d05 75696E74 		.ascii	"uint8\000"
 6961      3800
 6962              	.LASF22:
 6963 0d0b 646F7562 		.ascii	"double\000"
 6963      6C6500
 6964              	.LASF141:
 6965 0d12 4D50555F 		.ascii	"MPU_xQueueGenericSend\000"
 6965      78517565 
 6965      75654765 
 6965      6E657269 
 6965      6353656E 
 6966              	.LASF173:
 6967 0d28 78436C65 		.ascii	"xClearOnExit\000"
 6967      61724F6E 
 6967      45786974 
 6967      00
 6968              	.LASF131:
 6969 0d35 4D50555F 		.ascii	"MPU_xTaskNotifyStateClear\000"
 6969      78546173 
 6969      6B4E6F74 
 6969      69667953 
 6969      74617465 
 6970              	.LASF82:
 6971 0d4f 4D50555F 		.ascii	"MPU_xTaskCreate\000"
 6971      78546173 
 6971      6B437265 
 6971      61746500 
 6972              	.LASF147:
 6973 0d5f 4D50555F 		.ascii	"MPU_xQueueReceive\000"
 6973      78517565 
 6973      75655265 
 6973      63656976 
 6973      6500
 6974              	.LASF180:
 6975 0d71 4D50555F 		.ascii	"MPU_vEventGroupDelete\000"
 6975      76457665 
 6975      6E744772 
 6975      6F757044 
 6975      656C6574 
 6976              	.LASF106:
 6977 0d87 4D50555F 		.ascii	"MPU_xTaskGetTickCount\000"
 6977      78546173 
 6977      6B476574 
 6977      5469636B 
 6977      436F756E 
 6978              	.LASF79:
 6979 0d9d 70784372 		.ascii	"pxCreatedTask\000"
 6979      65617465 
 6979      64546173 
 6979      6B00
 6980              	.LASF177:
 6981 0dab 4D50555F 		.ascii	"MPU_xEventGroupSetBits\000"
 6981      78457665 
 6981      6E744772 
 6981      6F757053 
 6981      65744269 
 6982              	.LASF68:
ARM GAS  C:\Users\krist\AppData\Local\Temp\cc5qPhvD.s 			page 158


 6983 0dc2 4576656E 		.ascii	"EventGroupHandle_t\000"
 6983      7447726F 
 6983      75704861 
 6983      6E646C65 
 6983      5F7400
 6984              	.LASF130:
 6985 0dd5 756C5265 		.ascii	"ulReturn\000"
 6985      7475726E 
 6985      00
 6986              	.LASF186:
 6987 0dde 4D50555F 		.ascii	"MPU_xStreamBufferReceive\000"
 6987      78537472 
 6987      65616D42 
 6987      75666665 
 6987      72526563 
 6988              	.LASF146:
 6989 0df7 4D50555F 		.ascii	"MPU_uxQueueSpacesAvailable\000"
 6989      75785175 
 6989      65756553 
 6989      70616365 
 6989      73417661 
 6990              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
