ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RTC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RTC_EverySecondHandler,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	RTC_EverySecondHandler, %function
  24              	RTC_EverySecondHandler:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\RTC_INT.c"
   1:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RTC_INT.c **** * File Name: RTC_INT.c
   3:Generated_Source\PSoC5/RTC_INT.c **** * Version 2.0
   4:Generated_Source\PSoC5/RTC_INT.c **** *
   5:Generated_Source\PSoC5/RTC_INT.c **** * Description:
   6:Generated_Source\PSoC5/RTC_INT.c **** *  This file contains the Interrupt Service Routine (ISR) for the RTC component.
   7:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt routine has entry pointes to overflow on time or date.
   8:Generated_Source\PSoC5/RTC_INT.c **** *
   9:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  10:Generated_Source\PSoC5/RTC_INT.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/RTC_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/RTC_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/RTC_INT.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/RTC_INT.c **** 
  16:Generated_Source\PSoC5/RTC_INT.c **** #include "RTC.h"
  17:Generated_Source\PSoC5/RTC_INT.c **** #include "CyLib.h"
  18:Generated_Source\PSoC5/RTC_INT.c **** 
  19:Generated_Source\PSoC5/RTC_INT.c **** 
  20:Generated_Source\PSoC5/RTC_INT.c **** /* Function Prototypes */
  21:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void);
  22:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void);
  23:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void);
  24:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void);
  25:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void);
  26:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void);
  27:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void);
  28:Generated_Source\PSoC5/RTC_INT.c **** 
  29:Generated_Source\PSoC5/RTC_INT.c **** 
  30:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  31:Generated_Source\PSoC5/RTC_INT.c **** *  Place your includes, defines and code here
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 2


  32:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  33:Generated_Source\PSoC5/RTC_INT.c **** /* `#START RTC_ISR_DEFINITION` */
  34:Generated_Source\PSoC5/RTC_INT.c **** 
  35:Generated_Source\PSoC5/RTC_INT.c **** /* `#END` */
  36:Generated_Source\PSoC5/RTC_INT.c **** 
  37:Generated_Source\PSoC5/RTC_INT.c **** 
  38:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  39:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EverySecondHandler
  40:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  41:Generated_Source\PSoC5/RTC_INT.c **** *
  42:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  43:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every second.
  44:Generated_Source\PSoC5/RTC_INT.c **** *
  45:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  46:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  47:Generated_Source\PSoC5/RTC_INT.c **** *
  48:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  49:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  50:Generated_Source\PSoC5/RTC_INT.c **** *
  51:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EverySecondHandler(void)
  53:Generated_Source\PSoC5/RTC_INT.c **** {
  27              		.loc 1 53 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  54:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every second handler code here. */
  55:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_SECOND_HANDLER_CODE` */
  56:Generated_Source\PSoC5/RTC_INT.c **** 
  57:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  58:Generated_Source\PSoC5/RTC_INT.c ****     
  59:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_SECOND_HANDLER_CALLBACK
  60:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler_Callback();
  61:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_SECOND_HANDLER_CALLBACK */
  62:Generated_Source\PSoC5/RTC_INT.c **** }
  37              		.loc 1 62 0
  38 0004 00BF     		nop
  39 0006 BD46     		mov	sp, r7
  40              		.cfi_def_cfa_register 13
  41              		@ sp needed
  42 0008 80BC     		pop	{r7}
  43              		.cfi_restore 7
  44              		.cfi_def_cfa_offset 0
  45 000a 7047     		bx	lr
  46              		.cfi_endproc
  47              	.LFE0:
  48              		.size	RTC_EverySecondHandler, .-RTC_EverySecondHandler
  49              		.section	.text.RTC_EveryMinuteHandler,"ax",%progbits
  50              		.align	2
  51              		.thumb
  52              		.thumb_func
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 3


  53              		.type	RTC_EveryMinuteHandler, %function
  54              	RTC_EveryMinuteHandler:
  55              	.LFB1:
  63:Generated_Source\PSoC5/RTC_INT.c **** 
  64:Generated_Source\PSoC5/RTC_INT.c **** 
  65:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  66:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMinuteHandler
  67:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  68:Generated_Source\PSoC5/RTC_INT.c **** *
  69:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  70:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every minute.
  71:Generated_Source\PSoC5/RTC_INT.c **** *
  72:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
  73:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  74:Generated_Source\PSoC5/RTC_INT.c **** *
  75:Generated_Source\PSoC5/RTC_INT.c **** * Return:
  76:Generated_Source\PSoC5/RTC_INT.c **** *  None.
  77:Generated_Source\PSoC5/RTC_INT.c **** *
  78:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
  79:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMinuteHandler(void)
  80:Generated_Source\PSoC5/RTC_INT.c **** {
  56              		.loc 1 80 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61 0000 80B4     		push	{r7}
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 7, -4
  64 0002 00AF     		add	r7, sp, #0
  65              		.cfi_def_cfa_register 7
  81:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every minute handler code here. */
  82:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MINUTE_HANDLER_CODE` */
  83:Generated_Source\PSoC5/RTC_INT.c **** 
  84:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
  85:Generated_Source\PSoC5/RTC_INT.c **** 
  86:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MINUTE_HANDLER_CALLBACK
  87:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMinuteHandler_Callback();
  88:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MINUTE_HANDLER_CALLBACK */    
  89:Generated_Source\PSoC5/RTC_INT.c **** }
  66              		.loc 1 89 0
  67 0004 00BF     		nop
  68 0006 BD46     		mov	sp, r7
  69              		.cfi_def_cfa_register 13
  70              		@ sp needed
  71 0008 80BC     		pop	{r7}
  72              		.cfi_restore 7
  73              		.cfi_def_cfa_offset 0
  74 000a 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE1:
  77              		.size	RTC_EveryMinuteHandler, .-RTC_EveryMinuteHandler
  78              		.section	.text.RTC_EveryHourHandler,"ax",%progbits
  79              		.align	2
  80              		.thumb
  81              		.thumb_func
  82              		.type	RTC_EveryHourHandler, %function
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 4


  83              	RTC_EveryHourHandler:
  84              	.LFB2:
  90:Generated_Source\PSoC5/RTC_INT.c **** 
  91:Generated_Source\PSoC5/RTC_INT.c **** 
  92:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
  93:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryHourHandler
  94:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
  95:Generated_Source\PSoC5/RTC_INT.c **** *
  96:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
  97:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every hour.
  98:Generated_Source\PSoC5/RTC_INT.c **** *
  99:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 100:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 101:Generated_Source\PSoC5/RTC_INT.c **** *
 102:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 103:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 104:Generated_Source\PSoC5/RTC_INT.c **** *
 105:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryHourHandler(void)
 107:Generated_Source\PSoC5/RTC_INT.c **** {
  85              		.loc 1 107 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90 0000 80B4     		push	{r7}
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 7, -4
  93 0002 00AF     		add	r7, sp, #0
  94              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every hour handler code here. */
 109:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_HOUR_HANDLER_CODE` */
 110:Generated_Source\PSoC5/RTC_INT.c **** 
 111:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 112:Generated_Source\PSoC5/RTC_INT.c ****     
 113:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_HOUR_HANDLER_CALLBACK
 114:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryHourHandler_Callback();
 115:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_HOUR_HANDLER_CALLBACK */
 116:Generated_Source\PSoC5/RTC_INT.c **** }
  95              		.loc 1 116 0
  96 0004 00BF     		nop
  97 0006 BD46     		mov	sp, r7
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 0008 80BC     		pop	{r7}
 101              		.cfi_restore 7
 102              		.cfi_def_cfa_offset 0
 103 000a 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE2:
 106              		.size	RTC_EveryHourHandler, .-RTC_EveryHourHandler
 107              		.section	.text.RTC_EveryDayHandler,"ax",%progbits
 108              		.align	2
 109              		.thumb
 110              		.thumb_func
 111              		.type	RTC_EveryDayHandler, %function
 112              	RTC_EveryDayHandler:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 5


 113              	.LFB3:
 117:Generated_Source\PSoC5/RTC_INT.c **** 
 118:Generated_Source\PSoC5/RTC_INT.c **** 
 119:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 120:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryDayHandler
 121:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 122:Generated_Source\PSoC5/RTC_INT.c **** *
 123:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 124:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every day.
 125:Generated_Source\PSoC5/RTC_INT.c **** *
 126:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 127:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 128:Generated_Source\PSoC5/RTC_INT.c **** *
 129:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 130:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 131:Generated_Source\PSoC5/RTC_INT.c **** *
 132:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 133:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryDayHandler(void)
 134:Generated_Source\PSoC5/RTC_INT.c **** {
 114              		.loc 1 134 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119 0000 80B4     		push	{r7}
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 7, -4
 122 0002 00AF     		add	r7, sp, #0
 123              		.cfi_def_cfa_register 7
 135:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your everyday handler code here. */
 136:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_DAY_HANDLER_CODE` */
 137:Generated_Source\PSoC5/RTC_INT.c **** 
 138:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 139:Generated_Source\PSoC5/RTC_INT.c ****     
 140:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_DAY_HANDLER_CALLBACK
 141:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryDayHandler_Callback();
 142:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_DAY_HANDLER_CALLBACK */
 143:Generated_Source\PSoC5/RTC_INT.c **** }
 124              		.loc 1 143 0
 125 0004 00BF     		nop
 126 0006 BD46     		mov	sp, r7
 127              		.cfi_def_cfa_register 13
 128              		@ sp needed
 129 0008 80BC     		pop	{r7}
 130              		.cfi_restore 7
 131              		.cfi_def_cfa_offset 0
 132 000a 7047     		bx	lr
 133              		.cfi_endproc
 134              	.LFE3:
 135              		.size	RTC_EveryDayHandler, .-RTC_EveryDayHandler
 136              		.section	.text.RTC_EveryWeekHandler,"ax",%progbits
 137              		.align	2
 138              		.thumb
 139              		.thumb_func
 140              		.type	RTC_EveryWeekHandler, %function
 141              	RTC_EveryWeekHandler:
 142              	.LFB4:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 6


 144:Generated_Source\PSoC5/RTC_INT.c **** 
 145:Generated_Source\PSoC5/RTC_INT.c **** 
 146:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 147:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryWeekHandler
 148:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 149:Generated_Source\PSoC5/RTC_INT.c **** *
 150:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 151:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every week.
 152:Generated_Source\PSoC5/RTC_INT.c **** *
 153:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 154:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 155:Generated_Source\PSoC5/RTC_INT.c **** *
 156:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 157:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 158:Generated_Source\PSoC5/RTC_INT.c **** *
 159:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 160:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryWeekHandler(void)
 161:Generated_Source\PSoC5/RTC_INT.c **** {
 143              		.loc 1 161 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 1, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148 0000 80B4     		push	{r7}
 149              		.cfi_def_cfa_offset 4
 150              		.cfi_offset 7, -4
 151 0002 00AF     		add	r7, sp, #0
 152              		.cfi_def_cfa_register 7
 162:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every week handler code here. */
 163:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_WEEK_HANDLER_CODE` */
 164:Generated_Source\PSoC5/RTC_INT.c **** 
 165:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 166:Generated_Source\PSoC5/RTC_INT.c **** 
 167:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_WEEK_HANDLER_CALLBACK
 168:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryWeekHandler_Callback();
 169:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_WEEK_HANDLER_CALLBACK */
 170:Generated_Source\PSoC5/RTC_INT.c **** }
 153              		.loc 1 170 0
 154 0004 00BF     		nop
 155 0006 BD46     		mov	sp, r7
 156              		.cfi_def_cfa_register 13
 157              		@ sp needed
 158 0008 80BC     		pop	{r7}
 159              		.cfi_restore 7
 160              		.cfi_def_cfa_offset 0
 161 000a 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE4:
 164              		.size	RTC_EveryWeekHandler, .-RTC_EveryWeekHandler
 165              		.section	.text.RTC_EveryMonthHandler,"ax",%progbits
 166              		.align	2
 167              		.thumb
 168              		.thumb_func
 169              		.type	RTC_EveryMonthHandler, %function
 170              	RTC_EveryMonthHandler:
 171              	.LFB5:
 171:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 7


 172:Generated_Source\PSoC5/RTC_INT.c **** 
 173:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 174:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryMonthHandler
 175:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 176:Generated_Source\PSoC5/RTC_INT.c **** *
 177:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 178:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every month.
 179:Generated_Source\PSoC5/RTC_INT.c **** *
 180:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 181:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 182:Generated_Source\PSoC5/RTC_INT.c **** *
 183:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 184:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 185:Generated_Source\PSoC5/RTC_INT.c **** *
 186:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 187:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryMonthHandler(void)
 188:Generated_Source\PSoC5/RTC_INT.c **** {
 172              		.loc 1 188 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177 0000 80B4     		push	{r7}
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 7, -4
 180 0002 00AF     		add	r7, sp, #0
 181              		.cfi_def_cfa_register 7
 189:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every month handler code here. */
 190:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_MONTH_HANDLER_CODE` */
 191:Generated_Source\PSoC5/RTC_INT.c **** 
 192:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 193:Generated_Source\PSoC5/RTC_INT.c ****     
 194:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_MONTH_HANDLER_CALLBACK
 195:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryMonthHandler_Callback();
 196:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_MONTH_HANDLER_CALLBACK */
 197:Generated_Source\PSoC5/RTC_INT.c **** }
 182              		.loc 1 197 0
 183 0004 00BF     		nop
 184 0006 BD46     		mov	sp, r7
 185              		.cfi_def_cfa_register 13
 186              		@ sp needed
 187 0008 80BC     		pop	{r7}
 188              		.cfi_restore 7
 189              		.cfi_def_cfa_offset 0
 190 000a 7047     		bx	lr
 191              		.cfi_endproc
 192              	.LFE5:
 193              		.size	RTC_EveryMonthHandler, .-RTC_EveryMonthHandler
 194              		.section	.text.RTC_EveryYearHandler,"ax",%progbits
 195              		.align	2
 196              		.thumb
 197              		.thumb_func
 198              		.type	RTC_EveryYearHandler, %function
 199              	RTC_EveryYearHandler:
 200              	.LFB6:
 198:Generated_Source\PSoC5/RTC_INT.c **** 
 199:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 8


 200:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 201:Generated_Source\PSoC5/RTC_INT.c **** * Function Name:   RTC_EveryYearHandler
 202:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 203:Generated_Source\PSoC5/RTC_INT.c **** *
 204:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 205:Generated_Source\PSoC5/RTC_INT.c **** *  This function is called every year.
 206:Generated_Source\PSoC5/RTC_INT.c **** *
 207:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 208:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 209:Generated_Source\PSoC5/RTC_INT.c **** *
 210:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 211:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 212:Generated_Source\PSoC5/RTC_INT.c **** *
 213:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 214:Generated_Source\PSoC5/RTC_INT.c **** static void RTC_EveryYearHandler(void)
 215:Generated_Source\PSoC5/RTC_INT.c **** {
 201              		.loc 1 215 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 1, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206 0000 80B4     		push	{r7}
 207              		.cfi_def_cfa_offset 4
 208              		.cfi_offset 7, -4
 209 0002 00AF     		add	r7, sp, #0
 210              		.cfi_def_cfa_register 7
 216:Generated_Source\PSoC5/RTC_INT.c ****     /*  Place your every year handler code here. */
 217:Generated_Source\PSoC5/RTC_INT.c ****     /* `#START EVERY_YEAR_HANDLER_CODE` */
 218:Generated_Source\PSoC5/RTC_INT.c **** 
 219:Generated_Source\PSoC5/RTC_INT.c ****     /* `#END` */
 220:Generated_Source\PSoC5/RTC_INT.c **** 
 221:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_EVERY_YEAR_HANDLER_CALLBACK
 222:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EveryYearHandler_Callback();
 223:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_EVERY_YEAR_HANDLER_CALLBACK */    
 224:Generated_Source\PSoC5/RTC_INT.c **** }
 211              		.loc 1 224 0
 212 0004 00BF     		nop
 213 0006 BD46     		mov	sp, r7
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 0008 80BC     		pop	{r7}
 217              		.cfi_restore 7
 218              		.cfi_def_cfa_offset 0
 219 000a 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE6:
 222              		.size	RTC_EveryYearHandler, .-RTC_EveryYearHandler
 223              		.section	.text.RTC_ISR,"ax",%progbits
 224              		.align	2
 225              		.global	RTC_ISR
 226              		.thumb
 227              		.thumb_func
 228              		.type	RTC_ISR, %function
 229              	RTC_ISR:
 230              	.LFB7:
 225:Generated_Source\PSoC5/RTC_INT.c **** 
 226:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 9


 227:Generated_Source\PSoC5/RTC_INT.c **** /*******************************************************************************
 228:Generated_Source\PSoC5/RTC_INT.c **** * Function Name: RTC_ISR
 229:Generated_Source\PSoC5/RTC_INT.c **** ********************************************************************************
 230:Generated_Source\PSoC5/RTC_INT.c **** *
 231:Generated_Source\PSoC5/RTC_INT.c **** * Summary:
 232:Generated_Source\PSoC5/RTC_INT.c **** *  This ISR is executed on 1PPS (one pulse per second) event.
 233:Generated_Source\PSoC5/RTC_INT.c **** *  Global interrupt must be enabled to invoke this ISR.
 234:Generated_Source\PSoC5/RTC_INT.c **** *  This interrupt trigs every second.
 235:Generated_Source\PSoC5/RTC_INT.c **** *
 236:Generated_Source\PSoC5/RTC_INT.c **** * Parameters:
 237:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 238:Generated_Source\PSoC5/RTC_INT.c **** *
 239:Generated_Source\PSoC5/RTC_INT.c **** * Return:
 240:Generated_Source\PSoC5/RTC_INT.c **** *  None.
 241:Generated_Source\PSoC5/RTC_INT.c **** *
 242:Generated_Source\PSoC5/RTC_INT.c **** * Global variables:
 243:Generated_Source\PSoC5/RTC_INT.c **** * RTC_currentTimeDate, RTC_dstTimeDateStart,
 244:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStop, RTC_dstTimeDateStart,
 245:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCfgTimeDate, RTC_statusDateTime,
 246:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStartStatus,
 247:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStopStatus, RTC_alarmCurStatus: global
 248:Generated_Source\PSoC5/RTC_INT.c **** *  variables are used for the time/date, DST and alarm update procedure.
 249:Generated_Source\PSoC5/RTC_INT.c **** *
 250:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstTimeDateStart and RTC_currentTimeDate:
 251:Generated_Source\PSoC5/RTC_INT.c **** *  are modified with the updated values.
 252:Generated_Source\PSoC5/RTC_INT.c **** *
 253:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_statusDateTime, RTC_dstStartStatus,
 254:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_dstStartStatus, RTC_dstStopStatus,
 255:Generated_Source\PSoC5/RTC_INT.c **** *  RTC_alarmCurStatus: global variables could be modified while
 256:Generated_Source\PSoC5/RTC_INT.c **** *  current time/date is updated.
 257:Generated_Source\PSoC5/RTC_INT.c **** *
 258:Generated_Source\PSoC5/RTC_INT.c **** * Side Effects:
 259:Generated_Source\PSoC5/RTC_INT.c **** *  Clears all interrupt status bits (react_int, limact_int, onepps_int, ctw_int,
 260:Generated_Source\PSoC5/RTC_INT.c **** *  and  ftw_int) in Power Manager Interrupt Status Register. If an interrupt
 261:Generated_Source\PSoC5/RTC_INT.c **** *  gets generated at the same time as a clear, the bit will remain set (which
 262:Generated_Source\PSoC5/RTC_INT.c **** *  causes another interrupt).
 263:Generated_Source\PSoC5/RTC_INT.c **** *
 264:Generated_Source\PSoC5/RTC_INT.c **** *******************************************************************************/
 265:Generated_Source\PSoC5/RTC_INT.c **** CY_ISR(RTC_ISR)
 266:Generated_Source\PSoC5/RTC_INT.c **** {
 231              		.loc 1 266 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 8
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235 0000 80B5     		push	{r7, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 82B0     		sub	sp, sp, #8
 240              		.cfi_def_cfa_offset 16
 241 0004 00AF     		add	r7, sp, #0
 242              		.cfi_def_cfa_register 7
 267:Generated_Source\PSoC5/RTC_INT.c ****     uint8 RTC_tmp;
 268:Generated_Source\PSoC5/RTC_INT.c **** 
 269:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_ENTRY_CALLBACK
 270:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_EntryCallback();
 271:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_ENTRY_CALLBACK */
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 10


 272:Generated_Source\PSoC5/RTC_INT.c ****     
 273:Generated_Source\PSoC5/RTC_INT.c ****     /* Clear OPPS interrupt status flag */
 274:Generated_Source\PSoC5/RTC_INT.c ****     (void) CyPmReadStatus(CY_PM_ONEPPS_INT);
 243              		.loc 1 274 0
 244 0006 0420     		movs	r0, #4
 245 0008 FFF7FEFF 		bl	CyPmReadStatus
 275:Generated_Source\PSoC5/RTC_INT.c **** 
 276:Generated_Source\PSoC5/RTC_INT.c ****     /* Increment seconds counter */
 277:Generated_Source\PSoC5/RTC_INT.c ****     RTC_currentTimeDate.Sec++;
 246              		.loc 1 277 0
 247 000c 9E4B     		ldr	r3, .L102
 248 000e 1B78     		ldrb	r3, [r3]
 249 0010 DBB2     		uxtb	r3, r3
 250 0012 0133     		adds	r3, r3, #1
 251 0014 DAB2     		uxtb	r2, r3
 252 0016 9C4B     		ldr	r3, .L102
 253 0018 1A70     		strb	r2, [r3]
 278:Generated_Source\PSoC5/RTC_INT.c **** 
 279:Generated_Source\PSoC5/RTC_INT.c ****     /* Check if minute elapsed */
 280:Generated_Source\PSoC5/RTC_INT.c ****     if(RTC_currentTimeDate.Sec > RTC_MINUTE_ELAPSED)
 254              		.loc 1 280 0
 255 001a 9B4B     		ldr	r3, .L102
 256 001c 1B78     		ldrb	r3, [r3]
 257 001e DBB2     		uxtb	r3, r3
 258 0020 3B2B     		cmp	r3, #59
 259 0022 40F2B286 		bls	.L9
 281:Generated_Source\PSoC5/RTC_INT.c ****     {
 282:Generated_Source\PSoC5/RTC_INT.c ****         /* Inc Min */
 283:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Min++;
 260              		.loc 1 283 0
 261 0026 984B     		ldr	r3, .L102
 262 0028 5B78     		ldrb	r3, [r3, #1]
 263 002a DBB2     		uxtb	r3, r3
 264 002c 0133     		adds	r3, r3, #1
 265 002e DAB2     		uxtb	r2, r3
 266 0030 954B     		ldr	r3, .L102
 267 0032 5A70     		strb	r2, [r3, #1]
 284:Generated_Source\PSoC5/RTC_INT.c **** 
 285:Generated_Source\PSoC5/RTC_INT.c ****         /* Clear Sec */
 286:Generated_Source\PSoC5/RTC_INT.c ****         RTC_currentTimeDate.Sec = 0u;
 268              		.loc 1 286 0
 269 0034 944B     		ldr	r3, .L102
 270 0036 0022     		movs	r2, #0
 271 0038 1A70     		strb	r2, [r3]
 287:Generated_Source\PSoC5/RTC_INT.c **** 
 288:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 272              		.loc 1 288 0
 273 003a 934B     		ldr	r3, .L102
 274 003c 5B78     		ldrb	r3, [r3, #1]
 275 003e DBB2     		uxtb	r3, r3
 276 0040 3B2B     		cmp	r3, #59
 277 0042 40F24E86 		bls	.L10
 289:Generated_Source\PSoC5/RTC_INT.c ****         {
 290:Generated_Source\PSoC5/RTC_INT.c ****             /* Inc HOUR */
 291:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Hour++;
 278              		.loc 1 291 0
 279 0046 904B     		ldr	r3, .L102
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 11


 280 0048 9B78     		ldrb	r3, [r3, #2]
 281 004a DBB2     		uxtb	r3, r3
 282 004c 0133     		adds	r3, r3, #1
 283 004e DAB2     		uxtb	r2, r3
 284 0050 8D4B     		ldr	r3, .L102
 285 0052 9A70     		strb	r2, [r3, #2]
 292:Generated_Source\PSoC5/RTC_INT.c **** 
 293:Generated_Source\PSoC5/RTC_INT.c ****             /* Clear Min */
 294:Generated_Source\PSoC5/RTC_INT.c ****             RTC_currentTimeDate.Min = 0u;
 286              		.loc 1 294 0
 287 0054 8C4B     		ldr	r3, .L102
 288 0056 0022     		movs	r2, #0
 289 0058 5A70     		strb	r2, [r3, #1]
 295:Generated_Source\PSoC5/RTC_INT.c **** 
 296:Generated_Source\PSoC5/RTC_INT.c ****             /* Day roll over */
 297:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 290              		.loc 1 297 0
 291 005a 8B4B     		ldr	r3, .L102
 292 005c 9B78     		ldrb	r3, [r3, #2]
 293 005e DBB2     		uxtb	r3, r3
 294 0060 172B     		cmp	r3, #23
 295 0062 40F24182 		bls	.L11
 298:Generated_Source\PSoC5/RTC_INT.c ****             {
 299:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfMonth */
 300:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfMonth++;
 296              		.loc 1 300 0
 297 0066 884B     		ldr	r3, .L102
 298 0068 1B79     		ldrb	r3, [r3, #4]
 299 006a DBB2     		uxtb	r3, r3
 300 006c 0133     		adds	r3, r3, #1
 301 006e DAB2     		uxtb	r2, r3
 302 0070 854B     		ldr	r3, .L102
 303 0072 1A71     		strb	r2, [r3, #4]
 301:Generated_Source\PSoC5/RTC_INT.c **** 
 302:Generated_Source\PSoC5/RTC_INT.c ****                 /* Clear Hour */
 303:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.Hour = 0u;
 304              		.loc 1 303 0
 305 0074 844B     		ldr	r3, .L102
 306 0076 0022     		movs	r2, #0
 307 0078 9A70     		strb	r2, [r3, #2]
 304:Generated_Source\PSoC5/RTC_INT.c **** 
 305:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfYear */
 306:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfYear++;
 308              		.loc 1 306 0
 309 007a 834B     		ldr	r3, .L102
 310 007c DB88     		ldrh	r3, [r3, #6]	@ movhi
 311 007e 9BB2     		uxth	r3, r3
 312 0080 0133     		adds	r3, r3, #1
 313 0082 9AB2     		uxth	r2, r3
 314 0084 804B     		ldr	r3, .L102
 315 0086 DA80     		strh	r2, [r3, #6]	@ movhi
 307:Generated_Source\PSoC5/RTC_INT.c **** 
 308:Generated_Source\PSoC5/RTC_INT.c ****                 /* Inc DayOfWeek */
 309:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_currentTimeDate.DayOfWeek++;
 316              		.loc 1 309 0
 317 0088 7F4B     		ldr	r3, .L102
 318 008a DB78     		ldrb	r3, [r3, #3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 12


 319 008c DBB2     		uxtb	r3, r3
 320 008e 0133     		adds	r3, r3, #1
 321 0090 DAB2     		uxtb	r2, r3
 322 0092 7D4B     		ldr	r3, .L102
 323 0094 DA70     		strb	r2, [r3, #3]
 310:Generated_Source\PSoC5/RTC_INT.c **** 
 311:Generated_Source\PSoC5/RTC_INT.c ****                 /* Check DayOfWeek */
 312:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 324              		.loc 1 312 0
 325 0096 7C4B     		ldr	r3, .L102
 326 0098 DB78     		ldrb	r3, [r3, #3]
 327 009a DBB2     		uxtb	r3, r3
 328 009c 072B     		cmp	r3, #7
 329 009e 02D9     		bls	.L12
 313:Generated_Source\PSoC5/RTC_INT.c ****                 {
 314:Generated_Source\PSoC5/RTC_INT.c ****                     /* start new week */
 315:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfWeek = 1u;
 330              		.loc 1 315 0
 331 00a0 794B     		ldr	r3, .L102
 332 00a2 0122     		movs	r2, #1
 333 00a4 DA70     		strb	r2, [r3, #3]
 334              	.L12:
 316:Generated_Source\PSoC5/RTC_INT.c ****                 }
 317:Generated_Source\PSoC5/RTC_INT.c **** 
 318:Generated_Source\PSoC5/RTC_INT.c ****                 /* Day of month roll over.
 319:Generated_Source\PSoC5/RTC_INT.c ****                 * Check if day of month greater than 29 in February of leap year or
 320:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than 28 NOT in February of NON leap year or
 321:Generated_Source\PSoC5/RTC_INT.c ****                 * if day of month greater than it should be in every month in non leap year
 322:Generated_Source\PSoC5/RTC_INT.c ****                 */
 323:Generated_Source\PSoC5/RTC_INT.c ****                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 335              		.loc 1 323 0
 336 00a6 794B     		ldr	r3, .L102+4
 337 00a8 1B78     		ldrb	r3, [r3]
 338 00aa DBB2     		uxtb	r3, r3
 339 00ac 03F00203 		and	r3, r3, #2
 340 00b0 002B     		cmp	r3, #0
 341 00b2 11D0     		beq	.L13
 324:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 342              		.loc 1 324 0 discriminator 1
 343 00b4 744B     		ldr	r3, .L102
 344 00b6 1B7A     		ldrb	r3, [r3, #8]
 345 00b8 DBB2     		uxtb	r3, r3
 323:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 346              		.loc 1 323 0 discriminator 1
 347 00ba 022B     		cmp	r3, #2
 348 00bc 0CD1     		bne	.L13
 325:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 349              		.loc 1 325 0
 350 00be 724B     		ldr	r3, .L102
 351 00c0 1B79     		ldrb	r3, [r3, #4]
 352 00c2 DBB2     		uxtb	r3, r3
 353 00c4 1946     		mov	r1, r3
 326:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 354              		.loc 1 326 0
 355 00c6 704B     		ldr	r3, .L102
 356 00c8 1B7A     		ldrb	r3, [r3, #8]
 357 00ca DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 13


 358 00cc 013B     		subs	r3, r3, #1
 359 00ce 704A     		ldr	r2, .L102+8
 360 00d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 361 00d2 0133     		adds	r3, r3, #1
 324:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 362              		.loc 1 324 0
 363 00d4 9942     		cmp	r1, r3
 364 00d6 2AD8     		bhi	.L14
 365              	.L13:
 327:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 366              		.loc 1 327 0
 367 00d8 6C4B     		ldr	r3, .L102+4
 368 00da 1B78     		ldrb	r3, [r3]
 369 00dc DBB2     		uxtb	r3, r3
 370 00de 03F00203 		and	r3, r3, #2
 326:Generated_Source\PSoC5/RTC_INT.c ****                              (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 371              		.loc 1 326 0
 372 00e2 002B     		cmp	r3, #0
 373 00e4 0FD0     		beq	.L15
 328:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 374              		.loc 1 328 0
 375 00e6 684B     		ldr	r3, .L102
 376 00e8 1B7A     		ldrb	r3, [r3, #8]
 377 00ea DBB2     		uxtb	r3, r3
 327:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY))  &&
 378              		.loc 1 327 0
 379 00ec 022B     		cmp	r3, #2
 380 00ee 0AD0     		beq	.L15
 329:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
 381              		.loc 1 329 0
 382 00f0 654B     		ldr	r3, .L102
 383 00f2 1B79     		ldrb	r3, [r3, #4]
 384 00f4 DAB2     		uxtb	r2, r3
 330:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 385              		.loc 1 330 0
 386 00f6 644B     		ldr	r3, .L102
 387 00f8 1B7A     		ldrb	r3, [r3, #8]
 388 00fa DBB2     		uxtb	r3, r3
 389 00fc 013B     		subs	r3, r3, #1
 390 00fe 6449     		ldr	r1, .L102+8
 391 0100 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 328:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.Month != RTC_FEBRUARY) &&
 392              		.loc 1 328 0
 393 0102 9A42     		cmp	r2, r3
 394 0104 13D8     		bhi	.L14
 395              	.L15:
 331:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 396              		.loc 1 331 0
 397 0106 614B     		ldr	r3, .L102+4
 398 0108 1B78     		ldrb	r3, [r3]
 399 010a DBB2     		uxtb	r3, r3
 400 010c 03F00203 		and	r3, r3, #2
 330:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 401              		.loc 1 330 0
 402 0110 002B     		cmp	r3, #0
 403 0112 40F02681 		bne	.L16
 332:Generated_Source\PSoC5/RTC_INT.c ****                     (RTC_currentTimeDate.DayOfMonth >
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 14


 404              		.loc 1 332 0
 405 0116 5C4B     		ldr	r3, .L102
 406 0118 1B79     		ldrb	r3, [r3, #4]
 407 011a DAB2     		uxtb	r2, r3
 333:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 408              		.loc 1 333 0
 409 011c 5A4B     		ldr	r3, .L102
 410 011e 1B7A     		ldrb	r3, [r3, #8]
 411 0120 DBB2     		uxtb	r3, r3
 412 0122 013B     		subs	r3, r3, #1
 413 0124 5A49     		ldr	r1, .L102+8
 414 0126 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 331:Generated_Source\PSoC5/RTC_INT.c ****                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY))  &&
 415              		.loc 1 331 0
 416 0128 9A42     		cmp	r2, r3
 417 012a 40F21A81 		bls	.L16
 418              	.L14:
 334:Generated_Source\PSoC5/RTC_INT.c ****                 {
 335:Generated_Source\PSoC5/RTC_INT.c ****                     /* Inc Month */
 336:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.Month++;
 419              		.loc 1 336 0
 420 012e 564B     		ldr	r3, .L102
 421 0130 1B7A     		ldrb	r3, [r3, #8]
 422 0132 DBB2     		uxtb	r3, r3
 423 0134 0133     		adds	r3, r3, #1
 424 0136 DAB2     		uxtb	r2, r3
 425 0138 534B     		ldr	r3, .L102
 426 013a 1A72     		strb	r2, [r3, #8]
 337:Generated_Source\PSoC5/RTC_INT.c **** 
 338:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set first day of month */
 339:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_currentTimeDate.DayOfMonth = 1u;
 427              		.loc 1 339 0
 428 013c 524B     		ldr	r3, .L102
 429 013e 0122     		movs	r2, #1
 430 0140 1A71     		strb	r2, [r3, #4]
 340:Generated_Source\PSoC5/RTC_INT.c **** 
 341:Generated_Source\PSoC5/RTC_INT.c ****                     /* Year roll over */
 342:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 431              		.loc 1 342 0
 432 0142 514B     		ldr	r3, .L102
 433 0144 1B7A     		ldrb	r3, [r3, #8]
 434 0146 DBB2     		uxtb	r3, r3
 435 0148 0C2B     		cmp	r3, #12
 436 014a 40F28580 		bls	.L17
 343:Generated_Source\PSoC5/RTC_INT.c ****                     {
 344:Generated_Source\PSoC5/RTC_INT.c ****                         /* Inc Year */
 345:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Year++;
 437              		.loc 1 345 0
 438 014e 4E4B     		ldr	r3, .L102
 439 0150 5B89     		ldrh	r3, [r3, #10]	@ movhi
 440 0152 9BB2     		uxth	r3, r3
 441 0154 0133     		adds	r3, r3, #1
 442 0156 9AB2     		uxth	r2, r3
 443 0158 4B4B     		ldr	r3, .L102
 444 015a 5A81     		strh	r2, [r3, #10]	@ movhi
 346:Generated_Source\PSoC5/RTC_INT.c **** 
 347:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first month of year */
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 15


 348:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.Month = 1u;
 445              		.loc 1 348 0
 446 015c 4A4B     		ldr	r3, .L102
 447 015e 0122     		movs	r2, #1
 448 0160 1A72     		strb	r2, [r3, #8]
 349:Generated_Source\PSoC5/RTC_INT.c **** 
 350:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set first day of year */
 351:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_currentTimeDate.DayOfYear = 1u;
 449              		.loc 1 351 0
 450 0162 494B     		ldr	r3, .L102
 451 0164 0122     		movs	r2, #1
 452 0166 DA80     		strh	r2, [r3, #6]	@ movhi
 352:Generated_Source\PSoC5/RTC_INT.c **** 
 353:Generated_Source\PSoC5/RTC_INT.c ****                         /* Is this year leap */
 354:Generated_Source\PSoC5/RTC_INT.c ****                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 453              		.loc 1 354 0
 454 0168 474B     		ldr	r3, .L102
 455 016a 5B89     		ldrh	r3, [r3, #10]	@ movhi
 456 016c 9BB2     		uxth	r3, r3
 457 016e 494A     		ldr	r2, .L102+12
 458 0170 A2FB0312 		umull	r1, r2, r2, r3
 459 0174 D209     		lsrs	r2, r2, #7
 460 0176 4FF4C871 		mov	r1, #400
 461 017a 01FB02F2 		mul	r2, r1, r2
 462 017e 9B1A     		subs	r3, r3, r2
 463 0180 9BB2     		uxth	r3, r3
 464 0182 002B     		cmp	r3, #0
 465 0184 15D0     		beq	.L18
 466              		.loc 1 354 0 is_stmt 0 discriminator 1
 467 0186 404B     		ldr	r3, .L102
 468 0188 5B89     		ldrh	r3, [r3, #10]	@ movhi
 469 018a 9BB2     		uxth	r3, r3
 470 018c 03F00303 		and	r3, r3, #3
 471 0190 9BB2     		uxth	r3, r3
 472 0192 002B     		cmp	r3, #0
 473 0194 16D1     		bne	.L19
 474              		.loc 1 354 0 discriminator 2
 475 0196 3C4B     		ldr	r3, .L102
 476 0198 5B89     		ldrh	r3, [r3, #10]	@ movhi
 477 019a 9BB2     		uxth	r3, r3
 478 019c 3D4A     		ldr	r2, .L102+12
 479 019e A2FB0312 		umull	r1, r2, r2, r3
 480 01a2 5209     		lsrs	r2, r2, #5
 481 01a4 6421     		movs	r1, #100
 482 01a6 01FB02F2 		mul	r2, r1, r2
 483 01aa 9B1A     		subs	r3, r3, r2
 484 01ac 9BB2     		uxth	r3, r3
 485 01ae 002B     		cmp	r3, #0
 486 01b0 08D0     		beq	.L19
 487              	.L18:
 355:Generated_Source\PSoC5/RTC_INT.c ****                         {
 356:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set leap year flag */
 357:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_LY;
 488              		.loc 1 357 0 is_stmt 1
 489 01b2 364B     		ldr	r3, .L102+4
 490 01b4 1B78     		ldrb	r3, [r3]
 491 01b6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 16


 492 01b8 43F00203 		orr	r3, r3, #2
 493 01bc DAB2     		uxtb	r2, r3
 494 01be 334B     		ldr	r3, .L102+4
 495 01c0 1A70     		strb	r2, [r3]
 496 01c2 07E0     		b	.L20
 497              	.L19:
 358:Generated_Source\PSoC5/RTC_INT.c ****                         }
 359:Generated_Source\PSoC5/RTC_INT.c ****                         else    /* not leap year */
 360:Generated_Source\PSoC5/RTC_INT.c ****                         {
 361:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear leap year */
 362:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 498              		.loc 1 362 0
 499 01c4 314B     		ldr	r3, .L102+4
 500 01c6 1B78     		ldrb	r3, [r3]
 501 01c8 DBB2     		uxtb	r3, r3
 502 01ca 23F00203 		bic	r3, r3, #2
 503 01ce DAB2     		uxtb	r2, r3
 504 01d0 2E4B     		ldr	r3, .L102+4
 505 01d2 1A70     		strb	r2, [r3]
 506              	.L20:
 363:Generated_Source\PSoC5/RTC_INT.c ****                         }
 364:Generated_Source\PSoC5/RTC_INT.c **** 
 365:Generated_Source\PSoC5/RTC_INT.c ****                         /* Alarm YEAR */
 366:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 507              		.loc 1 366 0
 508 01d4 304B     		ldr	r3, .L102+16
 509 01d6 1B78     		ldrb	r3, [r3]
 510 01d8 DBB2     		uxtb	r3, r3
 511 01da 5BB2     		sxtb	r3, r3
 512 01dc 002B     		cmp	r3, #0
 513 01de 18DA     		bge	.L21
 367:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_ALARM_YEAR_MASK))
 368:Generated_Source\PSoC5/RTC_INT.c ****                         {
 369:Generated_Source\PSoC5/RTC_INT.c ****                             /* Years match */
 370:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 514              		.loc 1 370 0
 515 01e0 2E4B     		ldr	r3, .L102+20
 516 01e2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 517 01e4 9AB2     		uxth	r2, r3
 518 01e6 284B     		ldr	r3, .L102
 519 01e8 5B89     		ldrh	r3, [r3, #10]	@ movhi
 520 01ea 9BB2     		uxth	r3, r3
 521 01ec 9A42     		cmp	r2, r3
 522 01ee 08D1     		bne	.L22
 371:Generated_Source\PSoC5/RTC_INT.c ****                             {
 372:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Rise year alarm */
 373:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 523              		.loc 1 373 0
 524 01f0 2B4B     		ldr	r3, .L102+24
 525 01f2 1B78     		ldrb	r3, [r3]
 526 01f4 DBB2     		uxtb	r3, r3
 527 01f6 63F07F03 		orn	r3, r3, #127
 528 01fa DAB2     		uxtb	r2, r3
 529 01fc 284B     		ldr	r3, .L102+24
 530 01fe 1A70     		strb	r2, [r3]
 531 0200 07E0     		b	.L21
 532              	.L22:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 17


 374:Generated_Source\PSoC5/RTC_INT.c ****                             }
 375:Generated_Source\PSoC5/RTC_INT.c ****                             else    /* Years do not match */
 376:Generated_Source\PSoC5/RTC_INT.c ****                             {
 377:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Clear year alarm */
 378:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 533              		.loc 1 378 0
 534 0202 274B     		ldr	r3, .L102+24
 535 0204 1B78     		ldrb	r3, [r3]
 536 0206 DBB2     		uxtb	r3, r3
 537 0208 03F07F03 		and	r3, r3, #127
 538 020c DAB2     		uxtb	r2, r3
 539 020e 244B     		ldr	r3, .L102+24
 540 0210 1A70     		strb	r2, [r3]
 541              	.L21:
 379:Generated_Source\PSoC5/RTC_INT.c ****                             }
 380:Generated_Source\PSoC5/RTC_INT.c ****                         } /* do not alarm year */
 381:Generated_Source\PSoC5/RTC_INT.c **** 
 382:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set Alarm flag event */
 383:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_tmp = RTC_alarmCfgMask;
 542              		.loc 1 383 0
 543 0212 214B     		ldr	r3, .L102+16
 544 0214 1B78     		ldrb	r3, [r3]
 545 0216 FB71     		strb	r3, [r7, #7]
 384:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_SET_ALARM(RTC_tmp,
 546              		.loc 1 384 0
 547 0218 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 548 021a 002B     		cmp	r3, #0
 549 021c 13D0     		beq	.L23
 550              		.loc 1 384 0 is_stmt 0 discriminator 1
 551 021e 204B     		ldr	r3, .L102+24
 552 0220 1B78     		ldrb	r3, [r3]
 553 0222 DAB2     		uxtb	r2, r3
 554 0224 FB79     		ldrb	r3, [r7, #7]
 555 0226 1340     		ands	r3, r3, r2
 556 0228 DBB2     		uxtb	r3, r3
 557 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 558 022c 9A42     		cmp	r2, r3
 559 022e 0AD1     		bne	.L23
 560              		.loc 1 384 0 discriminator 2
 561 0230 164B     		ldr	r3, .L102+4
 562 0232 1B78     		ldrb	r3, [r3]
 563 0234 DBB2     		uxtb	r3, r3
 564 0236 43F00803 		orr	r3, r3, #8
 565 023a DAB2     		uxtb	r2, r3
 566 023c 134B     		ldr	r3, .L102+4
 567 023e 1A70     		strb	r2, [r3]
 568 0240 174B     		ldr	r3, .L102+24
 569 0242 0022     		movs	r2, #0
 570 0244 1A70     		strb	r2, [r3]
 571              	.L23:
 385:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_alarmCurStatus,
 386:Generated_Source\PSoC5/RTC_INT.c ****                                                    RTC_statusDateTime);
 387:Generated_Source\PSoC5/RTC_INT.c **** 
 388:Generated_Source\PSoC5/RTC_INT.c ****                         /* Every Year */
 389:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 572              		.loc 1 389 0 is_stmt 1
 573 0246 174B     		ldr	r3, .L102+28
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 18


 574 0248 1B78     		ldrb	r3, [r3]
 575 024a DBB2     		uxtb	r3, r3
 576 024c 03F04003 		and	r3, r3, #64
 577 0250 002B     		cmp	r3, #0
 578 0252 01D0     		beq	.L17
 390:Generated_Source\PSoC5/RTC_INT.c ****                                                              RTC_INTERVAL_YEAR_MASK))
 391:Generated_Source\PSoC5/RTC_INT.c ****                         {
 392:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_EveryYearHandler();
 579              		.loc 1 392 0
 580 0254 FFF7FEFF 		bl	RTC_EveryYearHandler
 581              	.L17:
 393:Generated_Source\PSoC5/RTC_INT.c ****                         }
 394:Generated_Source\PSoC5/RTC_INT.c **** 
 395:Generated_Source\PSoC5/RTC_INT.c ****                     } /* Month > 12 */
 396:Generated_Source\PSoC5/RTC_INT.c **** 
 397:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 398:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 582              		.loc 1 398 0
 583 0258 0F4B     		ldr	r3, .L102+16
 584 025a 1B78     		ldrb	r3, [r3]
 585 025c DBB2     		uxtb	r3, r3
 586 025e 03F04003 		and	r3, r3, #64
 587 0262 002B     		cmp	r3, #0
 588 0264 28D0     		beq	.L24
 399:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 400:Generated_Source\PSoC5/RTC_INT.c ****                     {
 401:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 589              		.loc 1 401 0
 590 0266 0D4B     		ldr	r3, .L102+20
 591 0268 1B7A     		ldrb	r3, [r3, #8]
 592 026a DAB2     		uxtb	r2, r3
 593 026c 064B     		ldr	r3, .L102
 594 026e 1B7A     		ldrb	r3, [r3, #8]
 595 0270 DBB2     		uxtb	r3, r3
 596 0272 9A42     		cmp	r2, r3
 597 0274 18D1     		bne	.L25
 402:Generated_Source\PSoC5/RTC_INT.c ****                         {
 403:Generated_Source\PSoC5/RTC_INT.c ****                             /* Set month alarm */
 404:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 598              		.loc 1 404 0
 599 0276 0A4B     		ldr	r3, .L102+24
 600 0278 1B78     		ldrb	r3, [r3]
 601 027a DBB2     		uxtb	r3, r3
 602 027c 43F04003 		orr	r3, r3, #64
 603 0280 DAB2     		uxtb	r2, r3
 604 0282 074B     		ldr	r3, .L102+24
 605 0284 1A70     		strb	r2, [r3]
 606 0286 17E0     		b	.L24
 607              	.L103:
 608              		.align	2
 609              	.L102:
 610 0288 00000000 		.word	RTC_currentTimeDate
 611 028c 00000000 		.word	RTC_statusDateTime
 612 0290 00000000 		.word	RTC_daysInMonths
 613 0294 1F85EB51 		.word	1374389535
 614 0298 00000000 		.word	RTC_alarmCfgMask
 615 029c 00000000 		.word	RTC_alarmCfgTimeDate
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 19


 616 02a0 00000000 		.word	RTC_alarmCurStatus
 617 02a4 00000000 		.word	RTC_intervalCfgMask
 618              	.L25:
 405:Generated_Source\PSoC5/RTC_INT.c ****                         }
 406:Generated_Source\PSoC5/RTC_INT.c ****                         else
 407:Generated_Source\PSoC5/RTC_INT.c ****                         {
 408:Generated_Source\PSoC5/RTC_INT.c ****                             /* Clear month alarm */
 409:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 619              		.loc 1 409 0
 620 02a8 A34B     		ldr	r3, .L104
 621 02aa 1B78     		ldrb	r3, [r3]
 622 02ac DBB2     		uxtb	r3, r3
 623 02ae 23F04003 		bic	r3, r3, #64
 624 02b2 DAB2     		uxtb	r2, r3
 625 02b4 A04B     		ldr	r3, .L104
 626 02b6 1A70     		strb	r2, [r3]
 627              	.L24:
 410:Generated_Source\PSoC5/RTC_INT.c ****                         }
 411:Generated_Source\PSoC5/RTC_INT.c ****                     }   /* Month alarm is masked */
 412:Generated_Source\PSoC5/RTC_INT.c **** 
 413:Generated_Source\PSoC5/RTC_INT.c ****                     #if (1u == RTC_DST_FUNC_ENABLE)
 414:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 628              		.loc 1 414 0
 629 02b8 A04B     		ldr	r3, .L104+4
 630 02ba 1B79     		ldrb	r3, [r3, #4]
 631 02bc DAB2     		uxtb	r2, r3
 632 02be A04B     		ldr	r3, .L104+8
 633 02c0 1B7A     		ldrb	r3, [r3, #8]
 634 02c2 DBB2     		uxtb	r3, r3
 635 02c4 9A42     		cmp	r2, r3
 636 02c6 08D1     		bne	.L26
 415:Generated_Source\PSoC5/RTC_INT.c ****                         {
 416:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus |= RTC_DST_MONTH;
 637              		.loc 1 416 0
 638 02c8 9E4B     		ldr	r3, .L104+12
 639 02ca 1B78     		ldrb	r3, [r3]
 640 02cc DBB2     		uxtb	r3, r3
 641 02ce 43F00403 		orr	r3, r3, #4
 642 02d2 DAB2     		uxtb	r2, r3
 643 02d4 9B4B     		ldr	r3, .L104+12
 644 02d6 1A70     		strb	r2, [r3]
 645 02d8 07E0     		b	.L27
 646              	.L26:
 417:Generated_Source\PSoC5/RTC_INT.c ****                         }
 418:Generated_Source\PSoC5/RTC_INT.c ****                         else
 419:Generated_Source\PSoC5/RTC_INT.c ****                         {
 420:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 647              		.loc 1 420 0
 648 02da 9A4B     		ldr	r3, .L104+12
 649 02dc 1B78     		ldrb	r3, [r3]
 650 02de DBB2     		uxtb	r3, r3
 651 02e0 23F00403 		bic	r3, r3, #4
 652 02e4 DAB2     		uxtb	r2, r3
 653 02e6 974B     		ldr	r3, .L104+12
 654 02e8 1A70     		strb	r2, [r3]
 655              	.L27:
 421:Generated_Source\PSoC5/RTC_INT.c ****                         }
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 20


 422:Generated_Source\PSoC5/RTC_INT.c **** 
 423:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_dstTimeDateStart.Month == RTC_currentTimeDate.Month)
 656              		.loc 1 423 0
 657 02ea 974B     		ldr	r3, .L104+16
 658 02ec 1B79     		ldrb	r3, [r3, #4]
 659 02ee DAB2     		uxtb	r2, r3
 660 02f0 934B     		ldr	r3, .L104+8
 661 02f2 1B7A     		ldrb	r3, [r3, #8]
 662 02f4 DBB2     		uxtb	r3, r3
 663 02f6 9A42     		cmp	r2, r3
 664 02f8 08D1     		bne	.L28
 424:Generated_Source\PSoC5/RTC_INT.c ****                         {
 425:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus |= RTC_DST_MONTH;
 665              		.loc 1 425 0
 666 02fa 944B     		ldr	r3, .L104+20
 667 02fc 1B78     		ldrb	r3, [r3]
 668 02fe DBB2     		uxtb	r3, r3
 669 0300 43F00403 		orr	r3, r3, #4
 670 0304 DAB2     		uxtb	r2, r3
 671 0306 914B     		ldr	r3, .L104+20
 672 0308 1A70     		strb	r2, [r3]
 673 030a 07E0     		b	.L29
 674              	.L28:
 426:Generated_Source\PSoC5/RTC_INT.c ****                         }
 427:Generated_Source\PSoC5/RTC_INT.c ****                         else
 428:Generated_Source\PSoC5/RTC_INT.c ****                         {
 429:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus &= (uint8)(~RTC_DST_MONTH);
 675              		.loc 1 429 0
 676 030c 8F4B     		ldr	r3, .L104+20
 677 030e 1B78     		ldrb	r3, [r3]
 678 0310 DBB2     		uxtb	r3, r3
 679 0312 23F00403 		bic	r3, r3, #4
 680 0316 DAB2     		uxtb	r2, r3
 681 0318 8C4B     		ldr	r3, .L104+20
 682 031a 1A70     		strb	r2, [r3]
 683              	.L29:
 430:Generated_Source\PSoC5/RTC_INT.c ****                         }
 431:Generated_Source\PSoC5/RTC_INT.c ****                     #endif /* 1u == RTC_DST_FUNC_ENABLE */
 432:Generated_Source\PSoC5/RTC_INT.c **** 
 433:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 434:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 684              		.loc 1 434 0
 685 031c 8C4B     		ldr	r3, .L104+24
 686 031e 1B78     		ldrb	r3, [r3]
 687 0320 FB71     		strb	r3, [r7, #7]
 435:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 688              		.loc 1 435 0
 689 0322 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 690 0324 002B     		cmp	r3, #0
 691 0326 13D0     		beq	.L30
 692              		.loc 1 435 0 is_stmt 0 discriminator 1
 693 0328 834B     		ldr	r3, .L104
 694 032a 1B78     		ldrb	r3, [r3]
 695 032c DAB2     		uxtb	r2, r3
 696 032e FB79     		ldrb	r3, [r7, #7]
 697 0330 1340     		ands	r3, r3, r2
 698 0332 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 21


 699 0334 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 700 0336 9A42     		cmp	r2, r3
 701 0338 0AD1     		bne	.L30
 702              		.loc 1 435 0 discriminator 2
 703 033a 864B     		ldr	r3, .L104+28
 704 033c 1B78     		ldrb	r3, [r3]
 705 033e DBB2     		uxtb	r3, r3
 706 0340 43F00803 		orr	r3, r3, #8
 707 0344 DAB2     		uxtb	r2, r3
 708 0346 834B     		ldr	r3, .L104+28
 709 0348 1A70     		strb	r2, [r3]
 710 034a 7B4B     		ldr	r3, .L104
 711 034c 0022     		movs	r2, #0
 712 034e 1A70     		strb	r2, [r3]
 713              	.L30:
 436:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 437:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 438:Generated_Source\PSoC5/RTC_INT.c **** 
 439:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Month */
 440:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 714              		.loc 1 440 0 is_stmt 1
 715 0350 814B     		ldr	r3, .L104+32
 716 0352 1B78     		ldrb	r3, [r3]
 717 0354 DBB2     		uxtb	r3, r3
 718 0356 03F02003 		and	r3, r3, #32
 719 035a 002B     		cmp	r3, #0
 720 035c 01D0     		beq	.L16
 441:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_MONTH_MASK))
 442:Generated_Source\PSoC5/RTC_INT.c ****                     {
 443:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_EveryMonthHandler();
 721              		.loc 1 443 0
 722 035e FFF7FEFF 		bl	RTC_EveryMonthHandler
 723              	.L16:
 444:Generated_Source\PSoC5/RTC_INT.c ****                     }
 445:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day roll over */
 446:Generated_Source\PSoC5/RTC_INT.c **** 
 447:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFWEEK */
 448:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 724              		.loc 1 448 0
 725 0362 7B4B     		ldr	r3, .L104+24
 726 0364 1B78     		ldrb	r3, [r3]
 727 0366 DBB2     		uxtb	r3, r3
 728 0368 03F00803 		and	r3, r3, #8
 729 036c 002B     		cmp	r3, #0
 730 036e 18D0     		beq	.L31
 449:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFWEEK_MASK))
 450:Generated_Source\PSoC5/RTC_INT.c ****                 {
 451:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 731              		.loc 1 451 0
 732 0370 7A4B     		ldr	r3, .L104+36
 733 0372 DB78     		ldrb	r3, [r3, #3]
 734 0374 DAB2     		uxtb	r2, r3
 735 0376 724B     		ldr	r3, .L104+8
 736 0378 DB78     		ldrb	r3, [r3, #3]
 737 037a DBB2     		uxtb	r3, r3
 738 037c 9A42     		cmp	r2, r3
 739 037e 08D1     		bne	.L32
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 22


 452:Generated_Source\PSoC5/RTC_INT.c ****                     {
 453:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of week alarm */
 454:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 740              		.loc 1 454 0
 741 0380 6D4B     		ldr	r3, .L104
 742 0382 1B78     		ldrb	r3, [r3]
 743 0384 DBB2     		uxtb	r3, r3
 744 0386 43F00803 		orr	r3, r3, #8
 745 038a DAB2     		uxtb	r2, r3
 746 038c 6A4B     		ldr	r3, .L104
 747 038e 1A70     		strb	r2, [r3]
 748 0390 07E0     		b	.L31
 749              	.L32:
 455:Generated_Source\PSoC5/RTC_INT.c ****                     }
 456:Generated_Source\PSoC5/RTC_INT.c ****                     else
 457:Generated_Source\PSoC5/RTC_INT.c ****                     {
 458:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of week alarm */
 459:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 750              		.loc 1 459 0
 751 0392 694B     		ldr	r3, .L104
 752 0394 1B78     		ldrb	r3, [r3]
 753 0396 DBB2     		uxtb	r3, r3
 754 0398 23F00803 		bic	r3, r3, #8
 755 039c DAB2     		uxtb	r2, r3
 756 039e 664B     		ldr	r3, .L104
 757 03a0 1A70     		strb	r2, [r3]
 758              	.L31:
 460:Generated_Source\PSoC5/RTC_INT.c ****                     }
 461:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of week alarm is masked */
 462:Generated_Source\PSoC5/RTC_INT.c **** 
 463:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFYEAR */
 464:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 759              		.loc 1 464 0
 760 03a2 6B4B     		ldr	r3, .L104+24
 761 03a4 1B78     		ldrb	r3, [r3]
 762 03a6 DBB2     		uxtb	r3, r3
 763 03a8 03F02003 		and	r3, r3, #32
 764 03ac 002B     		cmp	r3, #0
 765 03ae 18D0     		beq	.L33
 465:Generated_Source\PSoC5/RTC_INT.c ****                                                      RTC_ALARM_DAYOFYEAR_MASK))
 466:Generated_Source\PSoC5/RTC_INT.c ****                 {
 467:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 766              		.loc 1 467 0
 767 03b0 6A4B     		ldr	r3, .L104+36
 768 03b2 DB88     		ldrh	r3, [r3, #6]	@ movhi
 769 03b4 9AB2     		uxth	r2, r3
 770 03b6 624B     		ldr	r3, .L104+8
 771 03b8 DB88     		ldrh	r3, [r3, #6]	@ movhi
 772 03ba 9BB2     		uxth	r3, r3
 773 03bc 9A42     		cmp	r2, r3
 774 03be 08D1     		bne	.L34
 468:Generated_Source\PSoC5/RTC_INT.c ****                     {
 469:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of year alarm */
 470:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 775              		.loc 1 470 0
 776 03c0 5D4B     		ldr	r3, .L104
 777 03c2 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 23


 778 03c4 DBB2     		uxtb	r3, r3
 779 03c6 43F02003 		orr	r3, r3, #32
 780 03ca DAB2     		uxtb	r2, r3
 781 03cc 5A4B     		ldr	r3, .L104
 782 03ce 1A70     		strb	r2, [r3]
 783 03d0 07E0     		b	.L33
 784              	.L34:
 471:Generated_Source\PSoC5/RTC_INT.c ****                     }
 472:Generated_Source\PSoC5/RTC_INT.c ****                     else
 473:Generated_Source\PSoC5/RTC_INT.c ****                     {
 474:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of year alarm */
 475:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 785              		.loc 1 475 0
 786 03d2 594B     		ldr	r3, .L104
 787 03d4 1B78     		ldrb	r3, [r3]
 788 03d6 DBB2     		uxtb	r3, r3
 789 03d8 23F02003 		bic	r3, r3, #32
 790 03dc DAB2     		uxtb	r2, r3
 791 03de 564B     		ldr	r3, .L104
 792 03e0 1A70     		strb	r2, [r3]
 793              	.L33:
 476:Generated_Source\PSoC5/RTC_INT.c ****                     }
 477:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of year alarm is masked */
 478:Generated_Source\PSoC5/RTC_INT.c **** 
 479:Generated_Source\PSoC5/RTC_INT.c ****                 /* Alarm DAYOFMONTH */
 480:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 794              		.loc 1 480 0
 795 03e2 5B4B     		ldr	r3, .L104+24
 796 03e4 1B78     		ldrb	r3, [r3]
 797 03e6 DBB2     		uxtb	r3, r3
 798 03e8 03F01003 		and	r3, r3, #16
 799 03ec 002B     		cmp	r3, #0
 800 03ee 18D0     		beq	.L35
 481:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_ALARM_DAYOFMONTH_MASK))
 482:Generated_Source\PSoC5/RTC_INT.c ****                 {
 483:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 801              		.loc 1 483 0
 802 03f0 5A4B     		ldr	r3, .L104+36
 803 03f2 1B79     		ldrb	r3, [r3, #4]
 804 03f4 DAB2     		uxtb	r2, r3
 805 03f6 524B     		ldr	r3, .L104+8
 806 03f8 1B79     		ldrb	r3, [r3, #4]
 807 03fa DBB2     		uxtb	r3, r3
 808 03fc 9A42     		cmp	r2, r3
 809 03fe 08D1     		bne	.L36
 484:Generated_Source\PSoC5/RTC_INT.c ****                     {
 485:Generated_Source\PSoC5/RTC_INT.c ****                         /* Set day of month alarm */
 486:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 810              		.loc 1 486 0
 811 0400 4D4B     		ldr	r3, .L104
 812 0402 1B78     		ldrb	r3, [r3]
 813 0404 DBB2     		uxtb	r3, r3
 814 0406 43F01003 		orr	r3, r3, #16
 815 040a DAB2     		uxtb	r2, r3
 816 040c 4A4B     		ldr	r3, .L104
 817 040e 1A70     		strb	r2, [r3]
 818 0410 07E0     		b	.L35
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 24


 819              	.L36:
 487:Generated_Source\PSoC5/RTC_INT.c ****                     }
 488:Generated_Source\PSoC5/RTC_INT.c ****                     else
 489:Generated_Source\PSoC5/RTC_INT.c ****                     {
 490:Generated_Source\PSoC5/RTC_INT.c ****                         /* Clear day of month alarm */
 491:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
 820              		.loc 1 491 0
 821 0412 494B     		ldr	r3, .L104
 822 0414 1B78     		ldrb	r3, [r3]
 823 0416 DBB2     		uxtb	r3, r3
 824 0418 23F01003 		bic	r3, r3, #16
 825 041c DAB2     		uxtb	r2, r3
 826 041e 464B     		ldr	r3, .L104
 827 0420 1A70     		strb	r2, [r3]
 828              	.L35:
 492:Generated_Source\PSoC5/RTC_INT.c ****                     }
 493:Generated_Source\PSoC5/RTC_INT.c ****                 }   /* Day of month alarm is masked */
 494:Generated_Source\PSoC5/RTC_INT.c **** 
 495:Generated_Source\PSoC5/RTC_INT.c ****                 #if (1u == RTC_DST_FUNC_ENABLE)
 496:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStop.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 829              		.loc 1 496 0
 830 0422 464B     		ldr	r3, .L104+4
 831 0424 DB78     		ldrb	r3, [r3, #3]
 832 0426 DAB2     		uxtb	r2, r3
 833 0428 454B     		ldr	r3, .L104+8
 834 042a 1B79     		ldrb	r3, [r3, #4]
 835 042c DBB2     		uxtb	r3, r3
 836 042e 9A42     		cmp	r2, r3
 837 0430 08D1     		bne	.L37
 497:Generated_Source\PSoC5/RTC_INT.c ****                     {
 498:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 838              		.loc 1 498 0
 839 0432 444B     		ldr	r3, .L104+12
 840 0434 1B78     		ldrb	r3, [r3]
 841 0436 DBB2     		uxtb	r3, r3
 842 0438 43F00203 		orr	r3, r3, #2
 843 043c DAB2     		uxtb	r2, r3
 844 043e 414B     		ldr	r3, .L104+12
 845 0440 1A70     		strb	r2, [r3]
 846 0442 07E0     		b	.L38
 847              	.L37:
 499:Generated_Source\PSoC5/RTC_INT.c ****                     }
 500:Generated_Source\PSoC5/RTC_INT.c ****                     else
 501:Generated_Source\PSoC5/RTC_INT.c ****                     {
 502:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 848              		.loc 1 502 0
 849 0444 3F4B     		ldr	r3, .L104+12
 850 0446 1B78     		ldrb	r3, [r3]
 851 0448 DBB2     		uxtb	r3, r3
 852 044a 23F00203 		bic	r3, r3, #2
 853 044e DAB2     		uxtb	r2, r3
 854 0450 3C4B     		ldr	r3, .L104+12
 855 0452 1A70     		strb	r2, [r3]
 856              	.L38:
 503:Generated_Source\PSoC5/RTC_INT.c ****                     }
 504:Generated_Source\PSoC5/RTC_INT.c **** 
 505:Generated_Source\PSoC5/RTC_INT.c ****                     if(RTC_dstTimeDateStart.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 25


 857              		.loc 1 505 0
 858 0454 3C4B     		ldr	r3, .L104+16
 859 0456 DB78     		ldrb	r3, [r3, #3]
 860 0458 DAB2     		uxtb	r2, r3
 861 045a 394B     		ldr	r3, .L104+8
 862 045c 1B79     		ldrb	r3, [r3, #4]
 863 045e DBB2     		uxtb	r3, r3
 864 0460 9A42     		cmp	r2, r3
 865 0462 08D1     		bne	.L39
 506:Generated_Source\PSoC5/RTC_INT.c ****                     {
 507:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus |= RTC_DST_DAYOFMONTH;
 866              		.loc 1 507 0
 867 0464 394B     		ldr	r3, .L104+20
 868 0466 1B78     		ldrb	r3, [r3]
 869 0468 DBB2     		uxtb	r3, r3
 870 046a 43F00203 		orr	r3, r3, #2
 871 046e DAB2     		uxtb	r2, r3
 872 0470 364B     		ldr	r3, .L104+20
 873 0472 1A70     		strb	r2, [r3]
 874 0474 07E0     		b	.L40
 875              	.L39:
 508:Generated_Source\PSoC5/RTC_INT.c ****                     }
 509:Generated_Source\PSoC5/RTC_INT.c ****                     else
 510:Generated_Source\PSoC5/RTC_INT.c ****                     {
 511:Generated_Source\PSoC5/RTC_INT.c ****                         RTC_dstStartStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 876              		.loc 1 511 0
 877 0476 354B     		ldr	r3, .L104+20
 878 0478 1B78     		ldrb	r3, [r3]
 879 047a DBB2     		uxtb	r3, r3
 880 047c 23F00203 		bic	r3, r3, #2
 881 0480 DAB2     		uxtb	r2, r3
 882 0482 324B     		ldr	r3, .L104+20
 883 0484 1A70     		strb	r2, [r3]
 884              	.L40:
 512:Generated_Source\PSoC5/RTC_INT.c ****                     }
 513:Generated_Source\PSoC5/RTC_INT.c ****                 #endif /* 1u == RTC_DST_FUNC_ENABLE */
 514:Generated_Source\PSoC5/RTC_INT.c **** 
 515:Generated_Source\PSoC5/RTC_INT.c ****                 /* Set Alarm flag event */
 516:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_tmp = RTC_alarmCfgMask;
 885              		.loc 1 516 0
 886 0486 324B     		ldr	r3, .L104+24
 887 0488 1B78     		ldrb	r3, [r3]
 888 048a FB71     		strb	r3, [r7, #7]
 517:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_SET_ALARM(RTC_tmp,
 889              		.loc 1 517 0
 890 048c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 891 048e 002B     		cmp	r3, #0
 892 0490 13D0     		beq	.L41
 893              		.loc 1 517 0 is_stmt 0 discriminator 1
 894 0492 294B     		ldr	r3, .L104
 895 0494 1B78     		ldrb	r3, [r3]
 896 0496 DAB2     		uxtb	r2, r3
 897 0498 FB79     		ldrb	r3, [r7, #7]
 898 049a 1340     		ands	r3, r3, r2
 899 049c DBB2     		uxtb	r3, r3
 900 049e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 901 04a0 9A42     		cmp	r2, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 26


 902 04a2 0AD1     		bne	.L41
 903              		.loc 1 517 0 discriminator 2
 904 04a4 2B4B     		ldr	r3, .L104+28
 905 04a6 1B78     		ldrb	r3, [r3]
 906 04a8 DBB2     		uxtb	r3, r3
 907 04aa 43F00803 		orr	r3, r3, #8
 908 04ae DAB2     		uxtb	r2, r3
 909 04b0 284B     		ldr	r3, .L104+28
 910 04b2 1A70     		strb	r2, [r3]
 911 04b4 204B     		ldr	r3, .L104
 912 04b6 0022     		movs	r2, #0
 913 04b8 1A70     		strb	r2, [r3]
 914              	.L41:
 518:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_alarmCurStatus,
 519:Generated_Source\PSoC5/RTC_INT.c ****                                            RTC_statusDateTime);
 520:Generated_Source\PSoC5/RTC_INT.c **** 
 521:Generated_Source\PSoC5/RTC_INT.c ****                 /* Every Day */
 522:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 915              		.loc 1 522 0 is_stmt 1
 916 04ba 274B     		ldr	r3, .L104+32
 917 04bc 1B78     		ldrb	r3, [r3]
 918 04be DBB2     		uxtb	r3, r3
 919 04c0 03F00803 		and	r3, r3, #8
 920 04c4 002B     		cmp	r3, #0
 921 04c6 01D0     		beq	.L42
 523:Generated_Source\PSoC5/RTC_INT.c ****                          RTC_INTERVAL_DAY_MASK))
 524:Generated_Source\PSoC5/RTC_INT.c ****                 {
 525:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_EveryDayHandler();
 922              		.loc 1 525 0
 923 04c8 FFF7FEFF 		bl	RTC_EveryDayHandler
 924              	.L42:
 526:Generated_Source\PSoC5/RTC_INT.c ****                 }
 527:Generated_Source\PSoC5/RTC_INT.c **** 
 528:Generated_Source\PSoC5/RTC_INT.c ****                 if(1u == RTC_currentTimeDate.DayOfWeek)
 925              		.loc 1 528 0
 926 04cc 1C4B     		ldr	r3, .L104+8
 927 04ce DB78     		ldrb	r3, [r3, #3]
 928 04d0 DBB2     		uxtb	r3, r3
 929 04d2 012B     		cmp	r3, #1
 930 04d4 08D1     		bne	.L11
 529:Generated_Source\PSoC5/RTC_INT.c ****                 {
 530:Generated_Source\PSoC5/RTC_INT.c ****                     /* Every Week */
 531:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask,
 931              		.loc 1 531 0
 932 04d6 204B     		ldr	r3, .L104+32
 933 04d8 1B78     		ldrb	r3, [r3]
 934 04da DBB2     		uxtb	r3, r3
 935 04dc 03F01003 		and	r3, r3, #16
 936 04e0 002B     		cmp	r3, #0
 937 04e2 01D0     		beq	.L11
 532:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_INTERVAL_WEEK_MASK))
 533:Generated_Source\PSoC5/RTC_INT.c ****                     {
 534:Generated_Source\PSoC5/RTC_INT.c ****                        RTC_EveryWeekHandler();
 938              		.loc 1 534 0
 939 04e4 FFF7FEFF 		bl	RTC_EveryWeekHandler
 940              	.L11:
 535:Generated_Source\PSoC5/RTC_INT.c ****                     }
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 27


 536:Generated_Source\PSoC5/RTC_INT.c ****                 }
 537:Generated_Source\PSoC5/RTC_INT.c **** 
 538:Generated_Source\PSoC5/RTC_INT.c ****             } /* End of day roll over */
 539:Generated_Source\PSoC5/RTC_INT.c **** 
 540:Generated_Source\PSoC5/RTC_INT.c ****             /* Status set PM/AM flag */
 541:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 941              		.loc 1 541 0
 942 04e8 154B     		ldr	r3, .L104+8
 943 04ea 9B78     		ldrb	r3, [r3, #2]
 944 04ec DBB2     		uxtb	r3, r3
 945 04ee 0B2B     		cmp	r3, #11
 946 04f0 08D8     		bhi	.L43
 542:Generated_Source\PSoC5/RTC_INT.c ****             {
 543:Generated_Source\PSoC5/RTC_INT.c ****                 /* AM Hour 00:00-11:59, flag zero */
 544:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 947              		.loc 1 544 0
 948 04f2 184B     		ldr	r3, .L104+28
 949 04f4 1B78     		ldrb	r3, [r3]
 950 04f6 DBB2     		uxtb	r3, r3
 951 04f8 23F00403 		bic	r3, r3, #4
 952 04fc DAB2     		uxtb	r2, r3
 953 04fe 154B     		ldr	r3, .L104+28
 954 0500 1A70     		strb	r2, [r3]
 955 0502 07E0     		b	.L44
 956              	.L43:
 545:Generated_Source\PSoC5/RTC_INT.c ****             }
 546:Generated_Source\PSoC5/RTC_INT.c ****             else
 547:Generated_Source\PSoC5/RTC_INT.c ****             {
 548:Generated_Source\PSoC5/RTC_INT.c ****                 /* PM Hour 12:00-23:59, flag set */
 549:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_statusDateTime |= RTC_STATUS_AM_PM;
 957              		.loc 1 549 0
 958 0504 134B     		ldr	r3, .L104+28
 959 0506 1B78     		ldrb	r3, [r3]
 960 0508 DBB2     		uxtb	r3, r3
 961 050a 43F00403 		orr	r3, r3, #4
 962 050e DAB2     		uxtb	r2, r3
 963 0510 104B     		ldr	r3, .L104+28
 964 0512 1A70     		strb	r2, [r3]
 965              	.L44:
 550:Generated_Source\PSoC5/RTC_INT.c ****             }
 551:Generated_Source\PSoC5/RTC_INT.c **** 
 552:Generated_Source\PSoC5/RTC_INT.c ****             #if (1u == RTC_DST_FUNC_ENABLE)
 553:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStop.Hour == RTC_currentTimeDate.Hour)
 966              		.loc 1 553 0
 967 0514 094B     		ldr	r3, .L104+4
 968 0516 1B78     		ldrb	r3, [r3]
 969 0518 DAB2     		uxtb	r2, r3
 970 051a 094B     		ldr	r3, .L104+8
 971 051c 9B78     		ldrb	r3, [r3, #2]
 972 051e DBB2     		uxtb	r3, r3
 973 0520 9A42     		cmp	r2, r3
 974 0522 1DD1     		bne	.L45
 554:Generated_Source\PSoC5/RTC_INT.c ****                 {
 555:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus |= RTC_DST_HOUR;
 975              		.loc 1 555 0
 976 0524 074B     		ldr	r3, .L104+12
 977 0526 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 28


 978 0528 DBB2     		uxtb	r3, r3
 979 052a 43F00103 		orr	r3, r3, #1
 980 052e DAB2     		uxtb	r2, r3
 981 0530 044B     		ldr	r3, .L104+12
 982 0532 1A70     		strb	r2, [r3]
 983 0534 1CE0     		b	.L46
 984              	.L105:
 985 0536 00BF     		.align	2
 986              	.L104:
 987 0538 00000000 		.word	RTC_alarmCurStatus
 988 053c 00000000 		.word	RTC_dstTimeDateStop
 989 0540 00000000 		.word	RTC_currentTimeDate
 990 0544 00000000 		.word	RTC_dstStopStatus
 991 0548 00000000 		.word	RTC_dstTimeDateStart
 992 054c 00000000 		.word	RTC_dstStartStatus
 993 0550 00000000 		.word	RTC_alarmCfgMask
 994 0554 00000000 		.word	RTC_statusDateTime
 995 0558 00000000 		.word	RTC_intervalCfgMask
 996 055c 00000000 		.word	RTC_alarmCfgTimeDate
 997              	.L45:
 556:Generated_Source\PSoC5/RTC_INT.c ****                 }
 557:Generated_Source\PSoC5/RTC_INT.c ****                 else
 558:Generated_Source\PSoC5/RTC_INT.c ****                 {
 559:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStopStatus &= (uint8)(~RTC_DST_HOUR);
 998              		.loc 1 559 0
 999 0560 A24B     		ldr	r3, .L106
 1000 0562 1B78     		ldrb	r3, [r3]
 1001 0564 DBB2     		uxtb	r3, r3
 1002 0566 23F00103 		bic	r3, r3, #1
 1003 056a DAB2     		uxtb	r2, r3
 1004 056c 9F4B     		ldr	r3, .L106
 1005 056e 1A70     		strb	r2, [r3]
 1006              	.L46:
 560:Generated_Source\PSoC5/RTC_INT.c ****                 }
 561:Generated_Source\PSoC5/RTC_INT.c **** 
 562:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_dstTimeDateStart.Hour == RTC_currentTimeDate.Hour)
 1007              		.loc 1 562 0
 1008 0570 9F4B     		ldr	r3, .L106+4
 1009 0572 1B78     		ldrb	r3, [r3]
 1010 0574 DAB2     		uxtb	r2, r3
 1011 0576 9F4B     		ldr	r3, .L106+8
 1012 0578 9B78     		ldrb	r3, [r3, #2]
 1013 057a DBB2     		uxtb	r3, r3
 1014 057c 9A42     		cmp	r2, r3
 1015 057e 08D1     		bne	.L47
 563:Generated_Source\PSoC5/RTC_INT.c ****                 {
 564:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_dstStartStatus |= RTC_DST_HOUR;
 1016              		.loc 1 564 0
 1017 0580 9D4B     		ldr	r3, .L106+12
 1018 0582 1B78     		ldrb	r3, [r3]
 1019 0584 DBB2     		uxtb	r3, r3
 1020 0586 43F00103 		orr	r3, r3, #1
 1021 058a DAB2     		uxtb	r2, r3
 1022 058c 9A4B     		ldr	r3, .L106+12
 1023 058e 1A70     		strb	r2, [r3]
 1024 0590 07E0     		b	.L48
 1025              	.L47:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 29


 565:Generated_Source\PSoC5/RTC_INT.c ****                 }
 566:Generated_Source\PSoC5/RTC_INT.c ****                 else
 567:Generated_Source\PSoC5/RTC_INT.c ****                 {
 568:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_dstStartStatus &= (uint8)(~RTC_DST_HOUR);
 1026              		.loc 1 568 0
 1027 0592 994B     		ldr	r3, .L106+12
 1028 0594 1B78     		ldrb	r3, [r3]
 1029 0596 DBB2     		uxtb	r3, r3
 1030 0598 23F00103 		bic	r3, r3, #1
 1031 059c DAB2     		uxtb	r2, r3
 1032 059e 964B     		ldr	r3, .L106+12
 1033 05a0 1A70     		strb	r2, [r3]
 1034              	.L48:
 569:Generated_Source\PSoC5/RTC_INT.c ****                 }
 570:Generated_Source\PSoC5/RTC_INT.c **** 
 571:Generated_Source\PSoC5/RTC_INT.c ****                 /* DST Enable ? */
 572:Generated_Source\PSoC5/RTC_INT.c ****                 if(0u != RTC_IS_BIT_SET(RTC_dstModeType, RTC_DST_ENABLE))
 1035              		.loc 1 572 0
 1036 05a2 964B     		ldr	r3, .L106+16
 1037 05a4 1B78     		ldrb	r3, [r3]
 1038 05a6 DBB2     		uxtb	r3, r3
 1039 05a8 03F00103 		and	r3, r3, #1
 1040 05ac 002B     		cmp	r3, #0
 1041 05ae 00F05583 		beq	.L49
 573:Generated_Source\PSoC5/RTC_INT.c ****                 {
 574:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_statusDateTime, RTC_STATUS_DST))
 1042              		.loc 1 574 0
 1043 05b2 934B     		ldr	r3, .L106+20
 1044 05b4 1B78     		ldrb	r3, [r3]
 1045 05b6 DBB2     		uxtb	r3, r3
 1046 05b8 03F00103 		and	r3, r3, #1
 1047 05bc 002B     		cmp	r3, #0
 1048 05be 00F02981 		beq	.L50
 575:Generated_Source\PSoC5/RTC_INT.c ****                     {
 576:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStopStatus, RTC_DST_HOUR |
 1049              		.loc 1 576 0
 1050 05c2 8A4B     		ldr	r3, .L106
 1051 05c4 1B78     		ldrb	r3, [r3]
 1052 05c6 DBB2     		uxtb	r3, r3
 1053 05c8 03F00703 		and	r3, r3, #7
 1054 05cc 072B     		cmp	r3, #7
 1055 05ce 40F08C82 		bne	.L64
 577:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_DAYOFMONTH | RTC_DST_MONTH))
 578:Generated_Source\PSoC5/RTC_INT.c ****                         {
 579:Generated_Source\PSoC5/RTC_INT.c ****                             /* Substruct from current value of minutes, number of minutes
 580:Generated_Source\PSoC5/RTC_INT.c ****                             * in DST offset which is out of complete hour
 581:Generated_Source\PSoC5/RTC_INT.c ****                             */
 582:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min -=
 583:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 1056              		.loc 1 583 0
 1057 05d2 8C4B     		ldr	r3, .L106+24
 1058 05d4 1B78     		ldrb	r3, [r3]
 1059 05d6 DAB2     		uxtb	r2, r3
 1060 05d8 8B4B     		ldr	r3, .L106+28
 1061 05da A3FB0213 		umull	r1, r3, r3, r2
 1062 05de 5909     		lsrs	r1, r3, #5
 1063 05e0 0B46     		mov	r3, r1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 30


 1064 05e2 1B01     		lsls	r3, r3, #4
 1065 05e4 5B1A     		subs	r3, r3, r1
 1066 05e6 9B00     		lsls	r3, r3, #2
 1067 05e8 D31A     		subs	r3, r2, r3
 1068 05ea DBB2     		uxtb	r3, r3
 1069 05ec 1946     		mov	r1, r3
 582:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 1070              		.loc 1 582 0
 1071 05ee 814B     		ldr	r3, .L106+8
 1072 05f0 5B78     		ldrb	r3, [r3, #1]
 1073 05f2 DAB2     		uxtb	r2, r3
 1074 05f4 CBB2     		uxtb	r3, r1
 1075 05f6 D31A     		subs	r3, r2, r3
 1076 05f8 DAB2     		uxtb	r2, r3
 1077 05fa 7E4B     		ldr	r3, .L106+8
 1078 05fc 5A70     		strb	r2, [r3, #1]
 584:Generated_Source\PSoC5/RTC_INT.c **** 
 585:Generated_Source\PSoC5/RTC_INT.c ****                             /* Is minute value negative? */
 586:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 1079              		.loc 1 586 0
 1080 05fe 7D4B     		ldr	r3, .L106+8
 1081 0600 5B78     		ldrb	r3, [r3, #1]
 1082 0602 DBB2     		uxtb	r3, r3
 1083 0604 3B2B     		cmp	r3, #59
 1084 0606 0DD9     		bls	.L52
 587:Generated_Source\PSoC5/RTC_INT.c ****                             {
 588:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 589:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED -     (~currentTimeDate.Min    ) ==
 590:Generated_Source\PSoC5/RTC_INT.c ****                                 * HOUR_ELAPSED + 1 - (~currentTimeDate.Min + 1)
 591:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 592:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min = RTC_HOUR_ELAPSED -
 593:Generated_Source\PSoC5/RTC_INT.c ****                                                              ((uint8)(~RTC_currentTimeDate.Min));
 1085              		.loc 1 593 0
 1086 0608 7A4B     		ldr	r3, .L106+8
 1087 060a 5B78     		ldrb	r3, [r3, #1]
 1088 060c DBB2     		uxtb	r3, r3
 592:Generated_Source\PSoC5/RTC_INT.c ****                                                              ((uint8)(~RTC_currentTimeDate.Min));
 1089              		.loc 1 592 0
 1090 060e 3C33     		adds	r3, r3, #60
 1091 0610 DAB2     		uxtb	r2, r3
 1092 0612 784B     		ldr	r3, .L106+8
 1093 0614 5A70     		strb	r2, [r3, #1]
 594:Generated_Source\PSoC5/RTC_INT.c **** 
 595:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour--;
 1094              		.loc 1 595 0
 1095 0616 774B     		ldr	r3, .L106+8
 1096 0618 9B78     		ldrb	r3, [r3, #2]
 1097 061a DBB2     		uxtb	r3, r3
 1098 061c 013B     		subs	r3, r3, #1
 1099 061e DAB2     		uxtb	r2, r3
 1100 0620 744B     		ldr	r3, .L106+8
 1101 0622 9A70     		strb	r2, [r3, #2]
 1102              	.L52:
 596:Generated_Source\PSoC5/RTC_INT.c ****                             }
 597:Generated_Source\PSoC5/RTC_INT.c **** 
 598:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour -= RTC_dstOffsetMin /
 1103              		.loc 1 598 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 31


 1104 0624 774B     		ldr	r3, .L106+24
 1105 0626 1B78     		ldrb	r3, [r3]
 1106 0628 DBB2     		uxtb	r3, r3
 1107 062a 774A     		ldr	r2, .L106+28
 1108 062c A2FB0323 		umull	r2, r3, r2, r3
 1109 0630 5B09     		lsrs	r3, r3, #5
 1110 0632 DBB2     		uxtb	r3, r3
 1111 0634 1946     		mov	r1, r3
 1112 0636 6F4B     		ldr	r3, .L106+8
 1113 0638 9B78     		ldrb	r3, [r3, #2]
 1114 063a DAB2     		uxtb	r2, r3
 1115 063c CBB2     		uxtb	r3, r1
 1116 063e D31A     		subs	r3, r2, r3
 1117 0640 DAB2     		uxtb	r2, r3
 1118 0642 6C4B     		ldr	r3, .L106+8
 1119 0644 9A70     		strb	r2, [r3, #2]
 599:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 600:Generated_Source\PSoC5/RTC_INT.c **** 
 601:Generated_Source\PSoC5/RTC_INT.c ****                             /* Day roll over
 602:Generated_Source\PSoC5/RTC_INT.c ****                             * Is hour value negative? */
 603:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 1120              		.loc 1 603 0
 1121 0646 6B4B     		ldr	r3, .L106+8
 1122 0648 9B78     		ldrb	r3, [r3, #2]
 1123 064a DBB2     		uxtb	r3, r3
 1124 064c 172B     		cmp	r3, #23
 1125 064e 40F2C180 		bls	.L53
 604:Generated_Source\PSoC5/RTC_INT.c ****                             {
 605:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Convert to the positive.
 606:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED - (~currentTimeDate.Hour) ==
 607:Generated_Source\PSoC5/RTC_INT.c ****                                 * DAY_ELAPSED + 1 - (~currentTimeDate.Hour + 1)
 608:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 609:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour = RTC_DAY_ELAPSED -
 610:Generated_Source\PSoC5/RTC_INT.c ****                                                               ((uint8)(~RTC_currentTimeDate.Hour));
 1126              		.loc 1 610 0
 1127 0652 684B     		ldr	r3, .L106+8
 1128 0654 9B78     		ldrb	r3, [r3, #2]
 1129 0656 DBB2     		uxtb	r3, r3
 609:Generated_Source\PSoC5/RTC_INT.c ****                                                               ((uint8)(~RTC_currentTimeDate.Hour));
 1130              		.loc 1 609 0
 1131 0658 1833     		adds	r3, r3, #24
 1132 065a DAB2     		uxtb	r2, r3
 1133 065c 654B     		ldr	r3, .L106+8
 1134 065e 9A70     		strb	r2, [r3, #2]
 611:Generated_Source\PSoC5/RTC_INT.c **** 
 612:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 613:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 1135              		.loc 1 613 0
 1136 0660 644B     		ldr	r3, .L106+8
 1137 0662 9B78     		ldrb	r3, [r3, #2]
 1138 0664 DBB2     		uxtb	r3, r3
 1139 0666 0B2B     		cmp	r3, #11
 1140 0668 08D8     		bhi	.L54
 614:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 615:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 616:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 1141              		.loc 1 616 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 32


 1142 066a 654B     		ldr	r3, .L106+20
 1143 066c 1B78     		ldrb	r3, [r3]
 1144 066e DBB2     		uxtb	r3, r3
 1145 0670 23F00403 		bic	r3, r3, #4
 1146 0674 DAB2     		uxtb	r2, r3
 1147 0676 624B     		ldr	r3, .L106+20
 1148 0678 1A70     		strb	r2, [r3]
 1149 067a 07E0     		b	.L55
 1150              	.L54:
 617:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 618:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 619:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 620:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 621:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 1151              		.loc 1 621 0
 1152 067c 604B     		ldr	r3, .L106+20
 1153 067e 1B78     		ldrb	r3, [r3]
 1154 0680 DBB2     		uxtb	r3, r3
 1155 0682 43F00403 		orr	r3, r3, #4
 1156 0686 DAB2     		uxtb	r2, r3
 1157 0688 5D4B     		ldr	r3, .L106+20
 1158 068a 1A70     		strb	r2, [r3]
 1159              	.L55:
 622:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 623:Generated_Source\PSoC5/RTC_INT.c **** 
 624:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth--;
 1160              		.loc 1 624 0
 1161 068c 594B     		ldr	r3, .L106+8
 1162 068e 1B79     		ldrb	r3, [r3, #4]
 1163 0690 DBB2     		uxtb	r3, r3
 1164 0692 013B     		subs	r3, r3, #1
 1165 0694 DAB2     		uxtb	r2, r3
 1166 0696 574B     		ldr	r3, .L106+8
 1167 0698 1A71     		strb	r2, [r3, #4]
 625:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear--;
 1168              		.loc 1 625 0
 1169 069a 564B     		ldr	r3, .L106+8
 1170 069c DB88     		ldrh	r3, [r3, #6]	@ movhi
 1171 069e 9BB2     		uxth	r3, r3
 1172 06a0 013B     		subs	r3, r3, #1
 1173 06a2 9AB2     		uxth	r2, r3
 1174 06a4 534B     		ldr	r3, .L106+8
 1175 06a6 DA80     		strh	r2, [r3, #6]	@ movhi
 626:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek--;
 1176              		.loc 1 626 0
 1177 06a8 524B     		ldr	r3, .L106+8
 1178 06aa DB78     		ldrb	r3, [r3, #3]
 1179 06ac DBB2     		uxtb	r3, r3
 1180 06ae 013B     		subs	r3, r3, #1
 1181 06b0 DAB2     		uxtb	r2, r3
 1182 06b2 504B     		ldr	r3, .L106+8
 1183 06b4 DA70     		strb	r2, [r3, #3]
 627:Generated_Source\PSoC5/RTC_INT.c **** 
 628:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfWeek)
 1184              		.loc 1 628 0
 1185 06b6 4F4B     		ldr	r3, .L106+8
 1186 06b8 DB78     		ldrb	r3, [r3, #3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 33


 1187 06ba DBB2     		uxtb	r3, r3
 1188 06bc 002B     		cmp	r3, #0
 1189 06be 02D1     		bne	.L56
 629:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 630:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = RTC_DAYS_IN_WEEK;
 1190              		.loc 1 630 0
 1191 06c0 4C4B     		ldr	r3, .L106+8
 1192 06c2 0722     		movs	r2, #7
 1193 06c4 DA70     		strb	r2, [r3, #3]
 1194              	.L56:
 631:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 632:Generated_Source\PSoC5/RTC_INT.c **** 
 633:Generated_Source\PSoC5/RTC_INT.c ****                                 if(0u == RTC_currentTimeDate.DayOfMonth)
 1195              		.loc 1 633 0
 1196 06c6 4B4B     		ldr	r3, .L106+8
 1197 06c8 1B79     		ldrb	r3, [r3, #4]
 1198 06ca DBB2     		uxtb	r3, r3
 1199 06cc 002B     		cmp	r3, #0
 1200 06ce 7FD1     		bne	.L57
 634:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 635:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month--;
 1201              		.loc 1 635 0
 1202 06d0 484B     		ldr	r3, .L106+8
 1203 06d2 1B7A     		ldrb	r3, [r3, #8]
 1204 06d4 DBB2     		uxtb	r3, r3
 1205 06d6 013B     		subs	r3, r3, #1
 1206 06d8 DAB2     		uxtb	r2, r3
 1207 06da 464B     		ldr	r3, .L106+8
 1208 06dc 1A72     		strb	r2, [r3, #8]
 636:Generated_Source\PSoC5/RTC_INT.c ****                                     if(0u == RTC_currentTimeDate.Month)
 1209              		.loc 1 636 0
 1210 06de 454B     		ldr	r3, .L106+8
 1211 06e0 1B7A     		ldrb	r3, [r3, #8]
 1212 06e2 DBB2     		uxtb	r3, r3
 1213 06e4 002B     		cmp	r3, #0
 1214 06e6 52D1     		bne	.L58
 637:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 638:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_DECEMBER;
 1215              		.loc 1 638 0
 1216 06e8 424B     		ldr	r3, .L106+8
 1217 06ea 0C22     		movs	r2, #12
 1218 06ec 1A72     		strb	r2, [r3, #8]
 639:Generated_Source\PSoC5/RTC_INT.c **** 
 640:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfMonth =
 641:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 1219              		.loc 1 641 0
 1220 06ee 414B     		ldr	r3, .L106+8
 1221 06f0 1B7A     		ldrb	r3, [r3, #8]
 1222 06f2 DBB2     		uxtb	r3, r3
 1223 06f4 013B     		subs	r3, r3, #1
 1224 06f6 454A     		ldr	r2, .L106+32
 1225 06f8 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 640:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 1226              		.loc 1 640 0
 1227 06fa 3E4B     		ldr	r3, .L106+8
 1228 06fc 1A71     		strb	r2, [r3, #4]
 642:Generated_Source\PSoC5/RTC_INT.c **** 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 34


 643:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year--;
 1229              		.loc 1 643 0
 1230 06fe 3D4B     		ldr	r3, .L106+8
 1231 0700 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1232 0702 9BB2     		uxth	r3, r3
 1233 0704 013B     		subs	r3, r3, #1
 1234 0706 9AB2     		uxth	r2, r3
 1235 0708 3A4B     		ldr	r3, .L106+8
 1236 070a 5A81     		strh	r2, [r3, #10]	@ movhi
 644:Generated_Source\PSoC5/RTC_INT.c **** 
 645:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 1237              		.loc 1 645 0
 1238 070c 394B     		ldr	r3, .L106+8
 1239 070e 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1240 0710 9BB2     		uxth	r3, r3
 1241 0712 3F4A     		ldr	r2, .L106+36
 1242 0714 A2FB0312 		umull	r1, r2, r2, r3
 1243 0718 D209     		lsrs	r2, r2, #7
 1244 071a 4FF4C871 		mov	r1, #400
 1245 071e 01FB02F2 		mul	r2, r1, r2
 1246 0722 9B1A     		subs	r3, r3, r2
 1247 0724 9BB2     		uxth	r3, r3
 1248 0726 002B     		cmp	r3, #0
 1249 0728 15D0     		beq	.L59
 1250              		.loc 1 645 0 is_stmt 0 discriminator 1
 1251 072a 324B     		ldr	r3, .L106+8
 1252 072c 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1253 072e 9BB2     		uxth	r3, r3
 1254 0730 03F00303 		and	r3, r3, #3
 1255 0734 9BB2     		uxth	r3, r3
 1256 0736 002B     		cmp	r3, #0
 1257 0738 1AD1     		bne	.L60
 1258              		.loc 1 645 0 discriminator 2
 1259 073a 2E4B     		ldr	r3, .L106+8
 1260 073c 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1261 073e 9BB2     		uxth	r3, r3
 1262 0740 334A     		ldr	r2, .L106+36
 1263 0742 A2FB0312 		umull	r1, r2, r2, r3
 1264 0746 5209     		lsrs	r2, r2, #5
 1265 0748 6421     		movs	r1, #100
 1266 074a 01FB02F2 		mul	r2, r1, r2
 1267 074e 9B1A     		subs	r3, r3, r2
 1268 0750 9BB2     		uxth	r3, r3
 1269 0752 002B     		cmp	r3, #0
 1270 0754 0CD0     		beq	.L60
 1271              	.L59:
 646:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 647:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 648:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 1272              		.loc 1 648 0 is_stmt 1
 1273 0756 2A4B     		ldr	r3, .L106+20
 1274 0758 1B78     		ldrb	r3, [r3]
 1275 075a DBB2     		uxtb	r3, r3
 1276 075c 43F00203 		orr	r3, r3, #2
 1277 0760 DAB2     		uxtb	r2, r3
 1278 0762 274B     		ldr	r3, .L106+20
 1279 0764 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 35


 649:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear =
 1280              		.loc 1 649 0
 1281 0766 234B     		ldr	r3, .L106+8
 1282 0768 4FF4B772 		mov	r2, #366
 1283 076c DA80     		strh	r2, [r3, #6]	@ movhi
 1284 076e 0BE0     		b	.L61
 1285              	.L60:
 650:Generated_Source\PSoC5/RTC_INT.c ****                                                                                     RTC_DAYS_IN_LEA
 651:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 652:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 653:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 654:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 1286              		.loc 1 654 0
 1287 0770 234B     		ldr	r3, .L106+20
 1288 0772 1B78     		ldrb	r3, [r3]
 1289 0774 DBB2     		uxtb	r3, r3
 1290 0776 23F00203 		bic	r3, r3, #2
 1291 077a DAB2     		uxtb	r2, r3
 1292 077c 204B     		ldr	r3, .L106+20
 1293 077e 1A70     		strb	r2, [r3]
 655:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfYear = RTC_DAYS_IN_YEAR;
 1294              		.loc 1 655 0
 1295 0780 1C4B     		ldr	r3, .L106+8
 1296 0782 40F26D12 		movw	r2, #365
 1297 0786 DA80     		strh	r2, [r3, #6]	@ movhi
 1298              	.L61:
 656:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 657:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 1299              		.loc 1 657 0
 1300 0788 FFF7FEFF 		bl	RTC_EveryYearHandler
 1301 078c 1EE0     		b	.L62
 1302              	.L58:
 658:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 659:Generated_Source\PSoC5/RTC_INT.c ****                                     else
 660:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 661:Generated_Source\PSoC5/RTC_INT.c ****                                         /* Day of month roll over.
 662:Generated_Source\PSoC5/RTC_INT.c ****                                         * Check if day of month February 29 of leap year
 663:Generated_Source\PSoC5/RTC_INT.c ****                                         */
 664:Generated_Source\PSoC5/RTC_INT.c ****                                         if((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 1303              		.loc 1 664 0
 1304 078e 1C4B     		ldr	r3, .L106+20
 1305 0790 1B78     		ldrb	r3, [r3]
 1306 0792 DBB2     		uxtb	r3, r3
 1307 0794 03F00203 		and	r3, r3, #2
 1308 0798 002B     		cmp	r3, #0
 1309 079a 0FD0     		beq	.L63
 665:Generated_Source\PSoC5/RTC_INT.c ****                                             (RTC_currentTimeDate.Month == RTC_FEBRUARY))
 1310              		.loc 1 665 0 discriminator 1
 1311 079c 154B     		ldr	r3, .L106+8
 1312 079e 1B7A     		ldrb	r3, [r3, #8]
 1313 07a0 DBB2     		uxtb	r3, r3
 664:Generated_Source\PSoC5/RTC_INT.c ****                                             (RTC_currentTimeDate.Month == RTC_FEBRUARY))
 1314              		.loc 1 664 0 discriminator 1
 1315 07a2 022B     		cmp	r3, #2
 1316 07a4 0AD1     		bne	.L63
 666:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 667:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 36


 668:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
 1317              		.loc 1 668 0
 1318 07a6 134B     		ldr	r3, .L106+8
 1319 07a8 1B7A     		ldrb	r3, [r3, #8]
 1320 07aa DBB2     		uxtb	r3, r3
 1321 07ac 013B     		subs	r3, r3, #1
 1322 07ae 174A     		ldr	r2, .L106+32
 1323 07b0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 667:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u]
 1324              		.loc 1 667 0
 1325 07b2 0133     		adds	r3, r3, #1
 1326 07b4 DAB2     		uxtb	r2, r3
 1327 07b6 0F4B     		ldr	r3, .L106+8
 1328 07b8 1A71     		strb	r2, [r3, #4]
 1329 07ba 07E0     		b	.L62
 1330              	.L63:
 669:Generated_Source\PSoC5/RTC_INT.c ****                                             + 1u;
 670:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 671:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 672:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 673:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_currentTimeDate.DayOfMonth =
 674:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 1331              		.loc 1 674 0
 1332 07bc 0D4B     		ldr	r3, .L106+8
 1333 07be 1B7A     		ldrb	r3, [r3, #8]
 1334 07c0 DBB2     		uxtb	r3, r3
 1335 07c2 013B     		subs	r3, r3, #1
 1336 07c4 114A     		ldr	r2, .L106+32
 1337 07c6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 673:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_daysInMonths[RTC_currentTimeDate.Month - 1u];
 1338              		.loc 1 673 0
 1339 07c8 0A4B     		ldr	r3, .L106+8
 1340 07ca 1A71     		strb	r2, [r3, #4]
 1341              	.L62:
 675:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 676:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 677:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 1342              		.loc 1 677 0
 1343 07cc FFF7FEFF 		bl	RTC_EveryMonthHandler
 1344              	.L57:
 678:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 679:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 1345              		.loc 1 679 0
 1346 07d0 FFF7FEFF 		bl	RTC_EveryDayHandler
 1347              	.L53:
 680:Generated_Source\PSoC5/RTC_INT.c ****                             }
 681:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_DST);
 1348              		.loc 1 681 0
 1349 07d4 0A4B     		ldr	r3, .L106+20
 1350 07d6 1B78     		ldrb	r3, [r3]
 1351 07d8 DBB2     		uxtb	r3, r3
 1352 07da 23F00103 		bic	r3, r3, #1
 1353 07de DAB2     		uxtb	r2, r3
 1354 07e0 074B     		ldr	r3, .L106+20
 1355 07e2 1A70     		strb	r2, [r3]
 682:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStopStatus = 0u;
 1356              		.loc 1 682 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 37


 1357 07e4 014B     		ldr	r3, .L106
 1358 07e6 0022     		movs	r2, #0
 1359 07e8 1A70     		strb	r2, [r3]
 1360 07ea 7EE1     		b	.L64
 1361              	.L107:
 1362              		.align	2
 1363              	.L106:
 1364 07ec 00000000 		.word	RTC_dstStopStatus
 1365 07f0 00000000 		.word	RTC_dstTimeDateStart
 1366 07f4 00000000 		.word	RTC_currentTimeDate
 1367 07f8 00000000 		.word	RTC_dstStartStatus
 1368 07fc 00000000 		.word	RTC_dstModeType
 1369 0800 00000000 		.word	RTC_statusDateTime
 1370 0804 00000000 		.word	RTC_dstOffsetMin
 1371 0808 89888888 		.word	-2004318071
 1372 080c 00000000 		.word	RTC_daysInMonths
 1373 0810 1F85EB51 		.word	1374389535
 1374              	.L50:
 683:Generated_Source\PSoC5/RTC_INT.c ****                         }
 684:Generated_Source\PSoC5/RTC_INT.c ****                     }
 685:Generated_Source\PSoC5/RTC_INT.c ****                     else
 686:Generated_Source\PSoC5/RTC_INT.c ****                     {
 687:Generated_Source\PSoC5/RTC_INT.c ****                         if(0u != RTC_IS_BIT_SET(RTC_dstStartStatus,
 1375              		.loc 1 687 0
 1376 0814 9B4B     		ldr	r3, .L108
 1377 0816 1B78     		ldrb	r3, [r3]
 1378 0818 DBB2     		uxtb	r3, r3
 1379 081a 03F00703 		and	r3, r3, #7
 1380 081e 072B     		cmp	r3, #7
 1381 0820 40F06381 		bne	.L64
 688:Generated_Source\PSoC5/RTC_INT.c ****                                                       (RTC_DST_HOUR | RTC_DST_DAYOFMONTH |
 689:Generated_Source\PSoC5/RTC_INT.c ****                                                        RTC_DST_MONTH)))
 690:Generated_Source\PSoC5/RTC_INT.c ****                         {
 691:Generated_Source\PSoC5/RTC_INT.c ****                             /* Add Hour and Min */
 692:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Min +=
 693:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 1382              		.loc 1 693 0
 1383 0824 984B     		ldr	r3, .L108+4
 1384 0826 1B78     		ldrb	r3, [r3]
 1385 0828 DAB2     		uxtb	r2, r3
 1386 082a 984B     		ldr	r3, .L108+8
 1387 082c A3FB0213 		umull	r1, r3, r3, r2
 1388 0830 5909     		lsrs	r1, r3, #5
 1389 0832 0B46     		mov	r3, r1
 1390 0834 1B01     		lsls	r3, r3, #4
 1391 0836 5B1A     		subs	r3, r3, r1
 1392 0838 9B00     		lsls	r3, r3, #2
 1393 083a D31A     		subs	r3, r2, r3
 1394 083c DBB2     		uxtb	r3, r3
 1395 083e 1946     		mov	r1, r3
 692:Generated_Source\PSoC5/RTC_INT.c ****                                                 RTC_dstOffsetMin % (RTC_HOUR_ELAPSED + 1u);
 1396              		.loc 1 692 0
 1397 0840 934B     		ldr	r3, .L108+12
 1398 0842 5B78     		ldrb	r3, [r3, #1]
 1399 0844 DAB2     		uxtb	r2, r3
 1400 0846 CBB2     		uxtb	r3, r1
 1401 0848 1344     		add	r3, r3, r2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 38


 1402 084a DAB2     		uxtb	r2, r3
 1403 084c 904B     		ldr	r3, .L108+12
 1404 084e 5A70     		strb	r2, [r3, #1]
 694:Generated_Source\PSoC5/RTC_INT.c **** 
 695:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Min > RTC_HOUR_ELAPSED)
 1405              		.loc 1 695 0
 1406 0850 8F4B     		ldr	r3, .L108+12
 1407 0852 5B78     		ldrb	r3, [r3, #1]
 1408 0854 DBB2     		uxtb	r3, r3
 1409 0856 3B2B     		cmp	r3, #59
 1410 0858 0DD9     		bls	.L65
 696:Generated_Source\PSoC5/RTC_INT.c ****                             {
 697:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust Min */
 698:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Min -= (RTC_HOUR_ELAPSED + 1u);
 1411              		.loc 1 698 0
 1412 085a 8D4B     		ldr	r3, .L108+12
 1413 085c 5B78     		ldrb	r3, [r3, #1]
 1414 085e DBB2     		uxtb	r3, r3
 1415 0860 3C3B     		subs	r3, r3, #60
 1416 0862 DAB2     		uxtb	r2, r3
 1417 0864 8A4B     		ldr	r3, .L108+12
 1418 0866 5A70     		strb	r2, [r3, #1]
 699:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour++;
 1419              		.loc 1 699 0
 1420 0868 894B     		ldr	r3, .L108+12
 1421 086a 9B78     		ldrb	r3, [r3, #2]
 1422 086c DBB2     		uxtb	r3, r3
 1423 086e 0133     		adds	r3, r3, #1
 1424 0870 DAB2     		uxtb	r2, r3
 1425 0872 874B     		ldr	r3, .L108+12
 1426 0874 9A70     		strb	r2, [r3, #2]
 1427              	.L65:
 700:Generated_Source\PSoC5/RTC_INT.c ****                             }
 701:Generated_Source\PSoC5/RTC_INT.c **** 
 702:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_currentTimeDate.Hour += RTC_dstOffsetMin /
 1428              		.loc 1 702 0
 1429 0876 844B     		ldr	r3, .L108+4
 1430 0878 1B78     		ldrb	r3, [r3]
 1431 087a DBB2     		uxtb	r3, r3
 1432 087c 834A     		ldr	r2, .L108+8
 1433 087e A2FB0323 		umull	r2, r3, r2, r3
 1434 0882 5B09     		lsrs	r3, r3, #5
 1435 0884 DBB2     		uxtb	r3, r3
 1436 0886 1946     		mov	r1, r3
 1437 0888 814B     		ldr	r3, .L108+12
 1438 088a 9B78     		ldrb	r3, [r3, #2]
 1439 088c DAB2     		uxtb	r2, r3
 1440 088e CBB2     		uxtb	r3, r1
 1441 0890 1344     		add	r3, r3, r2
 1442 0892 DAB2     		uxtb	r2, r3
 1443 0894 7E4B     		ldr	r3, .L108+12
 1444 0896 9A70     		strb	r2, [r3, #2]
 703:Generated_Source\PSoC5/RTC_INT.c ****                                                                      (RTC_HOUR_ELAPSED + 1u);
 704:Generated_Source\PSoC5/RTC_INT.c **** 
 705:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_currentTimeDate.Hour > RTC_DAY_ELAPSED)
 1445              		.loc 1 705 0
 1446 0898 7D4B     		ldr	r3, .L108+12
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 39


 1447 089a 9B78     		ldrb	r3, [r3, #2]
 1448 089c DBB2     		uxtb	r3, r3
 1449 089e 172B     		cmp	r3, #23
 1450 08a0 40F2D480 		bls	.L66
 706:Generated_Source\PSoC5/RTC_INT.c ****                             {
 707:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Adjust hour, add day */
 708:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.Hour -= (RTC_DAY_ELAPSED + 1u);
 1451              		.loc 1 708 0
 1452 08a4 7A4B     		ldr	r3, .L108+12
 1453 08a6 9B78     		ldrb	r3, [r3, #2]
 1454 08a8 DBB2     		uxtb	r3, r3
 1455 08aa 183B     		subs	r3, r3, #24
 1456 08ac DAB2     		uxtb	r2, r3
 1457 08ae 784B     		ldr	r3, .L108+12
 1458 08b0 9A70     		strb	r2, [r3, #2]
 709:Generated_Source\PSoC5/RTC_INT.c **** 
 710:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Status set PM/AM flag */
 711:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.Hour < RTC_HALF_OF_DAY_ELAPSED)
 1459              		.loc 1 711 0
 1460 08b2 774B     		ldr	r3, .L108+12
 1461 08b4 9B78     		ldrb	r3, [r3, #2]
 1462 08b6 DBB2     		uxtb	r3, r3
 1463 08b8 0B2B     		cmp	r3, #11
 1464 08ba 08D8     		bhi	.L67
 712:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 713:Generated_Source\PSoC5/RTC_INT.c ****                                     /* AM Hour 00:00-11:59, flag zero */
 714:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime &= (uint8)(~RTC_STATUS_AM_PM);
 1465              		.loc 1 714 0
 1466 08bc 754B     		ldr	r3, .L108+16
 1467 08be 1B78     		ldrb	r3, [r3]
 1468 08c0 DBB2     		uxtb	r3, r3
 1469 08c2 23F00403 		bic	r3, r3, #4
 1470 08c6 DAB2     		uxtb	r2, r3
 1471 08c8 724B     		ldr	r3, .L108+16
 1472 08ca 1A70     		strb	r2, [r3]
 1473 08cc 07E0     		b	.L68
 1474              	.L67:
 715:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 716:Generated_Source\PSoC5/RTC_INT.c ****                                 else
 717:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 718:Generated_Source\PSoC5/RTC_INT.c ****                                     /* PM Hour 12:00-23:59, flag set */
 719:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_statusDateTime |= RTC_STATUS_AM_PM;
 1475              		.loc 1 719 0
 1476 08ce 714B     		ldr	r3, .L108+16
 1477 08d0 1B78     		ldrb	r3, [r3]
 1478 08d2 DBB2     		uxtb	r3, r3
 1479 08d4 43F00403 		orr	r3, r3, #4
 1480 08d8 DAB2     		uxtb	r2, r3
 1481 08da 6E4B     		ldr	r3, .L108+16
 1482 08dc 1A70     		strb	r2, [r3]
 1483              	.L68:
 720:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 721:Generated_Source\PSoC5/RTC_INT.c **** 
 722:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfMonth++;
 1484              		.loc 1 722 0
 1485 08de 6C4B     		ldr	r3, .L108+12
 1486 08e0 1B79     		ldrb	r3, [r3, #4]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 40


 1487 08e2 DBB2     		uxtb	r3, r3
 1488 08e4 0133     		adds	r3, r3, #1
 1489 08e6 DAB2     		uxtb	r2, r3
 1490 08e8 694B     		ldr	r3, .L108+12
 1491 08ea 1A71     		strb	r2, [r3, #4]
 723:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfYear++;
 1492              		.loc 1 723 0
 1493 08ec 684B     		ldr	r3, .L108+12
 1494 08ee DB88     		ldrh	r3, [r3, #6]	@ movhi
 1495 08f0 9BB2     		uxth	r3, r3
 1496 08f2 0133     		adds	r3, r3, #1
 1497 08f4 9AB2     		uxth	r2, r3
 1498 08f6 664B     		ldr	r3, .L108+12
 1499 08f8 DA80     		strh	r2, [r3, #6]	@ movhi
 724:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_currentTimeDate.DayOfWeek++;
 1500              		.loc 1 724 0
 1501 08fa 654B     		ldr	r3, .L108+12
 1502 08fc DB78     		ldrb	r3, [r3, #3]
 1503 08fe DBB2     		uxtb	r3, r3
 1504 0900 0133     		adds	r3, r3, #1
 1505 0902 DAB2     		uxtb	r2, r3
 1506 0904 624B     		ldr	r3, .L108+12
 1507 0906 DA70     		strb	r2, [r3, #3]
 725:Generated_Source\PSoC5/RTC_INT.c **** 
 726:Generated_Source\PSoC5/RTC_INT.c ****                                 if(RTC_currentTimeDate.DayOfWeek > RTC_WEEK_ELAPSED)
 1508              		.loc 1 726 0
 1509 0908 614B     		ldr	r3, .L108+12
 1510 090a DB78     		ldrb	r3, [r3, #3]
 1511 090c DBB2     		uxtb	r3, r3
 1512 090e 072B     		cmp	r3, #7
 1513 0910 02D9     		bls	.L69
 727:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 728:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfWeek = 1u;
 1514              		.loc 1 728 0
 1515 0912 5F4B     		ldr	r3, .L108+12
 1516 0914 0122     		movs	r2, #1
 1517 0916 DA70     		strb	r2, [r3, #3]
 1518              	.L69:
 729:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 730:Generated_Source\PSoC5/RTC_INT.c **** 
 731:Generated_Source\PSoC5/RTC_INT.c ****                                 /* Day of month roll over.
 732:Generated_Source\PSoC5/RTC_INT.c ****                                 * Check if day of month greater than 29 in February of leap year or
 733:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than 28 NOT in February of NON leap year 
 734:Generated_Source\PSoC5/RTC_INT.c ****                                 * if day of month greater than it should be in every month in non l
 735:Generated_Source\PSoC5/RTC_INT.c ****                                 */
 736:Generated_Source\PSoC5/RTC_INT.c ****                                 if(((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 1519              		.loc 1 736 0
 1520 0918 5E4B     		ldr	r3, .L108+16
 1521 091a 1B78     		ldrb	r3, [r3]
 1522 091c DBB2     		uxtb	r3, r3
 1523 091e 03F00203 		and	r3, r3, #2
 1524 0922 002B     		cmp	r3, #0
 1525 0924 11D0     		beq	.L70
 737:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 1526              		.loc 1 737 0 discriminator 1
 1527 0926 5A4B     		ldr	r3, .L108+12
 1528 0928 1B7A     		ldrb	r3, [r3, #8]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 41


 1529 092a DBB2     		uxtb	r3, r3
 736:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month == RTC_FEBRUARY)  &&
 1530              		.loc 1 736 0 discriminator 1
 1531 092c 022B     		cmp	r3, #2
 1532 092e 0CD1     		bne	.L70
 738:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 1533              		.loc 1 738 0
 1534 0930 574B     		ldr	r3, .L108+12
 1535 0932 1B79     		ldrb	r3, [r3, #4]
 1536 0934 DBB2     		uxtb	r3, r3
 1537 0936 1946     		mov	r1, r3
 739:Generated_Source\PSoC5/RTC_INT.c ****                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 1538              		.loc 1 739 0
 1539 0938 554B     		ldr	r3, .L108+12
 1540 093a 1B7A     		ldrb	r3, [r3, #8]
 1541 093c DBB2     		uxtb	r3, r3
 1542 093e 013B     		subs	r3, r3, #1
 1543 0940 554A     		ldr	r2, .L108+20
 1544 0942 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1545 0944 0133     		adds	r3, r3, #1
 737:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 1546              		.loc 1 737 0
 1547 0946 9942     		cmp	r1, r3
 1548 0948 28D8     		bhi	.L71
 1549              	.L70:
 740:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 1550              		.loc 1 740 0
 1551 094a 524B     		ldr	r3, .L108+16
 1552 094c 1B78     		ldrb	r3, [r3]
 1553 094e DBB2     		uxtb	r3, r3
 1554 0950 03F00203 		and	r3, r3, #2
 739:Generated_Source\PSoC5/RTC_INT.c ****                                   (RTC_daysInMonths[RTC_currentTimeDate.Month - 1u] + 1u))) ||
 1555              		.loc 1 739 0
 1556 0954 002B     		cmp	r3, #0
 1557 0956 0FD0     		beq	.L72
 741:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
 1558              		.loc 1 741 0
 1559 0958 4D4B     		ldr	r3, .L108+12
 1560 095a 1B7A     		ldrb	r3, [r3, #8]
 1561 095c DBB2     		uxtb	r3, r3
 740:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u != (RTC_statusDateTime & RTC_STATUS_LY)) &&
 1562              		.loc 1 740 0
 1563 095e 022B     		cmp	r3, #2
 1564 0960 0AD0     		beq	.L72
 742:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 1565              		.loc 1 742 0
 1566 0962 4B4B     		ldr	r3, .L108+12
 1567 0964 1B79     		ldrb	r3, [r3, #4]
 1568 0966 DAB2     		uxtb	r2, r3
 743:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 1569              		.loc 1 743 0
 1570 0968 494B     		ldr	r3, .L108+12
 1571 096a 1B7A     		ldrb	r3, [r3, #8]
 1572 096c DBB2     		uxtb	r3, r3
 1573 096e 013B     		subs	r3, r3, #1
 1574 0970 4949     		ldr	r1, .L108+20
 1575 0972 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 42


 741:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.Month != RTC_FEBRUARY)  &&
 1576              		.loc 1 741 0
 1577 0974 9A42     		cmp	r2, r3
 1578 0976 11D8     		bhi	.L71
 1579              	.L72:
 744:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
 1580              		.loc 1 744 0
 1581 0978 464B     		ldr	r3, .L108+16
 1582 097a 1B78     		ldrb	r3, [r3]
 1583 097c DBB2     		uxtb	r3, r3
 1584 097e 03F00203 		and	r3, r3, #2
 743:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])) ||
 1585              		.loc 1 743 0
 1586 0982 002B     		cmp	r3, #0
 1587 0984 60D1     		bne	.L73
 745:Generated_Source\PSoC5/RTC_INT.c ****                                     (RTC_currentTimeDate.DayOfMonth >
 1588              		.loc 1 745 0
 1589 0986 424B     		ldr	r3, .L108+12
 1590 0988 1B79     		ldrb	r3, [r3, #4]
 1591 098a DAB2     		uxtb	r2, r3
 746:Generated_Source\PSoC5/RTC_INT.c ****                                      RTC_daysInMonths[RTC_currentTimeDate.Month - 1u])))
 1592              		.loc 1 746 0
 1593 098c 404B     		ldr	r3, .L108+12
 1594 098e 1B7A     		ldrb	r3, [r3, #8]
 1595 0990 DBB2     		uxtb	r3, r3
 1596 0992 013B     		subs	r3, r3, #1
 1597 0994 4049     		ldr	r1, .L108+20
 1598 0996 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 744:Generated_Source\PSoC5/RTC_INT.c ****                                    ((0u == (RTC_statusDateTime & RTC_STATUS_LY)) &&
 1599              		.loc 1 744 0
 1600 0998 9A42     		cmp	r2, r3
 1601 099a 55D9     		bls	.L73
 1602              	.L71:
 747:Generated_Source\PSoC5/RTC_INT.c ****                                 {
 748:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.Month++;
 1603              		.loc 1 748 0
 1604 099c 3C4B     		ldr	r3, .L108+12
 1605 099e 1B7A     		ldrb	r3, [r3, #8]
 1606 09a0 DBB2     		uxtb	r3, r3
 1607 09a2 0133     		adds	r3, r3, #1
 1608 09a4 DAB2     		uxtb	r2, r3
 1609 09a6 3A4B     		ldr	r3, .L108+12
 1610 09a8 1A72     		strb	r2, [r3, #8]
 749:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_currentTimeDate.DayOfMonth = 1u;
 1611              		.loc 1 749 0
 1612 09aa 394B     		ldr	r3, .L108+12
 1613 09ac 0122     		movs	r2, #1
 1614 09ae 1A71     		strb	r2, [r3, #4]
 750:Generated_Source\PSoC5/RTC_INT.c ****                                     if(RTC_currentTimeDate.Month > RTC_YEAR_ELAPSED)
 1615              		.loc 1 750 0
 1616 09b0 374B     		ldr	r3, .L108+12
 1617 09b2 1B7A     		ldrb	r3, [r3, #8]
 1618 09b4 DBB2     		uxtb	r3, r3
 1619 09b6 0C2B     		cmp	r3, #12
 1620 09b8 44D9     		bls	.L74
 751:Generated_Source\PSoC5/RTC_INT.c ****                                     {
 752:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Month = RTC_JANUARY;
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 43


 1621              		.loc 1 752 0
 1622 09ba 354B     		ldr	r3, .L108+12
 1623 09bc 0122     		movs	r2, #1
 1624 09be 1A72     		strb	r2, [r3, #8]
 753:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.Year++;
 1625              		.loc 1 753 0
 1626 09c0 334B     		ldr	r3, .L108+12
 1627 09c2 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1628 09c4 9BB2     		uxth	r3, r3
 1629 09c6 0133     		adds	r3, r3, #1
 1630 09c8 9AB2     		uxth	r2, r3
 1631 09ca 314B     		ldr	r3, .L108+12
 1632 09cc 5A81     		strh	r2, [r3, #10]	@ movhi
 754:Generated_Source\PSoC5/RTC_INT.c **** 
 755:Generated_Source\PSoC5/RTC_INT.c ****                                         if(1u == RTC_LEAP_YEAR(RTC_currentTimeDate.Year))
 1633              		.loc 1 755 0
 1634 09ce 304B     		ldr	r3, .L108+12
 1635 09d0 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1636 09d2 9BB2     		uxth	r3, r3
 1637 09d4 314A     		ldr	r2, .L108+24
 1638 09d6 A2FB0312 		umull	r1, r2, r2, r3
 1639 09da D209     		lsrs	r2, r2, #7
 1640 09dc 4FF4C871 		mov	r1, #400
 1641 09e0 01FB02F2 		mul	r2, r1, r2
 1642 09e4 9B1A     		subs	r3, r3, r2
 1643 09e6 9BB2     		uxth	r3, r3
 1644 09e8 002B     		cmp	r3, #0
 1645 09ea 15D0     		beq	.L75
 1646              		.loc 1 755 0 is_stmt 0 discriminator 1
 1647 09ec 284B     		ldr	r3, .L108+12
 1648 09ee 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1649 09f0 9BB2     		uxth	r3, r3
 1650 09f2 03F00303 		and	r3, r3, #3
 1651 09f6 9BB2     		uxth	r3, r3
 1652 09f8 002B     		cmp	r3, #0
 1653 09fa 16D1     		bne	.L76
 1654              		.loc 1 755 0 discriminator 2
 1655 09fc 244B     		ldr	r3, .L108+12
 1656 09fe 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1657 0a00 9BB2     		uxth	r3, r3
 1658 0a02 264A     		ldr	r2, .L108+24
 1659 0a04 A2FB0312 		umull	r1, r2, r2, r3
 1660 0a08 5209     		lsrs	r2, r2, #5
 1661 0a0a 6421     		movs	r1, #100
 1662 0a0c 01FB02F2 		mul	r2, r1, r2
 1663 0a10 9B1A     		subs	r3, r3, r2
 1664 0a12 9BB2     		uxth	r3, r3
 1665 0a14 002B     		cmp	r3, #0
 1666 0a16 08D0     		beq	.L76
 1667              	.L75:
 756:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 757:Generated_Source\PSoC5/RTC_INT.c ****                                             /* LP - true, else - false */
 758:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime |= RTC_STATUS_LY;
 1668              		.loc 1 758 0 is_stmt 1
 1669 0a18 1E4B     		ldr	r3, .L108+16
 1670 0a1a 1B78     		ldrb	r3, [r3]
 1671 0a1c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 44


 1672 0a1e 43F00203 		orr	r3, r3, #2
 1673 0a22 DAB2     		uxtb	r2, r3
 1674 0a24 1B4B     		ldr	r3, .L108+16
 1675 0a26 1A70     		strb	r2, [r3]
 1676 0a28 07E0     		b	.L77
 1677              	.L76:
 759:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 760:Generated_Source\PSoC5/RTC_INT.c ****                                         else
 761:Generated_Source\PSoC5/RTC_INT.c ****                                         {
 762:Generated_Source\PSoC5/RTC_INT.c ****                                             RTC_statusDateTime &= (uint8)(~RTC_STATUS_LY);
 1678              		.loc 1 762 0
 1679 0a2a 1A4B     		ldr	r3, .L108+16
 1680 0a2c 1B78     		ldrb	r3, [r3]
 1681 0a2e DBB2     		uxtb	r3, r3
 1682 0a30 23F00203 		bic	r3, r3, #2
 1683 0a34 DAB2     		uxtb	r2, r3
 1684 0a36 174B     		ldr	r3, .L108+16
 1685 0a38 1A70     		strb	r2, [r3]
 1686              	.L77:
 763:Generated_Source\PSoC5/RTC_INT.c ****                                         }
 764:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_currentTimeDate.DayOfYear = 1u;
 1687              		.loc 1 764 0
 1688 0a3a 154B     		ldr	r3, .L108+12
 1689 0a3c 0122     		movs	r2, #1
 1690 0a3e DA80     		strh	r2, [r3, #6]	@ movhi
 765:Generated_Source\PSoC5/RTC_INT.c **** 
 766:Generated_Source\PSoC5/RTC_INT.c ****                                         RTC_EveryYearHandler();
 1691              		.loc 1 766 0
 1692 0a40 FFF7FEFF 		bl	RTC_EveryYearHandler
 1693              	.L74:
 767:Generated_Source\PSoC5/RTC_INT.c ****                                     }
 768:Generated_Source\PSoC5/RTC_INT.c ****                                     RTC_EveryMonthHandler();
 1694              		.loc 1 768 0
 1695 0a44 FFF7FEFF 		bl	RTC_EveryMonthHandler
 1696              	.L73:
 769:Generated_Source\PSoC5/RTC_INT.c ****                                 }
 770:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_EveryDayHandler();
 1697              		.loc 1 770 0
 1698 0a48 FFF7FEFF 		bl	RTC_EveryDayHandler
 1699              	.L66:
 771:Generated_Source\PSoC5/RTC_INT.c ****                             }
 772:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_statusDateTime |= RTC_STATUS_DST;
 1700              		.loc 1 772 0
 1701 0a4c 114B     		ldr	r3, .L108+16
 1702 0a4e 1B78     		ldrb	r3, [r3]
 1703 0a50 DBB2     		uxtb	r3, r3
 1704 0a52 43F00103 		orr	r3, r3, #1
 1705 0a56 DAB2     		uxtb	r2, r3
 1706 0a58 0E4B     		ldr	r3, .L108+16
 1707 0a5a 1A70     		strb	r2, [r3]
 773:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_dstStartStatus = 0u;
 1708              		.loc 1 773 0
 1709 0a5c 094B     		ldr	r3, .L108
 1710 0a5e 0022     		movs	r2, #0
 1711 0a60 1A70     		strb	r2, [r3]
 774:Generated_Source\PSoC5/RTC_INT.c **** 
 775:Generated_Source\PSoC5/RTC_INT.c ****                             /* Month */
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 45


 776:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.Month == RTC_currentTimeDate.Month)
 1712              		.loc 1 776 0
 1713 0a62 0F4B     		ldr	r3, .L108+28
 1714 0a64 1B79     		ldrb	r3, [r3, #4]
 1715 0a66 DAB2     		uxtb	r2, r3
 1716 0a68 094B     		ldr	r3, .L108+12
 1717 0a6a 1B7A     		ldrb	r3, [r3, #8]
 1718 0a6c DBB2     		uxtb	r3, r3
 1719 0a6e 9A42     		cmp	r2, r3
 1720 0a70 1AD1     		bne	.L78
 777:Generated_Source\PSoC5/RTC_INT.c ****                             {
 778:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_MONTH;
 1721              		.loc 1 778 0
 1722 0a72 0C4B     		ldr	r3, .L108+32
 1723 0a74 1B78     		ldrb	r3, [r3]
 1724 0a76 DBB2     		uxtb	r3, r3
 1725 0a78 43F00403 		orr	r3, r3, #4
 1726 0a7c DAB2     		uxtb	r2, r3
 1727 0a7e 094B     		ldr	r3, .L108+32
 1728 0a80 1A70     		strb	r2, [r3]
 1729 0a82 19E0     		b	.L79
 1730              	.L109:
 1731              		.align	2
 1732              	.L108:
 1733 0a84 00000000 		.word	RTC_dstStartStatus
 1734 0a88 00000000 		.word	RTC_dstOffsetMin
 1735 0a8c 89888888 		.word	-2004318071
 1736 0a90 00000000 		.word	RTC_currentTimeDate
 1737 0a94 00000000 		.word	RTC_statusDateTime
 1738 0a98 00000000 		.word	RTC_daysInMonths
 1739 0a9c 1F85EB51 		.word	1374389535
 1740 0aa0 00000000 		.word	RTC_dstTimeDateStop
 1741 0aa4 00000000 		.word	RTC_dstStopStatus
 1742              	.L78:
 779:Generated_Source\PSoC5/RTC_INT.c ****                             }
 780:Generated_Source\PSoC5/RTC_INT.c ****                             else
 781:Generated_Source\PSoC5/RTC_INT.c ****                             {
 782:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_MONTH);
 1743              		.loc 1 782 0
 1744 0aa8 9A4B     		ldr	r3, .L110
 1745 0aaa 1B78     		ldrb	r3, [r3]
 1746 0aac DBB2     		uxtb	r3, r3
 1747 0aae 23F00403 		bic	r3, r3, #4
 1748 0ab2 DAB2     		uxtb	r2, r3
 1749 0ab4 974B     		ldr	r3, .L110
 1750 0ab6 1A70     		strb	r2, [r3]
 1751              	.L79:
 783:Generated_Source\PSoC5/RTC_INT.c ****                             }
 784:Generated_Source\PSoC5/RTC_INT.c **** 
 785:Generated_Source\PSoC5/RTC_INT.c ****                             /* DayOfMonth */
 786:Generated_Source\PSoC5/RTC_INT.c ****                             if(RTC_dstTimeDateStop.DayOfMonth ==
 1752              		.loc 1 786 0
 1753 0ab8 974B     		ldr	r3, .L110+4
 1754 0aba DB78     		ldrb	r3, [r3, #3]
 1755 0abc DAB2     		uxtb	r2, r3
 787:Generated_Source\PSoC5/RTC_INT.c ****                                                                             RTC_currentTimeDate.Day
 1756              		.loc 1 787 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 46


 1757 0abe 974B     		ldr	r3, .L110+8
 1758 0ac0 1B79     		ldrb	r3, [r3, #4]
 1759 0ac2 DBB2     		uxtb	r3, r3
 786:Generated_Source\PSoC5/RTC_INT.c ****                                                                             RTC_currentTimeDate.Day
 1760              		.loc 1 786 0
 1761 0ac4 9A42     		cmp	r2, r3
 1762 0ac6 08D1     		bne	.L80
 788:Generated_Source\PSoC5/RTC_INT.c ****                             {
 789:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus |= RTC_DST_DAYOFMONTH;
 1763              		.loc 1 789 0
 1764 0ac8 924B     		ldr	r3, .L110
 1765 0aca 1B78     		ldrb	r3, [r3]
 1766 0acc DBB2     		uxtb	r3, r3
 1767 0ace 43F00203 		orr	r3, r3, #2
 1768 0ad2 DAB2     		uxtb	r2, r3
 1769 0ad4 8F4B     		ldr	r3, .L110
 1770 0ad6 1A70     		strb	r2, [r3]
 1771 0ad8 07E0     		b	.L64
 1772              	.L80:
 790:Generated_Source\PSoC5/RTC_INT.c ****                             }
 791:Generated_Source\PSoC5/RTC_INT.c ****                             else
 792:Generated_Source\PSoC5/RTC_INT.c ****                             {
 793:Generated_Source\PSoC5/RTC_INT.c ****                                 RTC_dstStopStatus &= (uint8)(~RTC_DST_DAYOFMONTH);
 1773              		.loc 1 793 0
 1774 0ada 8E4B     		ldr	r3, .L110
 1775 0adc 1B78     		ldrb	r3, [r3]
 1776 0ade DBB2     		uxtb	r3, r3
 1777 0ae0 23F00203 		bic	r3, r3, #2
 1778 0ae4 DAB2     		uxtb	r2, r3
 1779 0ae6 8B4B     		ldr	r3, .L110
 1780 0ae8 1A70     		strb	r2, [r3]
 1781              	.L64:
 794:Generated_Source\PSoC5/RTC_INT.c ****                             }
 795:Generated_Source\PSoC5/RTC_INT.c ****                         }
 796:Generated_Source\PSoC5/RTC_INT.c ****                     }
 797:Generated_Source\PSoC5/RTC_INT.c **** 
 798:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFWEEK */
 799:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 1782              		.loc 1 799 0
 1783 0aea 8D4B     		ldr	r3, .L110+12
 1784 0aec 1B78     		ldrb	r3, [r3]
 1785 0aee DBB2     		uxtb	r3, r3
 1786 0af0 03F00803 		and	r3, r3, #8
 1787 0af4 002B     		cmp	r3, #0
 1788 0af6 18D0     		beq	.L81
 800:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFWEEK_MASK))
 801:Generated_Source\PSoC5/RTC_INT.c ****                     {
 802:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfWeek == RTC_currentTimeDate.DayOfWeek)
 1789              		.loc 1 802 0
 1790 0af8 8A4B     		ldr	r3, .L110+16
 1791 0afa DB78     		ldrb	r3, [r3, #3]
 1792 0afc DAB2     		uxtb	r2, r3
 1793 0afe 874B     		ldr	r3, .L110+8
 1794 0b00 DB78     		ldrb	r3, [r3, #3]
 1795 0b02 DBB2     		uxtb	r3, r3
 1796 0b04 9A42     		cmp	r2, r3
 1797 0b06 08D1     		bne	.L82
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 47


 803:Generated_Source\PSoC5/RTC_INT.c ****                         {
 804:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFWEEK_MASK;
 1798              		.loc 1 804 0
 1799 0b08 874B     		ldr	r3, .L110+20
 1800 0b0a 1B78     		ldrb	r3, [r3]
 1801 0b0c DBB2     		uxtb	r3, r3
 1802 0b0e 43F00803 		orr	r3, r3, #8
 1803 0b12 DAB2     		uxtb	r2, r3
 1804 0b14 844B     		ldr	r3, .L110+20
 1805 0b16 1A70     		strb	r2, [r3]
 1806 0b18 07E0     		b	.L81
 1807              	.L82:
 805:Generated_Source\PSoC5/RTC_INT.c ****                         }
 806:Generated_Source\PSoC5/RTC_INT.c ****                         else
 807:Generated_Source\PSoC5/RTC_INT.c ****                         {
 808:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFWEEK_MASK);
 1808              		.loc 1 808 0
 1809 0b1a 834B     		ldr	r3, .L110+20
 1810 0b1c 1B78     		ldrb	r3, [r3]
 1811 0b1e DBB2     		uxtb	r3, r3
 1812 0b20 23F00803 		bic	r3, r3, #8
 1813 0b24 DAB2     		uxtb	r2, r3
 1814 0b26 804B     		ldr	r3, .L110+20
 1815 0b28 1A70     		strb	r2, [r3]
 1816              	.L81:
 809:Generated_Source\PSoC5/RTC_INT.c ****                         }
 810:Generated_Source\PSoC5/RTC_INT.c ****                     }
 811:Generated_Source\PSoC5/RTC_INT.c **** 
 812:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFYEAR */
 813:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 1817              		.loc 1 813 0
 1818 0b2a 7D4B     		ldr	r3, .L110+12
 1819 0b2c 1B78     		ldrb	r3, [r3]
 1820 0b2e DBB2     		uxtb	r3, r3
 1821 0b30 03F02003 		and	r3, r3, #32
 1822 0b34 002B     		cmp	r3, #0
 1823 0b36 18D0     		beq	.L83
 814:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFYEAR_MASK))
 815:Generated_Source\PSoC5/RTC_INT.c ****                     {
 816:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfYear == RTC_currentTimeDate.DayOfYear)
 1824              		.loc 1 816 0
 1825 0b38 7A4B     		ldr	r3, .L110+16
 1826 0b3a DB88     		ldrh	r3, [r3, #6]	@ movhi
 1827 0b3c 9AB2     		uxth	r2, r3
 1828 0b3e 774B     		ldr	r3, .L110+8
 1829 0b40 DB88     		ldrh	r3, [r3, #6]	@ movhi
 1830 0b42 9BB2     		uxth	r3, r3
 1831 0b44 9A42     		cmp	r2, r3
 1832 0b46 08D1     		bne	.L84
 817:Generated_Source\PSoC5/RTC_INT.c ****                         {
 818:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFYEAR_MASK;
 1833              		.loc 1 818 0
 1834 0b48 774B     		ldr	r3, .L110+20
 1835 0b4a 1B78     		ldrb	r3, [r3]
 1836 0b4c DBB2     		uxtb	r3, r3
 1837 0b4e 43F02003 		orr	r3, r3, #32
 1838 0b52 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 48


 1839 0b54 744B     		ldr	r3, .L110+20
 1840 0b56 1A70     		strb	r2, [r3]
 1841 0b58 07E0     		b	.L83
 1842              	.L84:
 819:Generated_Source\PSoC5/RTC_INT.c ****                         }
 820:Generated_Source\PSoC5/RTC_INT.c ****                         else
 821:Generated_Source\PSoC5/RTC_INT.c ****                         {
 822:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFYEAR_MASK);
 1843              		.loc 1 822 0
 1844 0b5a 734B     		ldr	r3, .L110+20
 1845 0b5c 1B78     		ldrb	r3, [r3]
 1846 0b5e DBB2     		uxtb	r3, r3
 1847 0b60 23F02003 		bic	r3, r3, #32
 1848 0b64 DAB2     		uxtb	r2, r3
 1849 0b66 704B     		ldr	r3, .L110+20
 1850 0b68 1A70     		strb	r2, [r3]
 1851              	.L83:
 823:Generated_Source\PSoC5/RTC_INT.c ****                         }
 824:Generated_Source\PSoC5/RTC_INT.c ****                     }
 825:Generated_Source\PSoC5/RTC_INT.c **** 
 826:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm DAYOFMONTH */
 827:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 1852              		.loc 1 827 0
 1853 0b6a 6D4B     		ldr	r3, .L110+12
 1854 0b6c 1B78     		ldrb	r3, [r3]
 1855 0b6e DBB2     		uxtb	r3, r3
 1856 0b70 03F01003 		and	r3, r3, #16
 1857 0b74 002B     		cmp	r3, #0
 1858 0b76 18D0     		beq	.L85
 828:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_DAYOFMONTH_MASK))
 829:Generated_Source\PSoC5/RTC_INT.c ****                     {
 830:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.DayOfMonth == RTC_currentTimeDate.DayOfMonth)
 1859              		.loc 1 830 0
 1860 0b78 6A4B     		ldr	r3, .L110+16
 1861 0b7a 1B79     		ldrb	r3, [r3, #4]
 1862 0b7c DAB2     		uxtb	r2, r3
 1863 0b7e 674B     		ldr	r3, .L110+8
 1864 0b80 1B79     		ldrb	r3, [r3, #4]
 1865 0b82 DBB2     		uxtb	r3, r3
 1866 0b84 9A42     		cmp	r2, r3
 1867 0b86 08D1     		bne	.L86
 831:Generated_Source\PSoC5/RTC_INT.c ****                         {
 832:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_DAYOFMONTH_MASK;
 1868              		.loc 1 832 0
 1869 0b88 674B     		ldr	r3, .L110+20
 1870 0b8a 1B78     		ldrb	r3, [r3]
 1871 0b8c DBB2     		uxtb	r3, r3
 1872 0b8e 43F01003 		orr	r3, r3, #16
 1873 0b92 DAB2     		uxtb	r2, r3
 1874 0b94 644B     		ldr	r3, .L110+20
 1875 0b96 1A70     		strb	r2, [r3]
 1876 0b98 07E0     		b	.L85
 1877              	.L86:
 833:Generated_Source\PSoC5/RTC_INT.c ****                         }
 834:Generated_Source\PSoC5/RTC_INT.c ****                         else
 835:Generated_Source\PSoC5/RTC_INT.c ****                         {
 836:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_DAYOFMONTH_MASK);
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 49


 1878              		.loc 1 836 0
 1879 0b9a 634B     		ldr	r3, .L110+20
 1880 0b9c 1B78     		ldrb	r3, [r3]
 1881 0b9e DBB2     		uxtb	r3, r3
 1882 0ba0 23F01003 		bic	r3, r3, #16
 1883 0ba4 DAB2     		uxtb	r2, r3
 1884 0ba6 604B     		ldr	r3, .L110+20
 1885 0ba8 1A70     		strb	r2, [r3]
 1886              	.L85:
 837:Generated_Source\PSoC5/RTC_INT.c ****                         }
 838:Generated_Source\PSoC5/RTC_INT.c ****                     }
 839:Generated_Source\PSoC5/RTC_INT.c **** 
 840:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm MONTH */
 841:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 1887              		.loc 1 841 0
 1888 0baa 5D4B     		ldr	r3, .L110+12
 1889 0bac 1B78     		ldrb	r3, [r3]
 1890 0bae DBB2     		uxtb	r3, r3
 1891 0bb0 03F04003 		and	r3, r3, #64
 1892 0bb4 002B     		cmp	r3, #0
 1893 0bb6 18D0     		beq	.L87
 842:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_MONTH_MASK))
 843:Generated_Source\PSoC5/RTC_INT.c ****                     {
 844:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Month == RTC_currentTimeDate.Month)
 1894              		.loc 1 844 0
 1895 0bb8 5A4B     		ldr	r3, .L110+16
 1896 0bba 1B7A     		ldrb	r3, [r3, #8]
 1897 0bbc DAB2     		uxtb	r2, r3
 1898 0bbe 574B     		ldr	r3, .L110+8
 1899 0bc0 1B7A     		ldrb	r3, [r3, #8]
 1900 0bc2 DBB2     		uxtb	r3, r3
 1901 0bc4 9A42     		cmp	r2, r3
 1902 0bc6 08D1     		bne	.L88
 845:Generated_Source\PSoC5/RTC_INT.c ****                         {
 846:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_MONTH_MASK;
 1903              		.loc 1 846 0
 1904 0bc8 574B     		ldr	r3, .L110+20
 1905 0bca 1B78     		ldrb	r3, [r3]
 1906 0bcc DBB2     		uxtb	r3, r3
 1907 0bce 43F04003 		orr	r3, r3, #64
 1908 0bd2 DAB2     		uxtb	r2, r3
 1909 0bd4 544B     		ldr	r3, .L110+20
 1910 0bd6 1A70     		strb	r2, [r3]
 1911 0bd8 07E0     		b	.L87
 1912              	.L88:
 847:Generated_Source\PSoC5/RTC_INT.c ****                         }
 848:Generated_Source\PSoC5/RTC_INT.c ****                         else
 849:Generated_Source\PSoC5/RTC_INT.c ****                         {
 850:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MONTH_MASK);
 1913              		.loc 1 850 0
 1914 0bda 534B     		ldr	r3, .L110+20
 1915 0bdc 1B78     		ldrb	r3, [r3]
 1916 0bde DBB2     		uxtb	r3, r3
 1917 0be0 23F04003 		bic	r3, r3, #64
 1918 0be4 DAB2     		uxtb	r2, r3
 1919 0be6 504B     		ldr	r3, .L110+20
 1920 0be8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 50


 1921              	.L87:
 851:Generated_Source\PSoC5/RTC_INT.c ****                         }
 852:Generated_Source\PSoC5/RTC_INT.c ****                     }
 853:Generated_Source\PSoC5/RTC_INT.c **** 
 854:Generated_Source\PSoC5/RTC_INT.c ****                     /* Alarm YEAR */
 855:Generated_Source\PSoC5/RTC_INT.c ****                     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask,
 1922              		.loc 1 855 0
 1923 0bea 4D4B     		ldr	r3, .L110+12
 1924 0bec 1B78     		ldrb	r3, [r3]
 1925 0bee DBB2     		uxtb	r3, r3
 1926 0bf0 5BB2     		sxtb	r3, r3
 1927 0bf2 002B     		cmp	r3, #0
 1928 0bf4 18DA     		bge	.L89
 856:Generated_Source\PSoC5/RTC_INT.c ****                                                          RTC_ALARM_YEAR_MASK))
 857:Generated_Source\PSoC5/RTC_INT.c ****                     {
 858:Generated_Source\PSoC5/RTC_INT.c ****                         if(RTC_alarmCfgTimeDate.Year == RTC_currentTimeDate.Year)
 1929              		.loc 1 858 0
 1930 0bf6 4B4B     		ldr	r3, .L110+16
 1931 0bf8 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1932 0bfa 9AB2     		uxth	r2, r3
 1933 0bfc 474B     		ldr	r3, .L110+8
 1934 0bfe 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1935 0c00 9BB2     		uxth	r3, r3
 1936 0c02 9A42     		cmp	r2, r3
 1937 0c04 08D1     		bne	.L90
 859:Generated_Source\PSoC5/RTC_INT.c ****                         {
 860:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus |= RTC_ALARM_YEAR_MASK;
 1938              		.loc 1 860 0
 1939 0c06 484B     		ldr	r3, .L110+20
 1940 0c08 1B78     		ldrb	r3, [r3]
 1941 0c0a DBB2     		uxtb	r3, r3
 1942 0c0c 63F07F03 		orn	r3, r3, #127
 1943 0c10 DAB2     		uxtb	r2, r3
 1944 0c12 454B     		ldr	r3, .L110+20
 1945 0c14 1A70     		strb	r2, [r3]
 1946 0c16 07E0     		b	.L89
 1947              	.L90:
 861:Generated_Source\PSoC5/RTC_INT.c ****                         }
 862:Generated_Source\PSoC5/RTC_INT.c ****                         else
 863:Generated_Source\PSoC5/RTC_INT.c ****                         {
 864:Generated_Source\PSoC5/RTC_INT.c ****                             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_YEAR_MASK);
 1948              		.loc 1 864 0
 1949 0c18 434B     		ldr	r3, .L110+20
 1950 0c1a 1B78     		ldrb	r3, [r3]
 1951 0c1c DBB2     		uxtb	r3, r3
 1952 0c1e 03F07F03 		and	r3, r3, #127
 1953 0c22 DAB2     		uxtb	r2, r3
 1954 0c24 404B     		ldr	r3, .L110+20
 1955 0c26 1A70     		strb	r2, [r3]
 1956              	.L89:
 865:Generated_Source\PSoC5/RTC_INT.c ****                         }
 866:Generated_Source\PSoC5/RTC_INT.c ****                     }
 867:Generated_Source\PSoC5/RTC_INT.c **** 
 868:Generated_Source\PSoC5/RTC_INT.c ****                     /* Set Alarm flag event */
 869:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_tmp = RTC_alarmCfgMask;
 1957              		.loc 1 869 0
 1958 0c28 3D4B     		ldr	r3, .L110+12
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 51


 1959 0c2a 1B78     		ldrb	r3, [r3]
 1960 0c2c FB71     		strb	r3, [r7, #7]
 870:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_SET_ALARM(RTC_tmp,
 1961              		.loc 1 870 0
 1962 0c2e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1963 0c30 002B     		cmp	r3, #0
 1964 0c32 13D0     		beq	.L49
 1965              		.loc 1 870 0 is_stmt 0 discriminator 1
 1966 0c34 3C4B     		ldr	r3, .L110+20
 1967 0c36 1B78     		ldrb	r3, [r3]
 1968 0c38 DAB2     		uxtb	r2, r3
 1969 0c3a FB79     		ldrb	r3, [r7, #7]
 1970 0c3c 1340     		ands	r3, r3, r2
 1971 0c3e DBB2     		uxtb	r3, r3
 1972 0c40 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1973 0c42 9A42     		cmp	r2, r3
 1974 0c44 0AD1     		bne	.L49
 1975              		.loc 1 870 0 discriminator 2
 1976 0c46 394B     		ldr	r3, .L110+24
 1977 0c48 1B78     		ldrb	r3, [r3]
 1978 0c4a DBB2     		uxtb	r3, r3
 1979 0c4c 43F00803 		orr	r3, r3, #8
 1980 0c50 DAB2     		uxtb	r2, r3
 1981 0c52 364B     		ldr	r3, .L110+24
 1982 0c54 1A70     		strb	r2, [r3]
 1983 0c56 344B     		ldr	r3, .L110+20
 1984 0c58 0022     		movs	r2, #0
 1985 0c5a 1A70     		strb	r2, [r3]
 1986              	.L49:
 871:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_alarmCurStatus,
 872:Generated_Source\PSoC5/RTC_INT.c ****                                                RTC_statusDateTime);
 873:Generated_Source\PSoC5/RTC_INT.c ****                 }
 874:Generated_Source\PSoC5/RTC_INT.c ****             #endif /* 1u == RTC_DST_FUNC_ENABLE */
 875:Generated_Source\PSoC5/RTC_INT.c **** 
 876:Generated_Source\PSoC5/RTC_INT.c ****             /* Alarm HOUR */
 877:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_HOUR_MASK))
 1987              		.loc 1 877 0 is_stmt 1
 1988 0c5c 304B     		ldr	r3, .L110+12
 1989 0c5e 1B78     		ldrb	r3, [r3]
 1990 0c60 DBB2     		uxtb	r3, r3
 1991 0c62 03F00403 		and	r3, r3, #4
 1992 0c66 002B     		cmp	r3, #0
 1993 0c68 18D0     		beq	.L91
 878:Generated_Source\PSoC5/RTC_INT.c ****             {
 879:Generated_Source\PSoC5/RTC_INT.c ****                 if(RTC_alarmCfgTimeDate.Hour == RTC_currentTimeDate.Hour)
 1994              		.loc 1 879 0
 1995 0c6a 2E4B     		ldr	r3, .L110+16
 1996 0c6c 9B78     		ldrb	r3, [r3, #2]
 1997 0c6e DAB2     		uxtb	r2, r3
 1998 0c70 2A4B     		ldr	r3, .L110+8
 1999 0c72 9B78     		ldrb	r3, [r3, #2]
 2000 0c74 DBB2     		uxtb	r3, r3
 2001 0c76 9A42     		cmp	r2, r3
 2002 0c78 08D1     		bne	.L92
 880:Generated_Source\PSoC5/RTC_INT.c ****                 {
 881:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus |= RTC_ALARM_HOUR_MASK;
 2003              		.loc 1 881 0
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 52


 2004 0c7a 2B4B     		ldr	r3, .L110+20
 2005 0c7c 1B78     		ldrb	r3, [r3]
 2006 0c7e DBB2     		uxtb	r3, r3
 2007 0c80 43F00403 		orr	r3, r3, #4
 2008 0c84 DAB2     		uxtb	r2, r3
 2009 0c86 284B     		ldr	r3, .L110+20
 2010 0c88 1A70     		strb	r2, [r3]
 2011 0c8a 07E0     		b	.L91
 2012              	.L92:
 882:Generated_Source\PSoC5/RTC_INT.c ****                 }
 883:Generated_Source\PSoC5/RTC_INT.c ****                 else
 884:Generated_Source\PSoC5/RTC_INT.c ****                 {
 885:Generated_Source\PSoC5/RTC_INT.c ****                     RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_HOUR_MASK);
 2013              		.loc 1 885 0
 2014 0c8c 264B     		ldr	r3, .L110+20
 2015 0c8e 1B78     		ldrb	r3, [r3]
 2016 0c90 DBB2     		uxtb	r3, r3
 2017 0c92 23F00403 		bic	r3, r3, #4
 2018 0c96 DAB2     		uxtb	r2, r3
 2019 0c98 234B     		ldr	r3, .L110+20
 2020 0c9a 1A70     		strb	r2, [r3]
 2021              	.L91:
 886:Generated_Source\PSoC5/RTC_INT.c ****                 }
 887:Generated_Source\PSoC5/RTC_INT.c ****             }
 888:Generated_Source\PSoC5/RTC_INT.c **** 
 889:Generated_Source\PSoC5/RTC_INT.c ****             /* Set Alarm flag event */
 890:Generated_Source\PSoC5/RTC_INT.c ****             RTC_tmp = RTC_alarmCfgMask;
 2022              		.loc 1 890 0
 2023 0c9c 204B     		ldr	r3, .L110+12
 2024 0c9e 1B78     		ldrb	r3, [r3]
 2025 0ca0 FB71     		strb	r3, [r7, #7]
 891:Generated_Source\PSoC5/RTC_INT.c ****             RTC_SET_ALARM(RTC_tmp,
 2026              		.loc 1 891 0
 2027 0ca2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2028 0ca4 002B     		cmp	r3, #0
 2029 0ca6 13D0     		beq	.L93
 2030              		.loc 1 891 0 is_stmt 0 discriminator 1
 2031 0ca8 1F4B     		ldr	r3, .L110+20
 2032 0caa 1B78     		ldrb	r3, [r3]
 2033 0cac DAB2     		uxtb	r2, r3
 2034 0cae FB79     		ldrb	r3, [r7, #7]
 2035 0cb0 1340     		ands	r3, r3, r2
 2036 0cb2 DBB2     		uxtb	r3, r3
 2037 0cb4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2038 0cb6 9A42     		cmp	r2, r3
 2039 0cb8 0AD1     		bne	.L93
 2040              		.loc 1 891 0 discriminator 2
 2041 0cba 1C4B     		ldr	r3, .L110+24
 2042 0cbc 1B78     		ldrb	r3, [r3]
 2043 0cbe DBB2     		uxtb	r3, r3
 2044 0cc0 43F00803 		orr	r3, r3, #8
 2045 0cc4 DAB2     		uxtb	r2, r3
 2046 0cc6 194B     		ldr	r3, .L110+24
 2047 0cc8 1A70     		strb	r2, [r3]
 2048 0cca 174B     		ldr	r3, .L110+20
 2049 0ccc 0022     		movs	r2, #0
 2050 0cce 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 53


 2051              	.L93:
 892:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_alarmCurStatus,
 893:Generated_Source\PSoC5/RTC_INT.c ****                                        RTC_statusDateTime);
 894:Generated_Source\PSoC5/RTC_INT.c **** 
 895:Generated_Source\PSoC5/RTC_INT.c ****             /* Every Hour */
 896:Generated_Source\PSoC5/RTC_INT.c ****             if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_HOUR_MASK))
 2052              		.loc 1 896 0 is_stmt 1
 2053 0cd0 174B     		ldr	r3, .L110+28
 2054 0cd2 1B78     		ldrb	r3, [r3]
 2055 0cd4 DBB2     		uxtb	r3, r3
 2056 0cd6 03F00403 		and	r3, r3, #4
 2057 0cda 002B     		cmp	r3, #0
 2058 0cdc 01D0     		beq	.L10
 897:Generated_Source\PSoC5/RTC_INT.c ****             {
 898:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_EveryHourHandler();
 2059              		.loc 1 898 0
 2060 0cde FFF7FEFF 		bl	RTC_EveryHourHandler
 2061              	.L10:
 899:Generated_Source\PSoC5/RTC_INT.c ****             }
 900:Generated_Source\PSoC5/RTC_INT.c ****         } /* Min > 59 = Hour */
 901:Generated_Source\PSoC5/RTC_INT.c **** 
 902:Generated_Source\PSoC5/RTC_INT.c ****         /* Alarm MIN */
 903:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_MIN_MASK))
 2062              		.loc 1 903 0
 2063 0ce2 0F4B     		ldr	r3, .L110+12
 2064 0ce4 1B78     		ldrb	r3, [r3]
 2065 0ce6 DBB2     		uxtb	r3, r3
 2066 0ce8 03F00203 		and	r3, r3, #2
 2067 0cec 002B     		cmp	r3, #0
 2068 0cee 29D0     		beq	.L94
 904:Generated_Source\PSoC5/RTC_INT.c ****         {
 905:Generated_Source\PSoC5/RTC_INT.c ****             if(RTC_alarmCfgTimeDate.Min == RTC_currentTimeDate.Min)
 2069              		.loc 1 905 0
 2070 0cf0 0C4B     		ldr	r3, .L110+16
 2071 0cf2 5B78     		ldrb	r3, [r3, #1]
 2072 0cf4 DAB2     		uxtb	r2, r3
 2073 0cf6 094B     		ldr	r3, .L110+8
 2074 0cf8 5B78     		ldrb	r3, [r3, #1]
 2075 0cfa DBB2     		uxtb	r3, r3
 2076 0cfc 9A42     		cmp	r2, r3
 2077 0cfe 19D1     		bne	.L95
 906:Generated_Source\PSoC5/RTC_INT.c ****             {
 907:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus |= RTC_ALARM_MIN_MASK;
 2078              		.loc 1 907 0
 2079 0d00 094B     		ldr	r3, .L110+20
 2080 0d02 1B78     		ldrb	r3, [r3]
 2081 0d04 DBB2     		uxtb	r3, r3
 2082 0d06 43F00203 		orr	r3, r3, #2
 2083 0d0a DAB2     		uxtb	r2, r3
 2084 0d0c 064B     		ldr	r3, .L110+20
 2085 0d0e 1A70     		strb	r2, [r3]
 2086 0d10 18E0     		b	.L94
 2087              	.L111:
 2088 0d12 00BF     		.align	2
 2089              	.L110:
 2090 0d14 00000000 		.word	RTC_dstStopStatus
 2091 0d18 00000000 		.word	RTC_dstTimeDateStop
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 54


 2092 0d1c 00000000 		.word	RTC_currentTimeDate
 2093 0d20 00000000 		.word	RTC_alarmCfgMask
 2094 0d24 00000000 		.word	RTC_alarmCfgTimeDate
 2095 0d28 00000000 		.word	RTC_alarmCurStatus
 2096 0d2c 00000000 		.word	RTC_statusDateTime
 2097 0d30 00000000 		.word	RTC_intervalCfgMask
 2098              	.L95:
 908:Generated_Source\PSoC5/RTC_INT.c ****             }
 909:Generated_Source\PSoC5/RTC_INT.c ****             else
 910:Generated_Source\PSoC5/RTC_INT.c ****             {
 911:Generated_Source\PSoC5/RTC_INT.c ****                 RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_MIN_MASK);
 2099              		.loc 1 911 0
 2100 0d34 384B     		ldr	r3, .L112
 2101 0d36 1B78     		ldrb	r3, [r3]
 2102 0d38 DBB2     		uxtb	r3, r3
 2103 0d3a 23F00203 		bic	r3, r3, #2
 2104 0d3e DAB2     		uxtb	r2, r3
 2105 0d40 354B     		ldr	r3, .L112
 2106 0d42 1A70     		strb	r2, [r3]
 2107              	.L94:
 912:Generated_Source\PSoC5/RTC_INT.c ****             }
 913:Generated_Source\PSoC5/RTC_INT.c ****         }
 914:Generated_Source\PSoC5/RTC_INT.c **** 
 915:Generated_Source\PSoC5/RTC_INT.c ****         /* Set Alarm flag event */
 916:Generated_Source\PSoC5/RTC_INT.c ****         RTC_tmp = RTC_alarmCfgMask;
 2108              		.loc 1 916 0
 2109 0d44 354B     		ldr	r3, .L112+4
 2110 0d46 1B78     		ldrb	r3, [r3]
 2111 0d48 FB71     		strb	r3, [r7, #7]
 917:Generated_Source\PSoC5/RTC_INT.c ****         RTC_SET_ALARM(RTC_tmp,
 2112              		.loc 1 917 0
 2113 0d4a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2114 0d4c 002B     		cmp	r3, #0
 2115 0d4e 13D0     		beq	.L96
 2116              		.loc 1 917 0 is_stmt 0 discriminator 1
 2117 0d50 314B     		ldr	r3, .L112
 2118 0d52 1B78     		ldrb	r3, [r3]
 2119 0d54 DAB2     		uxtb	r2, r3
 2120 0d56 FB79     		ldrb	r3, [r7, #7]
 2121 0d58 1340     		ands	r3, r3, r2
 2122 0d5a DBB2     		uxtb	r3, r3
 2123 0d5c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2124 0d5e 9A42     		cmp	r2, r3
 2125 0d60 0AD1     		bne	.L96
 2126              		.loc 1 917 0 discriminator 2
 2127 0d62 2F4B     		ldr	r3, .L112+8
 2128 0d64 1B78     		ldrb	r3, [r3]
 2129 0d66 DBB2     		uxtb	r3, r3
 2130 0d68 43F00803 		orr	r3, r3, #8
 2131 0d6c DAB2     		uxtb	r2, r3
 2132 0d6e 2C4B     		ldr	r3, .L112+8
 2133 0d70 1A70     		strb	r2, [r3]
 2134 0d72 294B     		ldr	r3, .L112
 2135 0d74 0022     		movs	r2, #0
 2136 0d76 1A70     		strb	r2, [r3]
 2137              	.L96:
 918:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_alarmCurStatus,
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 55


 919:Generated_Source\PSoC5/RTC_INT.c ****                                    RTC_statusDateTime);
 920:Generated_Source\PSoC5/RTC_INT.c **** 
 921:Generated_Source\PSoC5/RTC_INT.c ****         /* Every Min */
 922:Generated_Source\PSoC5/RTC_INT.c ****         if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_MIN_MASK))
 2138              		.loc 1 922 0 is_stmt 1
 2139 0d78 2A4B     		ldr	r3, .L112+12
 2140 0d7a 1B78     		ldrb	r3, [r3]
 2141 0d7c DBB2     		uxtb	r3, r3
 2142 0d7e 03F00203 		and	r3, r3, #2
 2143 0d82 002B     		cmp	r3, #0
 2144 0d84 01D0     		beq	.L9
 923:Generated_Source\PSoC5/RTC_INT.c ****         {
 924:Generated_Source\PSoC5/RTC_INT.c ****             RTC_EveryMinuteHandler();
 2145              		.loc 1 924 0
 2146 0d86 FFF7FEFF 		bl	RTC_EveryMinuteHandler
 2147              	.L9:
 925:Generated_Source\PSoC5/RTC_INT.c ****         }
 926:Generated_Source\PSoC5/RTC_INT.c ****     } /* Sec */
 927:Generated_Source\PSoC5/RTC_INT.c **** 
 928:Generated_Source\PSoC5/RTC_INT.c ****     /* Alarm SEC */
 929:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_alarmCfgMask, RTC_ALARM_SEC_MASK))
 2148              		.loc 1 929 0
 2149 0d8a 244B     		ldr	r3, .L112+4
 2150 0d8c 1B78     		ldrb	r3, [r3]
 2151 0d8e DBB2     		uxtb	r3, r3
 2152 0d90 03F00103 		and	r3, r3, #1
 2153 0d94 002B     		cmp	r3, #0
 2154 0d96 18D0     		beq	.L97
 930:Generated_Source\PSoC5/RTC_INT.c ****     {
 931:Generated_Source\PSoC5/RTC_INT.c ****         if(RTC_alarmCfgTimeDate.Sec == RTC_currentTimeDate.Sec)
 2155              		.loc 1 931 0
 2156 0d98 234B     		ldr	r3, .L112+16
 2157 0d9a 1B78     		ldrb	r3, [r3]
 2158 0d9c DAB2     		uxtb	r2, r3
 2159 0d9e 234B     		ldr	r3, .L112+20
 2160 0da0 1B78     		ldrb	r3, [r3]
 2161 0da2 DBB2     		uxtb	r3, r3
 2162 0da4 9A42     		cmp	r2, r3
 2163 0da6 08D1     		bne	.L98
 932:Generated_Source\PSoC5/RTC_INT.c ****         {
 933:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus |= RTC_ALARM_SEC_MASK;
 2164              		.loc 1 933 0
 2165 0da8 1B4B     		ldr	r3, .L112
 2166 0daa 1B78     		ldrb	r3, [r3]
 2167 0dac DBB2     		uxtb	r3, r3
 2168 0dae 43F00103 		orr	r3, r3, #1
 2169 0db2 DAB2     		uxtb	r2, r3
 2170 0db4 184B     		ldr	r3, .L112
 2171 0db6 1A70     		strb	r2, [r3]
 2172 0db8 07E0     		b	.L97
 2173              	.L98:
 934:Generated_Source\PSoC5/RTC_INT.c ****         }
 935:Generated_Source\PSoC5/RTC_INT.c ****         else
 936:Generated_Source\PSoC5/RTC_INT.c ****         {
 937:Generated_Source\PSoC5/RTC_INT.c ****             RTC_alarmCurStatus &= (uint8)(~RTC_ALARM_SEC_MASK);
 2174              		.loc 1 937 0
 2175 0dba 174B     		ldr	r3, .L112
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 56


 2176 0dbc 1B78     		ldrb	r3, [r3]
 2177 0dbe DBB2     		uxtb	r3, r3
 2178 0dc0 23F00103 		bic	r3, r3, #1
 2179 0dc4 DAB2     		uxtb	r2, r3
 2180 0dc6 144B     		ldr	r3, .L112
 2181 0dc8 1A70     		strb	r2, [r3]
 2182              	.L97:
 938:Generated_Source\PSoC5/RTC_INT.c ****         }
 939:Generated_Source\PSoC5/RTC_INT.c ****     }
 940:Generated_Source\PSoC5/RTC_INT.c **** 
 941:Generated_Source\PSoC5/RTC_INT.c ****     /* Set Alarm flag event */
 942:Generated_Source\PSoC5/RTC_INT.c ****     RTC_tmp = RTC_alarmCfgMask;
 2183              		.loc 1 942 0
 2184 0dca 144B     		ldr	r3, .L112+4
 2185 0dcc 1B78     		ldrb	r3, [r3]
 2186 0dce FB71     		strb	r3, [r7, #7]
 943:Generated_Source\PSoC5/RTC_INT.c ****     RTC_SET_ALARM(RTC_tmp, RTC_alarmCurStatus, RTC_statusDateTime);
 2187              		.loc 1 943 0
 2188 0dd0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2189 0dd2 002B     		cmp	r3, #0
 2190 0dd4 13D0     		beq	.L99
 2191              		.loc 1 943 0 is_stmt 0 discriminator 1
 2192 0dd6 104B     		ldr	r3, .L112
 2193 0dd8 1B78     		ldrb	r3, [r3]
 2194 0dda DAB2     		uxtb	r2, r3
 2195 0ddc FB79     		ldrb	r3, [r7, #7]
 2196 0dde 1340     		ands	r3, r3, r2
 2197 0de0 DBB2     		uxtb	r3, r3
 2198 0de2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2199 0de4 9A42     		cmp	r2, r3
 2200 0de6 0AD1     		bne	.L99
 2201              		.loc 1 943 0 discriminator 2
 2202 0de8 0D4B     		ldr	r3, .L112+8
 2203 0dea 1B78     		ldrb	r3, [r3]
 2204 0dec DBB2     		uxtb	r3, r3
 2205 0dee 43F00803 		orr	r3, r3, #8
 2206 0df2 DAB2     		uxtb	r2, r3
 2207 0df4 0A4B     		ldr	r3, .L112+8
 2208 0df6 1A70     		strb	r2, [r3]
 2209 0df8 074B     		ldr	r3, .L112
 2210 0dfa 0022     		movs	r2, #0
 2211 0dfc 1A70     		strb	r2, [r3]
 2212              	.L99:
 944:Generated_Source\PSoC5/RTC_INT.c **** 
 945:Generated_Source\PSoC5/RTC_INT.c ****     /* Execute every second handler if needed */
 946:Generated_Source\PSoC5/RTC_INT.c ****     if(0u != RTC_IS_BIT_SET(RTC_intervalCfgMask, RTC_INTERVAL_SEC_MASK))
 2213              		.loc 1 946 0 is_stmt 1
 2214 0dfe 094B     		ldr	r3, .L112+12
 2215 0e00 1B78     		ldrb	r3, [r3]
 2216 0e02 DBB2     		uxtb	r3, r3
 2217 0e04 03F00103 		and	r3, r3, #1
 2218 0e08 002B     		cmp	r3, #0
 2219 0e0a 01D0     		beq	.L101
 947:Generated_Source\PSoC5/RTC_INT.c ****     {
 948:Generated_Source\PSoC5/RTC_INT.c ****         RTC_EverySecondHandler();
 2220              		.loc 1 948 0
 2221 0e0c FFF7FEFF 		bl	RTC_EverySecondHandler
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 57


 2222              	.L101:
 949:Generated_Source\PSoC5/RTC_INT.c ****     }
 950:Generated_Source\PSoC5/RTC_INT.c ****     
 951:Generated_Source\PSoC5/RTC_INT.c ****     #ifdef RTC_ISR_EXIT_CALLBACK
 952:Generated_Source\PSoC5/RTC_INT.c ****         RTC_ISR_ExitCallback();
 953:Generated_Source\PSoC5/RTC_INT.c ****     #endif /* RTC_ISR_EXIT_CALLBACK */
 954:Generated_Source\PSoC5/RTC_INT.c **** }
 2223              		.loc 1 954 0
 2224 0e10 00BF     		nop
 2225 0e12 0837     		adds	r7, r7, #8
 2226              		.cfi_def_cfa_offset 8
 2227 0e14 BD46     		mov	sp, r7
 2228              		.cfi_def_cfa_register 13
 2229              		@ sp needed
 2230 0e16 80BD     		pop	{r7, pc}
 2231              	.L113:
 2232              		.align	2
 2233              	.L112:
 2234 0e18 00000000 		.word	RTC_alarmCurStatus
 2235 0e1c 00000000 		.word	RTC_alarmCfgMask
 2236 0e20 00000000 		.word	RTC_statusDateTime
 2237 0e24 00000000 		.word	RTC_intervalCfgMask
 2238 0e28 00000000 		.word	RTC_alarmCfgTimeDate
 2239 0e2c 00000000 		.word	RTC_currentTimeDate
 2240              		.cfi_endproc
 2241              	.LFE7:
 2242              		.size	RTC_ISR, .-RTC_ISR
 2243              		.text
 2244              	.Letext0:
 2245              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2246              		.file 3 "Generated_Source\\PSoC5\\RTC.h"
 2247              		.section	.debug_info,"",%progbits
 2248              	.Ldebug_info0:
 2249 0000 C9020000 		.4byte	0x2c9
 2250 0004 0400     		.2byte	0x4
 2251 0006 00000000 		.4byte	.Ldebug_abbrev0
 2252 000a 04       		.byte	0x4
 2253 000b 01       		.uleb128 0x1
 2254 000c 0B000000 		.4byte	.LASF45
 2255 0010 0C       		.byte	0xc
 2256 0011 72030000 		.4byte	.LASF46
 2257 0015 16020000 		.4byte	.LASF47
 2258 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2259 001d 00000000 		.4byte	0
 2260 0021 00000000 		.4byte	.Ldebug_line0
 2261 0025 02       		.uleb128 0x2
 2262 0026 01       		.byte	0x1
 2263 0027 06       		.byte	0x6
 2264 0028 4F030000 		.4byte	.LASF0
 2265 002c 02       		.uleb128 0x2
 2266 002d 01       		.byte	0x1
 2267 002e 08       		.byte	0x8
 2268 002f 0C010000 		.4byte	.LASF1
 2269 0033 02       		.uleb128 0x2
 2270 0034 02       		.byte	0x2
 2271 0035 05       		.byte	0x5
 2272 0036 0C030000 		.4byte	.LASF2
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 58


 2273 003a 02       		.uleb128 0x2
 2274 003b 02       		.byte	0x2
 2275 003c 07       		.byte	0x7
 2276 003d C3000000 		.4byte	.LASF3
 2277 0041 02       		.uleb128 0x2
 2278 0042 04       		.byte	0x4
 2279 0043 05       		.byte	0x5
 2280 0044 3A030000 		.4byte	.LASF4
 2281 0048 02       		.uleb128 0x2
 2282 0049 04       		.byte	0x4
 2283 004a 07       		.byte	0x7
 2284 004b 4C010000 		.4byte	.LASF5
 2285 004f 02       		.uleb128 0x2
 2286 0050 08       		.byte	0x8
 2287 0051 05       		.byte	0x5
 2288 0052 D6020000 		.4byte	.LASF6
 2289 0056 02       		.uleb128 0x2
 2290 0057 08       		.byte	0x8
 2291 0058 07       		.byte	0x7
 2292 0059 EF010000 		.4byte	.LASF7
 2293 005d 03       		.uleb128 0x3
 2294 005e 04       		.byte	0x4
 2295 005f 05       		.byte	0x5
 2296 0060 696E7400 		.ascii	"int\000"
 2297 0064 02       		.uleb128 0x2
 2298 0065 04       		.byte	0x4
 2299 0066 07       		.byte	0x7
 2300 0067 CC010000 		.4byte	.LASF8
 2301 006b 04       		.uleb128 0x4
 2302 006c 5E010000 		.4byte	.LASF9
 2303 0070 02       		.byte	0x2
 2304 0071 E401     		.2byte	0x1e4
 2305 0073 2C000000 		.4byte	0x2c
 2306 0077 04       		.uleb128 0x4
 2307 0078 C5010000 		.4byte	.LASF10
 2308 007c 02       		.byte	0x2
 2309 007d E501     		.2byte	0x1e5
 2310 007f 3A000000 		.4byte	0x3a
 2311 0083 02       		.uleb128 0x2
 2312 0084 04       		.byte	0x4
 2313 0085 04       		.byte	0x4
 2314 0086 06010000 		.4byte	.LASF11
 2315 008a 02       		.uleb128 0x2
 2316 008b 08       		.byte	0x8
 2317 008c 04       		.byte	0x4
 2318 008d 9F010000 		.4byte	.LASF12
 2319 0091 02       		.uleb128 0x2
 2320 0092 01       		.byte	0x1
 2321 0093 08       		.byte	0x8
 2322 0094 E4020000 		.4byte	.LASF13
 2323 0098 05       		.uleb128 0x5
 2324 0099 6B000000 		.4byte	0x6b
 2325 009d 06       		.uleb128 0x6
 2326 009e 0C       		.byte	0xc
 2327 009f 03       		.byte	0x3
 2328 00a0 30       		.byte	0x30
 2329 00a1 06010000 		.4byte	0x106
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 59


 2330 00a5 07       		.uleb128 0x7
 2331 00a6 53656300 		.ascii	"Sec\000"
 2332 00aa 03       		.byte	0x3
 2333 00ab 32       		.byte	0x32
 2334 00ac 6B000000 		.4byte	0x6b
 2335 00b0 00       		.byte	0
 2336 00b1 07       		.uleb128 0x7
 2337 00b2 4D696E00 		.ascii	"Min\000"
 2338 00b6 03       		.byte	0x3
 2339 00b7 33       		.byte	0x33
 2340 00b8 6B000000 		.4byte	0x6b
 2341 00bc 01       		.byte	0x1
 2342 00bd 08       		.uleb128 0x8
 2343 00be 16030000 		.4byte	.LASF14
 2344 00c2 03       		.byte	0x3
 2345 00c3 34       		.byte	0x34
 2346 00c4 6B000000 		.4byte	0x6b
 2347 00c8 02       		.byte	0x2
 2348 00c9 08       		.uleb128 0x8
 2349 00ca 30030000 		.4byte	.LASF15
 2350 00ce 03       		.byte	0x3
 2351 00cf 35       		.byte	0x35
 2352 00d0 6B000000 		.4byte	0x6b
 2353 00d4 03       		.byte	0x3
 2354 00d5 08       		.uleb128 0x8
 2355 00d6 00000000 		.4byte	.LASF16
 2356 00da 03       		.byte	0x3
 2357 00db 36       		.byte	0x36
 2358 00dc 6B000000 		.4byte	0x6b
 2359 00e0 04       		.byte	0x4
 2360 00e1 08       		.uleb128 0x8
 2361 00e2 64010000 		.4byte	.LASF17
 2362 00e6 03       		.byte	0x3
 2363 00e7 37       		.byte	0x37
 2364 00e8 77000000 		.4byte	0x77
 2365 00ec 06       		.byte	0x6
 2366 00ed 08       		.uleb128 0x8
 2367 00ee 6E010000 		.4byte	.LASF18
 2368 00f2 03       		.byte	0x3
 2369 00f3 38       		.byte	0x38
 2370 00f4 6B000000 		.4byte	0x6b
 2371 00f8 08       		.byte	0x8
 2372 00f9 08       		.uleb128 0x8
 2373 00fa 89010000 		.4byte	.LASF19
 2374 00fe 03       		.byte	0x3
 2375 00ff 39       		.byte	0x39
 2376 0100 77000000 		.4byte	0x77
 2377 0104 0A       		.byte	0xa
 2378 0105 00       		.byte	0
 2379 0106 09       		.uleb128 0x9
 2380 0107 FE020000 		.4byte	.LASF20
 2381 010b 03       		.byte	0x3
 2382 010c 3A       		.byte	0x3a
 2383 010d 11010000 		.4byte	0x111
 2384 0111 05       		.uleb128 0x5
 2385 0112 9D000000 		.4byte	0x9d
 2386 0116 06       		.uleb128 0x6
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 60


 2387 0117 05       		.byte	0x5
 2388 0118 03       		.byte	0x3
 2389 0119 3C       		.byte	0x3c
 2390 011a 5B010000 		.4byte	0x15b
 2391 011e 08       		.uleb128 0x8
 2392 011f 16030000 		.4byte	.LASF14
 2393 0123 03       		.byte	0x3
 2394 0124 3E       		.byte	0x3e
 2395 0125 6B000000 		.4byte	0x6b
 2396 0129 00       		.byte	0
 2397 012a 08       		.uleb128 0x8
 2398 012b 30030000 		.4byte	.LASF15
 2399 012f 03       		.byte	0x3
 2400 0130 3F       		.byte	0x3f
 2401 0131 6B000000 		.4byte	0x6b
 2402 0135 01       		.byte	0x1
 2403 0136 08       		.uleb128 0x8
 2404 0137 AD000000 		.4byte	.LASF21
 2405 013b 03       		.byte	0x3
 2406 013c 40       		.byte	0x40
 2407 013d 6B000000 		.4byte	0x6b
 2408 0141 02       		.byte	0x2
 2409 0142 08       		.uleb128 0x8
 2410 0143 00000000 		.4byte	.LASF16
 2411 0147 03       		.byte	0x3
 2412 0148 41       		.byte	0x41
 2413 0149 6B000000 		.4byte	0x6b
 2414 014d 03       		.byte	0x3
 2415 014e 08       		.uleb128 0x8
 2416 014f 6E010000 		.4byte	.LASF18
 2417 0153 03       		.byte	0x3
 2418 0154 42       		.byte	0x42
 2419 0155 6B000000 		.4byte	0x6b
 2420 0159 04       		.byte	0x4
 2421 015a 00       		.byte	0
 2422 015b 09       		.uleb128 0x9
 2423 015c A6010000 		.4byte	.LASF22
 2424 0160 03       		.byte	0x3
 2425 0161 43       		.byte	0x43
 2426 0162 66010000 		.4byte	0x166
 2427 0166 05       		.uleb128 0x5
 2428 0167 16010000 		.4byte	0x116
 2429 016b 02       		.uleb128 0x2
 2430 016c 08       		.byte	0x8
 2431 016d 04       		.byte	0x4
 2432 016e 43030000 		.4byte	.LASF23
 2433 0172 02       		.uleb128 0x2
 2434 0173 04       		.byte	0x4
 2435 0174 07       		.byte	0x7
 2436 0175 BC020000 		.4byte	.LASF24
 2437 0179 0A       		.uleb128 0xa
 2438 017a 22010000 		.4byte	.LASF25
 2439 017e 01       		.byte	0x1
 2440 017f 34       		.byte	0x34
 2441 0180 00000000 		.4byte	.LFB0
 2442 0184 0C000000 		.4byte	.LFE0-.LFB0
 2443 0188 01       		.uleb128 0x1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 61


 2444 0189 9C       		.byte	0x9c
 2445 018a 0A       		.uleb128 0xa
 2446 018b 5B030000 		.4byte	.LASF26
 2447 018f 01       		.byte	0x1
 2448 0190 4F       		.byte	0x4f
 2449 0191 00000000 		.4byte	.LFB1
 2450 0195 0C000000 		.4byte	.LFE1-.LFB1
 2451 0199 01       		.uleb128 0x1
 2452 019a 9C       		.byte	0x9c
 2453 019b 0A       		.uleb128 0xa
 2454 019c E9020000 		.4byte	.LASF27
 2455 01a0 01       		.byte	0x1
 2456 01a1 6A       		.byte	0x6a
 2457 01a2 00000000 		.4byte	.LFB2
 2458 01a6 0C000000 		.4byte	.LFE2-.LFB2
 2459 01aa 01       		.uleb128 0x1
 2460 01ab 9C       		.byte	0x9c
 2461 01ac 0A       		.uleb128 0xa
 2462 01ad 99000000 		.4byte	.LASF28
 2463 01b1 01       		.byte	0x1
 2464 01b2 85       		.byte	0x85
 2465 01b3 00000000 		.4byte	.LFB3
 2466 01b7 0C000000 		.4byte	.LFE3-.LFB3
 2467 01bb 01       		.uleb128 0x1
 2468 01bc 9C       		.byte	0x9c
 2469 01bd 0A       		.uleb128 0xa
 2470 01be 81020000 		.4byte	.LASF29
 2471 01c2 01       		.byte	0x1
 2472 01c3 A0       		.byte	0xa0
 2473 01c4 00000000 		.4byte	.LFB4
 2474 01c8 0C000000 		.4byte	.LFE4-.LFB4
 2475 01cc 01       		.uleb128 0x1
 2476 01cd 9C       		.byte	0x9c
 2477 01ce 0A       		.uleb128 0xa
 2478 01cf D9010000 		.4byte	.LASF30
 2479 01d3 01       		.byte	0x1
 2480 01d4 BB       		.byte	0xbb
 2481 01d5 00000000 		.4byte	.LFB5
 2482 01d9 0C000000 		.4byte	.LFE5-.LFB5
 2483 01dd 01       		.uleb128 0x1
 2484 01de 9C       		.byte	0x9c
 2485 01df 0A       		.uleb128 0xa
 2486 01e0 F1000000 		.4byte	.LASF31
 2487 01e4 01       		.byte	0x1
 2488 01e5 D6       		.byte	0xd6
 2489 01e6 00000000 		.4byte	.LFB6
 2490 01ea 0C000000 		.4byte	.LFE6-.LFB6
 2491 01ee 01       		.uleb128 0x1
 2492 01ef 9C       		.byte	0x9c
 2493 01f0 0B       		.uleb128 0xb
 2494 01f1 1A010000 		.4byte	.LASF48
 2495 01f5 01       		.byte	0x1
 2496 01f6 0901     		.2byte	0x109
 2497 01f8 00000000 		.4byte	.LFB7
 2498 01fc 300E0000 		.4byte	.LFE7-.LFB7
 2499 0200 01       		.uleb128 0x1
 2500 0201 9C       		.byte	0x9c
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 62


 2501 0202 16020000 		.4byte	0x216
 2502 0206 0C       		.uleb128 0xc
 2503 0207 D6000000 		.4byte	.LASF49
 2504 020b 01       		.byte	0x1
 2505 020c 0B01     		.2byte	0x10b
 2506 020e 6B000000 		.4byte	0x6b
 2507 0212 02       		.uleb128 0x2
 2508 0213 91       		.byte	0x91
 2509 0214 77       		.sleb128 -9
 2510 0215 00       		.byte	0
 2511 0216 0D       		.uleb128 0xd
 2512 0217 74010000 		.4byte	.LASF32
 2513 021b 03       		.byte	0x3
 2514 021c 2D01     		.2byte	0x12d
 2515 021e 06010000 		.4byte	0x106
 2516 0222 0D       		.uleb128 0xd
 2517 0223 96020000 		.4byte	.LASF33
 2518 0227 03       		.byte	0x3
 2519 0228 2E01     		.2byte	0x12e
 2520 022a 06010000 		.4byte	0x106
 2521 022e 0D       		.uleb128 0xd
 2522 022f 06020000 		.4byte	.LASF34
 2523 0233 03       		.byte	0x3
 2524 0234 3101     		.2byte	0x131
 2525 0236 98000000 		.4byte	0x98
 2526 023a 0D       		.uleb128 0xd
 2527 023b 1B030000 		.4byte	.LASF35
 2528 023f 03       		.byte	0x3
 2529 0240 3201     		.2byte	0x132
 2530 0242 5B010000 		.4byte	0x15b
 2531 0246 0D       		.uleb128 0xd
 2532 0247 B1010000 		.4byte	.LASF36
 2533 024b 03       		.byte	0x3
 2534 024c 3301     		.2byte	0x133
 2535 024e 5B010000 		.4byte	0x15b
 2536 0252 0D       		.uleb128 0xd
 2537 0253 B2000000 		.4byte	.LASF37
 2538 0257 03       		.byte	0x3
 2539 0258 3401     		.2byte	0x134
 2540 025a 98000000 		.4byte	0x98
 2541 025e 0D       		.uleb128 0xd
 2542 025f 39010000 		.4byte	.LASF38
 2543 0263 03       		.byte	0x3
 2544 0264 3501     		.2byte	0x135
 2545 0266 98000000 		.4byte	0x98
 2546 026a 0D       		.uleb128 0xd
 2547 026b AA020000 		.4byte	.LASF39
 2548 026f 03       		.byte	0x3
 2549 0270 3601     		.2byte	0x136
 2550 0272 98000000 		.4byte	0x98
 2551 0276 0D       		.uleb128 0xd
 2552 0277 8E010000 		.4byte	.LASF40
 2553 027b 03       		.byte	0x3
 2554 027c 3901     		.2byte	0x139
 2555 027e 98000000 		.4byte	0x98
 2556 0282 0D       		.uleb128 0xd
 2557 0283 6E020000 		.4byte	.LASF41
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 63


 2558 0287 03       		.byte	0x3
 2559 0288 3A01     		.2byte	0x13a
 2560 028a 98000000 		.4byte	0x98
 2561 028e 0D       		.uleb128 0xd
 2562 028f 93030000 		.4byte	.LASF42
 2563 0293 03       		.byte	0x3
 2564 0294 3B01     		.2byte	0x13b
 2565 0296 98000000 		.4byte	0x98
 2566 029a 0D       		.uleb128 0xd
 2567 029b DE000000 		.4byte	.LASF43
 2568 029f 03       		.byte	0x3
 2569 02a0 3C01     		.2byte	0x13c
 2570 02a2 98000000 		.4byte	0x98
 2571 02a6 0E       		.uleb128 0xe
 2572 02a7 B6020000 		.4byte	0x2b6
 2573 02ab B6020000 		.4byte	0x2b6
 2574 02af 0F       		.uleb128 0xf
 2575 02b0 72010000 		.4byte	0x172
 2576 02b4 0B       		.byte	0xb
 2577 02b5 00       		.byte	0
 2578 02b6 10       		.uleb128 0x10
 2579 02b7 6B000000 		.4byte	0x6b
 2580 02bb 0D       		.uleb128 0xd
 2581 02bc C5020000 		.4byte	.LASF44
 2582 02c0 03       		.byte	0x3
 2583 02c1 3E01     		.2byte	0x13e
 2584 02c3 C7020000 		.4byte	0x2c7
 2585 02c7 10       		.uleb128 0x10
 2586 02c8 A6020000 		.4byte	0x2a6
 2587 02cc 00       		.byte	0
 2588              		.section	.debug_abbrev,"",%progbits
 2589              	.Ldebug_abbrev0:
 2590 0000 01       		.uleb128 0x1
 2591 0001 11       		.uleb128 0x11
 2592 0002 01       		.byte	0x1
 2593 0003 25       		.uleb128 0x25
 2594 0004 0E       		.uleb128 0xe
 2595 0005 13       		.uleb128 0x13
 2596 0006 0B       		.uleb128 0xb
 2597 0007 03       		.uleb128 0x3
 2598 0008 0E       		.uleb128 0xe
 2599 0009 1B       		.uleb128 0x1b
 2600 000a 0E       		.uleb128 0xe
 2601 000b 55       		.uleb128 0x55
 2602 000c 17       		.uleb128 0x17
 2603 000d 11       		.uleb128 0x11
 2604 000e 01       		.uleb128 0x1
 2605 000f 10       		.uleb128 0x10
 2606 0010 17       		.uleb128 0x17
 2607 0011 00       		.byte	0
 2608 0012 00       		.byte	0
 2609 0013 02       		.uleb128 0x2
 2610 0014 24       		.uleb128 0x24
 2611 0015 00       		.byte	0
 2612 0016 0B       		.uleb128 0xb
 2613 0017 0B       		.uleb128 0xb
 2614 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 64


 2615 0019 0B       		.uleb128 0xb
 2616 001a 03       		.uleb128 0x3
 2617 001b 0E       		.uleb128 0xe
 2618 001c 00       		.byte	0
 2619 001d 00       		.byte	0
 2620 001e 03       		.uleb128 0x3
 2621 001f 24       		.uleb128 0x24
 2622 0020 00       		.byte	0
 2623 0021 0B       		.uleb128 0xb
 2624 0022 0B       		.uleb128 0xb
 2625 0023 3E       		.uleb128 0x3e
 2626 0024 0B       		.uleb128 0xb
 2627 0025 03       		.uleb128 0x3
 2628 0026 08       		.uleb128 0x8
 2629 0027 00       		.byte	0
 2630 0028 00       		.byte	0
 2631 0029 04       		.uleb128 0x4
 2632 002a 16       		.uleb128 0x16
 2633 002b 00       		.byte	0
 2634 002c 03       		.uleb128 0x3
 2635 002d 0E       		.uleb128 0xe
 2636 002e 3A       		.uleb128 0x3a
 2637 002f 0B       		.uleb128 0xb
 2638 0030 3B       		.uleb128 0x3b
 2639 0031 05       		.uleb128 0x5
 2640 0032 49       		.uleb128 0x49
 2641 0033 13       		.uleb128 0x13
 2642 0034 00       		.byte	0
 2643 0035 00       		.byte	0
 2644 0036 05       		.uleb128 0x5
 2645 0037 35       		.uleb128 0x35
 2646 0038 00       		.byte	0
 2647 0039 49       		.uleb128 0x49
 2648 003a 13       		.uleb128 0x13
 2649 003b 00       		.byte	0
 2650 003c 00       		.byte	0
 2651 003d 06       		.uleb128 0x6
 2652 003e 13       		.uleb128 0x13
 2653 003f 01       		.byte	0x1
 2654 0040 0B       		.uleb128 0xb
 2655 0041 0B       		.uleb128 0xb
 2656 0042 3A       		.uleb128 0x3a
 2657 0043 0B       		.uleb128 0xb
 2658 0044 3B       		.uleb128 0x3b
 2659 0045 0B       		.uleb128 0xb
 2660 0046 01       		.uleb128 0x1
 2661 0047 13       		.uleb128 0x13
 2662 0048 00       		.byte	0
 2663 0049 00       		.byte	0
 2664 004a 07       		.uleb128 0x7
 2665 004b 0D       		.uleb128 0xd
 2666 004c 00       		.byte	0
 2667 004d 03       		.uleb128 0x3
 2668 004e 08       		.uleb128 0x8
 2669 004f 3A       		.uleb128 0x3a
 2670 0050 0B       		.uleb128 0xb
 2671 0051 3B       		.uleb128 0x3b
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 65


 2672 0052 0B       		.uleb128 0xb
 2673 0053 49       		.uleb128 0x49
 2674 0054 13       		.uleb128 0x13
 2675 0055 38       		.uleb128 0x38
 2676 0056 0B       		.uleb128 0xb
 2677 0057 00       		.byte	0
 2678 0058 00       		.byte	0
 2679 0059 08       		.uleb128 0x8
 2680 005a 0D       		.uleb128 0xd
 2681 005b 00       		.byte	0
 2682 005c 03       		.uleb128 0x3
 2683 005d 0E       		.uleb128 0xe
 2684 005e 3A       		.uleb128 0x3a
 2685 005f 0B       		.uleb128 0xb
 2686 0060 3B       		.uleb128 0x3b
 2687 0061 0B       		.uleb128 0xb
 2688 0062 49       		.uleb128 0x49
 2689 0063 13       		.uleb128 0x13
 2690 0064 38       		.uleb128 0x38
 2691 0065 0B       		.uleb128 0xb
 2692 0066 00       		.byte	0
 2693 0067 00       		.byte	0
 2694 0068 09       		.uleb128 0x9
 2695 0069 16       		.uleb128 0x16
 2696 006a 00       		.byte	0
 2697 006b 03       		.uleb128 0x3
 2698 006c 0E       		.uleb128 0xe
 2699 006d 3A       		.uleb128 0x3a
 2700 006e 0B       		.uleb128 0xb
 2701 006f 3B       		.uleb128 0x3b
 2702 0070 0B       		.uleb128 0xb
 2703 0071 49       		.uleb128 0x49
 2704 0072 13       		.uleb128 0x13
 2705 0073 00       		.byte	0
 2706 0074 00       		.byte	0
 2707 0075 0A       		.uleb128 0xa
 2708 0076 2E       		.uleb128 0x2e
 2709 0077 00       		.byte	0
 2710 0078 03       		.uleb128 0x3
 2711 0079 0E       		.uleb128 0xe
 2712 007a 3A       		.uleb128 0x3a
 2713 007b 0B       		.uleb128 0xb
 2714 007c 3B       		.uleb128 0x3b
 2715 007d 0B       		.uleb128 0xb
 2716 007e 27       		.uleb128 0x27
 2717 007f 19       		.uleb128 0x19
 2718 0080 11       		.uleb128 0x11
 2719 0081 01       		.uleb128 0x1
 2720 0082 12       		.uleb128 0x12
 2721 0083 06       		.uleb128 0x6
 2722 0084 40       		.uleb128 0x40
 2723 0085 18       		.uleb128 0x18
 2724 0086 9742     		.uleb128 0x2117
 2725 0088 19       		.uleb128 0x19
 2726 0089 00       		.byte	0
 2727 008a 00       		.byte	0
 2728 008b 0B       		.uleb128 0xb
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 66


 2729 008c 2E       		.uleb128 0x2e
 2730 008d 01       		.byte	0x1
 2731 008e 3F       		.uleb128 0x3f
 2732 008f 19       		.uleb128 0x19
 2733 0090 03       		.uleb128 0x3
 2734 0091 0E       		.uleb128 0xe
 2735 0092 3A       		.uleb128 0x3a
 2736 0093 0B       		.uleb128 0xb
 2737 0094 3B       		.uleb128 0x3b
 2738 0095 05       		.uleb128 0x5
 2739 0096 27       		.uleb128 0x27
 2740 0097 19       		.uleb128 0x19
 2741 0098 11       		.uleb128 0x11
 2742 0099 01       		.uleb128 0x1
 2743 009a 12       		.uleb128 0x12
 2744 009b 06       		.uleb128 0x6
 2745 009c 40       		.uleb128 0x40
 2746 009d 18       		.uleb128 0x18
 2747 009e 9642     		.uleb128 0x2116
 2748 00a0 19       		.uleb128 0x19
 2749 00a1 01       		.uleb128 0x1
 2750 00a2 13       		.uleb128 0x13
 2751 00a3 00       		.byte	0
 2752 00a4 00       		.byte	0
 2753 00a5 0C       		.uleb128 0xc
 2754 00a6 34       		.uleb128 0x34
 2755 00a7 00       		.byte	0
 2756 00a8 03       		.uleb128 0x3
 2757 00a9 0E       		.uleb128 0xe
 2758 00aa 3A       		.uleb128 0x3a
 2759 00ab 0B       		.uleb128 0xb
 2760 00ac 3B       		.uleb128 0x3b
 2761 00ad 05       		.uleb128 0x5
 2762 00ae 49       		.uleb128 0x49
 2763 00af 13       		.uleb128 0x13
 2764 00b0 02       		.uleb128 0x2
 2765 00b1 18       		.uleb128 0x18
 2766 00b2 00       		.byte	0
 2767 00b3 00       		.byte	0
 2768 00b4 0D       		.uleb128 0xd
 2769 00b5 34       		.uleb128 0x34
 2770 00b6 00       		.byte	0
 2771 00b7 03       		.uleb128 0x3
 2772 00b8 0E       		.uleb128 0xe
 2773 00b9 3A       		.uleb128 0x3a
 2774 00ba 0B       		.uleb128 0xb
 2775 00bb 3B       		.uleb128 0x3b
 2776 00bc 05       		.uleb128 0x5
 2777 00bd 49       		.uleb128 0x49
 2778 00be 13       		.uleb128 0x13
 2779 00bf 3F       		.uleb128 0x3f
 2780 00c0 19       		.uleb128 0x19
 2781 00c1 3C       		.uleb128 0x3c
 2782 00c2 19       		.uleb128 0x19
 2783 00c3 00       		.byte	0
 2784 00c4 00       		.byte	0
 2785 00c5 0E       		.uleb128 0xe
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 67


 2786 00c6 01       		.uleb128 0x1
 2787 00c7 01       		.byte	0x1
 2788 00c8 49       		.uleb128 0x49
 2789 00c9 13       		.uleb128 0x13
 2790 00ca 01       		.uleb128 0x1
 2791 00cb 13       		.uleb128 0x13
 2792 00cc 00       		.byte	0
 2793 00cd 00       		.byte	0
 2794 00ce 0F       		.uleb128 0xf
 2795 00cf 21       		.uleb128 0x21
 2796 00d0 00       		.byte	0
 2797 00d1 49       		.uleb128 0x49
 2798 00d2 13       		.uleb128 0x13
 2799 00d3 2F       		.uleb128 0x2f
 2800 00d4 0B       		.uleb128 0xb
 2801 00d5 00       		.byte	0
 2802 00d6 00       		.byte	0
 2803 00d7 10       		.uleb128 0x10
 2804 00d8 26       		.uleb128 0x26
 2805 00d9 00       		.byte	0
 2806 00da 49       		.uleb128 0x49
 2807 00db 13       		.uleb128 0x13
 2808 00dc 00       		.byte	0
 2809 00dd 00       		.byte	0
 2810 00de 00       		.byte	0
 2811              		.section	.debug_aranges,"",%progbits
 2812 0000 54000000 		.4byte	0x54
 2813 0004 0200     		.2byte	0x2
 2814 0006 00000000 		.4byte	.Ldebug_info0
 2815 000a 04       		.byte	0x4
 2816 000b 00       		.byte	0
 2817 000c 0000     		.2byte	0
 2818 000e 0000     		.2byte	0
 2819 0010 00000000 		.4byte	.LFB0
 2820 0014 0C000000 		.4byte	.LFE0-.LFB0
 2821 0018 00000000 		.4byte	.LFB1
 2822 001c 0C000000 		.4byte	.LFE1-.LFB1
 2823 0020 00000000 		.4byte	.LFB2
 2824 0024 0C000000 		.4byte	.LFE2-.LFB2
 2825 0028 00000000 		.4byte	.LFB3
 2826 002c 0C000000 		.4byte	.LFE3-.LFB3
 2827 0030 00000000 		.4byte	.LFB4
 2828 0034 0C000000 		.4byte	.LFE4-.LFB4
 2829 0038 00000000 		.4byte	.LFB5
 2830 003c 0C000000 		.4byte	.LFE5-.LFB5
 2831 0040 00000000 		.4byte	.LFB6
 2832 0044 0C000000 		.4byte	.LFE6-.LFB6
 2833 0048 00000000 		.4byte	.LFB7
 2834 004c 300E0000 		.4byte	.LFE7-.LFB7
 2835 0050 00000000 		.4byte	0
 2836 0054 00000000 		.4byte	0
 2837              		.section	.debug_ranges,"",%progbits
 2838              	.Ldebug_ranges0:
 2839 0000 00000000 		.4byte	.LFB0
 2840 0004 0C000000 		.4byte	.LFE0
 2841 0008 00000000 		.4byte	.LFB1
 2842 000c 0C000000 		.4byte	.LFE1
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 68


 2843 0010 00000000 		.4byte	.LFB2
 2844 0014 0C000000 		.4byte	.LFE2
 2845 0018 00000000 		.4byte	.LFB3
 2846 001c 0C000000 		.4byte	.LFE3
 2847 0020 00000000 		.4byte	.LFB4
 2848 0024 0C000000 		.4byte	.LFE4
 2849 0028 00000000 		.4byte	.LFB5
 2850 002c 0C000000 		.4byte	.LFE5
 2851 0030 00000000 		.4byte	.LFB6
 2852 0034 0C000000 		.4byte	.LFE6
 2853 0038 00000000 		.4byte	.LFB7
 2854 003c 300E0000 		.4byte	.LFE7
 2855 0040 00000000 		.4byte	0
 2856 0044 00000000 		.4byte	0
 2857              		.section	.debug_line,"",%progbits
 2858              	.Ldebug_line0:
 2859 0000 75020000 		.section	.debug_str,"MS",%progbits,1
 2859      02004D00 
 2859      00000201 
 2859      FB0E0D00 
 2859      01010101 
 2860              	.LASF16:
 2861 0000 4461794F 		.ascii	"DayOfMonth\000"
 2861      664D6F6E 
 2861      746800
 2862              	.LASF45:
 2863 000b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2863      43313120 
 2863      352E342E 
 2863      31203230 
 2863      31363036 
 2864 003e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2864      20726576 
 2864      6973696F 
 2864      6E203233 
 2864      37373135 
 2865 0071 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2865      66756E63 
 2865      74696F6E 
 2865      2D736563 
 2865      74696F6E 
 2866              	.LASF28:
 2867 0099 5254435F 		.ascii	"RTC_EveryDayHandler\000"
 2867      45766572 
 2867      79446179 
 2867      48616E64 
 2867      6C657200 
 2868              	.LASF21:
 2869 00ad 5765656B 		.ascii	"Week\000"
 2869      00
 2870              	.LASF37:
 2871 00b2 5254435F 		.ascii	"RTC_dstOffsetMin\000"
 2871      6473744F 
 2871      66667365 
 2871      744D696E 
 2871      00
 2872              	.LASF3:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 69


 2873 00c3 73686F72 		.ascii	"short unsigned int\000"
 2873      7420756E 
 2873      7369676E 
 2873      65642069 
 2873      6E7400
 2874              	.LASF49:
 2875 00d6 5254435F 		.ascii	"RTC_tmp\000"
 2875      746D7000 
 2876              	.LASF43:
 2877 00de 5254435F 		.ascii	"RTC_statusDateTime\000"
 2877      73746174 
 2877      75734461 
 2877      74655469 
 2877      6D6500
 2878              	.LASF31:
 2879 00f1 5254435F 		.ascii	"RTC_EveryYearHandler\000"
 2879      45766572 
 2879      79596561 
 2879      7248616E 
 2879      646C6572 
 2880              	.LASF11:
 2881 0106 666C6F61 		.ascii	"float\000"
 2881      7400
 2882              	.LASF1:
 2883 010c 756E7369 		.ascii	"unsigned char\000"
 2883      676E6564 
 2883      20636861 
 2883      7200
 2884              	.LASF48:
 2885 011a 5254435F 		.ascii	"RTC_ISR\000"
 2885      49535200 
 2886              	.LASF25:
 2887 0122 5254435F 		.ascii	"RTC_EverySecondHandler\000"
 2887      45766572 
 2887      79536563 
 2887      6F6E6448 
 2887      616E646C 
 2888              	.LASF38:
 2889 0139 5254435F 		.ascii	"RTC_dstStartStatus\000"
 2889      64737453 
 2889      74617274 
 2889      53746174 
 2889      757300
 2890              	.LASF5:
 2891 014c 6C6F6E67 		.ascii	"long unsigned int\000"
 2891      20756E73 
 2891      69676E65 
 2891      6420696E 
 2891      7400
 2892              	.LASF9:
 2893 015e 75696E74 		.ascii	"uint8\000"
 2893      3800
 2894              	.LASF17:
 2895 0164 4461794F 		.ascii	"DayOfYear\000"
 2895      66596561 
 2895      7200
 2896              	.LASF18:
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 70


 2897 016e 4D6F6E74 		.ascii	"Month\000"
 2897      6800
 2898              	.LASF32:
 2899 0174 5254435F 		.ascii	"RTC_alarmCfgTimeDate\000"
 2899      616C6172 
 2899      6D436667 
 2899      54696D65 
 2899      44617465 
 2900              	.LASF19:
 2901 0189 59656172 		.ascii	"Year\000"
 2901      00
 2902              	.LASF40:
 2903 018e 5254435F 		.ascii	"RTC_alarmCfgMask\000"
 2903      616C6172 
 2903      6D436667 
 2903      4D61736B 
 2903      00
 2904              	.LASF12:
 2905 019f 646F7562 		.ascii	"double\000"
 2905      6C6500
 2906              	.LASF22:
 2907 01a6 5254435F 		.ascii	"RTC_DSTIME\000"
 2907      44535449 
 2907      4D4500
 2908              	.LASF36:
 2909 01b1 5254435F 		.ascii	"RTC_dstTimeDateStop\000"
 2909      64737454 
 2909      696D6544 
 2909      61746553 
 2909      746F7000 
 2910              	.LASF10:
 2911 01c5 75696E74 		.ascii	"uint16\000"
 2911      313600
 2912              	.LASF8:
 2913 01cc 756E7369 		.ascii	"unsigned int\000"
 2913      676E6564 
 2913      20696E74 
 2913      00
 2914              	.LASF30:
 2915 01d9 5254435F 		.ascii	"RTC_EveryMonthHandler\000"
 2915      45766572 
 2915      794D6F6E 
 2915      74684861 
 2915      6E646C65 
 2916              	.LASF7:
 2917 01ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 2917      206C6F6E 
 2917      6720756E 
 2917      7369676E 
 2917      65642069 
 2918              	.LASF34:
 2919 0206 5254435F 		.ascii	"RTC_dstModeType\000"
 2919      6473744D 
 2919      6F646554 
 2919      79706500 
 2920              	.LASF47:
 2921 0216 433A5C55 		.ascii	"C:\\Users\\krist\\Documents\\GitHub\\P4_Vertical_fa"
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 71


 2921      73657273 
 2921      5C6B7269 
 2921      73745C44 
 2921      6F63756D 
 2922 0244 726D5C52 		.ascii	"rm\\RTOS_TEMPLATE-master\\PlanteModul.cydsn\000"
 2922      544F535F 
 2922      54454D50 
 2922      4C415445 
 2922      2D6D6173 
 2923              	.LASF41:
 2924 026e 5254435F 		.ascii	"RTC_alarmCurStatus\000"
 2924      616C6172 
 2924      6D437572 
 2924      53746174 
 2924      757300
 2925              	.LASF29:
 2926 0281 5254435F 		.ascii	"RTC_EveryWeekHandler\000"
 2926      45766572 
 2926      79576565 
 2926      6B48616E 
 2926      646C6572 
 2927              	.LASF33:
 2928 0296 5254435F 		.ascii	"RTC_currentTimeDate\000"
 2928      63757272 
 2928      656E7454 
 2928      696D6544 
 2928      61746500 
 2929              	.LASF39:
 2930 02aa 5254435F 		.ascii	"RTC_dstStopStatus\000"
 2930      64737453 
 2930      746F7053 
 2930      74617475 
 2930      7300
 2931              	.LASF24:
 2932 02bc 73697A65 		.ascii	"sizetype\000"
 2932      74797065 
 2932      00
 2933              	.LASF44:
 2934 02c5 5254435F 		.ascii	"RTC_daysInMonths\000"
 2934      64617973 
 2934      496E4D6F 
 2934      6E746873 
 2934      00
 2935              	.LASF6:
 2936 02d6 6C6F6E67 		.ascii	"long long int\000"
 2936      206C6F6E 
 2936      6720696E 
 2936      7400
 2937              	.LASF13:
 2938 02e4 63686172 		.ascii	"char\000"
 2938      00
 2939              	.LASF27:
 2940 02e9 5254435F 		.ascii	"RTC_EveryHourHandler\000"
 2940      45766572 
 2940      79486F75 
 2940      7248616E 
 2940      646C6572 
ARM GAS  C:\Users\krist\AppData\Local\Temp\ccNZAxXK.s 			page 72


 2941              	.LASF20:
 2942 02fe 5254435F 		.ascii	"RTC_TIME_DATE\000"
 2942      54494D45 
 2942      5F444154 
 2942      4500
 2943              	.LASF2:
 2944 030c 73686F72 		.ascii	"short int\000"
 2944      7420696E 
 2944      7400
 2945              	.LASF14:
 2946 0316 486F7572 		.ascii	"Hour\000"
 2946      00
 2947              	.LASF35:
 2948 031b 5254435F 		.ascii	"RTC_dstTimeDateStart\000"
 2948      64737454 
 2948      696D6544 
 2948      61746553 
 2948      74617274 
 2949              	.LASF15:
 2950 0330 4461794F 		.ascii	"DayOfWeek\000"
 2950      66576565 
 2950      6B00
 2951              	.LASF4:
 2952 033a 6C6F6E67 		.ascii	"long int\000"
 2952      20696E74 
 2952      00
 2953              	.LASF23:
 2954 0343 6C6F6E67 		.ascii	"long double\000"
 2954      20646F75 
 2954      626C6500 
 2955              	.LASF0:
 2956 034f 7369676E 		.ascii	"signed char\000"
 2956      65642063 
 2956      68617200 
 2957              	.LASF26:
 2958 035b 5254435F 		.ascii	"RTC_EveryMinuteHandler\000"
 2958      45766572 
 2958      794D696E 
 2958      75746548 
 2958      616E646C 
 2959              	.LASF46:
 2960 0372 47656E65 		.ascii	"Generated_Source\\PSoC5\\RTC_INT.c\000"
 2960      72617465 
 2960      645F536F 
 2960      75726365 
 2960      5C50536F 
 2961              	.LASF42:
 2962 0393 5254435F 		.ascii	"RTC_intervalCfgMask\000"
 2962      696E7465 
 2962      7276616C 
 2962      4366674D 
 2962      61736B00 
 2963              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
